"use strict";
function createClass(name, rules) {
    var style = document.createElement("style");
    style.type = "text/css",
    document.getElementsByTagName("head")[0].appendChild(style),
    (style.sheet || {}).insertRule ? style.sheet.insertRule(name + "{" + rules + "}", 0) : (style.styleSheet || style.sheet).addRule(name, rules)
}
function refreshCheckboxes() {
    createClass(".onoffswitch-inner:before", 'content : "' + angular.element(document.body).injector().get("translateFilter")("on") + '"'),
    createClass(".onoffswitch-inner:after", 'content : "' + angular.element(document.body).injector().get("translateFilter")("off") + '"'),
    createClass(".switch-enable .onoffswitch-inner:before", 'content : "' + angular.element(document.body).injector().get("translateFilter")("enabled") + '"'),
    createClass(".switch-enable .onoffswitch-inner:after", 'content : "' + angular.element(document.body).injector().get("translateFilter")("disabled") + '"'),
    createClass(".switch-more .onoffswitch-inner:before", 'content : "' + angular.element(document.body).injector().get("translateFilter")("less") + '"'),
    createClass(".switch-more .onoffswitch-inner:after", 'content : "' + angular.element(document.body).injector().get("translateFilter")("more") + '"'),
    createClass(".switch-yes .onoffswitch-inner:before", 'content : "' + angular.element(document.body).injector().get("translateFilter")("yes") + '"'),
    createClass(".switch-yes .onoffswitch-inner:after", 'content : "' + angular.element(document.body).injector().get("translateFilter")("no") + '"')
}
function safeadd(x, y) {
    var lsw = (65535 & x) + (65535 & y)
      , msw = (x >> 16) + (y >> 16) + (lsw >> 16);
    return msw << 16 | 65535 & lsw
}
function bitrol(num, cnt) {
    return num << cnt | num >>> 32 - cnt
}
function str2binl(str) {
    for (var bin = [], mask = (1 << chrsz) - 1, i = 0; i < str.length * chrsz; i += chrsz)
        bin[i >> 5] |= (str.charCodeAt(i / chrsz) & mask) << i % 32;
    return bin
}
function binl2str(bin) {
    for (var str = "", mask = (1 << chrsz) - 1, i = 0; i < 32 * bin.length; i += chrsz)
        str += String.fromCharCode(bin[i >> 5] >>> i % 32 & mask);
    return str
}
function binl2hex(binarray) {
    for (var hextab = hexcase ? "0123456789ABCDEF" : "0123456789abcdef", str = "", i = 0; i < 4 * binarray.length; i++)
        str += hextab.charAt(binarray[i >> 2] >> i % 4 * 8 + 4 & 15) + hextab.charAt(binarray[i >> 2] >> i % 4 * 8 & 15);
    return str
}
function binl2b64(binarray) {
    for (var tab = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%2b/index.html", str = "", i = 0; i < 4 * binarray.length; i += 3)
        for (var triplet = (binarray[i >> 2] >> 8 * (i % 4) & 255) << 16 | (binarray[i + 1 >> 2] >> 8 * ((i + 1) % 4) & 255) << 8 | binarray[i + 2 >> 2] >> 8 * ((i + 2) % 4) & 255, j = 0; 4 > j; j++)
            str += 8 * i + 6 * j > 32 * binarray.length ? b64pad : tab.charAt(triplet >> 6 * (3 - j) & 63);
    return str
}
function md5cmn(q, a, b, x, s, t) {
    return safeadd(bitrol(safeadd(safeadd(a, q), safeadd(x, t)), s), b)
}
function md5ff(a, b, c, d, x, s, t) {
    return md5cmn(b & c | ~b & d, a, b, x, s, t)
}
function md5gg(a, b, c, d, x, s, t) {
    return md5cmn(b & d | c & ~d, a, b, x, s, t)
}
function md5hh(a, b, c, d, x, s, t) {
    return md5cmn(b ^ c ^ d, a, b, x, s, t)
}
function md5ii(a, b, c, d, x, s, t) {
    return md5cmn(c ^ (b | ~d), a, b, x, s, t)
}
function coremd5(x, len) {
    x[len >> 5] |= 128 << len % 32,
    x[(len + 64 >>> 9 << 4) + 14] = len;
    for (var a = 1732584193, b = -271733879, c = -1732584194, d = 271733878, i = 0; i < x.length; i += 16) {
        var olda = a
          , oldb = b
          , oldc = c
          , oldd = d;
        a = md5ff(a, b, c, d, x[i + 0], 7, -680876936),
        d = md5ff(d, a, b, c, x[i + 1], 12, -389564586),
        c = md5ff(c, d, a, b, x[i + 2], 17, 606105819),
        b = md5ff(b, c, d, a, x[i + 3], 22, -1044525330),
        a = md5ff(a, b, c, d, x[i + 4], 7, -176418897),
        d = md5ff(d, a, b, c, x[i + 5], 12, 1200080426),
        c = md5ff(c, d, a, b, x[i + 6], 17, -1473231341),
        b = md5ff(b, c, d, a, x[i + 7], 22, -45705983),
        a = md5ff(a, b, c, d, x[i + 8], 7, 1770035416),
        d = md5ff(d, a, b, c, x[i + 9], 12, -1958414417),
        c = md5ff(c, d, a, b, x[i + 10], 17, -42063),
        b = md5ff(b, c, d, a, x[i + 11], 22, -1990404162),
        a = md5ff(a, b, c, d, x[i + 12], 7, 1804603682),
        d = md5ff(d, a, b, c, x[i + 13], 12, -40341101),
        c = md5ff(c, d, a, b, x[i + 14], 17, -1502002290),
        b = md5ff(b, c, d, a, x[i + 15], 22, 1236535329),
        a = md5gg(a, b, c, d, x[i + 1], 5, -165796510),
        d = md5gg(d, a, b, c, x[i + 6], 9, -1069501632),
        c = md5gg(c, d, a, b, x[i + 11], 14, 643717713),
        b = md5gg(b, c, d, a, x[i + 0], 20, -373897302),
        a = md5gg(a, b, c, d, x[i + 5], 5, -701558691),
        d = md5gg(d, a, b, c, x[i + 10], 9, 38016083),
        c = md5gg(c, d, a, b, x[i + 15], 14, -660478335),
        b = md5gg(b, c, d, a, x[i + 4], 20, -405537848),
        a = md5gg(a, b, c, d, x[i + 9], 5, 568446438),
        d = md5gg(d, a, b, c, x[i + 14], 9, -1019803690),
        c = md5gg(c, d, a, b, x[i + 3], 14, -187363961),
        b = md5gg(b, c, d, a, x[i + 8], 20, 1163531501),
        a = md5gg(a, b, c, d, x[i + 13], 5, -1444681467),
        d = md5gg(d, a, b, c, x[i + 2], 9, -51403784),
        c = md5gg(c, d, a, b, x[i + 7], 14, 1735328473),
        b = md5gg(b, c, d, a, x[i + 12], 20, -1926607734),
        a = md5hh(a, b, c, d, x[i + 5], 4, -378558),
        d = md5hh(d, a, b, c, x[i + 8], 11, -2022574463),
        c = md5hh(c, d, a, b, x[i + 11], 16, 1839030562),
        b = md5hh(b, c, d, a, x[i + 14], 23, -35309556),
        a = md5hh(a, b, c, d, x[i + 1], 4, -1530992060),
        d = md5hh(d, a, b, c, x[i + 4], 11, 1272893353),
        c = md5hh(c, d, a, b, x[i + 7], 16, -155497632),
        b = md5hh(b, c, d, a, x[i + 10], 23, -1094730640),
        a = md5hh(a, b, c, d, x[i + 13], 4, 681279174),
        d = md5hh(d, a, b, c, x[i + 0], 11, -358537222),
        c = md5hh(c, d, a, b, x[i + 3], 16, -722521979),
        b = md5hh(b, c, d, a, x[i + 6], 23, 76029189),
        a = md5hh(a, b, c, d, x[i + 9], 4, -640364487),
        d = md5hh(d, a, b, c, x[i + 12], 11, -421815835),
        c = md5hh(c, d, a, b, x[i + 15], 16, 530742520),
        b = md5hh(b, c, d, a, x[i + 2], 23, -995338651),
        a = md5ii(a, b, c, d, x[i + 0], 6, -198630844),
        d = md5ii(d, a, b, c, x[i + 7], 10, 1126891415),
        c = md5ii(c, d, a, b, x[i + 14], 15, -1416354905),
        b = md5ii(b, c, d, a, x[i + 5], 21, -57434055),
        a = md5ii(a, b, c, d, x[i + 12], 6, 1700485571),
        d = md5ii(d, a, b, c, x[i + 3], 10, -1894986606),
        c = md5ii(c, d, a, b, x[i + 10], 15, -1051523),
        b = md5ii(b, c, d, a, x[i + 1], 21, -2054922799),
        a = md5ii(a, b, c, d, x[i + 8], 6, 1873313359),
        d = md5ii(d, a, b, c, x[i + 15], 10, -30611744),
        c = md5ii(c, d, a, b, x[i + 6], 15, -1560198380),
        b = md5ii(b, c, d, a, x[i + 13], 21, 1309151649),
        a = md5ii(a, b, c, d, x[i + 4], 6, -145523070),
        d = md5ii(d, a, b, c, x[i + 11], 10, -1120210379),
        c = md5ii(c, d, a, b, x[i + 2], 15, 718787259),
        b = md5ii(b, c, d, a, x[i + 9], 21, -343485551),
        a = safeadd(a, olda),
        b = safeadd(b, oldb),
        c = safeadd(c, oldc),
        d = safeadd(d, oldd)
    }
    return [a, b, c, d]
}
function corehmacmd5(key, data) {
    var bkey = str2binl(key);
    bkey.length > 16 && (bkey = coremd5(bkey, key.length * chrsz));
    for (var ipad = [], opad = [], i = 0; 16 > i; i++)
        ipad[i] = 909522486 ^ bkey[i],
        opad[i] = 1549556828 ^ bkey[i];
    var hash = coremd5(ipad.concat(str2binl(data)), 512 + data.length * chrsz);
    return coremd5(opad.concat(hash), 640)
}
function hexmd5(s) {
    return binl2hex(coremd5(str2binl(s), s.length * chrsz))
}
function b64md5(s) {
    return binl2b64(coremd5(str2binl(s), s.length * chrsz))
}
function strmd5(s) {
    return binl2str(coremd5(str2binl(s), s.length * chrsz))
}
function hexhmacmd5(key, data) {
    return binl2hex(corehmacmd5(key, data))
}
function b64hmacmd5(key, data) {
    return binl2b64(corehmacmd5(key, data))
}
function strhmacmd5(key, data) {
    return binl2str(corehmacmd5(key, data))
}
!function($, window, document, undefined) {
    Foundation.libs.tab = {
        name: "tab",
        version: "5.2.3",
        settings: {
            active_class: "active",
            callback: function() {},
            deep_linking: !1,
            scroll_to_content: !0,
            is_hover: !1
        },
        default_tab_hashes: [],
        init: function(scope, method, options) {
            var self = this
              , S = this.S;
            this.bindings(method, options),
            this.handle_location_hash_change(),
            S("[" + this.attr_name() + "] > .active > a", this.scope).each(function() {
                self.default_tab_hashes.push(this.hash)
            })
        },
        events: function() {
            var self = this
              , S = this.S;
            S(this.scope).off(".tab").on("click.fndtn.tab", "[" + this.attr_name() + "] > * > a", function(e) {
                var settings = S(this).closest("[" + self.attr_name() + "]").data(self.attr_name(!0) + "-init");
                (!settings.is_hover || Modernizr.touch) && (e.preventDefault(),
                e.stopPropagation(),
                self.toggle_active_tab(S(this).parent()))
            }).on("mouseenter.fndtn.tab", "[" + this.attr_name() + "] > * > a", function(e) {
                var settings = S(this).closest("[" + self.attr_name() + "]").data(self.attr_name(!0) + "-init");
                settings && settings.is_hover && self.toggle_active_tab(S(this).parent())
            }),
            S(window).on("hashchange.fndtn.tab", function(e) {
                e.preventDefault(),
                self.handle_location_hash_change()
            })
        },
        handle_location_hash_change: function() {
            var self = this
              , S = this.S;
            S("[" + this.attr_name() + "]", this.scope).each(function() {
                var settings = S(this).data(self.attr_name(!0) + "-init");
                if (settings.deep_linking) {
                    var hash = self.scope.location.hash;
                    if ("" != hash) {
                        var hash_element = S(hash);
                        if (hash_element.hasClass("content") && hash_element.parent().hasClass("tab-content"))
                            self.toggle_active_tab($("[" + self.attr_name() + "] > * > a[href=" + hash + "]").parent());
                        else {
                            var hash_tab_container_id = hash_element.closest(".content").attr("id");
                            hash_tab_container_id != undefined && self.toggle_active_tab($("[" + self.attr_name() + "] > * > a[href=#" + hash_tab_container_id + "]").parent(), hash)
                        }
                    } else
                        for (var ind in self.default_tab_hashes)
                            self.toggle_active_tab($("[" + self.attr_name() + "] > * > a[href=" + self.default_tab_hashes[ind] + "]").parent())
                }
            })
        },
        toggle_active_tab: function(tab, location_hash) {
            var S = this.S
              , tabs = tab.closest("[" + this.attr_name() + "]")
              , anchor = tab.children("a").first()
              , target_hash = "#" + anchor.attr("href").split("#")[1]
              , target = S(target_hash)
              , siblings = tab.siblings()
              , settings = tabs.data(this.attr_name(!0) + "-init");
            if (S(this).data(this.data_attr("tab-content")) && (target_hash = "#" + S(this).data(this.data_attr("tab-content")).split("#")[1],
            target = S(target_hash)),
            settings.deep_linking) {
                var cur_ypos = $("body,html").scrollTop();
                location_hash != undefined ? window.location.hash = location_hash : window.location.hash = target_hash,
                settings.scroll_to_content ? location_hash == undefined || location_hash == target_hash ? tab.parent()[0].scrollIntoView() : S(target_hash)[0].scrollIntoView() : (location_hash == undefined || location_hash == target_hash) && $("body,html").scrollTop(cur_ypos)
            }
            tab.addClass(settings.active_class).triggerHandler("opened"),
            siblings.removeClass(settings.active_class),
            target.siblings().removeClass(settings.active_class).end().addClass(settings.active_class),
            settings.callback(tab),
            target.triggerHandler("toggled", [tab]),
            tabs.triggerHandler("toggled", [target])
        },
        data_attr: function(str) {
            return this.namespace.length > 0 ? this.namespace + "-" + str : str
        },
        off: function() {},
        reflow: function() {}
    },
    Foundation.libs.accordion = {
        name: "accordion",
        version: "5.2.3",
        settings: {
            active_class: "active",
            multi_expand: !1,
            toggleable: !0,
            callback: function() {}
        },
        init: function(scope, method, options) {
            this.bindings(method, options)
        },
        events: function() {
            var self = this
              , S = this.S;
            S(this.scope).off(".fndtn.accordion").on("click.fndtn.accordion", "[" + this.attr_name() + "] > dd > a", function(e) {
                var accordion = S(this).closest("[" + self.attr_name() + "]")
                  , target = S("#" + $(this).prop("rel").split("#")[1])
                  , siblings = S("dd > .content", accordion)
                  , aunts = $("dd", accordion)
                  , groupSelector = self.attr_name() + "=" + accordion.attr(self.attr_name())
                  , active_content = (accordion.data(self.attr_name(!0) + "-init"),
                S("dd > .content." + self.settings.active_class, accordion));
                return e.preventDefault(),
                accordion.attr(self.attr_name()) && (siblings = siblings.add("[" + groupSelector + "] dd > .content"),
                aunts = aunts.add("[" + groupSelector + "] dd")),
                self.settings.toggleable && target.is(active_content) ? (target.parent("dd").toggleClass(self.settings.active_class, !1),
                target.toggleClass(self.settings.active_class, !1)) : (self.settings.multi_expand || (siblings.removeClass(self.settings.active_class),
                aunts.removeClass(self.settings.active_class)),
                target.addClass(self.settings.active_class).parent().addClass(self.settings.active_class),
                void self.settings.callback(target))
            })
        },
        off: function() {},
        reflow: function() {}
    },
    Foundation.libs.tab.handle_location_hash_change = function() {}
    ,
    Foundation.libs.tab.toggle_active_tab = function(tab, locationHash) {
        var anchor = (this.S,
        tab.closest("[" + this.attr_name() + "]"),
        tab.children("a").first())
          , targetHash = "#" + anchor.attr("href").split("#")[1]
          , siblings = tab.siblings()
          , settings = this.settings;
        "#" !== targetHash && "#undefined" !== targetHash && (tab.addClass(settings.active_class).triggerHandler("opened"),
        siblings.removeClass(settings.active_class),
        settings.callback(tab))
    }
    ,
    Foundation.libs.joyride.show_modal = function() {
        if (!this.settings.$next_tip.data("closed")) {
            var joyridemodalbg = $(".joyride-modal-bg");
            joyridemodalbg.length < 1 && ($("body").append(this.settings.template.modal),
            joyridemodalbg = $(".joyride-modal-bg")),
            /pop/i.test(this.settings.tip_animation) ? joyridemodalbg.show() : joyridemodalbg.fadeIn(this.settings.tip_animation_fade_speed)
        }
    }
    ,
    Foundation.libs.joyride.set_li = function(init) {
        if (init)
            this.settings.$li = this.settings.$tip_content.eq(this.settings.start_offset),
            this.set_next_tip(),
            this.settings.$current_tip = this.settings.$next_tip;
        else {
            for (var nextId = this.settings.$li.next().data("id"), tmpNext = this.settings.$li.next(); !$("#" + nextId).is(":visible") && 0 !== tmpNext.length; )
                nextId = tmpNext.data("id"),
                tmpNext = tmpNext.next();
            this.settings.$li = $('li[data-id="' + nextId + '"]'),
            this.set_next_tip()
        }
        this.set_target()
    }
    ,
    Foundation.libs.joyride.expose = function() {
        var expose, exposeCover, el, origCSS, origClasses, randId = "expose-" + this.random_str(6);
        if (arguments.length > 0 && arguments[0]instanceof $)
            el = arguments[0];
        else {
            if (!this.settings.$target || /body/i.test(this.settings.$target.selector))
                return !1;
            el = this.settings.$target
        }
        return el.length < 1 ? (window.console && console.error("element not valid", el),
        !1) : (expose = $(this.settings.template.expose),
        this.settings.$body.append(expose),
        expose.css({
            top: el.offset().top,
            left: el.offset().left,
            width: el.css("width"),
            height: el.css("height")
        }),
        exposeCover = $(this.settings.template.expose_cover),
        origCSS = {
            zIndex: el.css("z-index"),
            position: el.css("position")
        },
        origClasses = null === el.attr("class") ? "" : el.attr("class"),
        el.css("z-index", parseInt(expose.css("z-index")) + 1),
        "static" === origCSS.position && el.css("position", "relative"),
        el.data("expose-css", origCSS),
        el.data("orig-class", origClasses),
        el.attr("class", origClasses + " " + this.settings.expose_add_class),
        exposeCover.css({
            top: el.offset().top,
            left: el.offset().left,
            width: el.css("width"),
            height: el.css("height")
        }),
        this.settings.modal && this.show_modal(),
        this.settings.$body.append(exposeCover),
        expose.addClass(randId),
        exposeCover.addClass(randId),
        el.data("expose", randId),
        this.settings.post_expose_callback(this.settings.$li.index(), this.settings.$next_tip, el),
        void this.add_exposed(el))
    }
}(jQuery, window, document),
$(function() {
    $('a[href$=".html"]').click(function(e) {
        e.preventDefault();
        var link = $(this).attr("href")
          , height = $("body").outerHeight();
        $("body").css({
            opacity: "1",
            "animation-name": "hide-body",
            "min-height": height
        }),
        setTimeout(function() {
            window.location.replace(link)
        }, 800)
    }),
    $(".btn-refresh").click(function(e) {
        window.location.reload(),
        e.preventDefault()
    })
}),
$(function() {
    $("#service-select-firewall").on("select", function() {
        $(this).val("Custom") ? $("#servicename-firewall").fadeIn("fast") : $("#servicename-firewall").hide()
    })
}),
$(function() {
    $("a.time-slot").click(function(e) {
        $(this).hasClass("allowed") ? $(this).removeClass("allowed").addClass("denied") : $(this).hasClass("denied") ? $(this).removeClass("denied").addClass("mixed") : $(this).hasClass("mixed") && $(this).removeClass("mixed").addClass("allowed"),
        e.preventDefault()
    }),
    $("#sl-icon").change(function(a) {
        var selectIcon = $("#sl-icon").val()
          , icon = $(this).parent().parent().find(".selected-icon");
        0 === selectIcon ? icon.removeClass("icon-device").removeClass("pc").removeClass("notebook").removeClass("tablet").removeClass("smartphone") : 1 === selectIcon ? icon.removeClass("notebook").removeClass("tablet").removeClass("smartphone").addClass("icon-device").addClass("pc") : 2 === selectIcon ? icon.removeClass("pc").removeClass("tablet").removeClass("smartphone").addClass("icon-device").addClass("notebook") : 3 === selectIcon ? icon.removeClass("pc").removeClass("notebook").removeClass("smartphone").addClass("icon-device").addClass("tablet") : 4 === selectIcon && icon.removeClass("pc").removeClass("notebook").removeClass("tablet").addClass("icon-device").addClass("smartphone")
    })
}),
$(function() {
    $("#enable-guestssid").click(function(e) {
        $("#enable-guestssid").prop("checked") ? $(this).parent().parent().parent().children(".disabled").fadeIn("fast") : $(this).parent().parent().parent().children(".disabled").fadeOut("fast")
    }),
    $(".mac-address").mask("00:00:00:00:00:00")
}),
$(function() {
    $(".btn-show").click(function(e) {
        var text = $(this).text();
        $(this).parent().children(".bordered-content").slideToggle(),
        $(this).text("Hide" === text ? "Show More" : "Hide"),
        e.preventDefault()
    })
}),
$(function() {
    (angular.element("body").scope().isLoginTemplate || angular.element("body").scope().isMobile) && ($('link[rel=stylesheet][href="styles/main.css"]').prop("disabled", !0),
    $('link[rel=stylesheet][href="styles/vendor.css"]').prop("disabled", !0),
    $('link[rel=stylesheet][href="styles/dev.css"]').prop("disabled", !0),
    $('link[rel=stylesheet][href="styles/main-rtl.css"]').prop("disabled", !0),
    $('link[rel=stylesheet][href="styles/vendor-rtl.css"]').prop("disabled", !0),
    $('link[rel=stylesheet][href="styles/dev-rtl.css"]').prop("disabled", !0))
}),
$(document).ready(function() {
    $(document).ready(function() {
        tl.pg.init({
            custom_open_button: "#helpButton"
        })
    }),
    $(document).on("click", ".shs", function(e) {
        return e.preventDefault(),
        $(this).next(".tabs").slideToggle(),
        !1
    }),
    $(window).on("resize", function() {
        var menu = $(".shs").next(".tabs")
          , w = $(window).width()
          , w2 = 641.008;
        w > w2 && menu.is(":hidden") && menu.removeAttr("style")
    })
}),
$.RemoteStyleSheet = {},
$.RemoteStyleSheet.load = function(path, fnSuccess, fnError, customID, scope) {
    var head = document.getElementById("main-ui-view")
      , link = document.createElement("link");
    link.id = customID,
    link.setAttribute("href", path),
    link.setAttribute("rel", "stylesheet"),
    link.setAttribute("type", "text/css");
    var sheet, cssRules;
    "sheet"in link ? (sheet = "sheet",
    cssRules = "cssRules") : (sheet = "styleSheet",
    cssRules = "rules");
    var intervalId = setInterval(function() {
        try {
            link[sheet] && link[sheet][cssRules].length && (clearInterval(intervalId),
            clearTimeout(timeoutId),
            fnSuccess.call(link))
        } catch (e) {} finally {}
    }, 10)
      , timeoutId = setTimeout(function() {
        clearInterval(timeoutId),
        clearTimeout(timeoutId),
        head.removeChild(link),
        void 0 !== fnError && fnError.call(link)
    }, 15e3);
    return head.appendChild(link),
    link
}
,
$(function() {
    $(document).on("refreshCheckboxes", function() {
        refreshCheckboxes()
    }),
    $(document).on("updateFavicon", function() {
        var cacheBust = "?v=" + (Math.random() + "").split(".")[1];
        $.config.favicon ? $("#favicon").prop("href", $.config.favicon + cacheBust) : $("#favicon").prop("href", "images/faviconNone.ico" + cacheBust)
    })
}),
Object.keys || (Object.keys = function() {
    var hasOwnProperty = Object.prototype.hasOwnProperty
      , hasDontEnumBug = !{
        toString: null
    }.propertyIsEnumerable("toString")
      , dontEnums = ["toString", "toLocaleString", "valueOf", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "constructor"]
      , dontEnumsLength = dontEnums.length;
    return function(obj) {
        if ("object" != typeof obj && ("function" != typeof obj || null === obj))
            throw new TypeError("Object.keys called on non-object");
        var prop, i, result = [];
        for (prop in obj)
            hasOwnProperty.call(obj, prop) && result.push(prop);
        if (hasDontEnumBug)
            for (i = 0; dontEnumsLength > i; i++)
                hasOwnProperty.call(obj, dontEnums[i]) && result.push(dontEnums[i]);
        return result
    }
}()),
$.util = {},
$.util.getParameterByName = function(url, name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regex = new RegExp("[\\?&]" + name + "=([^&#]*)")
      , results = regex.exec(url);
    return null === results ? "" : decodeURIComponent(results[1].replace(/\+/g, " "))
}
,
$.util.getHostnameFromUrl = function(url) {
    var m = url.match(/^http.*:\/\/[^\/]+/);
    return m ? m[0] : null
}
,
$.util.convertBytes = function(value, pot) {
    var result = 0
      , arrayLegend = {
        0: "",
        10: " kB",
        20: " MB",
        30: " GB",
        40: " TB"
    };
    if (void 0 !== pot)
        return (value / Math.pow(2, pot)).toFixed(2).replace(".", ",") + arrayLegend[pot];
    for (var x = 0; 5 > x && !(value < Math.pow(2, 10 * x)); x++)
        result = (value / Math.pow(2, 10 * x)).toFixed(2).replace(".", ",") + arrayLegend[10 * x];
    return result
}
,
$.util.byteArrayToStr = function(bytes) {
    for (var newarray = [], x = 0; x < bytes.length; x++)
        0 !== bytes[x] && newarray.push(bytes[x]);
    return String.fromCharCode.apply(null, newarray)
}
,
$.util.strToByteArray = function(str) {
    for (var bytes = [], i = 0, n = str.length; n > i; i++) {
        var char = str.charCodeAt(i);
        bytes.push(char >>> 8, 255 & char)
    }
    return bytes
}
,
$.util.isUTF8 = function(bytes) {
    return "ï»¿" === bytes.slice(0, 3)
}
,
$.util.byteUTF8ToStr = function(bytes) {
    var ix = 0;
    "ï»¿" === bytes.slice(0, 3) && (ix = 3);
    for (var string = ""; ix < bytes.length; ix++) {
        var byte2, byte3, byte4, byte1 = bytes[ix].charCodeAt(0);
        if (128 > byte1)
            string += String.fromCharCode(byte1);
        else if (byte1 >= 194 && 224 > byte1)
            byte2 = bytes[++ix].charCodeAt(0),
            string += String.fromCharCode(((31 & byte1) << 6) + (63 & byte2));
        else if (byte1 >= 224 && 240 > byte1)
            byte2 = bytes[++ix].charCodeAt(0),
            byte3 = bytes[++ix].charCodeAt(0),
            string += String.fromCharCode(((255 & byte1) << 12) + ((63 & byte2) << 6) + (63 & byte3));
        else if (byte1 >= 240 && 245 > byte1) {
            byte2 = bytes[++ix].charCodeAt(0),
            byte3 = bytes[++ix].charCodeAt(0),
            byte4 = bytes[++ix].charCodeAt(0);
            var codepoint = ((7 & byte1) << 18) + ((63 & byte2) << 12) + ((63 & byte3) << 6) + (63 & byte4);
            codepoint -= 65536,
            string += String.fromCharCode((codepoint >> 10) + 55296, (1023 & codepoint) + 56320)
        }
    }
    return string
}
,
$.util.validateEmail = function(email) {
    var re = /^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
    return re.test(email)
}
,
$.util.normalizeString = function(key, lang) {
    var str = $.globals[key][lang];
    return "TODO" === str && (str = $.globals[key].EN),
    str || ""
}
,
$.util.resolveArrayLanguage = function(lang) {
    var array = {}
      , locale = $.globals;
    for (var x in locale)
        array[x] = $.util.normalizeString(x, lang);
    return array
}
,
$.util.fixGetValuesTree = function(data) {
    return void 0 === data || null === data ? [] : data instanceof Array ? data : [data]
}
,
$.util.checkPort = function(port) {
    return /^[0-9]+$/.test(port.toString()) ? (port = parseInt(port, 10),
    port < $.constants.minPortRange || port > $.constants.maxPortRange ? !1 : !0) : !1
}
,
$.util.truncate = function(word, chars) {
    var result = null;
    return result = word.length <= chars ? word : word.search(" ") > -1 && word.search(" ") < chars ? $.trim(word).substring(0, chars).split(" ").slice(0, -1).join(" ") + "..." : $.trim(word).substring(0, chars) + "..."
}
,
$.util.inArray = function(elem, arr, i) {
    var len;
    if (arr)
        for (len = arr.length,
        i = i ? 0 > i ? Math.max(0, len + i) : i : 0; len > i; i++)
            if (i in arr && arr[i] === elem)
                return i;
    return -1
}
,
$.util.isFunction = function(item) {
    return null !== item && void 0 !== item && "function" == typeof item
}
,
$.util.isRegex = function(item) {
    return null !== item && void 0 !== item && item.exec && item.test && $.util.isFunction(item.exec) && $.util.isFunction(item.test)
}
,
$.util.profileHasCustomWirelessKeyValidation = function(securityMode) {
    return $.config.modules.wifi.wirelessKeyRules && $.config.modules.wifi.wirelessKeyRules[securityMode] ? $.config.modules.wifi.wirelessKeyRules[securityMode] : $.constants.wirelessKeyRules[securityMode]
}
,
$.util.validateWPAPassword = function(password) {
    var rule = $.util.profileHasCustomWirelessKeyValidation("WPA2");
    return rule.test(password)
}
,
$.util.validateWirelessKey = function(wirelessKey, securityMode) {
    var rule = $.util.profileHasCustomWirelessKeyValidation(securityMode);
    return $.util.isFunction(rule) ? rule(wirelessKey) : $.util.isRegex(rule) ? rule.test(wirelessKey) : void 0
}
,
$.util.validateWEP64Password = function(password) {
    var rule = $.util.profileHasCustomWirelessKeyValidation("WEP_64");
    return rule.test(password)
}
,
$.util.validateWEP128Password = function(password) {
    var rule = $.util.profileHasCustomWirelessKeyValidation("WEP_128");
    return rule.test(password)
}
,
$.util.validPasswordLength = function(wifiSecurityMode, password) {
    var valid = !0;
    return "WEP_64" === wifiSecurityMode ? valid = $.constants.wirelessKeyRules.WEP_64_LENGTH.test(password) : "WEP_128" === wifiSecurityMode ? valid = $.constants.wirelessKeyRules.WEP_128_LENGTH.test(password) : -1 !== wifiSecurityMode.indexOf("WPA2") ? valid = $.constants.wirelessKeyRules.WPA2_LENGTH.test(password) : "WPA_PERSONAL" === wifiSecurityMode ? valid = $.constants.wirelessKeyRules.WPA_PERSONAL_LENGTH.test(password) : "WPA_ENTERPRISE" === wifiSecurityMode && (valid = $.constants.wirelessKeyRules.WPA_ENTERPRISE_LENGTH.test(password)),
    valid
}
,
$.util.validSpecificPasswordLength = function(wifiSecurityMode, password) {
    var valid = {
        valid: !0
    }
      , passLength = password ? password.length : 0;
    return $.config.wifiMaxLength && 8 !== passLength ? valid = {
        valid: !1,
        error: "invalidPasswordLength"
    } : $.config.wifiMaxLength || ("WEP_64" === wifiSecurityMode ? passLength !== $.constants.wirelessKeyRules.WEP_64_MIN_LENGTH && passLength !== $.constants.wirelessKeyRules.WEP_64_MAX_LENGTH && (valid = {
        valid: !1,
        error: "invalidPasswordLength"
    }) : "WEP_128" === wifiSecurityMode ? passLength !== $.constants.wirelessKeyRules.WEP_128_MIN_LENGTH && passLength !== $.constants.wirelessKeyRules.WEP_128_MAX_LENGTH && (valid = {
        valid: !1,
        error: "invalidPasswordLength"
    }) : -1 !== wifiSecurityMode.indexOf("WPA2") ? passLength < $.constants.wirelessKeyRules.WPA2_MIN_LENGTH ? valid = {
        valid: !1,
        error: "minLengthError"
    } : passLength > $.constants.wirelessKeyRules.WPA2_MAX_LENGTH && (valid = {
        valid: !1,
        error: "maxLengthError"
    }) : "WPA_PERSONAL" === wifiSecurityMode ? passLength < $.constants.wirelessKeyRules.WPA_PERSONAL_MIN_LENGTH ? valid = {
        valid: !1,
        error: "minLengthError"
    } : passLength > $.constants.wirelessKeyRules.WPA_PERSONAL_MAX_LENGTH && (valid = {
        valid: !1,
        error: "maxLengthError"
    }) : "WPA_ENTERPRISE" === wifiSecurityMode && (passLength < $.constants.wirelessKeyRules.WPA_ENTERPRISE_MIN_LENGTH ? valid = {
        valid: !1,
        error: "minLengthError"
    } : passLength > $.constants.wirelessKeyRules.WPA_ENTERPRISE_MAX_LENGTH && (valid = {
        valid: !1,
        error: "maxLengthError"
    }))),
    valid
}
,
$.util.validPasswordCharacters = function(wifiSecurityMode, password) {
    var valid = !0;
    return $.config.wifiKeyRule ? valid = $.config.wifiKeyRule.test(password) : "WEP_64" === wifiSecurityMode ? valid = $.util.validateWEP64Password(password) : "WEP_128" === wifiSecurityMode ? valid = $.util.validateWEP128Password(password) : -1 !== wifiSecurityMode.indexOf("WPA2") ? valid = $.util.validateWPAPassword(password) : "WPA_PERSONAL" === wifiSecurityMode ? valid = $.util.validateWirelessKey(password, "WPA_PERSONAL") : "WPA_ENTERPRISE" === wifiSecurityMode && (valid = $.util.validateWPAPassword(password)),
    valid
}
,
$.util.containsOnlySpaces = function(str) {
    return null === str ? !0 : 0 === $.util.trim(str).length ? !0 : !1
}
,
$.util.fixOperatingFrequencyLabel = function(l) {
    l = l.toString();
    var newStr = "";
    switch (l) {
    case "2_4GHZ":
        newStr = "2.4 GHz";
        break;
    default:
        newStr = "5 GHz"
    }
    return newStr
}
,
$.util.checkMacAddress = function(mac) {
    var reg = new RegExp("^([0-9A-Fa-f]{2}[:-]){5}([0-9A-Fa-f]{2})$","g");
    return reg.test(mac)
}
,
$.util.formatLongWords = function(s) {
    if ("string" !== $.type(s))
        return "";
    var rest, a = s.split(" ");
    for (var x in a) {
        for (rest = a[x],
        a[x] = ""; rest.length > 15; )
            a[x] += rest.substr(0, 15) + " ",
            rest = rest.substr(15);
        a[x] += rest
    }
    return a.join(" ")
}
,
$.util.checkIP = function(ip) {
    if (void 0 === ip || null === ip || "" === ip)
        return !1;
    if (4 !== ip.split(".").length)
        return !1;
    var reg = new RegExp("^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$","g");
    return reg.test(ip)
}
,
$.util.getNetworkInfo = function(ip, mask) {
    for (var netmaskArray = mask.split("."), ipArray = ip.split("."), result = {
        initial: "",
        broadcast: "",
        first: "",
        last: ""
    }, cont = 0; 4 > cont; cont++) {
        var avail = 0
          , ipPart = parseInt(ipArray[cont], 10);
        if ("255" === netmaskArray[cont])
            result.initial += ipPart,
            result.broadcast += ipPart,
            result.first += ipPart,
            result.last += ipPart;
        else {
            avail = 256 - netmaskArray[cont];
            for (var fim = 0; 256 > fim; fim += avail)
                if (ipPart >= fim && fim + avail > ipPart) {
                    result.initial += fim,
                    result.broadcast += fim - 1 + avail,
                    3 === cont ? (result.first += 1 + fim,
                    result.last += fim - 2 + avail) : (result.first += fim,
                    result.last += fim - 1 + avail);
                    break
                }
        }
        3 > cont && (result.initial += ".",
        result.broadcast += ".",
        result.first += ".",
        result.last += ".")
    }
    return result
}
,
$.util.compareIp = function(first, last) {
    for (var firstArr = first.split("."), lastArr = last.split("."), i = 0; 4 > i; i++) {
        if (parseInt(firstArr[i], 10) > parseInt(lastArr[i], 10))
            return !1;
        if (parseInt(firstArr[i], 10) < parseInt(lastArr[i], 10))
            break
    }
    return !0
}
,
$.util.lanIpCache = {},
$.util.ipToBin = function(ip) {
    var ipFragment = ip.split(".")
      , leBinary = "";
    for (var x in ipFragment)
        leBinary += $.util.dec2bin(ipFragment[x]);
    return leBinary
}
,
$.util.isInIpRange = function(ip1, ip2) {
    return ip1.split(".").slice(0, 3).join(".") === ip2.split(".").slice(0, 3).join(".") ? !0 : !1
}
,
$.util.checkLanIp = function(ip, gateway, mask) {
    if (!$.util.checkIP(ip))
        return !1;
    var leBinary = $.util.ipToBin(ip);
    for (var x in $.constants.blacklistedIPs)
        if (leBinary >= $.util.ipToBin($.constants.blacklistedIPs[x].min) && leBinary <= $.util.ipToBin($.constants.blacklistedIPs[x].max))
            return !1;
    var params = {}
      , values = {}
      , key = "";
    return values.gateway = gateway,
    void 0 === gateway && (params.gateway = $.xpaths.gateway.connection.status.localipnetwork.ipv4address,
    key += params.gateway),
    values.mask = mask,
    void 0 === mask && (params.mask = $.xpaths.gateway.connection.status.localipnetwork.subnetmask,
    key += params.mask),
    $.isEmptyObject(params) || ($.util.lanIpCache[key] ? values = $.extend(!0, {}, $.util.lanIpCache[key]) : ($.extend(values, $.xmo.getValuesTree(params)),
    $.util.lanIpCache[key] = $.extend(!0, {}, values))),
    $.util.checkIfIpIsFromNetwork(values, ip)
}
,
$.util.checkExternalIp = function(ip, networks) {
    if (!$.util.checkIP(ip))
        return !1;
    var netWork1Values = {}
      , netWork2Values = {}
      , netWork3Values = {}
      , params = {}
      , key = "";
    networks.indexOf("net1") > -1 && (params.gateway = $.xpaths.main.ripv2.network1.ripIp,
    key += params.gateway,
    params.mask = $.xpaths.main.ripv2.network1.ripSubnet,
    key += params.mask,
    params.ripDefaultGateway = $.xpaths.main.ripv2.network1.ripDefaultGateway,
    key += params.ripDefaultGateway,
    $.isEmptyObject(params) || ($.util.lanIpCache[key] ? netWork1Values = $.extend(!0, {}, $.util.lanIpCache[key]) : ($.extend(netWork1Values, $.xmo.getValuesTree(params)),
    $.util.lanIpCache[key] = $.extend(!0, {}, netWork1Values)))),
    networks.indexOf("net2") > -1 && (key = "",
    params = {},
    params.gateway = $.xpaths.main.ripv2.network2.ripIp,
    key += params.gateway,
    params.mask = $.xpaths.main.ripv2.network2.ripSubnet,
    key += params.mask,
    params.ripDefaultGateway = $.xpaths.main.ripv2.network2.ripDefaultGateway,
    key += params.ripDefaultGateway,
    $.isEmptyObject(params) || ($.util.lanIpCache[key] ? netWork2Values = $.extend(!0, {}, $.util.lanIpCache[key]) : ($.extend(netWork2Values, $.xmo.getValuesTree(params)),
    $.util.lanIpCache[key] = $.extend(!0, {}, netWork2Values)))),
    networks.indexOf("net3") > -1 && (key = "",
    params = {},
    params.gateway = $.xpaths.main.ripv2.network3.ripIp,
    key += params.gateway,
    params.mask = $.xpaths.main.ripv2.network3.ripSubnet,
    key += params.mask,
    params.ripDefaultGateway = $.xpaths.main.ripv2.network3.ripDefaultGateway,
    key += params.ripDefaultGateway,
    $.isEmptyObject(params) || ($.util.lanIpCache[key] ? netWork3Values = $.extend(!0, {}, $.util.lanIpCache[key]) : ($.extend(netWork3Values, $.xmo.getValuesTree(params)),
    $.util.lanIpCache[key] = $.extend(!0, {}, netWork3Values))));
    var result = networks.indexOf("net1") > -1 && $.util.checkIfIpIsFromNetwork(netWork1Values, ip) && netWork1Values.ripDefaultGateway !== ip || networks.indexOf("net2") > -1 && $.util.checkIfIpIsFromNetwork(netWork2Values, ip) && netWork2Values.ripDefaultGateway !== ip || networks.indexOf("net3") > -1 && $.util.checkIfIpIsFromNetwork(netWork3Values, ip) && netWork3Values.ripDefaultGateway !== ip;
    return result
}
,
$.util.checkIfIpIsFromNetwork = function(values, ip) {
    var netInfo = $.util.getNetworkInfo(values.gateway, values.mask)
      , result = !0;
    return (ip === netInfo.initial || ip === netInfo.broadcast || ip === values.gateway || ($.util.compareIp(ip, netInfo.first) || $.util.compareIp(netInfo.last, ip)) && ip !== netInfo.first && ip !== netInfo.last) && (result = !1),
    result
}
,
$.util.isNumeric = function(obj) {
    return !isNaN(parseFloat(obj)) && isFinite(obj)
}
,
$.util.trim = function(obj) {
    return $.trim(obj)
}
,
$.util.isEmptyObject = function(obj) {
    return $.isEmptyObject(obj)
}
,
$.util.isEmpty = function(value) {
    return angular.isUndefined(value) || "" === value || null === value || value !== value
}
,
$.util.ucFirst = function(s) {
    return s.charAt(0).toUpperCase() + s.slice(1).toLowerCase()
}
,
$.util.upper = function(s) {
    return s.toUpperCase()
}
,
$.util.formatSecondsAsTime = function(secs, pattern) {
    var seconds = secs
      , days = Math.floor(seconds / DAYS);
    seconds %= DAYS;
    var hours = Math.floor(seconds / HOURS);
    seconds %= HOURS;
    var minutes = Math.floor(seconds / MINUTE);
    seconds %= MINUTE,
    days = $.util.lpad(days, "0", 3),
    hours = $.util.lpad(hours, "0", 2),
    minutes = $.util.lpad(minutes, "0", 2),
    seconds = $.util.lpad(seconds, "0", 2);
    var formattedTime = days + " days " + hours + ":" + minutes + ":" + seconds;
    return void 0 !== pattern && (formattedTime = pattern.replace("DD", days),
    formattedTime = formattedTime.replace("HH", hours),
    formattedTime = formattedTime.replace("MM", minutes),
    formattedTime = formattedTime.replace("SS", seconds)),
    formattedTime
}
;
var convertBase = function(num) {
    var c = {
        from: function(baseFrom) {
            var s = {
                to: function(baseTo) {
                    return parseInt(num, baseFrom).toString(baseTo)
                }
            };
            return s
        }
    };
    return c
};
if ($.util.dec2bin = function(num) {
    return convertBase(num).from(10).to(2)
}
,
$.util.dec2hex = function(num) {
    return convertBase(num).from(10).to(16).toUpperCase()
}
,
$.util.bin2dec = function(num) {
    return convertBase(num).from(2).to(10)
}
,
$.util.bin2hex = function(num) {
    return convertBase(num).from(2).to(16).toUpperCase()
}
,
$.util.hex2dec = function(num) {
    return convertBase(num).from(16).to(10)
}
,
$.util.hex2bin = function(num) {
    return convertBase(num).from(16).to(2)
}
,
$.util.a2hex = function(str, sep) {
    var arr = [];
    void 0 === sep && (sep = "");
    for (var i = 0, l = str.length; l > i; i++) {
        var hex = Number(str.charCodeAt(i)).toString(16);
        arr.push(hex)
    }
    return arr.join(sep)
}
,
$.util.hex2a = function(hexx, sep) {
    if (hexx) {
        var str = "";
        void 0 === sep && (sep = ""),
        sep = new RegExp(sep,"g");
        for (var hex = hexx.toString().replace(sep, ""), i = 0; i < hex.length; i += 2)
            str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
        return str
    }
}
,
$.util.lpad = function(str, fill, len) {
    for (var strReturn = str.toString(); strReturn.length < len; )
        strReturn = fill + strReturn;
    return strReturn
}
,
$.util.checkUrlParams = function(sParam, search) {
    for (var sPageURL = (search || window.location.search).substring(1).replace(/\?/g, "&"), sURLVariables = sPageURL.split("&"), i = 0; i < sURLVariables.length; i++) {
        var sParameterName = sURLVariables[i].split("?");
        if (sParameterName = sParameterName[0].split("="),
        sParameterName[0] === sParam)
            return sParameterName[1]
    }
}
,
$.util.checkUrl = function(url) {
    var regexp = new RegExp("^(?:(?:https?|ftp)://)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:/\\S*)?$","i");
    return regexp.test(url)
}
,
$.util.checkUrl2 = function(url) {
    var protocolExp = /^https?:\/\//
      , domainExp = /^([\da-z\.-]+)\.?([a-z\.]{2,6})?([\/\w \.-]*)*\/?/
      , ipAddressExp = /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\/?.*/
      , urlProtocolCleaned = url.replace(protocolExp, "");
    return ipAddressExp.test(urlProtocolCleaned) || domainExp.test(urlProtocolCleaned)
}
,
$.util.isValidIPv6Addr = function(addr) {
    var ret = !1;
    if (addr && addr.length > 2 && -1 !== addr.indexOf(":")) {
        var debPrefix = parseInt(addr.substr(0, 2), 16);
        debPrefix >= parseInt("20", 16) && debPrefix <= parseInt("3F", 16) && (ret = !0)
    }
    return ret
}
,
$.util.removeZeroIPv6 = function(value) {
    var dig = ""
      , qtdZero = value.length - value.substr(0, 4).replace(/0/gi, "").length;
    return 0 === qtdZero || "0" !== value.substr(0, 1) && 4 !== qtdZero ? dig = value : 4 === qtdZero ? dig = "0" : "0" === value.substr(0, 1) && (dig = value.substr(0, 1).replace(/0/gi, "") + value.substr(1, 3),
    "0" === dig.substr(1, 1) ? (dig = value.substr(1, 1).replace(/0/gi, "") + value.substr(2, 2),
    "0" === dig.substr(0, 1) && (dig = value.substr(0, 1).replace(/0/gi, "") + dig.substr(1, 1))) : dig = value.substr(0, 3).replace(/0/gi, "") + value.substr(3, 3)),
    dig
}
,
$.util.simplifyIPv6 = function(ipv6) {
    var ipv6Array = []
      , ipv6List = []
      , result = "";
    ipv6List = ipv6 ? ipv6.indexOf(",") > -1 ? ipv6.split(",") : [ipv6] : [];
    for (var x = 0; x < ipv6List.length; x++) {
        ipv6Array = ipv6List[x].indexOf(":") > -1 ? ipv6List[x].split(":") : ipv6List[x].match(/.{1,4}/g);
        var total = ipv6Array.length;
        result += ipv6Array[0];
        for (var i = 1; total > i; i++)
            result += i % 8 === 0 ? "," + $.util.removeZeroIPv6(ipv6Array[i]) : ":" + $.util.removeZeroIPv6(ipv6Array[i]);
        x < ipv6List.length - 1 && (result += ",")
    }
    return result
}
,
$.util.isValidIpv6 = function(str) {
    return new RegExp(["^\\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]", "|2[0-4]\\d|1\\d\\d|[1-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1", "-9]?\\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1", "-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\", "d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\", "d\\d|[1-9]?\\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|", "1\\d\\d|[1-9]?\\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)(\\.(25[0-5]|2[0-4]\\d|1\\d\\d|[1-9]?\\d)", "){3}))|:)))(%.+)?\\s*$"].join("")).test(str)
}
,
$.util.checkIPv6 = function(ipv6) {
    return /^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\:){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*$/.test(ipv6) ? !0 : !1
}
,
$.util.checkIPv6Simple = function(ipv6) {
    var split = ipv6.split(":");
    if (split.length > 4)
        return !1;
    for (var regex = new RegExp(["^([0-9A-Fa-f]{1,4})$"].join("")), i = 0; i < split.length; i++)
        if (!regex.test(split[i]))
            return !1;
    return !0
}
,
$.util.checkHostname = function(url) {
    var regexp = new RegExp(/^[\da-z]+(?:(?:[\da-z])|(?:\-(?!$)))*$/i);
    return regexp.test(url)
}
,
$.util.fixpath = function(p) {
    var radix = 10
      , init = parseInt(p.toString().indexOf("[") + 1, radix)
      , end = parseInt(p.toString().indexOf("]"), radix)
      , alias = p.substring(init, end);
    return p.substring(0, init) + 'Alias="' + alias + '"' + p.substring(end)
}
,
$.util.getAliasFromXPath = function(p) {
    var radix = 10
      , init = parseInt(p.toString().indexOf("[") + 1, radix)
      , end = parseInt(p.toString().indexOf("]"), radix)
      , alias = p.substring(init, end);
    return alias
}
,
$.util.getAllAliasFromXpath = function(xpath) {
    var starts = []
      , ends = [];
    if (!xpath)
        return [];
    $.each(xpath.split(""), function(index, value) {
        "[" === value && starts.push(index),
        "]" === value && ends.push(index)
    });
    var aliases = [];
    return $(starts).each(function(index, value) {
        var alias = xpath.substring(value + 1, ends[index]);
        aliases.push(alias)
    }),
    aliases
}
,
$.util.getParamAliasFromXPath = function(xpath) {
    var matches = xpath.match(/\[(.*?)\]/g)[0];
    return matches.substring(matches.indexOf("=") + 2, matches.length - 2)
}
,
$.util.getHostname = function(host) {
    try {
        var fieldsCheck = $.config.hostnameFieldsCheck || $.constants.hostnameFieldsCheck;
        for (var i in fieldsCheck) {
            if ("UserFriendlyName" === fieldsCheck[i] && "" !== host[fieldsCheck[i]] && !$.util.checkMacAddress(host[fieldsCheck[i]]))
                return host[fieldsCheck[i]];
            if ("UserFriendlyName" !== fieldsCheck[i] && "" !== host[fieldsCheck[i]])
                return host[fieldsCheck[i]]
        }
    } catch (e) {
        return ""
    }
}
,
$.util.getClientHostname = function(host) {
    return "" === host.HostName ? host.PhysAddress : host.HostName
}
,
$.util.objectToArray = function(a) {
    return a instanceof Array || (a = [a]),
    a
}
,
$.util.formatLeaseTime = function(secs) {
    var time = moment.duration(secs, "seconds")
      , days = parseInt(time.days(), 10)
      , hours = ("0" + time.hours()).slice(-2)
      , minutes = ("0" + time.minutes()).slice(-2)
      , seconds = ("0" + time.seconds()).slice(-2)
      , str = "";
    return days >= 1 && (str = days + "d "),
    str += hours + "h" + minutes + "m" + seconds + "s"
}
,
$.util.portConflict = function(portEntry, portsList, isIPv6, skipAlias) {
    isIPv6 && (portEntry.ExternalPort = portEntry.DestPort,
    portEntry.ExternalPortEndRange = portEntry.DestPortRangeMax);
    var portValue = portEntry.ExternalPort.toString()
      , externalAddress = portEntry.ExternalAddress;
    portEntry.ExternalPortEndRange > 0 && (portValue += "-" + portEntry.ExternalPortEndRange);
    var protocolValue = portEntry.Protocol;
    portValue = portValue.split("-");
    var result = !0;
    return $.each(portsList, function(i, obj) {
        var theRef = isIPv6 ? obj.Rule : obj;
        if (!portEntry.uid || portEntry.uid !== theRef.uid) {
            if (portEntry.indexEdit === i || theRef.toBeDeleted || !skipAlias && theRef.Alias && -1 === theRef.Alias.indexOf($.constants.PORTFORWARDING_PREFIX) && -1 === theRef.Alias.indexOf($.constants.GAMES_PREFIX))
                return !0;
            isIPv6 && (theRef.ExternalPort = theRef.DestPort,
            theRef.ExternalPortEndRange = theRef.DestPortRangeMax);
            var srcPort = theRef.ExternalPort.toString()
              , srcExternalAddress = theRef.ExternalAddress;
            theRef.ExternalPortEndRange > 0 && (srcPort += "-" + theRef.ExternalPortEndRange),
            srcPort = srcPort.split("-");
            var srcProtocol = theRef.Protocol
              , arrayBoth = ["TCP", "UDP"]
              , invalidProtocol = protocolValue === srcProtocol || "ALL" === protocolValue || "ALL" === srcProtocol;
            invalidProtocol = invalidProtocol || ("BOTH" === protocolValue || "BOTH" === srcProtocol) && ($.inArray(protocolValue, arrayBoth) > -1 || $.inArray(srcProtocol, arrayBoth) > -1),
            externalAddress && externalAddress !== srcExternalAddress || (1 === portValue.length ? 1 === srcPort.length ? parseInt(portValue[0]) === parseInt(srcPort[0]) && invalidProtocol && (result &= !1) : 2 === srcPort.length && parseInt(portValue[0]) >= parseInt(srcPort[0]) && parseInt(portValue[0]) <= parseInt(srcPort[1]) && invalidProtocol && (result &= !1) : 2 === portValue.length && (1 === srcPort.length ? parseInt(srcPort[0]) >= parseInt(portValue[0]) && parseInt(srcPort[0]) <= parseInt(portValue[1]) && invalidProtocol && (result &= !1) : 2 === srcPort.length && (parseInt(srcPort[0]) >= parseInt(portValue[0]) && parseInt(srcPort[0]) <= parseInt(portValue[1]) || parseInt(srcPort[1]) >= parseInt(portValue[0]) && parseInt(srcPort[1]) <= parseInt(portValue[1]) || parseInt(portValue[0]) >= parseInt(srcPort[0]) && parseInt(portValue[0]) <= parseInt(srcPort[1]) || parseInt(portValue[1]) >= parseInt(srcPort[0]) && parseInt(portValue[1]) <= parseInt(srcPort[1])) && invalidProtocol && (result &= !1)))
        }
    }),
    result
}
,
$.util.endsWith = function(str, suffix) {
    return -1 !== str.indexOf(suffix, str.length - suffix.length)
}
,
$.util.cleanProtocol = function(leSite) {
    return leSite.replace(/.*?:\/\//g, "")
}
,
$.util.checkDataPermission = function(obj) {
    for (var p in obj)
        if (null === obj[p])
            return !1;
    return !0
}
,
$.util.scrollToError = function() {
    var firstError = $(".error:visible:eq(0)")
      , offset = firstError.offset();
    if (offset) {
        var lastInputHeight = firstError.prev("input[type=text], input[type=password], input[type=number]").outerHeight();
        $(document).scrollTop(offset.top - lastInputHeight)
    }
}
,
$.util.lowerCaseFirstLetter = function(str) {
    return str.charAt(0).toLowerCase() + str.slice(1)
}
,
$.util.getDHCPOptions = function(ipAlias, clients) {
    var rs = [];
    return $(clients).each(function(i, obj) {
        $.util.getAliasFromXPath(obj.Interface) === ipAlias && $.each(obj.SentOptions, function(j, option) {
            rs.push(option)
        })
    }),
    rs
}
,
$.util.isNumber = function(n) {
    return !isNaN(parseInt(n, 10)) && isFinite(n)
}
,
$.util.parsePossibleChannels = function(channels) {
    try {
        channels = channels.replace(/[a-z"']/gi, "").split(",");
        var rs = [];
        return $(channels).each(function(i, obj) {
            if ($.util.isNumber(obj) && obj > 0)
                rs.push(1 * obj);
            else {
                var tmp = obj.split("-");
                if (2 === tmp.length && $.util.isNumber(tmp[0]) && $.util.isNumber(tmp[1]))
                    for (var x = tmp[0]; x <= tmp[1]; x++)
                        rs.push(parseInt(x, 10))
            }
        }),
        $.unique(rs)
    } catch (err) {
        return []
    }
}
,
$.util.parsePossibleSecurityModes = function(securityModes) {
    if (!securityModes)
        return [];
    securityModes = securityModes.replace(/-/g, "_").toUpperCase(),
    securityModes = securityModes.split(",");
    var rs = [];
    return $(securityModes).each(function(i, obj) {
        rs.push({
            value: obj,
            label: $.constants.securityModesLabel[obj]
        })
    }),
    rs = $.unique(rs)
}
,
$.util.validatePin = function(value, type) {
    var rs = !1;
    switch (type) {
    case "puk":
        rs = null !== /^[\d]{4,8}$/gi.exec(value);
        break;
    default:
        rs = null !== /^[\d]{4}$/gi.exec(value)
    }
    return rs
}
,
$.util.ipInRange = function(ip, start, end) {
    return $.util.compareIp(start, ip) && $.util.compareIp(ip, end)
}
,
$.util.getIpFromDataModelUrl = function(url) {
    var reg = /\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/;
    return reg.exec(url)
}
,
$.util.compareLayer1Interface = function(leValue, leArray) {
    return -1 !== $.inArray(leValue, leArray)
}
,
String.prototype.contains = function(str) {
    return -1 !== this.indexOf(str)
}
,
$.util.calculateWifiStrength = function(signalPower) {
    if (signalPower = parseInt(signalPower || $.constants.minWifiPower, 10),
    signalPower < $.constants.minWifiPower || !signalPower)
        return 0;
    if (signalPower > $.constants.maxWifiPower)
        return 4;
    var rs = 100 * (signalPower - $.constants.minWifiPower) / ($.constants.maxWifiPower - $.constants.minWifiPower);
    return Math.ceil(rs / 25)
}
,
$.util.calculateScore = function(val, minLength, maxLength, scoreFault) {
    var score = 0
      , hasNumber = /\d/.test(val)
      , hasSymbol = /\W/.test(val)
      , moreThan6Numbers = /\d{6}/.test(val)
      , isMixed = /([a-zA-Z]+[0-9]+[a-zA-Z]+[0-9])|([0-9]+[a-zA-Z]+[0-9]+[a-zA-Z]+)/.test(val)
      , hasLowerLetter = /[a-z]/.test(val)
      , hasUpperLetter = /[A-Z]/.test(val)
      , isLowerFlat = /^[\sa-z]+$/.test(val)
      , isUpperFlat = /^[\sA-Z]+$/.test(val)
      , isNumberFlat = /^[\s0-9]+$/.test(val)
      , hasDuplicate = /(.).*?\1/.test(val);
    return hasLowerLetter && score++,
    hasNumber && score++,
    hasUpperLetter && score++,
    hasSymbol && score++,
    moreThan6Numbers && score++,
    isMixed && score++,
    isLowerFlat && score--,
    isUpperFlat && score--,
    isNumberFlat && score--,
    hasDuplicate && 3 > score && score--,
    (val.length < minLength || val.length > maxLength) && (score -= scoreFault),
    score--,
    0 > score && (score = 0),
    score
}
,
$.util.calculateWifiPasswordScore = function(val) {
    var minLength = $.config.modules.passwordStrength && $.config.modules.passwordStrength.minLength ? $.config.modules.passwordStrength.minLength : 6
      , maxLength = $.config.modules.passwordStrength && $.config.modules.passwordStrength.maxLength ? $.config.modules.passwordStrength.maxLength : 32
      , scoreFault = $.config.modules.passwordStrength && $.config.modules.passwordStrength.lengthScoreFault ? $.config.modules.passwordStrength.lengthScoreFault : 4
      , score = $.config.modules.passwordStrength && $.config.modules.passwordStrength.passwordWifiScore ? $.config.modules.passwordStrength.passwordWifiScore(val) : $.util.calculateScore(val, minLength, maxLength, scoreFault);
    return score
}
,
$.util.calculateAdminPasswordScore = function(val) {
    var minLength = $.config.modules.passwordStrength && $.config.modules.passwordStrength.minLength ? $.config.modules.passwordStrength.minLength : 8
      , maxLength = $.config.modules.passwordStrength && $.config.modules.passwordStrength.maxLength ? $.config.modules.passwordStrength.maxLength : 32
      , scoreFault = $.config.modules.passwordStrength && $.config.modules.passwordStrength.lengthScoreFault ? $.config.modules.passwordStrength.lengthScoreFault : 4
      , score = $.config.modules.passwordStrength && $.config.modules.passwordStrength.passwordScore ? $.config.modules.passwordStrength.passwordScore(val) : $.util.calculateScore(val, minLength, maxLength, scoreFault);
    return score
}
,
$.util.getAllowedLanguages = function(user) {
    var allowedLanguages;
    if ($.config.allowedLanguages) {
        var currentUser = $.xmo.client && !user ? $.xmo.client.user : user;
        allowedLanguages = $.config.allowedLanguages[currentUser] || $.config.allowedLanguages["default"]
    } else
        allowedLanguages = $.constants.availableLanguages;
    return allowedLanguages
}
,
$.util.checkLoggedUser = function(userName) {
    var currentUser = $.xmo.client ? $.xmo.client.user : "";
    return currentUser === userName
}
,
$.util.isFlashEnabled = function() {
    var hasFlash = !1;
    try {
        var flashObject = new ActiveXObject("ShockwaveFlash.ShockwaveFlash");
        flashObject && (hasFlash = !0)
    } catch (e) {
        navigator.mimeTypes && void 0 !== navigator.mimeTypes["application/x-shockwave-flash"] && navigator.mimeTypes["application/x-shockwave-flash"].enabledPlugin && (hasFlash = !0)
    }
    return hasFlash
}
,
$.util.getDaysFromLeaseSeconds = function(leaseInSeconds) {
    return Math.floor(leaseInSeconds / 86400)
}
,
$.util.getHoursFromLeaseSeconds = function(leaseInSeconds) {
    return Math.floor(leaseInSeconds % 86400 / 3600)
}
,
$.util.getMinutesFromLeaseSeconds = function(leaseInSeconds) {
    return Math.floor(leaseInSeconds % 86400 % 3600 / 60)
}
,
$.util.getByLongestLifetime = function(data) {
    try {
        for (var a = $.util.fixGetValuesTree(data), result = a[0].IPv6Address, i = 0; i < a.length; i++) {
            var ipTmp = a[i].IPv6Address
              , time1 = moment(result.PreferredLifetime).format("X")
              , time2 = moment(ipTmp.PreferredLifetime).format("X");
            isNaN(time1) || isNaN(time2) ? isNaN(time1) && (result = ipTmp) : parseInt(time2) >= parseInt(time1) && (result = ipTmp)
        }
        return result
    } catch (e) {
        return null
    }
}
,
$.util.getPrefixUIDFromXpath = function(prefixXpath) {
    try {
        for (var reg = /uid=\d+/g, uidTmp = reg.exec(prefixXpath), uid = uidTmp; null !== uidTmp; )
            uidTmp = reg.exec(prefixXpath),
            null !== uidTmp && (uid = uidTmp);
        var tmp = parseInt(uid[0].replace("uid=", ""), 10);
        return isNaN(tmp) ? null : tmp
    } catch (e) {
        return null
    }
}
,
$.util.getIPv6Prefix = function(prefixesArray, uid) {
    var result = null
      , i = 0
      , found = !1;
    try {
        for (; i < prefixesArray.length && found === !1; ) {
            var tmp = prefixesArray[i];
            tmp.uid === parseInt(uid, 10) && (result = tmp,
            found = !0),
            i++
        }
    } catch (e) {
        result = null
    }
    return result
}
,
$.util.startsWith = function(string, prefix) {
    return string.slice(0, prefix.length) === prefix
}
,
$.util.validatePortsRange = function(start, end) {
    var startNumber = parseInt(start, 10)
      , endNumber = parseInt(end, 10);
    return endNumber >= startNumber
}
,
$.util.validateForbiddenPort = function(start, end, TR69Port) {
    for (var TR69Number = parseInt(TR69Port, 10), startNumber = parseInt(start, 10), endNumber = parseInt(end, 10), TR69Conflict = TR69Number ? startNumber > TR69Number || TR69Number > endNumber : !0, forbiddenStatic = TR69Conflict && !0, i = 0; i < $.constants.staticForbiddenPorts.length && forbiddenStatic; )
        forbiddenStatic = $.constants.staticForbiddenPorts[i] < startNumber || $.constants.staticForbiddenPorts[i] > endNumber,
        i++;
    return TR69Conflict && forbiddenStatic
}
,
$.util.getChannelFrequency = function(channel, radio) {
    channel = 1 * channel;
    var presets = {
        "2.4GHz": {
            14: 2484
        },
        "5GHz": {
            183: 4915,
            184: 4920,
            185: 4925,
            187: 4935,
            188: 4940,
            189: 4945,
            192: 4960,
            196: 4980
        }
    }
      , rs = presets[radio][channel];
    if (!rs)
        switch (radio) {
        case "2.4GHz":
            return 5 * (channel - 1) + 2412;
        case "5GHz":
            return 5 * (channel - 7) + 5035
        }
    return rs
}
,
$.util.getChannelBandwidth = function(radio) {
    switch (radio) {
    case "2.4GHz":
        return $.constants.wifi24.channelBandwidth;
    case "5GHz":
        return $.constants.wifi5.channelBandwidth
    }
}
,
$.util.checkIpInUse = function(obj, hosts) {
    if (void 0 !== hosts && null !== hosts) {
        for (var ipInUse = !1, i = 0; i < hosts.length; i++)
            obj.Yiaddr === hosts[i].ipAddress && obj.Chaddr.toLowerCase() !== hosts[i].PhysAddress.toLowerCase() && (ipInUse = !0);
        return ipInUse
    }
}
,
$.util.getIPv6DefaultGateway = function(data) {
    try {
        for (var result = null, b = $.util.fixGetValuesTree(data.Router.IPv6Forwardings), j = 0; j < b.length; j++)
            b[j].DestIPPrefix === $.constants.IPv6DefaultGatewayDestPrefix && (result = b[j].NextHop);
        return result
    } catch (e) {
        return null
    }
}
,
$.util.getIPv6WanAddress = function(data) {
    var ip = $.util.getByLongestLifetime(data);
    return null !== ip && $.util.isValidIPv6Addr(ip.IPAddress) ? ip.IPAddress : null
}
,
$.util.getIPv6DNS = function(data) {
    for (var result = [], a = $.util.fixGetValuesTree(data), i = 0; i < a.length; i++)
        $.util.isValidIPv6Addr(a[i]) && result.push(a[i]);
    return result
}
,
$.util.formatChannelBandWidth = function(chBandWidth) {
    return "AUTO" !== chBandWidth ? {
        order: parseInt(chBandWidth),
        label: chBandWidth + " MHz",
        value: chBandWidth + "MHZ"
    } : {
        order: 0,
        label: "Auto",
        value: "AUTO"
    }
}
,
$.util.pad = function(str, max) {
    return str = str.toString(),
    str.length < max ? $.util.pad("0" + str, max) : str
}
,
$.util.getWeekDaysArray = function(bitmap) {
    var r = []
      , bstr = bitmap.toString();
    bstr = $.util.pad(bstr, 7);
    for (var x in bstr)
        "1" === bstr[x] && r.push(parseInt(x));
    return r
}
,
$.util.convertTimeslotsToBoolean = function(data, always) {
    var x, y, z, startTime, endTime, result = [];
    for (x = 0; x < $.constants.days.length; x++) {
        for (result[x] = {},
        y = 0; 24 > y; y++)
            always ? result[x]["Hours" + y] = !0 : result[x]["Hours" + y] = !1;
        result[x].DayIndex = $.constants.days[x]
    }
    if (!always && data)
        for (x = 0; x < data.length; x++) {
            startTime = parseInt(data[x].StartTime) / 3600,
            endTime = parseInt(data[x].EndTime) / 3600;
            var weekDaysArray = $.util.getWeekDaysArray(data[x].WeekDays);
            for (z in weekDaysArray)
                for (y = startTime; endTime > y; y++)
                    result[weekDaysArray[z]]["Hours" + y] = !0
        }
    return result
}
,
$.util.convertTimeslotsToNewFormat = function(timeslots, possibleTimeslots) {
    var x, y, z, w, weekDaysArray, result = {};
    for (y in possibleTimeslots)
        for (z in possibleTimeslots[y])
            for (w in $.constants.daysCammel)
                $.isNumeric(y) && $.isNumeric(z) && (result[$.constants.daysCammel[w]] || (result[$.constants.daysCammel[w]] = {}),
                result[$.constants.daysCammel[w]][possibleTimeslots[y][z].start] = "green");
    if (timeslots)
        for (x in timeslots.TimeSlots)
            for (y in possibleTimeslots)
                for (z in possibleTimeslots[y])
                    if ($.isNumeric(y) && $.isNumeric(z))
                        if (possibleTimeslots[y][z].start >= timeslots.TimeSlots[x].StartTime && possibleTimeslots[y][z].end <= timeslots.TimeSlots[x].EndTime) {
                            weekDaysArray = $.util.getWeekDaysArray(timeslots.TimeSlots[x].WeekDays);
                            for (w in weekDaysArray)
                                result[$.constants.daysCammel[weekDaysArray[w]]] || (result[$.constants.daysCammel[weekDaysArray[w]]] = {}),
                                result[$.constants.daysCammel[weekDaysArray[w]]][possibleTimeslots[y][z].start] = "red"
                        } else if (timeslots.TimeSlots[x].Always) {
                            weekDaysArray = $.util.getWeekDaysArray(timeslots.TimeSlots[x].WeekDays);
                            for (w in weekDaysArray)
                                result[$.constants.daysCammel[weekDaysArray[w]]] || (result[$.constants.daysCammel[weekDaysArray[w]]] = {}),
                                result[$.constants.daysCammel[weekDaysArray[w]]][possibleTimeslots[y][z].start] = "red"
                        }
    return result
}
,
$.util.convertHourTimeslot = function(hour) {
    var intHout = parseInt(hour.replace("Hours", ""));
    return 3600 * intHout
}
,
$.util.convertBooleanToTimeslots = function(timeSlotsGrid) {
    var x, y, index, timeslots = [], startTime = !1;
    for (x = 0; x < $.constants.days.length; x++) {
        index = $.constants.days[x];
        for (y in timeSlotsGrid[index])
            "DayIndex" !== y && (timeSlotsGrid[index][y] && startTime === !1 && (startTime = y),
            "Hours23" === startTime && "Hours23" === y ? (timeslots.push({
                WeekDays: x + 1,
                StartTime: $.util.convertHourTimeslot(startTime),
                EndTime: $.util.convertHourTimeslot("Hours24")
            }),
            startTime = !1) : timeSlotsGrid[index][y] && "Hours23" !== y || startTime === !1 || ("Hours23" === y && (y = "Hours24"),
            timeslots.push({
                WeekDays: x + 1,
                StartTime: $.util.convertHourTimeslot(startTime),
                EndTime: $.util.convertHourTimeslot(y)
            }),
            startTime = !1))
    }
    return timeslots
}
,
$.util.convertNewTimeslots = function(timeSlotsGrid) {
    var x, y, index, timeslots = [], startTime = !1;
    for (x = 0; x < $.constants.daysCammel.length; x++) {
        index = $.constants.daysCammel[x],
        startTime = !1;
        for (y in timeSlotsGrid[index])
            startTime || "red" !== timeSlotsGrid[index][y] ? startTime && "green" === timeSlotsGrid[index][y] && (timeslots.push({
                WeekDays: x + 1,
                StartTime: startTime,
                EndTime: y
            }),
            startTime = !1) : startTime = y;
        startTime !== !1 && timeslots.push({
            WeekDays: x + 1,
            StartTime: startTime,
            EndTime: 86400
        })
    }
    return timeslots
}
,
$.util.filterByDifferentAlias = function(list, alias) {
    if (!list)
        return [];
    var result = [];
    return result = $.grep(list, function(value) {
        return value.Alias !== alias
    })
}
,
$.util.filterIpV6Address = function(list) {
    if (!list)
        return [];
    var result = [];
    return result = $.grep(list, function(value, index) {
        return "ENABLED" === value.Status && "PREFERRED" === value.IPAddressStatus && "AUTOCONFIGURED" === value.Origin && -1 === value.IPAddress.indexOf("fe80")
    })
}
,
$.util.filterIpV6Prefix = function(list, alias) {
    if (!list)
        return [];
    var uid;
    -1 !== alias.indexOf("@uid") && (uid = alias.substring(alias.indexOf("=") + 1, alias.length));
    var result = [];
    return result = $.grep(list, function(value, index) {
        return (value.Alias === alias || value.uid.toString() === uid) && "ENABLED" === value.Status && "PREFERRED" === value.PrefixStatus && "CHILD" === value.Origin
    })
}
,
$.util.mergeRecursive = function(obj1, obj2) {
    for (var p in obj2)
        try {
            obj2[p].constructor === Object ? obj1[p] = $.util.mergeRecursive(obj1[p], obj2[p]) : obj1[p] = obj2[p]
        } catch (e) {
            obj1[p] = obj2[p]
        }
    return obj1
}
,
$.util.checkMailServer = function(str) {
    if (!str)
        return !1;
    var pattern = /^[a-zA-Z][a-zA-Z0-9_]*(\.[a-zA-Z][a-zA-Z0-9_]*)?[a-z][a-zA-Z-0-9]*\.[a-z]+(\.[a-z]+)?$/;
    return pattern.test(str)
}
,
$.util.validateMailboxEmail = function(email) {
    if (!email)
        return !1;
    var pattern = /^[a-zA-Z][a-zA-Z0-9]*([\.\-_]?[a-zA-Z0-9]*)*@[a-z][a-zA-Z-0-9]*\.[a-z]+(\.[a-z]+)?$/;
    return pattern.test(email)
}
,
$.util.calculateRanges = function(psid, offsetBitsA, psidLen) {
    var a = offsetBitsA
      , k = psidLen
      , m = 16 - offsetBitsA - psidLen
      , returnStr = []
      , A = Math.pow(2, a)
      , C = Math.pow(2, m);
    1 === A && returnStr.push("0 - " + (C - 1).toString());
    for (var i = 1; A - 1 >= i; i++) {
        var base = i * Math.pow(2, k + m) + psid * Math.pow(2, m);
        returnStr.push(base.toString() + " - " + (base + C - 1).toString())
    }
    return returnStr
}
,
$.util.isSuperUser = function(user) {
    return "superadmin" === user || "internal" === user ? !0 : !1
}
,
$.util.isValidMAPTPortRange = function(rule, portSets) {
    var portMin, portMax;
    if (portSets)
        for (var i = 0; i < portSets.length; i++)
            if (portMin = portSets[i].split("-")[0].trim(),
            portMax = portSets[i].split("-")[1].trim(),
            portMin = parseInt(portMin, 10),
            portMax = parseInt(portMax, 10),
            parseInt(rule.ExternalPort, 10) >= portMin && parseInt(rule.ExternalPort, 10) <= portMax) {
                if (0 === rule.ExternalPortEndRange)
                    return !0;
                if (parseInt(rule.ExternalPortEndRange, 10) >= parseInt(rule.ExternalPort, 10) && parseInt(rule.ExternalPortEndRange, 10) <= portMax)
                    return !0
            }
    return !1
}
,
$.util.formatConnectionSpeed = function(connectionSpeed) {
    switch (connectionSpeed) {
    case 10:
        return "10Mbps";
    case 100:
        return "100Mbps";
    case 1e3:
        return "1Gbps";
    default:
        return $.config.modules.myBox.statistics.ethernetBitrate
    }
}
,
$.util.hasFileToUpload = function(elementId) {
    if (!elementId)
        return !1;
    var element = $(elementId);
    return element ? element[0].files && element[0].files.length : !1
}
,
$.util.hasFeature = function(featureName, checkUser) {
    var validateUser = !0;
    if (checkUser) {
        var user = $.xmo.client ? $.xmo.client.user : "";
        (!user || !featureName || $.config.featureAccess && $.config.featureAccess[user] && $.config.featureAccess[user][featureName] === !1) && (validateUser = !1)
    }
    return validateUser && !!$.config && !!$.config.showedpages && !!featureName && !!$.config.showedpages[featureName] && $.config.showedpages[featureName].enable === !0
}
,
$.util.checkConfig = function(config, expectedValue) {
    return !!config && config.enable === expectedValue
}
,
$.util.voiceDefaultFilename = function(language, type, filename) {
    if (!language || !type)
        return !1;
    var defaultFilename = $.constants.voicemailDefaultFiles[type] || "";
    return defaultFilename.replace("#lang#", language) === filename
}
,
$.util.getFilenameFromInput = function(inputId) {
    if (!inputId)
        return [];
    var inputFile = $("#" + inputId);
    return $.util.hasFileToUpload("#" + inputId) ? inputFile[0].files : []
}
,
$.util.settingUpTrigger = function(triggerObj, callback) {
    if (triggerObj && triggerObj.scope && triggerObj.name && callback) {
        var trigger = triggerObj.scope.$on(triggerObj.name, callback);
        triggerObj.scope.$on("$destroy", function() {
            trigger()
        })
    }
}
,
$.util._replaceXpathRecursive = function(from, to) {
    for (var key in from)
        "string" === $.type(from[key]) && "string" === $.type(to[key]) ? to[key] = from[key] : "object" === $.type(from[key]) && "object" === $.type(to[key]) && $.util._replaceXpathRecursive(from[key], to[key])
}
,
$.util.XORCipher = {
    encode: function(key, data) {
        return data = $.util.encodeDecodeXOR(key, data),
        $.util.hexaEncode(data)
    },
    decode: function(key, data) {
        return data = $.util.hexaDecode(data),
        $.util.encodeDecodeXOR(key, data)
    }
},
$.util.hexaEncode = function(data) {
    if (!data)
        return "";
    for (var arr = [], i = 0, l = data.length; l > i; i++) {
        var hex = Number(data.charCodeAt(i)).toString(16);
        arr.push(hex.length > 1 && hex || "0" + hex)
    }
    return arr.join("")
}
,
$.util.hexaDecode = function(data) {
    if (!data)
        return "";
    for (var hex = data.toString(), str = "", i = 0; i < hex.length; i += 2)
        str += String.fromCharCode(parseInt(hex.substr(i, 2), 16));
    return str
}
,
$.util.encodeDecodeXOR = function(key, data) {
    if (!data)
        return "";
    for (var resultArray = [], i = 0; i < data.length; i++) {
        var charCode = data.charCodeAt(i) ^ key[i % key.length].charCodeAt(0);
        resultArray.push(String.fromCharCode(charCode))
    }
    return resultArray.join("")
}
,
$.util.getDataFromState = function(varName, state, defaultValue) {
    return state && varName && state.current && state.current.data && null !== state.current.data[varName] && void 0 !== state.current.data[varName] ? state.current.data[varName] : defaultValue
}
,
$.util.getModuleConfig = function(path, defaultValue) {
    if (!path || !$.config || !$.config.modules)
        return defaultValue;
    var tmpConfig, pathArr = path.split(".");
    return $.each(pathArr, function(i, tmpPath) {
        var isModule = !1;
        return tmpConfig || (tmpConfig = $.config.modules[tmpPath],
        isModule = !!tmpConfig),
        tmpConfig ? isModule ? !0 : void (tmpConfig = tmpConfig[tmpPath]) : (tmpConfig = defaultValue,
        !1)
    }),
    null !== tmpConfig && void 0 !== tmpConfig ? tmpConfig : defaultValue
}
,
$.util.getGlobalWanIpv6 = function(ipv6Interfaces) {
    return ipv6Interfaces = ipv6Interfaces || [],
    $.grep(ipv6Interfaces, function(ipv6Interface) {
        if (!ipv6Interface)
            return !1;
        var isPreferred = "PREFERRED" === ipv6Interface.IPAddressStatus
          , alloweInterface = !/^(link_local|ula_lan|scope_global_lan)$/i.test(ipv6Interface.Alias)
          , isAliasDhcpv6 = !0;
        $.util.getModuleConfig("myBox.deviceInfo.globalIpv6CheckAlias", !1) && (isAliasDhcpv6 = /^dhcpv6/i.test(ipv6Interface.Alias));
        var isOriginDHCPv6 = /^dhcpv6$/i.test(ipv6Interface.Origin) || $.util.getModuleConfig("myBox.deviceInfo.globalIpv6IgnoreOrigin", !1);
        return alloweInterface && isPreferred && isOriginDHCPv6 && isAliasDhcpv6
    })
}
,
$.util.roundPrecision = function(value, precision) {
    value = value || 0,
    precision = precision || 0;
    var roundBase = Math.pow(10, precision);
    return Math.round(value * roundBase) / roundBase
}
,
$.extend({
    countDown: 60,
    cancelLogout: !1,
    SessionTimeOut: {}
}),
$.SessionTimeOut.init = function() {
    $.SessionTimeOut.timeoutInit && clearTimeout($.SessionTimeOut.timeoutInit),
    $.SessionTimeOut.timeoutInit = setTimeout(function() {
        var limitDate = $.xmo.sessionStartDate + 6e4 * $.xmo.sessionTimeOut;
        if ((new Date).getTime() < limitDate)
            $.SessionTimeOut.init();
        else {
            var elem = $("#inativity-data-modal");
            if (elem && elem.foundation) {
                elem.foundation("reveal", "open"),
                $.targetDate = limitDate + 6e4,
                $.countDown = $.targetDate - (new Date).getTime();
                var tmp = parseInt($.countDown / 1e3);
                $("#expireTime").text(isNaN(tmp) ? 0 : tmp),
                $.cancelLogout = !1,
                $.SessionTimeOut.countDownTimeOut()
            }
        }
    }, 5010)
}
,
$.SessionTimeOut.countDownTimeOut = function() {
    setTimeout(function() {
        var currentDate = (new Date).getTime();
        if ($.countDown = $.targetDate - currentDate,
        $.countDown >= 1 || $.cancelLogout)
            if ($.cancelLogout)
                $.state.go($.state.current, {}, {
                    reload: !0
                });
            else {
                var tmp = parseInt($.countDown / 1e3);
                $("#expireTime").text(isNaN(tmp) ? 0 : tmp),
                $.SessionTimeOut.countDownTimeOut()
            }
        else
            $.xmo.logout()
    }, 500)
}
,
$.SessionTimeOut.fire = function() {
    $(".continueBrowsing").click(function() {
        $.cancelLogout = !0
    }),
    $.SessionTimeOut.init()
}
,
"undefined" != typeof module && module.exports)
    var $ = {};
$.globals = {
    saved: {
        EN: "Data successfully saved.",
        FR: "Données sauvegardées avec succès.",
        SPN: "Datos guardado correctamente.",
        DE: "Daten erfolgreich gespeichert.",
        IT: "Operazione conclusa con successo.",
        DA: "Dataene er gemt.",
        AR: "تم حفظ البيانات بنجاح",
        PT: "Dados guardados correctamente",
        RO: "TODO",
        IND: "TODO"
    },
    removed: {
        EN: "Data successfully deleted.",
        FR: "Données effacées avec succès.",
        SPN: "Los datos se han eliminado correctamente.",
        DE: "Daten erfolgreich gelöscht.",
        IT: "Cancellazione dati riuscita.",
        DA: "Dataene er slettet.",
        AR: "تم بنجاح حذف البيانات",
        PT: "Dados eliminados correctamente",
        RO: "TODO",
        IND: "TODO"
    },
    errorMessage: {
        EN: "Operation could not complete, something wrong happened.",
        FR: "Une erreur est survenue, échec de l'opération.",
        SPN: "Operaciòn no se pudo completar, algo malo pasò.",
        DE: "Aufgabe konnte nicht ausgeführt werden, da eine Störung auftrat.",
        IT: "Non è possibile eseguire l'operazione richiesta.",
        DA: "Handlingen kunne ikke gennemføres, da noget gik galt.",
        AR: "العملية لم تكتمل , حدث خطأ ما",
        PT: "Operaçao nao se pode completar, houve algum erro",
        RO: "TODO",
        IND: "TODO"
    },
    connection: {
        EN: "Connection",
        FR: "Connexion",
        SPN: "Conexión",
        DE: "Verbindung",
        IT: "Connessione",
        DA: "Forbindelse",
        AR: "اتصال",
        PT: "Ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    login: {
        EN: "Login",
        FR: "Login",
        SPN: "Login",
        DE: "Login",
        IT: "Login",
        DA: "Login",
        AR: "تسجيل دخول",
        PT: "Login",
        RO: "TODO",
        IND: "TODO"
    },
    clickForDetails: {
        EN: "Click to display gateway details",
        FR: "Cliquez pour afficher les détails sur le modem",
        SPN: "Click para mostrar los detalles del gateway",
        DE: "Klicken Sie hier, um Details zum Gateway anzuzeigen",
        IT: "Premere per visualizzare i dettagli",
        DA: "Klik for at vise detaljer om gateway",
        AR: "TODO",
        PT: "Pressiona para obter detalhes de ligaçao",
        RO: "Click aici pentru detaliile routerului",
        IND: "TODO"
    },
    downloadApps: {
        EN: "Download our app for smartphones and tablets",
        FR: "Télécharger notre application pour smartphones et tablettes",
        SPN: "Descarga nuestra aplicación para smartphones y tablets",
        DE: "Laden Sie unsere App für Smartphones und Tablets herunter",
        IT: "Scarica la nostra applicazione per smartphone e tablet",
        DA: "Download vores app til smartphones og tablets.",
        AR: "تحميل تطبيقنا للهواتف الذكية  والأجهزة اللوحية",
        PT: "Download da nossa app para smartphones e tablets",
        RO: "TODO",
        IND: "TODO"
    },
    loginSlide1part1: {
        EN: "Share multimedia content:",
        FR: "Partager le contenu multimédia:",
        SPN: "Compartir contenido multimedia:",
        DE: "Multimedia-Inhalte teilen:",
        IT: "Condividi il contenuto multimediale:",
        DA: "Del multimedieindhold:",
        AR: "شارك محتوى الوسائط المتعددة",
        PT: "Partilhar conteudo multimedia",
        RO: "TODO",
        IND: "TODO"
    },
    androidHelpInstall: {
        EN: "To install the app, please follow instructions below.",
        FR: "Pour installer l'application, suivez les instructions ci-dessous.",
        SPN: "Para instalar la aplicación que tiene que seguir las siguientes instrucciones.",
        DE: "Zum Installieren der App müssen Sie die folgenden Anweisungen ausführen.",
        IT: "Per installare l applicazione, devi seguire le istruzioni qui sotto",
        DA: "Installer app'en ved at følge instruktionerne herunder.",
        AR: "لتثبيت التطبيق تحتاج إلى إتباع التعليمات أدناه.",
        PT: "Para instalar a app, por favor seguir as seguintes instruçoes",
        RO: "TODO",
        IND: "TODO"
    },
    download: {
        EN: "Download",
        FR: "Download",
        SPN: "Download",
        DE: "Download",
        IT: "Scarica",
        DA: "Download",
        AR: "تحميل ",
        PT: "Download",
        RO: "TODO",
        IND: "TODO"
    },
    upload: {
        EN: "Upload",
        FR: "Upload",
        SPN: "Subida",
        DE: "Upload",
        IT: "Upload",
        DA: "Upload",
        AR: "TODO ",
        PT: "Upload",
        RO: "Incarcati",
        IND: "TODO"
    },
    returnToLogin: {
        EN: "Return to Login",
        FR: "Retour à la page de Login",
        SPN: "Volver a inicio",
        DE: "Zurück zur Anmeldung",
        IT: "Torna al login",
        DA: "Gå tilbage til login",
        AR: "العودة إلى تسجيل الدخول",
        PT: "Voltar ao login",
        RO: "TODO",
        IND: "TODO"
    },
    loginSlide1part2: {
        EN: "DLNA Server, My Cloud",
        FR: "Serveur DLNA, My Cloud",
        SPN: "Servidor DLNA, My Cloud",
        DE: "DLNA-Server, My Cloud",
        IT: "Server DLNA, My Cloud",
        DA: "DLNA-server, My Cloud",
        AR: "خادم  DLNA ، My Cloud",
        PT: "Servidor DLNA, My cloud",
        RO: "TODO",
        IND: "TODO"
    },
    loginSlide2part1: {
        EN: "Connect everywhere with Wi-Fi 5GHz:",
        FR: "Connectez-vous partout avec le Wi-Fi 5GHz:",
        SPN: "Conecte todas partes con Wi-Fi 5GHz:",
        DE: "Überall in Verbindung mit WLAN-5GHz:",
        IT: "Connettiti ovunque con Wi-Fi 5GHz:",
        DA: "Få forbindelse overalt med 5 GHz Wi-Fi:",
        AR: "اتصل بالشبكة من اي مكان عن طريق واي فاي 5 جيجا",
        PT: "Ligue com Wi-Fi 5Ghz:",
        RO: "TODO",
        IND: "TODO"
    },
    loginSlide2part2: {
        EN: "Up to 1.7Gbps",
        FR: "Jusqu'à 1.7Gbps",
        SPN: "Hasta 1.7Gbps",
        DE: "Bis zu 1,7Gbps",
        IT: "Fino a 1.7Gbps",
        DA: "Op til 1,7 Gbps",
        AR: "لغاية 1.7 جيجا بت",
        PT: "Ate 1.7Gbps",
        RO: "TODO",
        IND: "TODO"
    },
    loginSlide3part1: {
        EN: "Easy-to-use features:",
        FR: "Facile à utiliser:",
        SPN: "Fácil de utilizar las funciones de:",
        DE: "Einfach zu bedienende Funktionen:",
        IT: "Funzionalità facili da utilizzare:",
        DA: "Let anvendelige funktioner:",
        AR: "ميزات سهلة اللاستخدام",
        PT: "Funçoes faceis de usar:",
        RO: "TODO",
        IND: "TODO"
    },
    loginSlide3part2: {
        EN: "Parental control, Traffic monitoring",
        FR: "Contrôle parental, Suivi de conso",
        SPN: "Control parental, monitoreo de tráfico",
        DE: "Kindersicherung, Traffic-Überwachung",
        IT: "Controllo parentale, controllo del traffico",
        DA: "Forældrekontrol, trafikovervågning",
        AR: "التحكم الأبوي، مراقبة حركة المرور",
        PT: "controlo parental, monitor de trafego",
        RO: "TODO",
        IND: "TODO"
    },
    loggedInAs: {
        EN: "Logged in as",
        FR: "Connecté comme",
        SPN: "Conectado como",
        DE: "Angemeldet als",
        IT: "Connesso come",
        DA: "Logget ind som",
        AR: "سجل دخول كـ",
        PT: "Ligado como",
        RO: "TODO",
        IND: "TODO"
    },
    user: {
        EN: "User",
        FR: "Utilisateur",
        SPN: "Usuario",
        DE: "Benutzer",
        IT: "Utente",
        DA: "Bruger",
        AR: "مستخدم",
        PT: "utilizador",
        RO: "TODO",
        IND: "TODO"
    },
    userColon: {
        EN: "User:",
        FR: "Utilisateur:",
        SPN: "Usuario:",
        DE: "Benutzer:",
        IT: "Utente:",
        DA: "Bruger:",
        AR: "مستخدم",
        PT: "utilizador:",
        RO: "TODO",
        IND: "TODO"
    },
    wrongLoginInformation: {
        EN: "Wrong login information",
        FR: "Informations de connexion erronées",
        SPN: "Información de acceso incorrectas",
        DE: "Login fehlgeschlagen",
        IT: "Parametri di accesso incorretti",
        DA: "Forkerte loginoplysninger",
        AR: "معلومات تسجيل الدخول خاطئة",
        PT: "informaçao de login errada",
        RO: "TODO",
        IND: "TODO"
    },
    welcome: {
        EN: "Welcome to Sagemcom",
        FR: "Bienvenue à Sagemcom",
        SPN: "Bienvenido a Sagemcom",
        DE: "Willkommen bei Sagemcom",
        IT: "Benvenuto",
        DA: "Velkommen til Sagemcom",
        AR: "مرحبا بك في ساجيمكوم",
        PT: "Bemvindo a Sagemcom",
        RO: "TODO",
        IND: "TODO"
    },
    clickToRefresh: {
        EN: "Click to refresh",
        FR: "Cliquer pour actualiser",
        SPN: "Click to refresh",
        DE: "Zur Aktualisierung klicken",
        IT: "Premere per aggiornare",
        DA: "Klik for at opdatere",
        AR: " اضغط لاعادة التحميل",
        PT: "pressiona para refrescar",
        RO: "TODO",
        IND: "TODO"
    },
    refresh: {
        EN: "Refresh",
        FR: "Actualiser.",
        SPN: "Refresh",
        DE: "Aktualisieren",
        IT: "Aggiorna",
        DA: "Opdatér",
        AR: "اعد التحميل",
        PT: "Refrescar",
        RO: "TODO",
        IND: "TODO"
    },
    mySagemcomBox: {
        EN: "My Sagemcom Box",
        FR: "Ma Sagemcom Box",
        SPN: "My Sagemcom Box",
        DE: "Meine Sagemcom Box",
        IT: "Il mio Sagemcom Box",
        DA: "Min Sagemcom Box",
        AR: "صندوق ساجيمكوم الخاص بي",
        PT: "My Sagemcom Box",
        RO: "TODO",
        IND: "TODO"
    },
    settings: {
        EN: "Settings",
        FR: "Réglages",
        SPN: "Settings",
        DE: "Einstellungen",
        IT: "Configurazione",
        DA: "Indstillinger",
        AR: "الإعدادات",
        PT: "Ferramentas",
        RO: "TODO",
        IND: "TODO"
    },
    confDhcpAndOthers: {
        EN: "Configure DHCP, NTP, DynDNS",
        FR: "Configuration DHCP, NTP, DynDNS",
        SPN: "Configure DHCP, NTP, DynDNS",
        DE: "DHCP, NTP, DynDNS konfigurieren",
        IT: "Configurazione DHCP, NTP, DynDNS",
        DA: "Konfigurer DHCP, DNS, NTP, DynDNS",
        AR: "تكوين DHCP, NTP, DynDNS ",
        PT: "Configure DHCP, NTP, DynDNS",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpAddMacAddress: {
        EN: "Add MAC Address",
        FR: "Ajouter une adresse MAC",
        SPN: "Agregar Dirección MAC",
        DE: "MAC Adresse hinzufügen",
        IT: "Aggiungi un indirizzo MAC",
        DA: "Tilføj MAC-adresse",
        AR: "اضف عنوان MAC",
        PT: "Adicione o endereço MAC",
        RO: "TODO",
        IND: "TODO"
    },
    accessControl: {
        EN: "Access Control",
        FR: "Contrôle d'Accès",
        SPN: "Control de Acceso",
        DE: "Zugangskontrolle",
        IT: "Controllo d'accesso",
        DA: "Adgangskontrol",
        AR: "التحكم في الوصول ",
        PT: "Control de acesso",
        RO: "TODO",
        IND: "TODO"
    },
    parentalControl: {
        EN: "Parental Control",
        FR: "Contrôle Parental",
        SPN: "Control Parental",
        DE: "Kindersicherung",
        IT: "Controllo parentale",
        DA: "Forældrekontrol",
        AR: "نظام التحكم الابوي",
        PT: "Control parental",
        RO: "TODO",
        IND: "TODO"
    },
    "1to1natMapping": {
        EN: "NAT Mapping",
        FR: "TODO",
        SPN: "Mapeo de NAT",
        DE: "NAT-Zuordnung",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Mapare NAT",
        IND: "TODO"
    },
    natEnable: {
        EN: "NAT Enable",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    exernelAdressNAT: {
        EN: "External address",
        FR: "TODO",
        SPN: "Direcciones externas",
        DE: "Externe IP-Adresse",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Adresa Externa NAT",
        IND: "TODO"
    },
    natMapTip1: {
        EN: "Here you insert a description for the NAT Mapping rule.",
        FR: "TODO",
        SPN: "Aqu¡ puede insertar una descripción de las reglas del mapeo NAT",
        DE: "Geben Sie hier eine Beschreibung für die NAT-Zuordnung ein.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici introduceti o descriere a regulii de Mapare NAT.",
        IND: "TODO"
    },
    natMapTip2: {
        EN: "Here you choose an external IP address for the NAT Mapping.",
        FR: "TODO",
        SPN: "Aqu¡ puede escoger una dirección IP externa para el mapeo NAT",
        DE: "Geben Sie hier die externe IP-Adresse für die NAT-Zuordnung ein.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici alegeti o adresa IP externa pentru Maparea NAT",
        IND: "TODO"
    },
    natMapTip3: {
        EN: "Here you chose an internal host or subnet for the NAT Mapping rule.",
        FR: "TODO",
        SPN: "Aqu¡ puede escoger un host interno o subred para el mapeo NAT",
        DE: "Geben Sie hier den internen Host oder die Subnetzmaske für die NAT-Zuordnung ein.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici alegeti o gazda interna sau subretea pentru regula de cartografiere NAT.",
        IND: "TODO"
    },
    natMapTip4: {
        EN: "Here you check the existing 1-to-1 NAT Mapping rules.",
        FR: "TODO",
        SPN: "Aqu¡ puede chequear la existencia de reglas de NAT 1 a 1",
        DE: "Hier können Sie die bereits eingerichteten 1 zu 1 NAT-Zuordnungen einsehen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici va verificati regulile Maparii NAT 1-to-1 existente",
        IND: "TODO"
    },
    portForwarding: {
        EN: "Port Forwarding",
        FR: "Redirection de ports",
        SPN: "Port Forwarding",
        DE: "Portfreigaben",
        IT: "Port mapping",
        DA: "Omdirigering af port",
        AR: "اعادة توجية المنفذ",
        PT: "Port Forwarding",
        RO: "TODO",
        IND: "TODO"
    },
    firewall: {
        EN: "Firewall",
        FR: "Pare-feu",
        SPN: "Firewall",
        DE: "Firewall",
        IT: "Firewall",
        DA: "Firewall",
        AR: "جدار الحماية",
        PT: "Firewall",
        RO: "TODO",
        IND: "TODO"
    },
    ipv6Firewall: {
        EN: "IPv6 Firewall",
        FR: "TODO",
        SPN: "Firewall IPv6",
        DE: "IPv6 Firewall",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "IPv6 Firewall",
        IND: "TODO"
    },
    ipv6Pinholling: {
        EN: "IPv6 Pin-holing",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv6 pinhole",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    firewallIntro: {
        EN: "This page allows configuration of Firewall features. It is highly recommended that the firewall is left enabled at all times for protection against Denial of Service attacks.",
        FR: "TODO",
        SPN: "Esta pagina le permite configurar el firewall. Es altamente recomendado dejar el firewall habilitado en todo momento para protegerse contra ataques de Denegación de servicio",
        DE: "Auf dieser Seite können Sie die Firewallfunktionen konfigurieren. Es wird dringend empfohlen, dass die Firewall zum Schutz vor Angriffen permanent aktiviert bleibt.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta pagina permite configurarea caracteristicilor Firewall. Este foarte recomandat ca firewall-ul sa fie lasat activat in orice moment pentru protectia impotriva atacurilor Denial of Service.",
        IND: "TODO"
    },
    ipFirewall: {
        EN: "IP Firewall",
        FR: "TODO",
        SPN: "TODO",
        DE: "IP Firewall",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    ipv4Firewall: {
        EN: "IPv4 Firewall",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv4 Firewall",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    firewallConfig: {
        EN: "Firewall Protection:",
        FR: "TODO",
        SPN: "Protección Firewall",
        DE: "Firewallschutz:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Protectie Firewall IPv6"
    },
    firewallConfigIpv4: {
        EN: "IPv4 Firewall Protection:",
        FR: "TODO",
        SPN: "Protección Firewall",
        DE: "Firewallschutz:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    firewallConfigIpv6: {
        EN: "IPv6 Firewall Protection:",
        FR: "TODO",
        SPN: "Protección Firewall",
        DE: "Firewallschutz:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    firewallFragPackets: {
        EN: "Block Fragmented IP Packets:",
        FR: "TODO",
        SPN: "Bloque fragmentado de paquetes IP",
        DE: "Weise fragmentierte IP-Pakete ab:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Pachete IP fragmentate IPv6",
        IND: "TODO"
    },
    firewallPortScanDetect: {
        EN: "Port Scan Detection:",
        FR: "TODO",
        SPN: "Detección de escaneo de puerto",
        DE: "Erkennung Port-Scan:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Detectare Scanare Port",
        IND: "TODO"
    },
    firewallIPFloodDetect: {
        EN: "IP Flood Detection:",
        FR: "TODO",
        SPN: "Detección de inundación IP",
        DE: "Erkennung Port-Flood:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Detectare Flux IP",
        IND: "TODO"
    },
    firewallConfigTip: {
        EN: "Here you can enable and disable the firewall protection.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie den Schutz durch die eingebaute Firewall aktivieren bzw. deaktivieren",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti activa si dezactiva protectia firewall"
    },
    firewallFragPacketsTip: {
        EN: "Here you can enable and disable the fragmented IP packets.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie fragmentierte IP-Pakete aktivieren bzw. deaktivieren",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti activa si dezactiva pachetele IP fragmentate"
    },
    firewallPortScanDetectTip: {
        EN: "Here you can enable and disable the port scan detection.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die Prüfung von Port-Scanning aktivieren bzw. deaktivieren",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti activa si dezactiva detectarea portului de scanare"
    },
    firewallIPFloodDetectTip: {
        EN: "Here you can enable and disable the IP flood detection.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die Prüfung von IP-Flooding aktivieren bzw. deaktivieren",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti activa si dezactiva detectarea fluxului IP"
    },
    firewallConfigIpv4Tip: {
        EN: "Here you can enable and disable the IPv4 firewall protection.",
        FR: "TODO",
        SPN: "Aqu¡ puede habilitar o deshabilitar la protección del firewall",
        DE: "Firewall-Schutz ein-/anschalten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    firewallConfigIpv6Tip: {
        EN: "Here you can enable and disable the IPv6 firewall protection.",
        FR: "TODO",
        SPN: "Aqu¡ puede habilitar o deshabilitar la protección del firewall",
        DE: "Firewall-Schutz ein-/anschalten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    firewallFragPacketsTipipv4: {
        EN: "Here you can enable and disable the fragmented IPv4 packets.",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv4-Fragmente filtern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    firewallPortScanDetectTipipv4: {
        EN: "Here you can enable and disable the port scan detection for the IPv4 traffic.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die Prüfung von Port-Scanning für IPv4-Verkehr aktivieren bzw. deaktivieren",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    firewallIPFloodDetectTipipv4: {
        EN: "Here you can enable and disable the IPv4 flood detection.",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv4-Flood erkennen und gegebenenfalls blockieren.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    firewallFragPacketsTipipv6: {
        EN: "Here you can enable and disable the fragmented IPv6 packets.",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv6-Fragmente filtern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    firewallPortScanDetectTipipv6: {
        EN: "Here you can enable and disable the port scan detection for the IPv6 traffic.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die Prüfung von Port-Scanning für IPv6-Verkehr aktivieren bzw. deaktivieren",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    firewallIPFloodDetectTipipv6: {
        EN: "Here you can enable and disable the IPv6 flood detection.",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv6-Flood erkennen und gegebenenfalls blockieren.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    dmz: {
        EN: "DMZ",
        FR: "DMZ",
        SPN: "DMZ",
        DE: "DMZ",
        IT: "DMZ",
        DA: "DMZ",
        AR: "DMZ",
        PT: "DMZ",
        RO: "TODO",
        IND: "TODO"
    },
    remoteAccess: {
        EN: "Remote Access",
        FR: "Accès à distance",
        SPN: "Acesso Remoto",
        DE: "Fernzugriff",
        IT: "Accesso Remoto",
        DA: "Fjernadgang",
        AR: "الوصول عن بعد",
        PT: "Acesso remoto",
        RO: "TODO",
        IND: "TODO"
    },
    configureParentalControl: {
        EN: "Configure Parental Control, Firewall, DMZ, Remote Access.",
        FR: "Configurer le Contrôle Parental, le Pare-feu, l'accès distant.",
        SPN: "Configurar el Control Parental, Firewall, DMZ, Acesso Remoto.",
        DE: "Konfiguration der Kindersicherung, Firewall, DMZ und Fernzugriff",
        IT: "Configurazione Controllo Parentale, Firewall, DMZ, Accesso Remoto",
        DA: "Konfigurer forældrekontrol, firewall, DMZ, fjernadgang.",
        AR: "تكوين نظام التحكم الابوي , جدار الحماية , DMZ , نظام الوصول عن بعد",
        PT: "Configure o controlo parental, firewall, DMZ, acesso remoto.",
        RO: "TODO",
        IND: "TODO"
    },
    internet: {
        EN: "Internet",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivity: {
        EN: "Internet Connectivity",
        FR: "Connexion à Internet",
        SPN: "Conectividad a Internet",
        DE: "Internetverbindung",
        IT: "Connessione a Internet",
        DA: "Internetforbindelse",
        AR: "الاتصال بالانترنت",
        PT: "Ligaçao á internet",
        RO: "TODO",
        IND: "TODO"
    },
    guest: {
        EN: "- Guest Access",
        FR: "- Accès Invité",
        SPN: "- Acceso de invitados",
        DE: "- Gastzugang",
        IT: "- Accesso invitati",
        DA: "- Gæstenetværk",
        AR: "TODO",
        PT: "Acesso convidado",
        RO: "TODO",
        IND: "TODO"
    },
    statusSemicolon: {
        EN: "Status:",
        FR: "Statut:",
        SPN: "Estado:",
        DE: "Status:",
        IT: "Stato:",
        DA: "Status:",
        AR: "الحالة",
        PT: "Estado:",
        RO: "TODO",
        IND: "TODO"
    },
    addressingType: {
        EN: "Addressing Type",
        FR: "Type d'adressage",
        SPN: "Tipo de direccionamiento",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    speedSemicolon: {
        EN: "Speed:",
        FR: "Vitesse:",
        SPN: "Velocidad:",
        DE: "Geschwindigkeit:",
        IT: "Velocità:",
        DA: "Hastighed:",
        AR: "المرورعه",
        PT: "Velicidade:",
        RO: "TODO",
        IND: "TODO"
    },
    connected: {
        EN: "Connected",
        FR: "Connecté",
        SPN: "Conectado",
        DE: "Verbunden",
        IT: "Connesso",
        DA: "Tilsluttet",
        AR: "متصل",
        PT: "Ligado",
        RO: "TODO",
        IND: "TODO"
    },
    disconnected: {
        EN: "Disconnected",
        FR: "Déconnecté",
        SPN: "Desconectado",
        DE: "Getrennt",
        IT: "Disconnesso",
        DA: "Afbrudt",
        AR: "TODO",
        PT: "Desligado",
        RO: "Deconectat",
        IND: "TODO"
    },
    notConnected: {
        EN: "Not Connected",
        FR: "Non Connecté",
        SPN: "No Conectado",
        DE: "Nicht verbunden",
        IT: "Non connesso",
        DA: "Ikke tilsluttet",
        AR: "غير متصل",
        PT: "Nao ligado",
        RO: "TODO",
        IND: "TODO"
    },
    enableUPnP: {
        EN: "Enable UPnP IGd",
        FR: "Activer UPnP IGd",
        SPN: "Habilitar UPnP IGd",
        DE: "UPnP IGD einschalten",
        IT: "Attiva UPnP IGd",
        DA: "Aktivér UPnP IGd",
        AR: "تمكين UPnP IGd",
        PT: "Habilitar UPnP IGd",
        RO: "TODO",
        IND: "TODO"
    },
    upnpExplained: {
        EN: "UPNP IGD allows games, peer-to-peer, remote assistance or others applications to automatically create port forwarding rules. <span>This option can create a risk for the security of your local network</span>, check list of rules in table below.",
        FR: "UPNP IGD permet aux jeux, applications de peer-to-peer, d'assistance à distance ou autres de créer des règles de redirection de port. <span>Cette option peut créer un risque pour la sécurité de votre réseau local</span>, vérifiez la liste des règles ci-dessous.",
        SPN: "UPNP IGD hace que los juegos, aplicaciones de peer-to-peer, asistencia remota u otras creen automáticamente reglas de reenvío de puerto. <span>Esta opción puede poner en riesgo la seguridad de su red local</span>. Échele un vistazo a la lista de normas en la siguiente tabla.",
        DE: "UPnP IGD ermöglicht, dass Spiele, P2P, Remoteunterstützung oder andere Anwendungen automatisch Portweiterleitungsregeln erstellen. <span>Diese Option kann ein Sicherheitsrisiko für Ihr lokales Netzwerk bedeuten</span> – überprüfen Sie die Liste der Regeln in der nachstehenden Tabelle.",
        IT: "UPNP IGD consente giochi, peer-to-peer, assistenza remota o altre applicazioni per creare automaticamente le regole di invio porta. <span> Questa opzione può comportare rischi per la sicurezza della tua rete locale </ span>, controllare la lista di regole nella tabella seguente.",
        DA: "UPNP IGD tillader spil, peer-to-peer, fjernassistance eller andre applikationer automatisk at oprette regler for omdirigering af port. <span>Denne valgmulighed kan skabe en risiko for sikkerheden af dit lokale netværk</span>, tjek listen over regler i tabellen herunder.",
        AR: "يتيح جهاز بوابة الإنترنت (IGD) العامل ببروتوكولات التوصيل والتشغيل الشامل (UPNP) لتطبيقات الألعاب، وتطبيقات الند للند، وتطبيقات المساعدة من بعد ولغيرِها من التطبيقات إنشاءَ قواعدَ لإعادة التوجيه عبر البوابة. <span>ويمكن أن يولِّدَ هذا الخيارُ مخاطرةً أمنية لشبكتك المحلية</span>، انظر قائمة القواعد في الجدول أدناه.",
        PT: "UPNP IGD permite jogos, peer-to-peer, assistencia remota ou outras aplicaçoes para crear regras de seguimento de forma automatica. <span>Esta opçao pode causar um risco de segurança na sua rede local</span>, a lista de regras na tabela.",
        RO: "TODO",
        IND: "TODO"
    },
    upnpTip1: {
        EN: "Here you can enable and disable the UPNP.",
        FR: "Activation et désactivation de l'UPNP ici.",
        SPN: "Aquí puede activar y desactivar el UPNP.",
        DE: "Hier können Sie UPnP ein- bzw. ausschalten",
        IT: "Qui puoi attivare o disattivare l'UPnP",
        DA: "Her kan du aktivere og deaktivere UPNP.",
        AR: "هنا يمكنك تفعيل والغاء  UPNP ",
        PT: "Aquí pode ligar ou desligar o UPNP.",
        RO: "TODO",
        IND: "TODO"
    },
    ethernet: {
        EN: "Ethernet",
        FR: "Ethernet",
        SPN: "Ethernet",
        DE: "Ethernet",
        IT: "Ethernet",
        DA: "Ethernet",
        AR: "شبكة الإيثرنت",
        PT: "Ethernet",
        RO: "TODO",
        IND: "TODO"
    },
    ssidName: {
        EN: "SSID Name:",
        FR: "Nom SSID :",
        SPN: "SSID Name:",
        DE: "SSID-Name:",
        IT: "Rete Wi-Fi:",
        DA: "SSID-navn:",
        AR: "اسم SSId",
        PT: "Nome SSID:",
        RO: "TODO",
        IND: "TODO"
    },
    speed: {
        EN: "Speed",
        FR: "Vitesse",
        SPN: "Velocidad",
        DE: "Geschwindigkeit",
        IT: "Velocità",
        DA: "Hastighed",
        AR: "سرعه",
        PT: "Velocidade",
        RO: "TODO",
        IND: "TODO"
    },
    channelInUse: {
        EN: "Channel in use:",
        FR: "Canal utilisé:",
        SPN: "Canal en uso:",
        DE: "Verwendeter Kanal:",
        IT: "Canale utilizzato",
        DA: "Anvendt kanal:",
        AR: "القناة قيد الاستخدام",
        PT: "Canal em uso:",
        RO: "TODO",
        IND: "TODO"
    },
    expertMode: {
        EN: "Show Advanced",
        FR: "Mode avancé",
        SPN: "TODO",
        DE: "Zeige erweiterte Ansicht",
        IT: "Visualizzare Avanzate",
        DA: "TODO",
        AR: "TODO",
        PT: "Mostrar Avançado",
        RO: "TODO",
        IND: "TODO"
    },
    advancedMode: {
        EN: "Advanced Mode",
        FR: "TODO",
        SPN: "Modo avanzado",
        DE: "Erweiterte Einstellungen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Modo avançado",
        RO: "Mod avansat",
        IND: "TODO"
    },
    basicMode: {
        EN: "Hide Advanced",
        FR: "Mode basique",
        SPN: "TODO",
        DE: "Zeige Standardansicht",
        IT: "Nascondere Avanzate",
        DA: "TODO",
        AR: "TODO",
        PT: "Esconder avançado",
        RO: "TODO",
        IND: "TODO"
    },
    mmDLNA: {
        EN: "DLNA",
        FR: "DLNA",
        SPN: "DLNA",
        DE: "DLNA",
        IT: "DLNA",
        DA: "DLNA",
        AR: "DLNA",
        PT: "DLNA",
        RO: "TODO",
        IND: "TODO"
    },
    mmSettings: {
        EN: "Settings",
        FR: "Réglages",
        SPN: "Ajustes",
        DE: "Einstellungen",
        IT: "Configurazione",
        DA: "Indstillinger",
        AR: "الإعدادات",
        PT: "Ferramentas",
        RO: "TODO",
        IND: "TODO"
    },
    mmShared: {
        EN: "Shared Content",
        FR: "Contenu Partagé",
        SPN: "Contenido Compartido",
        DE: "Freigegebene Inhalte",
        IT: "Contenuto Condiviso",
        DA: "Delt indhold",
        AR: "المحتوى المشترك",
        PT: "Conteudo compartido",
        RO: "TODO",
        IND: "TODO"
    },
    share: {
        EN: "Share",
        FR: "Partager",
        SPN: "Compartir",
        DE: "Aktie",
        IT: "Condividere",
        DA: "del",
        AR: "TODO",
        PT: "Compartir",
        RO: "Partajare",
        IND: "TODO"
    },
    mmName: {
        EN: "Name",
        FR: "Nom",
        SPN: "Nombre",
        DE: "Name",
        IT: "Nome",
        DA: "Navn",
        AR: "اسم",
        PT: "Nome",
        RO: "TODO",
        IND: "TODO"
    },
    mmMusic: {
        EN: "Audio Directory",
        FR: "Répertoire audio",
        SPN: "Directorio Music",
        DE: "Musikverzeichnis hochladen",
        IT: "Cartella Musica",
        DA: "Musikoversigt",
        AR: "رفع المسار الموسيقي",
        PT: "Directorio de musica",
        RO: "TODO",
        IND: "TODO"
    },
    mmPicture: {
        EN: "Picture Directory",
        FR: "Répertoire images",
        SPN: "Directorio de Imagen",
        DE: "Bilderverzeichnis hochladen",
        IT: "Cartella Immagini",
        DA: "Billedoversigt",
        AR: "رفع مسار الصورة",
        PT: "Directorio de imagem",
        RO: "TODO",
        IND: "TODO"
    },
    mmVideo: {
        EN: "Video Directory",
        FR: "Répertoire vidéo",
        SPN: "Video Directorio",
        DE: "Videoverzeichnis hochladen",
        IT: "Cartella Video",
        DA: "Videooversigt",
        AR: "رفع مسار الفيديو",
        PT: "Directorio de video",
        RO: "TODO",
        IND: "TODO"
    },
    mmAgregation: {
        EN: "Aggregation",
        FR: "Agrégation",
        SPN: "Agregación",
        DE: "Zusammenfassung",
        IT: "Aggregazione",
        DA: "Aggregering",
        AR: "ضم",
        PT: "Agregaçao",
        RO: "TODO",
        IND: "TODO"
    },
    mmUpnp: {
        EN: "UPnP Media Server Port",
        FR: "Port du Serveur UPnP Media",
        SPN: "UPnP Media Puerta del Servidor",
        DE: "UPnP Port des Medienservers",
        IT: "Porta del server multimediale UPnP",
        DA: "UPnP-medieserverport",
        AR: "منفذ خادم الوسائط   UPnP",
        PT: "Porta multimedia de servidor UPnP",
        RO: "TODO",
        IND: "TODO"
    },
    mmCopy: {
        EN: "Copy to Clipboard",
        FR: "Copier dans le presse-papiers",
        SPN: "Copiar al portapapeles",
        DE: "In Zwischenablage kopieren",
        IT: "Copia",
        DA: "Kopier til udklipsholder",
        AR: "انسخ الى ذاكرة التخزين المؤقتة",
        PT: "Copiar",
        RO: "TODO",
        IND: "TODO"
    },
    mmHelpIntro: {
        EN: "You can plug an USB drive into the gateway and share its content with other computers in your network. The DLNA protocol requires a compatible client and allows to stream Audio/Video content. The second option allows to share any type of files with the file explorer of your computer.",
        FR: "Vous pouvez connecter un périphérique de stockage USB à votre modem et partager son contenu avec les ordinateurs de votre réseau. Le protocole DLNA requiert un client compatible et permet de diffuser des données audio/video. La seconde option permet de partager tout type de fichier au moyen de l'explorateur de fichiers de votre ordinateur.",
        SPN: "Puede conectar un USB en su módem y compartir su contenido con otros ordenadores de su red. El protocolo DLNA necesita un cliente compatible y permite transmitir contenido audio/vídeo. La segunda opción le permite compartir cualquier tipo de archivo con el explorador de archivos de su ordenador.",
        DE: "Sie können ein USB-Laufwerk an das Gateway anschließen und dessen Inhalte mit anderen Computern in Ihrem Netzwerk teilen. Das DLNA-Protokoll benötigt einen kompatiblen Client und ermöglicht das Streamen von Audio-/ Video-Inhalten. Die zweite Option ermöglicht das Teilen jeder Art von Dateien mit dem Explorer Ihres Computers.",
        IT: "È possibile collegare un drive USB alla porta e condividere il contenuto con altri computer nella tua rete. Il protocollo DLNA richiede un client compatibile e consente lo streaming di contenuti audio/video. La seconda opzione consente la condivisione di qualsiasi tipo di file con il file risorse del tuo computer.",
        DA: "Du kan sætte et USB-drev ind i gatewayen og dele dens indhold med andre computere i dit netværk. DLNA-protokollen kræver en kompatibel klient og giver mulighed for at streame audio-/videoindhold. Den anden valgmulighed gør det muligt at dele enhver filtype med din computers stifinder.",
        AR: "يمكنك توصيل وسط تخزين USB في البوابة ومشاركة محتواه مع أجهزة كمبيوتر أخرى في شبكتك. يتطلب بروتوكول DLNA أن يكونَ العميل متوافقاً ويسمح بتدفق محتوى الصوت/الفيديو. يتيح الخيار الثاني مشاركةَ أي نوع من الملفات مع مستكشف الملفات في جهاز الكمبيوتر لديك.",
        PT: "Pode ligar um USB no dispositivo e partilhar o conteudo com outros computadores na sua rede. O protocolo DLNA requer um cliente compativel e permite partilhar conteudo audio/video. A segunda opçao permite partilhar qualquer tipo de ficheiros com o explorer do seu computador.",
        RO: "TODO",
        IND: "TODO"
    },
    mmHelpLink: {
        EN: "Copy one of following links in your file explorer address bar and access shared content.",
        FR: "Copiez l´un des liens ci-dessous dans la barre d´adresse de votre explorateur de fichiers et accédez au contenu partagé.",
        SPN: "Copie los siguientes enlaces en la barra de direcciones del explorador de archivos y acceda al contenido compartido.",
        DE: "Kopieren Sie die folgenden Links in die Adressleiste Ihres Explorers und greifen Sie auf freigegebene Inhalte zu.",
        IT: "Copia i seguenti link nella barra degli indirizzi del file explorer per accedere ai contenuti condivisi.",
        DA: "Kopiér de følgende links ind i din stifinders adressebjælke, og få adgang til det delte indhold.",
        AR: "انسخ الروابط التالية في شريط عناوين مستكشف الملفات لديك لتصلَ إلى المحتوى المشترك.",
        PT: "Copie um dos seguintes links no seu explorador e pode aceder ao conteudo partilhado.",
        RO: "TODO",
        IND: "TODO"
    },
    mmTip0: {
        EN: "Here you configure the media server.",
        FR: "Ici vous configurez le serveur de contenus multimedias.",
        SPN: "Aquí se configura el servidor de medios.",
        DE: "Hier können Sie den Medienserver konfigurieren.",
        IT: "Qui puoi configurare il server multimediale.",
        DA: "Her kan du konfigurere medieserveren.",
        AR: "هنا يمكنك تكوين خادم الوسائط",
        PT: "Aquí voce configura o servidor de midia",
        RO: "TODO",
        IND: "TODO"
    },
    mmTip1: {
        EN: "Manage the media files with Twonky.",
        FR: "Gérer les fichiers multimédias par Twonky.",
        SPN: "Gestionar los archivos multimedia de Twonky.",
        DE: "Mediendateien mit Twonky verwalten.",
        IT: "Gestisci il contenuto multimediale con Twonky.",
        DA: "Administrer mediefiler med Twonky.",
        AR: "نظم ملفات الوسائط بواسطة Twonky.",
        PT: "gerir os ficheiros de midia com Twonky",
        RO: "TODO",
        IND: "TODO"
    },
    mmTip2: {
        EN: "Enable file sharing server.",
        FR: "Activer le serveur de partage de fichiers.",
        SPN: "Habilitar el servidor Samba.",
        DE: "Samba-Server einschalten.",
        IT: "Attiva il server Samba.",
        DA: "Aktiver fildelingsserveren.",
        AR: "تفعيل خادم Samba",
        PT: "habilitar o servidor de partilha de ficheiros",
        RO: "TODO",
        IND: "TODO"
    },
    mmTip3: {
        EN: "Enable file sharing.",
        FR: "Activer le partage de fichiers.",
        SPN: "Habilite el uso compartido de archivos.",
        DE: "File-Sharing aktivieren.",
        IT: "Attiva la condivisione dei file.",
        DA: "Aktiver fildeling.",
        AR: "تفعيل مشاركة الملفات ",
        PT: "habilitar a partilha de ficheiros",
        RO: "TODO",
        IND: "TODO"
    },
    mmTip4: {
        EN: "Here you set the name of the media server.",
        FR: "Ici vous définissez le nom du serveur multimédia.",
        SPN: "Aquí se ajusta el nombre de mi servidor de medios.",
        DE: "Hier richten Sie den Namen des Medienservers ein.",
        IT: "Qui puoi impostare il nome del server multimediale",
        DA: "Her kan du indstille navnet på medieserveren.",
        AR: "هنا يمكنك وضع اسم خادم الوسائط",
        PT: "Aquí voce define o nome do servidor de midia",
        RO: "TODO",
        IND: "TODO"
    },
    mmTip5: {
        EN: "Click here to see audio directory content.",
        FR: "Cliquer ici pour voir le contenu du répertoire audio.",
        SPN: "Click para ver el contenido del directorio de audio",
        DE: "Klicken Sie hier, um die Inhalte im Verzeichnis Audio anzuzeigen.",
        IT: "Premere qui per vedere il contenuto audio.",
        DA: "Klik her, for at se indhold i musikmappen.",
        AR: "TODO",
        PT: "pressione aquí para ver o conteudo de audio",
        RO: "Click aici pentru a vedea continutul directorului audio.",
        IND: "TODO"
    },
    mmTip6: {
        EN: "Click here to see photo directory content.",
        FR: "Cliquer ici pour voir le contenu du répertoire photo.",
        SPN: "Click para ver el contenido del directorio de fotos",
        DE: "Klicken Sie hier, um die Inhalte im Verzeichnis Photo anzuzeigen.",
        IT: "Premere qui per vedere il contenuto foto.",
        DA: "Klik her, for at se indhold i fotomappen.",
        AR: "TODO",
        PT: "pressione aquí para ver o conteudo de fotografia",
        RO: "Click aici pentru a vedea continutul directorului foto.",
        IND: "TODO"
    },
    mmTip7: {
        EN: "Click here to see video directory content.",
        FR: "Cliquer ici pour voir le contenu du répertoire des vidéos.",
        SPN: "Click para ver el contenido del directorio de video",
        DE: "Klicken Sie hier, um die Inhalte im Verzeichnis Video anzuzeigen.",
        IT: "Premere qui per vedere il contenuto video.",
        DA: "Klik her, for at se indhold i videomappen.",
        AR: "TODO",
        PT: "pressione aquí para ver o conteudo de video",
        RO: "Click aici pentru a vedea continutul directorului video.",
        IND: "TODO"
    },
    mmTip8: {
        EN: "Here you can enable the media server.",
        FR: "Ici vous pouvez activer le serveur de contenus multimédias.",
        SPN: "Aquí puede activar mi servidor de medios.",
        DE: "Hier können Sie den Medienservers aktivieren.",
        IT: "Qui puoi attivare il server multimediale.",
        DA: "Her kan du aktivere medieserveren.",
        AR: "هنا يمكنك تفعيل خادم الوسائط",
        PT: "aquí voce activa o servidor de midia",
        RO: "TODO",
        IND: "TODO"
    },
    mmTip9: {
        EN: "Here you set the port of the media server.",
        FR: "Ici vous définissez le port du serveur de contenus multimédias.",
        SPN: "Aquí se ajusta el puerto de mi servidor de medios.",
        DE: "Zur Portvergabe des Medienservers.",
        IT: "Qui puoi configurare la porta del server multimediale.",
        DA: "Her kan du indstille porten på medieserveren.",
        AR: "هنا يمكنك وضع منفذ خادم الوسائط",
        PT: "aquí voce define a porta do servidor de midia",
        RO: "TODO",
        IND: "TODO"
    },
    mmTip10: {
        EN: "Configure file sharing.",
        FR: "Configurer le partage de fichiers.",
        SPN: "Configure el intercambio de archivos.",
        DE: "File-Sharing konfigurieren.",
        IT: "Configura la condivisione dei file.",
        DA: "Konfigurer fildeling.",
        AR: "تكوين مشاركة الملفات",
        PT: "configure a partilha de ficheiros",
        RO: "TODO",
        IND: "TODO"
    },
    mcDropboxUploadStart: {
        EN: "Upload succesfully started",
        FR: "Téléchargement commencé avec succès",
        SPN: "Upload exitosamente comenzado",
        DE: "Hochladen der Daten erfolgreich gestartet",
        IT: "Caricamento iniziato correttamente",
        DA: "Opload er startet",
        AR: "بدأ الرفع بنجاح",
        PT: "upload iniciado com sucesso",
        RO: "TODO",
        IND: "TODO"
    },
    mcDropboxLoginFail: {
        EN: "Dropbox login failed",
        FR: "La connexion à Dropbox a échoué",
        SPN: "Dropbox conexión ha fallado",
        DE: "Dropbox-Anmeldung fehlgeschlagen",
        IT: "Connessione a Dropbox fallita",
        DA: "Dropbox-login mislykkedes",
        AR: "فشل تسجيل الدخول لموقع Dropbox",
        PT: "Falha de login no Drpbox",
        RO: "TODO",
        IND: "TODO"
    },
    mcDropboxLoggingOut: {
        EN: "Logging out, please wait",
        FR: "Déconnexion en cours",
        SPN: "Cierre de sesión, por favor espere",
        DE: "Abmeldung erfolgt, bitte warten",
        IT: "Non connesso, attendere per favore",
        DA: "Logger ud, vent venligst",
        AR: " يتم تسجيل الخروج , من فضلك إنتظر",
        PT: "Fecho de sessao, por favor aguarde",
        RO: "TODO",
        IND: "TODO"
    },
    mcDropboxNotPermitted1: {
        EN: "Cannot connect with this hostname, please login again with following link: ",
        FR: "Connexion impossible avec ce nom d'hôte, connectez-vous de nouveau avec le lien suivant: ",
        SPN: "No se puede conectar con este nombre del host",
        DE: "Kann keine Verbindung zu diesem Host herstellen, um sich erneut anzumelden verwenden Sie bitte folgenden Link:",
        IT: "Connession impossibile con questo login, inserirlo nuovamente dal link qui di seguito:",
        DA: "Impossibile collegarsi con questo nome host, si prega di accedere nuovamente con il seguente collegamento:",
        AR: "TODO",
        PT: "Não é possível conectar com esse hostname, por favor faça o login novamente com o seguinte link:",
        RO: "Imposibil de conectat cu acest hostname, incercati autentificarea folosind acest link:",
        IND: "TODO"
    },
    mcDropboxNotPermitted2: {
        EN: "You must be connected to Internet to use this service.",
        FR: "Vous avez besoin d'une connexion Internet pour utiliser ce service.",
        SPN: "Debe estar conectado a Internet para usar este servicio",
        DE: "Sie müssen mit dem Internet verbunden sein, um diesen Dienst nutzen zu können.",
        IT: "C'è bisogno di una connessione internet per usare questo servizio",
        DA: "Du skal have internetforbindelse for at anvende denne tjeneste.",
        AR: "TODO",
        PT: "Voce tem que estar conectado á internet para usar este serviço",
        RO: "Trebuie sa fiti conectat la internet pentru a folosi acest serviciu.",
        IND: "TODO"
    },
    googleNotPermittedTitle: {
        EN: "Hostname not permitted",
        FR: "Nom d'hôte invalide",
        SPN: "Nombre del host no permitido",
        DE: "Der gewählte Hostname ist nicht erlaubt.",
        IT: "Hostname invalido",
        DA: "Værtsnavn er ikke tilladt",
        AR: "TODO",
        PT: "Hostname nao permitido",
        RO: "Hostname-ul nu este permis",
        IND: "TODO"
    },
    mcMyCloud: {
        EN: "My Cloud",
        FR: "My Cloud",
        SPN: "Mi Nube",
        DE: "My Cloud",
        IT: "My Cloud",
        DA: "My Cloud",
        AR: "تطبيق My Cloud",
        PT: "My cloud",
        RO: "TODO",
        IND: "TODO"
    },
    mcDropbox: {
        EN: "Dropbox",
        FR: "Dropbox",
        SPN: "Dropbox",
        DE: "Dropbox",
        IT: "Dropbox",
        DA: "Dropbox",
        AR: "صندوق التخزين",
        PT: "Dropbox",
        RO: "TODO",
        IND: "TODO"
    },
    mcSelectHdd: {
        EN: "Select mass storage device",
        FR: "Sélectionnez le périphérique de stockage",
        SPN: "Seleccione HDd",
        DE: "Massenspeicher auswählen",
        IT: "Seleziona il disco esterno",
        DA: "Vælg lagringsenhed",
        AR: "اختر جهاز  التخزين الكمي",
        PT: "Selecione HDd",
        RO: "TODO",
        IND: "TODO"
    },
    mcNoMedia: {
        EN: "No media devices found",
        FR: "Aucun dispositif de stockage trouvé",
        SPN: "No se encontraron dispositivos de medios",
        DE: "Kein Massenspeicher gefunden",
        IT: "Nessun disco trovato",
        DA: "Ingen medieenheder registreret",
        AR: "لم يتم العثور على أجهزة وسائط",
        PT: "Nao foram encontrados dispositivos de midia",
        RO: "TODO",
        IND: "TODO"
    },
    mcLocalItems: {
        EN: "Local files",
        FR: "Fichiers locaux",
        SPN: "Elementos locales",
        DE: "Lokale Dateien",
        IT: "File locali",
        DA: "Lokale filer",
        AR: " ملفات محلية",
        PT: "Ficheiros locais",
        RO: "TODO",
        IND: "TODO"
    },
    mcSync: {
        EN: "Sync",
        FR: "Sync",
        SPN: "Sync",
        DE: "Synchronisieren",
        IT: "Sincronizzazione",
        DA: "Synkroniser",
        AR: "تزامن",
        PT: "Sync",
        RO: "TODO",
        IND: "TODO"
    },
    mcDropboxItems: {
        EN: "Dropbox files",
        FR: "Fichiers Dropbox",
        SPN: "Elementos de Dropbox",
        DE: "Dropbox-Dateien",
        IT: "File Dropbox",
        DA: "Dropbox-filer",
        AR: "ملفات Dropbox",
        PT: "Ficheiros de Dropbox",
        RO: "TODO",
        IND: "TODO"
    },
    mcSignIn: {
        EN: "Sign In",
        FR: "S'authentifier",
        SPN: "Iniciar sesión",
        DE: "Einloggen",
        IT: "Effettua il login",
        DA: "Log IND",
        AR: "تسجيل دخول",
        PT: "Inicio de sessao",
        RO: "TODO",
        IND: "TODO"
    },
    mcTip1: {
        EN: "Select the device you want to display content.",
        FR: "Sélectionnez le périphérique dont vous souhaitez afficher le contenu.",
        SPN: "Seleccione el dispositivo que desea ver contenidos.",
        DE: "Wählen Sie das Anzeigegerät für Ihre Inhalte aus.",
        IT: "Seleziona il dispositivo su cui vedere il contenuto.",
        DA: "Vælg den enhed, hvorfra du vil vise indhold.",
        AR: "اختر الجهاز الذي تريد عرض محتوياته",
        PT: "Selcione o dispositivo que quer reproduzir o conteudo",
        RO: "TODO",
        IND: "TODO"
    },
    mcTip2: {
        EN: "There are not connected devices.",
        FR: "Il n'y a pas de périphériques connectés.",
        SPN: "No hay dispositivos conectados.",
        DE: "Keine Geräte angeschlossen.",
        IT: "Nessun dispositivo connesso.",
        DA: "Der er ingen enheder tilsluttet.",
        AR: "لا توجد أجهزة متصلة",
        PT: "Nao há dispositivos ligados",
        RO: "TODO",
        IND: "TODO"
    },
    mcTip3: {
        EN: "Selected device content.",
        FR: "Contenu du périphérique sélectionné.",
        SPN: "Presente contenido en el dispositivo seleccionado.",
        DE: "Ausgewählte Geräteinhalte.",
        IT: "Seleziona il contenuto.",
        DA: "Valgt indhold fra enheden.",
        AR: "اختر محتوى الجهاز",
        PT: "Selecione o conteudo do dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    mcTip4: {
        EN: "Here you can upload local device content to Dropbox.",
        FR: "Ici, vous pouvez télécharger vers Dropbox le contenu du périphérique local.",
        SPN: "Aquí se puede subir el contenido del dispositivo local para Dropbox.",
        DE: "Here können Sie die lokalen Inhalte für die Dropbox-Synchronisierung auswählen.",
        IT: "Qui puoi caricare il contenuto locale su Dropbox.",
        DA: "Her kan du oploade indhold fra din lokale enhed til Dropbox.",
        AR: "هنا يمكنك رفع محتوى الجهاز المحلي على Dropbox",
        PT: "Aquí voce pode fazer o upload de conteudo local para o Dropbox",
        RO: "TODO",
        IND: "TODO"
    },
    mcTip6: {
        EN: "Here you can download Dropbox content to local device.",
        FR: "Vous pouvez télécharger ici le contenu Dropbox vers votre disque local.",
        SPN: "Aqu¡ puede descargar en su dispositivo el contenido de Dropbox",
        DE: "Hier können Sie Inhalte aus Ihrer Dropbox auf ein in Ihrem Heimnetz angeschlossenen Speicher herunterladen.",
        IT: "Qui puoi scaricare il contenuto Dropbox sul disco locale.",
        DA: "TODO",
        AR: "TODO",
        PT: "Aquí voce pode fazer o download do conteudo de Dropbox no seu dispositivo local",
        RO: "Aici puteti descarca continutul din Dropbox pe dispozitivul local.",
        IND: "TODO"
    },
    mcTip5: {
        EN: "Dropbox content.",
        FR: "Contenu de Dropbox.",
        SPN: "Presente contenido en Dropbox.",
        DE: "Dropbox-Inhalte.",
        IT: "Contenuto Dropbox.",
        DA: "Dropbox-indhold.",
        AR: "محتوي صندوق التخزين",
        PT: "Conteudo de dropbox",
        RO: "TODO",
        IND: "TODO"
    },
    clearHistory: {
        EN: "Clear History",
        FR: "Effacer l'historique",
        SPN: "Borrar historial",
        DE: "Historie löschen",
        IT: "Cancella cronologia",
        DA: "Ryd historik",
        AR: "مسح السجل الزمني",
        PT: "Apagar historial",
        RO: "TODO",
        IND: "TODO"
    },
    callLog: {
        EN: "Call Log",
        FR: "Journal d'appel",
        SPN: "Registro de llamadas",
        DE: "Anrufliste",
        IT: "Registro delle chiamate",
        DA: "Opkaldslog",
        AR: "سجل المكالمات",
        PT: "Registo de chamadas",
        RO: "TODO",
        IND: "TODO"
    },
    answeringMachine: {
        EN: "Answering Machine",
        FR: "Répondeur téléphonique",
        SPN: "Contestador",
        DE: "Anrufbeantworter",
        IT: "Segreteria telefonica",
        DA: "Telefonsvarer",
        AR: "TODO",
        PT: "Atendedor de chamadas",
        RO: "Robot telefonic",
        IND: "TODO"
    },
    webradio: {
        EN: "Web Radio",
        FR: "Radio Web",
        SPN: "Radio web",
        DE: "Internetradio",
        IT: "Web Radio",
        DA: "Web-radio",
        AR: "TODO",
        PT: "Radio Web",
        RO: "Radio Web",
        IND: "TODO"
    },
    pbPhonebook: {
        EN: "Phonebook",
        FR: "Annuaire Téléphonique",
        SPN: "Libreta de Teléfonos",
        DE: "Telefonbuch",
        IT: "Rubrica telefonica",
        DA: "Telefonbog",
        AR: "دليل الهاتف",
        PT: "Agenda telefonica",
        RO: "TODO",
        IND: "TODO"
    },
    pbFullPhonebook: {
        EN: "Your phonebook is full, you cannot add more contacts.",
        FR: "Votre répertoire téléphonique est plein, vous ne pouvez plus ajouter de nouveaux contacts.",
        SPN: "Su listado esta lleno",
        DE: "Das Adressbuch ist voll. Sie können keine weiteren Kontakte mehr hinzufügen.",
        IT: "La rubrica è ormai piena, non puoi aggiungere nessun nuovo contatto.",
        DA: "La rubrica telefonica è piena, non è possibile aggiungere altri contatti.",
        AR: "TODO",
        PT: "a sua agenda telefonica esta cheia, nao pode adicionar mais contactos",
        RO: "Agenda dumneavoastra telefonica este plina, nu puteti adauga contacte noi.",
        IND: "TODO"
    },
    pbContacts: {
        EN: "Contacts",
        FR: "Contacts",
        SPN: "Contactos",
        DE: "Kontakte",
        IT: "Contatti",
        DA: "Kontakter",
        AR: "جهات إتصال",
        PT: "Contactos",
        RO: "TODO",
        IND: "TODO"
    },
    noContacts: {
        EN: "No contacts were found in your gateway.",
        FR: "Aucun contact trouvé.",
        SPN: "No hay contactos encontrados en el gateway.",
        DE: "Es wurden keine Kontakte in Ihrem Gateway gefunden.",
        IT: "Nessun contatto trovato sul tuo gateway.",
        DA: "Der blev ikke fundet nogen kontakter i din gateway.",
        AR: "لم يتم العثور على جهات إتصال في البوابة الخاصة بك ",
        PT: "Nao foram encontrados contactos no seu dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    pbAddContact: {
        EN: "Add Contact",
        FR: "Ajouter un Contact",
        SPN: "Añadir Contacto",
        DE: "Neuer Eintrag",
        IT: "Aggiungi contatto",
        DA: "Tilføj kontakt",
        AR: "إضافة جهة إتصال",
        PT: "Adicionar contacto",
        RO: "TODO",
        IND: "TODO"
    },
    pbSearch: {
        EN: "Search",
        FR: "Chercher",
        SPN: "Buscar",
        DE: "Suchen",
        IT: "Cerca",
        DA: "Søg",
        AR: "بحث",
        PT: "buscar",
        RO: "TODO",
        IND: "TODO"
    },
    pbName: {
        EN: "Name",
        FR: "Prénom",
        SPN: "Nombre",
        DE: "Name",
        IT: "Nome",
        DA: "Fornavn",
        AR: "الاسم",
        PT: "nome",
        RO: "TODO",
        IND: "TODO"
    },
    pbNumber: {
        EN: "Number",
        FR: "Numéro",
        SPN: "Número",
        DE: "Nummer",
        IT: "Numero",
        DA: "Nummer",
        AR: "رقم",
        PT: "numero",
        RO: "TODO",
        IND: "TODO"
    },
    pbLastName: {
        EN: "Last Name",
        FR: "Nom",
        SPN: "Apellido",
        DE: "Nachname",
        IT: "Cognome",
        DA: "Efternavn",
        AR: "الاسم الأخير",
        PT: "ultimo nome",
        RO: "TODO",
        IND: "TODO"
    },
    pbHomeNumber: {
        EN: "Home Phone",
        FR: "Domicile",
        SPN: "Teléfono de la casa",
        DE: "Privat",
        IT: "Casa",
        DA: "Telefon hjem",
        AR: "هاتف المنزل",
        PT: "Telfone de casa",
        RO: "TODO",
        IND: "TODO"
    },
    pbMobileNumber: {
        EN: "Mobile Phone",
        FR: "Portable",
        SPN: "Número de teléfono móvil",
        DE: "Mobil",
        IT: "Cellulare",
        DA: "Mobiltelefon",
        AR: "هاتف جوال",
        PT: "Telemovel",
        RO: "TODO",
        IND: "TODO"
    },
    pbWorkNumber: {
        EN: "Work Phone",
        FR: "Professionel",
        SPN: "Teléfono del trabajo",
        DE: "Geschäftlich",
        IT: "Ufficio",
        DA: "Telefon arbejde",
        AR: "هاتف العمل",
        PT: "Telefone do trabalho",
        RO: "TODO",
        IND: "TODO"
    },
    pbEmail: {
        EN: "Email",
        FR: "Email",
        SPN: "Email",
        DE: "Email",
        IT: "Email",
        DA: "E-mail",
        AR: "بريد الكتروني",
        PT: "email",
        RO: "TODO",
        IND: "TODO"
    },
    pbCountry: {
        EN: "Country",
        FR: "Pays",
        SPN: "País",
        DE: "Land",
        IT: "Paese",
        DA: "Land",
        AR: "الدولة",
        PT: "pais",
        RO: "TODO",
        IND: "TODO"
    },
    pbCity: {
        EN: "City",
        FR: "Ville",
        SPN: "Ciudad",
        DE: "Stadt",
        IT: "Città",
        DA: "By",
        AR: "المدينة",
        PT: "cidade",
        RO: "TODO",
        IND: "TODO"
    },
    pbAddress: {
        EN: "Address",
        FR: "Adresse",
        SPN: "Dirección",
        DE: "Adresse",
        IT: "Indirizzo",
        DA: "Adresse",
        AR: "العنوان",
        PT: "morada",
        RO: "TODO",
        IND: "TODO"
    },
    pbComment: {
        EN: "Comment",
        FR: "Commentaire",
        SPN: "Comentario",
        DE: "Kommentar",
        IT: "Commento",
        DA: "Kommentar",
        AR: "تعليق",
        PT: "comentario",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip1: {
        EN: "Here you can add a contact.",
        FR: "Ici vous pouvez ajouter un contact.",
        SPN: "Aquí puedes añadir un contacto.",
        DE: "Here können Sie einen neuen Kontakt hinzufügen.",
        IT: "Qui puoi aggiungere un contatto.",
        DA: "Her kan du tilføje en kontakt.",
        AR: "هنا يمكنك اضافة جهة اتصال",
        PT: "aquí voce pode adicionar um contacto",
        RO: "TODO",
        IND: "TODO"
    },
    duplicatedPhoneNumber: {
        EN: "This number already exists in another field or contact",
        FR: "TODO",
        SPN: "Este numero ya existe en otro campo o contacto",
        DE: "Diese Telefonnummber wurde bereits für ein anderes Feld des Kontakts verwendet",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Acest numar exista deja intr-un alt camp sau contact",
        IND: "TODO"
    },
    phoneNumberNeeded: {
        EN: "Please enter at least one phone number for this contact.",
        FR: "Un numéro de téléphone est nécessaire pour créer un contact.",
        SPN: "Por favor introduzca por lo menos un numero de tel‚fono para este contacto",
        DE: "Bitte geben Sie mindestens eine Telefonnummer für diesen Kontakt.",
        IT: "Si prega di inserire almeno un numero di telefono per questo contatto.",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    pbTipImport: {
        EN: "You can import your contacts from a .csv or .vcf file",
        FR: "Vous pouvez importer vos contacts depuis un fichier .csv ou .vcf.",
        SPN: "Puede importar sus contactos como un archivo .csv o .vcf.",
        DE: "Sie können Ihre Kontakte aus einer .csv oder .vcf-Datei importieren.",
        IT: "Puoi importare i tuoi contatti da un file in formato .csv o.vcf.",
        DA: "Du kan importere dine kontakter fra en .csv- eller .vcf-fil.",
        AR: "يمكنك جلب جهات الاتصال الخاصة بكمن ملف .csv او .vcf",
        PT: "Voce pode adicionar contactos desde um ficheiro em .csv ou .vcf",
        RO: "TODO",
        IND: "TODO"
    },
    pbTipExport: {
        EN: "You can export your contacts in vcard format.",
        FR: "Vous pouvez exporter vos contacts au format Vcard.",
        SPN: "Puede exportar sus contactos a formato vcard.",
        DE: "Sie können Ihre Kontakte im vCard-Format exportieren.",
        IT: "Puoi esportare i contatti in formato vcard.",
        DA: "Du kan eksportere dine kontakter i visitkortformat.",
        AR: "يمكنك تصدير جهات اتصالك بتنسيق vcard",
        PT: "voce pode exportar os seus contactos em um ficheiro vcard",
        RO: "TODO",
        IND: "TODO"
    },
    pbTipGoogle: {
        EN: "You can import your contacts from Google.",
        FR: "Vous pouvez importer vos contacts depuis Google.",
        SPN: "Puede importar sus contactos de Google.",
        DE: "Sie können Ihre Kontakte aus Google importieren.",
        IT: "Puoi importare i tuoi contatti da Google.",
        DA: "Du kan importere dine kontakter fra Google.",
        AR: "يمكنك جلب جهات الاتصال الخاصة بك عبر جوجل",
        PT: "voce pode importar os seus contactos desde google",
        RO: "TODO",
        IND: "TODO"
    },
    pbTipDeleteAll: {
        EN: "Remove all contacts in the list.",
        FR: "Supprimer tous les contacts de la liste.",
        SPN: "Eliminar todos los contactos en la lista.",
        DE: "Alle Einträge löschen.",
        IT: "Elimina tutti i contatti della lista.",
        DA: "Fjern alle kontakter fra din liste.",
        AR: "امسح جميع جهات الاتصال من القائمة",
        PT: "Apagar todos os contactos da lista",
        RO: "TODO",
        IND: "TODO"
    },
    pbTipGoogleImport: {
        EN: "You can import your Gmail and Google contacts by clicking on this button.",
        FR: "Vous pouvez importer vos contacts Google et Gmail em cliquant sur ce bouton.",
        SPN: "Puede importar sus contactos Gmail y Google haciendo clic en este botón.",
        DE: "Sie können Ihre Google-Mail- und Google-Kontakte importieren, indem Sie auf diese Schaltfläche klicken.",
        IT: "Cliccando su questo pulsante, puoi importare i contatti di Gmail e Google.",
        DA: "Du kan importere dine kontakter fra Gmail og Google ved at klikke på denne knap.",
        AR: "يمكنك استيراد جهات اتصالك في Gmail وفي Google بالنقر على هذا الزر.",
        PT: "Voce pode importar os seus contactos desde gmail e google pressionando este botao",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip2: {
        EN: "Here you can find a contact.",
        FR: "Ici vous pouvez trouver un contact.",
        SPN: "Aquí usted puede encontrar un contacto.",
        DE: "Hier können Sie nach Kontakten suchen.",
        IT: "Qui puoi trovare un contatto.",
        DA: "Her kan du finde en kontakt.",
        AR: "هنا يمكنك  ايجاد جهات الاتصال",
        PT: "Aquí pode encontrar um contacto",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip3: {
        EN: "Here you can see a contact information and remove it.",
        FR: "Ici vous pouvez voir les informations du contact et le supprimer.",
        SPN: "Aquí puedes ver una información de contacto y retirarla.",
        DE: "Hier können Sie die Kontaktinformationen einsehen und löschen.",
        IT: "Qui puoi vedere le informazioni di un contatto e eliminarle.",
        DA: "Her kan du se en oplysninger om en konktakt og fjerne den.",
        AR: "هنا يمكنك  مشاهدة معلومات جهة الاتصال وإزالتها",
        PT: "Aquí pode ver a informaçao de um contacto e apagar",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip4: {
        EN: "Here you add the contact first name.",
        FR: "Ici vous ajoutez le prénom du contact.",
        SPN: "Aquí se agrega el nombre de contacto.",
        DE: "Hier können Sie den Vornamen eingeben.",
        IT: "Qui puoi aggiungere il nome del contatto.",
        DA: "Her kan du tilføje kontaktens fornavn.",
        AR: "هنا يمكنك اضافة الاسم الاول لجهة الاتصال",
        PT: "aquí pode adicionar o nome",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip5: {
        EN: "Here you add the contact last name.",
        FR: "Ici vous ajoutez le nom du contact.",
        SPN: "Aquí se agrega el contacto apellido.",
        DE: "Hier können Sie den Nachnamen eingeben.",
        IT: "Qui puoi aggiungere il cognome del contatto.",
        DA: "Her kan du tilføje kontaktens efternavn.",
        AR: "هنا يمكنك اضافة الاسم الأخير لجهة الاتصال",
        PT: "aquí pode adicionar o apelido",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip6: {
        EN: "Here you add the contact number.",
        FR: "Ici vous ajoutez le numéro du contact.",
        SPN: "Aquí se agrega el número de contacto.",
        DE: "Hier können Sie eine Telefonnummer eintragen.",
        IT: "Qui puoi aggiungere il numero di telefono del contatto.",
        DA: "Her kan du tilføje kontaktens nummer.",
        AR: "هنا يمكنك اضافة رقم جهة الاتصال",
        PT: "aquí pode adicionar o numero de contacto",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip7: {
        EN: "Here you add the contact home phone number.",
        FR: "Ici, vous ajoutez le numéro de téléphone du contact.",
        SPN: "Aquí se agrega el número de teléfono de contacto.",
        DE: "Hier können Sie die private Telefonnummer hinzufügen.",
        IT: "Qui puoi aggiungere il numero di casa del contatto.",
        DA: "Her kan du tilføje kontaktens hjemmetelefonnummer.",
        AR: "هنا يمكنك اضافة رقم هاتف المنزل لجهة الاتصال",
        PT: "aquí pode adicionar o numero de telefone de casa",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip8: {
        EN: "Here you add the contact mobile phone number.",
        FR: "Ici vous ajoutez le numéro de téléphone mobile du contact.",
        SPN: "Aquí se agrega el número de teléfono móvil de contacto.",
        DE: "Hier können Sie die mobile Telefonnummer hinzufügen.",
        IT: "Qui puoi aggiungere il numero del cellulare del contatto.",
        DA: "Her kan du tilføje kontaktens mobiltelefonnummer.",
        AR: "هنا يمكنك اضافة  رقم الهاتف الجوال لجهة الاتصال",
        PT: "aquí pode adicionar o numero de telemovel",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip9: {
        EN: "Here you add the contact work phone number.",
        FR: "Ici vous ajoutez le numéro de téléphone professionel du contact.",
        SPN: "Aquí se agrega el número de teléfono del trabajo de contacto.",
        DE: "Hier können Sie die geschäftliche Telefonnummer hinzufügen.",
        IT: "Qui puoi aggiungere il numero dell'ufficio del contatto.",
        DA: "Her kan du tilføje kontaktens arbejdstelefonnummer.",
        AR: "هنا يمكنك اضافة رقم هاتف العمل لجهة الاتصال",
        PT: "aquí pode adicionar o numero de telefone do trabalho",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip10: {
        EN: "Here you add the contact email.",
        FR: "Ici vous ajoutez l'e-mail du contact.",
        SPN: "Aquí se agrega el correo electrónico de contacto.",
        DE: "Hier können Sie die Email-Adresse hinzufügen.",
        IT: "Qui puoi aggiungere l'indirizzo email del contatto.",
        DA: "Her kan du tilføje kontaktens e-mail.",
        AR: "هنا يمكنك اضافة البريد الالكتروني لجهة الاتصال",
        PT: "aquí pode adicionar o email",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip11: {
        EN: "Here you add the contact country.",
        FR: "Ici vous ajoutez le pays du contact.",
        SPN: "Aquí se agrega el país contacto.",
        DE: "Hier können Sie das Land hinzufügen.",
        IT: "Qui puoi aggiungere il paese del contatto.",
        DA: "Her kan du tilføje kontaktens land.",
        AR: "هنا يمكنك اضافة اسم الدولة لجهة الاتصال",
        PT: "aquí pode adicionar o pais",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip12: {
        EN: "Here you add the contact city.",
        FR: "Ici, vous ajoutez la ville du contact.",
        SPN: "Aquí se agrega la ciudad contacto.",
        DE: "Hier können Sie die Stadt hinzufügen.",
        IT: "Qui puoi aggiungere la città del contatto.",
        DA: "Her kan du tilføje kontaktens by.",
        AR: "هنا يمكنك اضافة اسم المدينة لجهة الاتصال",
        PT: "aquí pode adicionar a cidade",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip13: {
        EN: "Here you add the contact address.",
        FR: "Ici vous ajoutez l'adresse du contact.",
        SPN: "Aquí se agrega la dirección de contacto.",
        DE: "Hier können Sie die Adresse hinzufügen.",
        IT: "Qui puoi aggiungere l'indirizzo del contatto.",
        DA: "Her kan du tilføje kontaktens adresse.",
        AR: "هنا يمكنك اضافة عنوان جهة الاتصال",
        PT: "aquí pode adicionar a morada",
        RO: "TODO",
        IND: "TODO"
    },
    pbTip14: {
        EN: "Here you add a comment about the contact.",
        FR: "Ici vous ajoutez un commentaire sur le contact.",
        SPN: "Aquí se agrega un comentario sobre el contacto.",
        DE: "Hier können Sie einen Kommentar hinzufügen.",
        IT: "Qui puoi aggiungere un commento sul contatto.",
        DA: "Her kan du tilføje en kommentar om kontakten.",
        AR: "هنا يمكنك اضافة تعليق بشأن جهة الاتصال",
        PT: "aquí pode adicionar um comentario",
        RO: "TODO",
        IND: "TODO"
    },
    clCall: {
        EN: "Call",
        FR: "Appeler",
        SPN: "Llamar",
        DE: "Anruf",
        IT: "Chiama",
        DA: "Opkald",
        AR: "اتصال",
        PT: "chamada",
        RO: "TODO",
        IND: "TODO"
    },
    clNoCallLog: {
        EN: "No call logs were found in your gateway.",
        FR: "Auncun appel trouvé.",
        SPN: "No hay registros de llamadas encontrados en el gateway.",
        DE: "Es wurden keine Anruflisten in Ihrem Gateway gefunden.",
        IT: "Nessun registro di chiamata è stato trovato.",
        DA: "Der blev ikke fundet nogen opkaldslogs i din gateway.",
        AR: "لا توجد سجلات مكالمات في البوابة الخاصة بك",
        PT: "Nao há registros de chamadas",
        RO: "TODO",
        IND: "TODO"
    },
    clTip1: {
        EN: "Here you can call to the selected number.",
        FR: "Ici, vous pouvez appeler le numéro sélectionné.",
        SPN: "Aquí usted puede llamar al número seleccionado.",
        DE: "Hier können Sie die ausgewählte Nummer anrufen.",
        IT: "Qui puoi chiamare il numero selezionato.",
        DA: "Her kan du ringe til det udvalgte nummer.",
        AR: "هنا يمكنك الاتصال بالرقم المحدد",
        PT: "aquí pode ligar para o numero selecionado",
        RO: "TODO",
        IND: "TODO"
    },
    clTip2: {
        EN: "Voice devices call log.",
        FR: "Journal des appels émis et reçus par les dispositifs vocaux.",
        SPN: "Registro de llamadas hechas por los dispositivos de voz.",
        DE: "Anruflisteneintrag von Telefon hinzugefügt.",
        IT: "Registro delle chiamate effettuate dai terminali voce.",
        DA: "Opkaldslog fra stemmenheder.",
        AR: " سجل المكالمات التي كونتها الاجهزة الصوتية",
        PT: "registro de chamadas de voz",
        RO: "TODO",
        IND: "TODO"
    },
    clTip3: {
        EN: "Refresh call log.",
        FR: "Actualiser le journal d'appels.",
        SPN: "Actualizar lo registro de llamadas.",
        DE: "Anrufliste.",
        IT: "Aggiorna il registro delle chiamate",
        DA: "Opdater opkaldslog.",
        AR: "اعد تحميل سجل المكالمات",
        PT: "actualizar o registro de chamadas",
        RO: "TODO",
        IND: "TODO"
    },
    voicePorts: {
        EN: "Voice Ports",
        FR: "Téléphonie",
        SPN: "Voice Ports",
        DE: "Telefonanschluss",
        IT: "Porta telefonica",
        DA: "Stemmeporte",
        AR: "منافذ صوتية",
        PT: "portas de voz",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStatusOn: {
        EN: "ON",
        FR: "ON",
        SPN: "ON",
        DE: "AN",
        IT: "ON",
        DA: "ON",
        AR: "TODO",
        PT: "ON",
        RO: "ON",
        IND: "TODO"
    },
    wifiStatusOff: {
        EN: "OFF",
        FR: "OFF",
        SPN: "OFF",
        DE: "AUS",
        IT: "OFF",
        DA: "OFF",
        AR: "ايقاف ",
        PT: "OFF",
        RO: "TODO",
        IND: "TODO"
    },
    on: {
        EN: "ON",
        FR: "ON",
        SPN: "ON",
        DE: "AN",
        IT: "ON",
        DA: "ON",
        AR: "TODO",
        PT: "ON",
        RO: "ON",
        IND: "TODO"
    },
    off: {
        EN: "OFF",
        FR: "OFF",
        SPN: "OFF",
        DE: "AUS",
        IT: "OFF",
        DA: "OFF",
        AR: "ايقاف ",
        PT: "OFF",
        RO: "TODO",
        IND: "TODO"
    },
    dect: {
        EN: "DECT",
        FR: "DECT",
        SPN: "DECT",
        DE: "DECT",
        IT: "DECT",
        DA: "DECT",
        AR: "DECT",
        PT: "DECT",
        RO: "TODO",
        IND: "TODO"
    },
    usb: {
        EN: "USB",
        FR: "USB",
        SPN: "USB",
        DE: "USB",
        IT: "USB",
        DA: "USB",
        AR: "USB",
        PT: "USB",
        RO: "TODO",
        IND: "TODO"
    },
    option: {
        EN: "Option",
        FR: "Option",
        SPN: "Opción",
        DE: "Option",
        IT: "Opzione",
        DA: "Valgmulighed",
        AR: "اختيار",
        PT: "opçao",
        RO: "TODO",
        IND: "TODO"
    },
    value: {
        EN: "Value",
        FR: "Valeur",
        SPN: "Valor",
        DE: "Wert",
        IT: "Valore",
        DA: "Værdi",
        AR: "قيمة",
        PT: "Valor",
        RO: "TODO",
        IND: "TODO"
    },
    basic: {
        EN: "Basic",
        FR: "Basique",
        SPN: "Básico",
        DE: "Basis",
        IT: "Basico",
        DA: "Basis",
        AR: "اساسي",
        PT: "Basico",
        RO: "TODO",
        IND: "TODO"
    },
    basic_wan_status: {
        EN: "Basic",
        FR: "Basique",
        SPN: "Básico",
        DE: "Basis",
        IT: "Basico",
        DA: "Basis",
        AR: "اساسي",
        PT: "Basico",
        RO: "TODO",
        IND: "TODO"
    },
    cancel: {
        EN: "Cancel",
        FR: "Annuler",
        SPN: "Cancelar",
        DE: "Abbrechen",
        IT: "Cancella",
        DA: "Annullér",
        AR: "الغاء",
        PT: "Cancelar",
        RO: "TODO",
        IND: "TODO"
    },
    connect: {
        EN: "Connect",
        FR: "Connecter",
        SPN: "Conecte",
        DE: "Verbinden",
        IT: "Connetti",
        DA: "ForbIND",
        AR: "اتصل",
        PT: "Ligar",
        RO: "TODO",
        IND: "TODO"
    },
    apply: {
        EN: "Apply",
        FR: "Appliquer",
        SPN: "Aplicar",
        DE: "Anwenden",
        IT: "Salva",
        DA: "Gem",
        AR: "تقدم بالطلب",
        PT: "Aplicar",
        RO: "TODO",
        IND: "TODO"
    },
    "continue": {
        EN: "Continue",
        FR: "Continuer",
        SPN: "Continuar",
        DE: "Weiter",
        IT: "Continua",
        DA: "Fortsæt",
        AR: "استمر",
        PT: "Continuar",
        RO: "TODO",
        IND: "TODO"
    },
    next: {
        EN: "Next",
        FR: "Suivant",
        SPN: "Próximo",
        DE: "Weiter",
        IT: "Avanti",
        DA: "Næste",
        AR: "بعد",
        PT: "Proximo",
        RO: "TODO",
        IND: "TODO"
    },
    finish: {
        EN: "Finish",
        FR: "Terminer",
        SPN: "Acabado",
        DE: "Beenden",
        IT: "Termina",
        DA: "Importer",
        AR: "انهاء",
        PT: "Fim",
        RO: "TODO",
        IND: "TODO"
    },
    showSection: {
        EN: "Show Sections",
        FR: "Afficher sections",
        SPN: "Mostrar seccións",
        DE: "Bereiche anzeigen",
        IT: "Mostra Sezioni",
        DA: "Vis sektioner",
        AR: "اظهار الأقسام ",
        PT: "Mostrar secçoes",
        RO: "TODO",
        IND: "TODO"
    },
    showSubSection: {
        EN: "Show Subsections",
        FR: "Afficher paragraphes",
        SPN: "Mostrar subseccións",
        DE: "Untermenüs anzeigen",
        IT: "Mostra Sottosezioni",
        DA: "Vis undersektioner",
        AR: "اظهار الأقسام الفرعية",
        PT: "Mostrar subsecçoes",
        RO: "TODO",
        IND: "TODO"
    },
    firstInstall: {
        EN: "First Installation",
        FR: "Première installation",
        SPN: "Primera instalación",
        DE: "Ersteinrichtrung",
        IT: "Prima installazione",
        DA: "Første installation",
        AR: "التثبيت الاول",
        PT: "primeira instalaçao",
        RO: "TODO",
        IND: "TODO"
    },
    firstNextStep: {
        EN: "Next Step",
        FR: "Étape Suivante",
        SPN: "Siguiente Paso",
        DE: "Nächster Schritt",
        IT: "Avanti",
        DA: "Næste trin",
        AR: "الخطوة القادمة ",
        PT: "proximo passo",
        RO: "TODO",
        IND: "TODO"
    },
    firstPreviousStep: {
        EN: "Previous Step",
        FR: "Étape Précédente",
        SPN: "Paso anterior",
        DE: "Vorheriger Schritt",
        IT: "Indietro",
        DA: "Forrige trin",
        AR: "الخطوة السابقة",
        PT: "passo anterior",
        RO: "TODO",
        IND: "TODO"
    },
    firstStep1: {
        EN: "Step 1 of 6",
        FR: "Étape 1 sur 6",
        SPN: "Paso 1 de 6",
        DE: "Schritt 1 von 6",
        IT: "Fase 1 di 6",
        DA: "Trin 1 af 6",
        AR: "الخطوة رقم 1 من عدد 6 خطوات",
        PT: "passo 1 de 6",
        RO: "TODO",
        IND: "TODO"
    },
    firstModemMessage: {
        EN: "Please enter a password for the configuration of your modem.",
        FR: "Entrer un mot de passe pour la configuration de votre modem.",
        SPN: "Introduce una contraseña para la configuración de su módem.",
        DE: "Bitte geben Sie ein Passwort für die Konfiguration Ihres Modems ein.",
        IT: "Inserire la password per configurare il gateway.",
        DA: "Indtast venligst en adgangskode til konfigurationen af dit modem.",
        AR: "من فضلك أدخل كلمة المرور لتكوين مودم جهازك",
        PT: "Por favor introduza uma password para configurar o seu modem",
        RO: "TODO",
        IND: "TODO"
    },
    firstModemPass: {
        EN: "New Password:",
        FR: "Nouveau mot de passe:",
        SPN: "Nueva contraseña:",
        DE: "Neues Passwort:",
        IT: "Nuova chiave:",
        DA: "Ny adgangskode:",
        AR: "كلمة المرور الجديدة",
        PT: "nova password:",
        RO: "TODO",
        IND: "TODO"
    },
    firstModemRePass: {
        EN: "Re-enter New Password:",
        FR: "Entrer à nouveau le mot de passe:",
        SPN: "Volver a introducir la nueva contraseña:",
        DE: "Passwort bestätigen:",
        IT: "Inserire nuovamente la chiave:",
        DA: "Indtast den ny adgangskode igen:",
        AR: "أعد ادخال كلمة المرور الجديدة",
        PT: "voltar a introduzir a nova password:",
        RO: "TODO",
        IND: "TODO"
    },
    firstStep2: {
        EN: "Step 2 of 6",
        FR: "Étape 2 sur 6",
        SPN: "Paso 2 de 6",
        DE: "Schritt 2 von 6",
        IT: "Fase 2 di 6",
        DA: "Trin 2 af 6",
        AR: "الخطوة رقم 2 من عدد 6 خطوات",
        PT: "passo 2 de 6",
        RO: "TODO",
        IND: "TODO"
    },
    firstConnInternet: {
        EN: "Connecting to Internet",
        FR: "Connexion à Internet",
        SPN: "Conexión a Internet",
        DE: "Verbindung mit dem Internet",
        IT: "Connessione a Internet",
        DA: "Opretter forbindelse til internettet",
        AR: "الإتصال بالانترنت",
        PT: "ligar á internet",
        RO: "TODO",
        IND: "TODO"
    },
    firstCheckConn: {
        EN: "Checking your connection...",
        FR: "Vérification de votre connexion ...",
        SPN: "Comprobación de la conexión a ...",
        DE: "Prüfe Verbindung",
        IT: "Verifica della connessione",
        DA: "Tjekker din forbindelse ...",
        AR: "التحقق من اتصالك",
        PT: "Comprovar a sua ligaçao...",
        RO: "TODO",
        IND: "TODO"
    },
    firstStep3: {
        EN: "Step 3 of 6",
        FR: "Étape 3 sur 6",
        SPN: "Paso 3 de 6",
        DE: "Schritt 3 von 6",
        IT: "Fase 3 di 6",
        DA: "Trin 3 af 6",
        AR: " الخطوة رقم 3 من عدد 6 خطوات",
        PT: "passo 3 de 6",
        RO: "TODO",
        IND: "TODO"
    },
    firstVerify: {
        EN: "Enter PPP login and password provided by your ISP.",
        FR: "Entrez connexion PPP et mot de passe fourni par votre ISP.",
        SPN: "Introduzca entrada PPP y la contraseña proporcionada por su ISP.",
        DE: "Geben Sie den PPP-Benutzernamen und Passwort Ihres Internetanbieters ein.",
        IT: "Inserisci login e password PPP forniti dall'ISP.",
        DA: "Indtast det PPP-login og den adgangskode, som leveres af din ISP.",
        AR: "ادخل  ppp لتسجيل الدخول وكلمة المرور المقدمة من ISP.",
        PT: "introduza o login PPP e a password fornecidos pelo ISP",
        RO: "TODO",
        IND: "TODO"
    },
    firstIntConnType: {
        EN: "Internet Connection Type",
        FR: "Type de connexion à Internet",
        SPN: "Tipo de conexión a Internet",
        DE: "Art der Internetverbindug",
        IT: "Tipo di connessione a Internet",
        DA: "Internetforbindelsestype",
        AR: "نوع الإتصال بالانترنت",
        PT: "tipo de ligaçao de internet",
        RO: "TODO",
        IND: "TODO"
    },
    firstIntConnUsername: {
        EN: "Username:",
        FR: "Nom d'utilisateur:",
        SPN: "Nombre de usuario:",
        DE: "Benutzername:",
        IT: "Nome utente:",
        DA: "Brugernavn:",
        AR: "اسم المستخدم",
        PT: "nome de utilizador:",
        RO: "TODO",
        IND: "TODO"
    },
    firstIntConnPassword: {
        EN: "Password:",
        FR: "Mot de passe:",
        SPN: "Contraseña:",
        DE: "Passwort:",
        IT: "Password:",
        DA: "Adgangskode:",
        AR: "كلمة المرور ",
        PT: "password:",
        RO: "TODO",
        IND: "TODO"
    },
    firstStep4: {
        EN: "Step 4 of 6",
        FR: "Étape 4 sur 6",
        SPN: "Paso 4 de 6",
        DE: "Schritt 4 von 6",
        IT: "Fase 4 di 6",
        DA: "Trin 4 af 6",
        AR: "الخطوة رقم 4 من عدد 6 خطوات ",
        PT: "passo 4 de 6",
        RO: "TODO",
        IND: "TODO"
    },
    firstWifiConf: {
        EN: "Wi-Fi Configuration",
        FR: "Configuration Wi-Fi",
        SPN: "Configuración Wi-Fi",
        DE: "WLAN Konfiguration",
        IT: "Configurazione Wi-Fi",
        DA: "Wi-Fi konfiguration",
        AR: "تكوين الشبكة الواي فاي",
        PT: "configuraçao de Wi-Fi",
        RO: "TODO",
        IND: "TODO"
    },
    firstWifiConfMessage: {
        EN: "Next, we need to configure your wireless network. Note that your network can be accessed by both 2.4GHz (Wi-Fi B, G, N) and 5GHz (Wi-Fi A, N, AC) compatible devices.",
        FR: "Ensuite, nous allons configurer votre réseau sans fil. Notez que votre réseau est accessible à la fois par des appareils compatibles 2.4 Ghz(Wi-Fi B, G, N) et 5 GHz (Wi-Fi A, N, AC).",
        SPN: "A continuación, tenemos que configurar la red inalámbrica. Tenga en cuenta que la red se puede acceder por tanto de 2.4 GHz (Wi-Fi B, G, N) y 5 GHz (Wi-Fi A, N, AC) dispositivos compatibles.",
        DE: "Danach müssen wir Ihr drahtloses Netzwerk konfigurieren. Beachten Sie, dass Ihr Netzwerk sowohl von 2.4-GHz- (WLAN B, G, N) als auch von 5-GHz-kompatiblen Geräten (WLAN A, N, AC) verwendet werden kann.",
        IT: "Segue la configurazione della rete Wi-Fi. Questa potrà esser accessibile sia per dispositivi in 2.4GHz (Wi-Fi B, G, N), sia per quelli in 5GHz (Wi-Fi A, N).",
        DA: "Som det næste trin skal vi konfigurere dit trådløse netværk. Vær opmærksom på, at både enheder kompatible med 2,4 GHz (Wi-Fi B, G, N) og 5 GHz (Wi-Fi A, N, AC) kan få adgang til dit netværk.",
        AR: "الخطوة القادمة، نحن بحاجة إلى تكوين شبكتك اللاسلكية، لاحظ ان شبكتك يمكن الوصول اليها في كل من أجهزة 2.4 جيجا هرتز في ال واي فاي (Wi-Fi B, G, N و 5 جيجا هرتز في واي فاي  (Wi-Fi A ,N)  المتوافقة",
        PT: "de seguida, temos que configurar a rede sem fios. Recorde que a sua rede pode ser acedida desde 2.4GHz (Wi-Fi B, G, N) e 5GHz (Wi-Fi A, N, AC) por dispositivos compativeis.",
        RO: "TODO",
        IND: "TODO"
    },
    networkName: {
        EN: "Network Name",
        FR: "Nom de réseau",
        SPN: "Nombre de la red",
        DE: "Netzwerkname",
        IT: "Rete Wi-Fi",
        DA: "Netværkets navn",
        AR: "TODO",
        PT: "nome da rede",
        RO: "Nume retea",
        IND: "TODO"
    },
    firstWifi24NetName: {
        EN: "Wi-Fi Network Name (2.4 GHz):",
        FR: "Nom de réseau Wi-Fi (2.4 de GHz):",
        SPN: "Nombre de la red Wi-Fi (2.4 GHz):",
        DE: "Name des 2.4GHz WLAN-Funknetzes",
        IT: "Rete Wi-Fi (2.4 GHz):",
        DA: "Wi-Fi netværkets navn (2,4 GHz):",
        AR: "اسم الشبكة الواي فاي (2 جيجا هرتز)",
        PT: "nome da rede Wi-Fi (2.4GHz):",
        RO: "TODO",
        IND: "TODO"
    },
    firstWifi24NetEncrip: {
        EN: "Wi-Fi Network Encription (2.4 GHz):",
        FR: "Encryption du réseau Wi-Fi (2.4 GHz):",
        SPN: "Red Encriptadores Wi-Fi (2.4 GHz):",
        DE: "2.4GHz WLAN-Verschlüsselungstyp",
        IT: "Modalità di cifratura Wi-Fi (2.4 GHz):",
        DA: "Wi-Fi netværkets kryptering (2,4 GHz):",
        AR: "تشفير الشبكة الواي فاي (2.4 جيجا هرتز)",
        PT: "encriptaçao da rede Wi-Fi (2.4GHz):",
        RO: "TODO",
        IND: "TODO"
    },
    firstWifi24NetPass: {
        EN: "Network Password (2.4 GHz):",
        FR: "Mot de passe réseau (2.4 GHz):",
        SPN: "Network Password (2.4 GHz):",
        DE: "2.4GHz WLAN-Netzwerkschlüssel",
        IT: "Chiave cifratura Wi-Fi (2.4 GHz):",
        DA: "Netværksadgangskode (2,4 Ghz):",
        AR: "كلمة المرور للشبكة (2.4 جيجا هرتز)",
        PT: "password da rede (2.4GHz):",
        RO: "TODO",
        IND: "TODO"
    },
    firstWifi5GNetName: {
        EN: "Wi-Fi Network Name (5 GHz):",
        FR: "Nom du réseau Wi-Fi (5 GHz):",
        SPN: "Nombre de la red Wi-Fi (5 GHz):",
        DE: "Name des 5GHz WLAN-Funknetzes",
        IT: "Rete Wi-Fi (5 GHz):",
        DA: "Wi-Fi netværkets navn (5 GHz):",
        AR: "اسم الواي فاي (5 جيجا هيرتز)",
        PT: "Nome da rede Wi-Fi (5GHz):",
        RO: "TODO",
        IND: "TODO"
    },
    firstWifi5GNetEncrip: {
        EN: "Wi-Fi Network Encription (5 GHz):",
        FR: "Encryption du réseau Wi-Fi (5 GHz):",
        SPN: "Red Encriptadores Wi-Fi (5 GHz):",
        DE: "5GHz WLAN-Verschlüsselungstyp",
        IT: "Modalità di cifratura Wi-Fi (5 GHz):",
        DA: "Wi-Fi netværkets kryptering (5 GHz):",
        AR: "تشفير الواي فاي (5 جيجا هيرتز )",
        PT: "encriptaçao da rede Wi-Fi (5GHz):",
        RO: "TODO",
        IND: "TODO"
    },
    firstWifi5GNetPass: {
        EN: "Network Password (5 GHz):",
        FR: "Mot de passe réseau (5 GHz):",
        SPN: "Network Password (5 GHz):",
        DE: "5GHz WLAN-Netzwerkschlüssel",
        IT: "Chiave cifratura Wi-Fi (5 GHz):",
        DA: "Netværksadgangskode (5 Ghz):",
        AR: "كلمة المرور للشبكة (5 جيجا هيرتز)",
        PT: "password da rede (5GHz):",
        RO: "TODO",
        IND: "TODO"
    },
    firstWifiRequires: {
        EN: "WPA2 requires a 8-63 character password. Only the following characters can be used: a-z, A-Z, 0-9 and + * % = - _ !",
        FR: "Le WPA2 nécessite un mot de passse de 8 à 63 caractères. Seul les caractères suivants peuvent-être utilisés: a-z, A-Z, 0-9 and + * % & = - _ !",
        SPN: "WPA2 requiere una contraseña entre 8-63 caracteres. Solo los siguientes caracteres pueden ser usados: a-z",
        DE: "Die WLAN-Verschlüsselungsmethode WPA2 erfordert die Vergabe eines WLAN-Kennworts, dass zwischen 8 und 63 Zeichen lang sein muss. Nur die folgenden Zeichen können verwendet werden: a-z, A-Z, 0-9 und + * % = - _ !",
        IT: "WPA2 necessita una chiave di cifratura tra 8 e 63 caratteri. Solamente i seguenti caratteri possono esser utilizzati: a-z, A-Z, 0-9 and + * % & = - _ ! $",
        DA: "WPA2 kræver en adgangskode på 8-63 tegn. Kun følgende tegn kan anvendes: a-z, A-Z, 0-9 og + * % = - _ !",
        AR: "TODO",
        PT: "WPA2 requer uma password com 8-63 caracteres. Apenas os seguintes caracteres podem ser usados: a-z, A-Z, 0-9 and + * % = - _ !",
        RO: "Conexiunea securizata WPA2 necesita o parola intre 8-63 caractere. Doar urmatoarele caractere sunt permise: a-z, A-Z, 0-9 and + * % = - _ !",
        IND: "TODO"
    },
    firstStep5: {
        EN: "Step 5 of 6",
        FR: "Étape 5 sur 6",
        SPN: "Paso 5 de 6",
        DE: "Schritt 5 von 6",
        IT: "Fase 5 di 6",
        DA: "Trin 5 af 6",
        AR: "الخطوة رقم 5 من عدد 6 خطوات ",
        PT: "passo 5 de 6",
        RO: "TODO",
        IND: "TODO"
    },
    firstStep6: {
        EN: "Step 6 of 6",
        FR: "Étape 6 sur 6",
        SPN: "Paso 6 de 6",
        DE: "Schritt 6 von 6",
        IT: "Fase 6 di 6",
        DA: "Trin 6 af 6",
        AR: "الخطوة رقم 6 من عدد 6 خطوات",
        PT: "passo 6 de 6",
        RO: "TODO",
        IND: "TODO"
    },
    firstConfigComp: {
        EN: "Configuration Complete!",
        FR: "Configuration terminée!",
        SPN: "Configuración completa!",
        DE: "Ersteinrichtung abgeschlossen!",
        IT: "Configurazione completa!",
        DA: "Konfigurationen er fuldført!",
        AR: "اكتملت عملية التكوين!",
        PT: "Configuraçao completa!",
        RO: "TODO",
        IND: "TODO"
    },
    firstClick: {
        EN: "Click 'Previous Step' to modify changes or click on start button.",
        FR: "Cliquer sur 'Étape précédente' pour modifier les changements ou cliquer sur le bouton 'Démarrer'.",
        SPN: "Haga clic en 'Paso anterior' para modificar los cambios o haga clic en el botón de inicio.",
        DE: "Klicken Sie auf 'Vorheriger Schritt', um Ihre Eingaben zu ändern oder klicken Sie 'Start', um die Einrichtung fortzusetzen.",
        IT: "Premere 'Indietro' per modificare la configurazione, altrimenti premere su Start.",
        DA: "Klik på 'Forrige trin' for at modificere ændringerne, eller klik på startknappen.",
        AR: "اضغط علي 'الخطوة السابقة' لتعديل التغيرات أو إضغط علي زر إبدا",
        PT: "pressione `passo anterior` para modificar ou pressione o botao de start.",
        RO: "TODO",
        IND: "TODO"
    },
    firstStart: {
        EN: "Start",
        FR: "Démarrer",
        SPN: "Comienzo",
        DE: "Start",
        IT: "Avvio",
        DA: "Start",
        AR: "إبدأ ",
        PT: "Start",
        RO: "TODO",
        IND: "TODO"
    },
    firstEnd: {
        EN: "End",
        FR: "TODO",
        SPN: "Fin",
        DE: "Ende",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Sfarsit",
        IND: "TODO"
    },
    firstConnect: {
        EN: "Please connect cables as in image below, and then click on next button in order to continue setup.",
        FR: "Connecter les câbles comme dans l'image ci-dessous, puis cliquez sur le bouton suivant pour continuer.",
        SPN: "Por favor, conecte los cables como en la imagen de abajo y, a continuación, haga clic en el botón Next para continuar la instalación.",
        DE: "Bitte verbinden Sie die Kabel mit den Anschlüssen wie im Bild unten, dann klicken Sie auf die Schaltfläche 'Weiter' um die Einrichtung fortzusetzen.",
        IT: "Collegare i cavi come indicato nell'immagine sottostante e quindi premere 'Continua' per continuare.",
        DA: "Tilslut kablerne som på billedet herunder, og klik på knappen for at fortsætte opsætningen.",
        AR: "من فضلك قم بتوصيل الكابلات كما هو في الصورة الموضحة أدناه، ثم إضغط على زر التالي لإستكمال التنصيب ",
        PT: "Por favor ligue os cabos como na imagem, e pressione no botao seguinte para continuar a configuraçao.",
        RO: "TODO",
        IND: "TODO"
    },
    firstConnectOther: {
        EN: "Please connect cables as in image below.",
        FR: "Connecter les câbles comme dans l'image ci-dessous.",
        SPN: "Por favor conecte los cables como muestra la siguiente imagen",
        DE: "Bitte verbinden Sie die Kabel mit den Anschlüssen wie im Bild unten.",
        IT: "Collegare i cavi come indicato nell'immagine sottostante.",
        DA: "Tilslut kablerne som på billedet herunder.",
        AR: "TODO",
        PT: "Por favor ligue os cabos como na imagem.",
        RO: "Va rugam sa conectati cablurile urmarind imaginea de mai jos.",
        IND: "TODO"
    },
    firstInstallHelp1: {
        EN: "This is an example of how to install your connection cables on both ADSL or Optical Fiber services.",
        FR: "Exemple d'installation pour ADSL ou fibre optique.",
        SPN: "Este es un ejemplo de cómo instalar sus cables de conexión tanto en ADSL o servicios de fibra óptica.",
        DE: "Beispiel zur Verkabelung bei ADSL- oder Glasfaseranschlüssen.",
        IT: "Questo è un esempio di come collegare i cavi per una connessione ADSL o Fibra.",
        DA: "Dette er et eksempel på, hvordan du skal installere dine forbindelseskabler på både ADSL- eller optiske fibertjenester.",
        AR: "هذا مثال على كيفية تثبيت كابلات التوصيل الخاصة بك على كل من DSL أو خدمات الألياف البصرية",
        PT: "Este é um exemplo de como fazer va ligaçao de cabos em ambos serviços de ADSL e fibra",
        RO: "TODO",
        IND: "TODO"
    },
    firstInstallHelp2: {
        EN: "Choose between FTTH and xDSL to see the correct scheme",
        FR: "Choisissez entre FTTH et xDSL pour voir le bon schéma",
        SPN: "Elija entre FTTH y xDSL para ver el esquema correcto",
        DE: "Wählen Sie zwischen FTTH und xDSL, um das richtige Diagramm zu sehen",
        IT: "Scegli tra FTTH e xDSL per vedere lo schema corretto",
        DA: "Vælg mellem Fiber og xDSL for at se det korrekte skema",
        AR: "إختر بين FTTH و DSL لرؤية المخطط الصحيح",
        PT: "Escolha entre FTTH e xDSL para ver o esquema correcto",
        RO: "TODO",
        IND: "TODO"
    },
    chooseConnection: {
        EN: "Choose your connection:",
        FR: "Choisissez votre connexion:",
        SPN: "Elige tu conexión:",
        DE: "Wählen Sie Ihre Verbindung:",
        IT: "Scegli la connessione",
        DA: "Vælg din forbindelse:",
        AR: "اختر وسيلة الإتصال الخاصة بك",
        PT: "escolha o seu tipo de ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    firstInstallHelp3: {
        EN: "When ready, click here to continue",
        FR: "Lorsque vous êtes prêt, cliquez ici pour continuer",
        SPN: "Cuando esté listo, haga clic aquí para continuar",
        DE: "Klicken Sie auf 'Weiter' wenn Sie die Verkabelung abgeschlossen haben",
        IT: "Quando collegato, premere qui per continuare",
        DA: "Når du er klar, kan du fortsætte ved at klikke her",
        AR: "عندما تكون مستعدًا، إضغط هنا للإستمرار",
        PT: "quando pronto, presione aquí para continuar",
        RO: "TODO",
        IND: "TODO"
    },
    enable: {
        EN: "Enable",
        FR: "Activer",
        SPN: "Habilitar",
        DE: "Aktivieren",
        IT: "Attiva",
        DA: "Aktivér",
        AR: "تمكين",
        PT: "habilitar",
        RO: "TODO",
        IND: "TODO"
    },
    deviceName: {
        EN: "Device Name",
        FR: "Nom du périphérique",
        SPN: "Nombre del dispositivo",
        DE: "Gerätename",
        IT: "Nome del dispositivo",
        DA: "Enhedens navn",
        AR: "اسم الجهاز",
        PT: "nome do dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    ipv4Address: {
        EN: "IPv4 Address",
        FR: "Adresse IPv4",
        SPN: "IPv4 Dirección",
        DE: "IPv4-Adresse",
        IT: "Indirizzo IPv4",
        DA: "IPv4-adresse",
        AR: "عنوان IPv4",
        PT: "endereço IPv4",
        RO: "TODO",
        IND: "TODO"
    },
    ipv4AddressWan: {
        EN: "Address",
        FR: "Adresse",
        SPN: "Dirección",
        DE: "Adresse",
        IT: "Indirizzo",
        DA: "Adresse",
        AR: "عنوان",
        PT: "endereço",
        RO: "TODO",
        IND: "TODO"
    },
    gatewayIP: {
        EN: "IP address",
        FR: "Adresse IP",
        SPN: "Gateway IP",
        DE: "IP-Adresse",
        IT: "Indirizzo IP gateway",
        DA: "IP-adresse",
        AR: "عنوان IP",
        PT: "endereço de IP",
        RO: "TODO",
        IND: "TODO"
    },
    gatewayHostname: {
        EN: "Hostname",
        FR: "Nom d'hôte",
        SPN: "Nombre de Host",
        DE: "Hostname",
        IT: "Nome host",
        DA: "Hostnavn",
        AR: "اسم المضيف",
        PT: "hostname",
        RO: "TODO",
        IND: "TODO"
    },
    invalidIpAddress: {
        EN: "Invalid IP Address",
        FR: "Adresse IP non valide",
        SPN: "Dirección IP no válida",
        DE: "Ungültige IP-Adresse",
        IT: "Indirizzo IP non valido",
        DA: "Ugyldig IP-adresse",
        AR: "عنوان IP غير صالح",
        PT: "endereço de IP invalido",
        RO: "TODO",
        IND: "TODO"
    },
    connectedComputer: {
        EN: "Connected computer",
        FR: "TODO",
        SPN: "Ordenador conectado",
        DE: "Verbundene Geräte",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Computer personal conectat",
        IND: "TODO"
    },
    conflictPortRange: {
        EN: "Ports range in conflict with another rule",
        FR: "TODO",
        SPN: "Rango de puertos en conflicto con otra regla",
        DE: "Gewählter Port-Bereich wird bereits von einer anderen Regel verwendet",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Lista de porturi se afla in conflict cu o alta regula",
        IND: "TODO"
    },
    notAllowedPortRange: {
        EN: "Port range not allowed by gateway settings",
        FR: "TODO",
        SPN: "Rango de puertos no permitido por el gateway",
        DE: "Port-Bereich steht für die Konfiguration nicht zur Verfügung",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Interval de porturi nepermis de setarile routerului",
        IND: "TODO"
    },
    startPort: {
        EN: "Start port",
        FR: "TODO",
        SPN: "Puerto de inicio",
        DE: "Anfangs-Port",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Port initial",
        IND: "TODO"
    },
    invalidStartPort: {
        EN: "Invalid start port",
        FR: "TODO",
        SPN: "Puerto de inicio invalido",
        DE: "Ungültiger Anfangs-Port",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Port initial invalid",
        IND: "TODO"
    },
    endPort: {
        EN: "End port",
        FR: "TODO",
        SPN: "Puerto de fin",
        DE: "Port-Ende",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Port final",
        IND: "TODO"
    },
    invalidEndPort: {
        EN: "Invalid end port",
        FR: "TODO",
        SPN: "Puerto de fin invalido",
        DE: "Ungültiges Port-Ende",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Port final invalid",
        IND: "TODO"
    },
    invalidPortsRange: {
        EN: "Invalid ports range",
        FR: "TODO",
        SPN: "Rango de puertos invalido",
        DE: "Ungültiger Port-Bereich",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Interval porturi invalid",
        IND: "TODO"
    },
    invalidInternalPort: {
        EN: "Invalid internal port",
        FR: "TODO",
        SPN: "Puerto interno invalido",
        DE: "Ungültiger interner Port",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Port intern invalid",
        IND: "TODO"
    },
    applyGatewayChangesDescription: {
        EN: "The action you performed may cause devices to temporarily lose connectivity. If you changed the IP address of the gateway, you will have to change the IP address in your browser before accessing the configuration interface again.",
        FR: "Cette action peut temporairement déconnecter vos périphériques. Si vous avez modifié l'adresse IP de la passerelle, vous devrez modifier l'adresse IP dans votre navigateur avant d'accéder de nouveau au site web de configuration.",
        SPN: "La acción que ha realizado puede causar que dispositivos pierdan conectividad. Si ha cambiado la dirección IP de la puerta de entrada tendrá que cambiar la dirección IP en el navegador antes de acceder a la interfaz de configuración de nuevo.",
        DE: "Die von Ihnen ausgeführte Aktion kann dazu führen, dass die Geräte vorübergehend die Verbindung verlieren. Wenn Sie die IP-Adresse des Gateways geändert haben, müssen Sie die IP-Adresse in Ihrem Browser vor dem Zugriff auf die Konfigurationsoberfläche erneut ändern.",
        IT: "Questa configurazione potrebbe causare una perdita temporanea della connessione al gateway. Se si cambia l'indirizzo IP del gateway, allora si dovrà cambiare anche l'indirizzo nel browser prima di poter accedere nuovamente all'interfaccia di configurazione.",
        DA: "Den handling, som du har udført, kan gøre, at enhederne midlertidigt mister forbindelsen. Hvis du har ændret gatewayens IP-adresse, skal du ændre IP-adressen i din browser, før du går ind på konfigurationsbrugerfladen igen.",
        AR: "الإجراء الذي قمت به قد يتسبب في فقدان أجهزتك للإتصال بشكل مؤقت. إذا قمت بتغيير عنوان IP الخاص بالبوابة سوف تحتاج إلى تغيير عنوان IP في المتصفح الخاص بك قبل الدخول إلى واجهة التكوين مرة أخرى",
        PT: "A acçao pode causar a perda temporaria de conectividade. se voce alterou o endereço de IP do seu gateway, vai ter que alterar o endereço de IP do seu browser antes de aceder ao interface de configuraçao novamente.",
        RO: "TODO",
        IND: "TODO"
    },
    applyDNSChangesDescription: {
        EN: "Note that changing the DNS address will make the parental control ineffective",
        FR: "Le changement d'adresse DNS rendra le contrôle parental inopérant",
        SPN: "Considere que cambiar los DNS hara que el control parental no sea efectivo",
        DE: "Bitte beachten Sie, dass durch eine Änderung der DNS-Adresse die Kindersicherung nicht mehr funktioniert.",
        IT: "Il cambio di indirizzo di DNS rende il controllo parentale non più valido",
        DA: "Bemærk at en ændring af DNS IP adresse vil deaktivere Forældrekontrol. Forældrekontrol skal opsættes igen.",
        AR: "TODO",
        PT: "TODO",
        RO: "Nota: Schimbarea adresei DNS va genera dezactivarea controlului parental",
        IND: "TODO"
    },
    reconnectInstructionsDHCP: {
        EN: "The action you performed will cause devices to temporarily lose connectivity. To recover the conectivity with the gateway, you will have to change the IP address in your browser before accessing the configuration interface again.",
        FR: "TODO",
        SPN: "La accion realizada causara una perdidad de conexion temporal en los dispositivos. Para recuperar la conectividad con el gateway",
        DE: "Diese Aktion bewirkt, dass die Verbindung zu allen angeschlossenen Geräten kurz beendet werden muss. Um die Verbindung zu dieser Benutzeroberfläche wieder herzustellen, müssen Sie die IP-Adresse in Ihrem Browser entsprechend Ihrer Eingaben ändern.",
        IT: "TODO",
        DA: "Den ændring du har udført bevirker at dit udstyr mister forbindelsen til dit WiFiModem indtil udstyret har fået en ny IP adresse. For at tilgå WiFiModem websiden skal det nye IP scope netwærks adresse anvendes i adressefeltet i din internet browser.",
        AR: "TODO",
        PT: "TODO",
        RO: "Actiunea intreprinsa va cauza pierderea temporara a activitatii. Pentru a recupera conexiunea la retea trebuie sa schimbati adresa IP in aplicatia de internet inainte de a accesa din nou interfata de configurare.",
        IND: "TODO"
    },
    reconnectInstructionsLinkDHCP: {
        EN: "You can wait few seconds and click in the link below, to access the new gateway address",
        FR: "TODO",
        SPN: "Puede esperar unos segundos y click en el enlace de abajo",
        DE: "Um auf die neue IP-Adresse Ihres Gatways zugreifen zu können, warten Sie einige Sekundne und klicken dann auf den Link unten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Asteptati cateva secunde si dati click pe link-ul de mai jos, pentru a avea acces la noua adresa de portal",
        IND: "TODO"
    },
    reconnectInstructionsRenewDHCP: {
        EN: "You also have to renew your IP Address, you can try do disconnect and connect the Ethernet cable or leave and rejoin the wireless network.",
        FR: "TODO",
        SPN: "Tiene que renovar su direccion IP",
        DE: "Sie müssen auch auch die IP-Adresse Ihrer Netzwerkverbindung aktualisieren. Wenn Sie per LAN-Kabel verbunden sind, trennen Sie diese bitte für einige Sekunden und verbinden Ihr Gerät erneut. Wenn Sie per WLAN verbunden sind, trennen Sie für einige Sekunden die drahtlose Verbindung und verbinden sich anschließend wieder.",
        IT: "TODO",
        DA: "Det kan vær nødvendigt at afbryde forbindelsen til dit WiFiModem og oprette forbindelsen igen.",
        AR: "TODO",
        PT: "TODO",
        RO: "Va trebui sa va schimbati si adresa IP, puteti incerca o reintroducere a cablului de retea sau sa va reconectati la reteaua Wi-Fi.",
        IND: "TODO"
    },
    changesApplied: {
        EN: "Changes applied",
        FR: "TODO",
        SPN: "Cambios aplicados",
        DE: "Änderungen wurden übernommen",
        IT: "TODO",
        DA: "Ændring udført",
        AR: "TODO",
        PT: "TODO",
        RO: "Modificari aplicate",
        IND: "TODO"
    },
    applyChanges: {
        EN: "Are you sure?",
        FR: "Êtes-vous sûr?",
        SPN: "Estás seguro?",
        DE: "Sind Sie sicher?",
        IT: "Sei sicuro?",
        DA: "Er du sikker?",
        AR: "هل أنت متأكد؟",
        PT: "Tem a certeza?",
        RO: "TODO",
        IND: "TODO"
    },
    invalidLeaseTime: {
        EN: "Invalid lease time",
        FR: "Durée de bail invalide",
        SPN: "Tiempo de concesión no válido",
        DE: "Zeitraum für die Gültigkeit der zugeordneten IP-Adresse ungültig",
        IT: "Tempo di connessione non valido",
        DA: "Ugyldig lease time",
        AR: "وقت إيجار غير صالح",
        PT: "Tempo de concessao invalido",
        RO: "TODO",
        IND: "TODO"
    },
    invalidMacAddress: {
        EN: "Invalid MAC Address",
        FR: "Adresse MAC invalide",
        SPN: "Dirección MAC no válida",
        DE: "Ungültige MAC-Adresse",
        IT: "Indirizzo MAC non valido",
        DA: "Ugyldig MAC-adresse",
        AR: "عنوان MAC غير صالح",
        PT: "MAC Address invalido",
        RO: "TODO",
        IND: "TODO"
    },
    macAddressAlreadyExists: {
        EN: "MAC Address already exists",
        FR: "l'adresse MAC existe déjà",
        SPN: "Ya existe la dirección MAC",
        DE: "MAC-Adresse ist bereits vorhanden",
        IT: "Indirizzo MAC già esistente",
        DA: "MAC-adressen findes allerede",
        AR: "عنوان MAC موجود بالفعل",
        PT: "já existe esse MAC address",
        RO: "TODO",
        IND: "TODO"
    },
    macInUse: {
        EN: "MAC already in use",
        FR: "MAC en cours d'utilisation",
        SPN: "MAC ya está en uso",
        DE: "MAC-Adresse wird bereits verwendet",
        IT: "Indirizzo MAC già configurato",
        DA: "MAC allerede i brug",
        AR: "MAC مستخدم بالفعل",
        PT: "MAC já está em uso",
        RO: "TODO",
        IND: "TODO"
    },
    invalidIpRange: {
        EN: "Invalid IP in Range",
        FR: "IP en dehors du sous-réseau",
        SPN: "En el rango IP no válida",
        DE: "Ungültiger IP-Adressbereich",
        IT: "Indirizzo IP al di fuori del servizio DHCP",
        DA: "Ugyldig IP i intervallet",
        AR: "IP غير صالح في هذا النطاق",
        PT: "Gama de IP invalida",
        RO: "TODO",
        IND: "TODO"
    },
    ipInUse: {
        EN: "IP already in use",
        FR: "IP en cours d'utilisation",
        SPN: "IP ya está en uso",
        DE: "IP-Adresse wird bereits verwendet",
        IT: "Indirizzo IP già in uso",
        DA: "IP allerede i brug",
        AR: "IP مستخدم بالفعل",
        PT: "IP ja em uso",
        RO: "TODO",
        IND: "TODO"
    },
    subnetMask: {
        EN: "Subnet Mask",
        FR: "Masque de sous-réseau",
        SPN: "Máscara de Subnet",
        DE: "Subnetzmaske",
        IT: "Maschera di sottorete",
        DA: "Subnet maske",
        AR: "قناع شبكة فرعية",
        PT: "mascara de subnet",
        RO: "TODO",
        IND: "TODO"
    },
    subnetMaskWan: {
        EN: "Mask",
        FR: "Masque",
        SPN: "Máscara",
        DE: "Maske",
        IT: "Maschera",
        DA: "Maske",
        AR: "قناع",
        PT: "mascara",
        RO: "TODO",
        IND: "TODO"
    },
    ipv4PoolStart: {
        EN: "IPv4 Pool Start",
        FR: "Adresse IP de début",
        SPN: "IPv4 Pool Inicio",
        DE: "Erste IPv4 IP-Adresse",
        IT: "IPv4 iniziale",
        DA: "IPv4-puljestart",
        AR: "بداية عنوان IPv4 الخاص بـ  Pool",
        PT: "IPv4 pool inicio",
        RO: "TODO",
        IND: "TODO"
    },
    ipv4PoolEnd: {
        EN: "IPv4 Pool End",
        FR: "Adresse IP de fin",
        SPN: "IPv4 Pool Final",
        DE: "Letzte IPv4 IP-Adresse",
        IT: "IPv6 finale",
        DA: "IPv4-puljeslut",
        AR: "نهاية عنوان IPv4 الخاص بـ  Pool",
        PT: "IPv4 pool fim",
        RO: "TODO",
        IND: "TODO"
    },
    ipv4TvPoolStart: {
        EN: "IPv4 TV Pool Start",
        FR: "Adresse IP TV de début",
        SPN: "IPv4 TV Pool Inicio",
        DE: "Erste IPv4 IPTV-Adresse",
        IT: "IPv4 TV iniziale",
        DA: "IPv4 tv-puljestart",
        AR: "بداية عنوان IPv4 الخاص بـ Tv Pool",
        PT: "IPv4 TV pool inicio",
        RO: "TODO",
        IND: "TODO"
    },
    ipv4TvPoolEnd: {
        EN: "IPv4 TV Pool End",
        FR: "Adresse IP TV de fin",
        SPN: "IPv4 TV Pool Final",
        DE: "Letzte IPv4 IPTV-Adresse",
        IT: "IPv4 TV finale",
        DA: "IPv4 tv-puljeslut",
        AR: "نهاية عنوان IPv4 الخاص بـ Tv Pool",
        PT: "IPv4 TV pool fim",
        RO: "TODO",
        IND: "TODO"
    },
    ipv4TvPool: {
        EN: "IPv4 Tv Pool",
        FR: "Plage IPv4 TV",
        SPN: "IPv4 TV Pool",
        DE: "IPv4-Adressbereich",
        IT: "Servizio DHCP IPv4 TV",
        DA: "IPv4 tv-pulje",
        AR: "عنوان IPv4 الخاص بـ Tv Pool",
        PT: "IPv4 TV pool",
        RO: "TODO",
        IND: "TODO"
    },
    tvDevicesDhcpClassId: {
        EN: "TV Devices DHCP Class Id",
        FR: "DHCP Class ID du périphérique TV",
        SPN: "DHCP Clase ID dos Aparatos de TV",
        DE: "DHCP-ID-Klasse des TV Gerätes",
        IT: "DHCP Class ID del dispositivo TV",
        DA: "Tv-enhedens DHCP-klasse-id",
        AR: "أجهزة TV معرف فئة DHCP ",
        PT: "dispositivos TV DHCP classe Id",
        RO: "TODO",
        IND: "TODO"
    },
    ipv4LeaseTime: {
        EN: "IPv4 Lease Time",
        FR: "Durée du bail IPv4",
        SPN: "IPv4 Tiempo de Alquiler",
        DE: "Gültigkeitsdauer der IPv4 IP-Adresse",
        IT: "Tempo di connessione IPv4",
        DA: "IPv4-rettighedstid",
        AR: "زمن إيجار IPv4 ",
        PT: "IPv4 tempo de concessao",
        RO: "TODO",
        IND: "TODO"
    },
    "1hour": {
        EN: "1 hour",
        FR: "1 heure",
        SPN: "1 hora",
        DE: "1 Stunde",
        IT: "1 ora",
        DA: "1 time",
        AR: "1 ساعة",
        PT: "1 hora",
        RO: "TODO",
        IND: "TODO"
    },
    "23hours": {
        EN: "23 hours",
        FR: "23 heures",
        SPN: "23 horas",
        DE: "23 Stunden",
        IT: "23 ore",
        DA: "23 timer",
        AR: "TODO",
        PT: "23 horas",
        RO: "23 de ore",
        IND: "TODO"
    },
    "1day": {
        EN: "1 day",
        FR: "1 jour",
        SPN: "1 día",
        DE: "1 Tag",
        IT: "1 giorno",
        DA: "1 dag",
        AR: "1 يوم",
        PT: "1 dia",
        RO: "TODO",
        IND: "TODO"
    },
    "3days": {
        EN: "3 days",
        FR: "3 jours",
        SPN: "3 días",
        DE: "3 Tage",
        IT: "3 giorni",
        DA: "3 dage",
        AR: "3 أيام",
        PT: "3 dias",
        RO: "TODO",
        IND: "TODO"
    },
    "1week": {
        EN: "1 week",
        FR: "1 semaine",
        SPN: "1 semana",
        DE: "1 Woche",
        IT: "1 settimana",
        DA: "1 uge",
        AR: "1 أسبوع",
        PT: "1 semana",
        RO: "TODO",
        IND: "TODO"
    },
    inSeconds: {
        EN: "(in seconds)",
        FR: "(en secondes)",
        SPN: "(En cuestión de segundos)",
        DE: "(in Sekunden)",
        IT: "(in secondi)",
        DA: "(i sekunder)",
        AR: "(في ثواني)",
        PT: "(em segundos)",
        RO: "TODO",
        IND: "TODO"
    },
    restoreDefaultConfiguration: {
        EN: "Restore Default DHCP Configuration",
        FR: "Restaurer la configuration DHCP par défaut",
        SPN: "Restaurar configuración DHCP predeterminada",
        DE: "DHCP-Ausgangskonfiguration wiederherstellen",
        IT: "Ripristina configurazione iniziale del tempo di connessione DHCP",
        DA: "Gendan standkonfigurationen for DHCP",
        AR: "استعادة تكوين DHCP الإفتراضي",
        PT: "Restaurar a configuraçao por defeito de DHCP",
        RO: "TODO",
        IND: "TODO"
    },
    restore: {
        EN: "Restore",
        FR: "Restaurer",
        SPN: "Restaurar",
        DE: "Wiederherstellen",
        IT: "Ripristina",
        DA: "Gendan",
        AR: "استعادة ",
        PT: "restaurar",
        RO: "TODO",
        IND: "TODO"
    },
    addReservedAddress: {
        EN: "Add Reserved Address",
        FR: "Ajouter une adresse réservée",
        SPN: "Añadir direcciones reservadas",
        DE: "Reservierte Adresse hinzufügen",
        IT: "Aggiungi un indirizzo IP pre-assegnato",
        DA: "Tilføj reserveret adresse",
        AR: "إضافة عنوان محفوظ",
        PT: "Adicionar endereços reservados",
        RO: "TODO",
        IND: "TODO"
    },
    macAddressHowToFill: {
        EN: "MAC Address format is YY:YY:YY:YY:YY:YY (Y between 0 and 9 or between A and F)",
        FR: "Le format de l'adresse physique est YY:YY:YY:YY:YY:YY (Y entre 0 et 9 ou entre A et F)",
        SPN: "Formato de dirección MAC es YY:YY:YY:YY:YY:YY (TODO)",
        DE: "MAC-Adressformat ist  AA:BB:CC:DD:EE:FF",
        IT: "Il formato dell'indirizzo MAC è AA:BB:CC:DD:EE:FF",
        DA: "MAC-adressens format er YY:YY:YY:YY:YY:YY (Y mellem 0 og 9 eller mellem A og F)",
        AR: "تنسيق عنوان MAC هو AA:BB:CC:DD:FF",
        PT: "formato de MAC Address YY:YY:YY:YY:YY:YY (Y entre 0 e 9 ou entre A e F)",
        RO: "TODO",
        IND: "TODO"
    },
    ipv4AddressHowToFill: {
        EN: "IPv4 Address format is X.X.X.X (X between 0 and 255)",
        FR: "Le format de l'adresse IPv4 est X.X.X.X (X entre 0 et 255)",
        SPN: "Formato de dirección IPv4 es  X.X.X.X (X between 0 and 255)",
        DE: "IPv4-Addressformat ist x.x.x.x (X ist eine Zahl zwischen 0 und 255)",
        IT: "Il formato dell'indirizzo IP è x.x.x.x (X tra 0 e 255)",
        DA: "IPv4-adressens format er X.X.X.X (X mellem 0 og 255)",
        AR: "تنسيق عنوان IPv4 هو x.x.x.x ( xبين الصفر و 255)",
        PT: "formato de endereço IPv4 X.X.X.X (X entre 0 e 255)",
        RO: "TODO",
        IND: "TODO"
    },
    addMacAddress: {
        EN: "Add MAC Address",
        FR: "Ajouter adresse physique",
        SPN: "xxxxxxxxxxxxxxxx",
        DE: "MAC-Adresse hinzufügen",
        IT: "Aggiungi indirizzo MAC",
        DA: "Tilføj MAC-adresse",
        AR: "إضافة عنوان MAC",
        PT: "adicionar MAC address",
        RO: "TODO",
        IND: "TODO"
    },
    systemResources: {
        EN: "System Resources",
        FR: "Ressources du système",
        SPN: "Recursos del Sistema",
        DE: "Systemressourcen",
        IT: "Risorse del sistema",
        DA: "Systemressourcer",
        AR: "موارد النظام",
        PT: "recursos de sistema",
        RO: "TODO",
        IND: "TODO"
    },
    port: {
        EN: "Port",
        FR: "Port",
        SPN: "Puerta",
        DE: "Port",
        IT: "Porta",
        DA: "Port",
        AR: "منفذ",
        PT: "Porta",
        RO: "TODO",
        IND: "TODO"
    },
    deviceinfo: {
        EN: "Device Info",
        FR: "Informations",
        SPN: "Información del dispositivo",
        DE: "Geräteinformation",
        IT: "Informazioni del gateway",
        DA: "Enhedsoplysninger",
        AR: "معلومات الجهاز",
        PT: "informaçao do dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    general: {
        EN: "General",
        FR: "Général",
        SPN: "General",
        DE: "Allgemein",
        IT: "Generale",
        DA: "Generelt",
        AR: "عام",
        PT: "geral",
        RO: "TODO",
        IND: "TODO"
    },
    hostName: {
        EN: "Hostname",
        FR: "Nom d'hôte",
        SPN: "Hostname",
        DE: "Host-Name",
        IT: "Nome host",
        DA: "Hostnavn",
        AR: "اسم المضيف",
        PT: "hostname",
        RO: "TODO",
        IND: "TODO"
    },
    IPAddress: {
        EN: "IP address",
        FR: "Adresse IP",
        SPN: "Dirección IP",
        DE: "IP-Adresse",
        IT: "Indirizzo IP",
        DA: "IP-adresse",
        AR: "عنوان IP ",
        PT: "endereço IP",
        RO: "TODO",
        IND: "TODO"
    },
    MACAddress: {
        EN: "MAC address",
        FR: "Adresse physique",
        SPN: "Dirección MAC",
        DE: "MAC-Adresse",
        IT: "Indirizzo MAC",
        DA: "MAC-adresse",
        AR: "عنوان MAC",
        PT: "MAC address",
        RO: "TODO",
        IND: "TODO"
    },
    friendlyName: {
        EN: "Friendly Name",
        FR: "Nom",
        SPN: "Nombre descriptivo",
        DE: "Name",
        IT: "Nome",
        DA: "Brugervenligt navn",
        AR: "اسم مألوف",
        PT: "nome ",
        RO: "TODO",
        IND: "TODO"
    },
    icon: {
        EN: "Icon",
        FR: "Icône",
        SPN: "Icono",
        DE: "Symbol",
        IT: "Icona",
        DA: "Ikon",
        AR: "أيقونة",
        PT: "icono",
        RO: "TODO",
        IND: "TODO"
    },
    select: {
        EN: "Select",
        FR: "Sélectionner",
        SPN: "Seleccionar",
        DE: "Auswählen",
        IT: "Seleziona",
        DA: "Vælg",
        AR: "اختر",
        PT: "Seleccionar",
        RO: "TODO",
        IND: "TODO"
    },
    computer: {
        EN: "Computer",
        FR: "Ordinateur",
        SPN: "Computador",
        DE: "Computer",
        IT: "Computer",
        DA: "Computer",
        AR: "كمبيوتر",
        PT: "computador",
        RO: "TODO",
        IND: "TODO"
    },
    notebook: {
        EN: "Notebook",
        FR: "Ordinateur portable",
        SPN: "Ordenador portátil",
        DE: "Notebook",
        IT: "PC portatile",
        DA: "Notebook",
        AR: "دفتر ملاحظات",
        PT: "portatil",
        RO: "TODO",
        IND: "TODO"
    },
    tablet: {
        EN: "Tablet",
        FR: "Tablet",
        SPN: "Tablet",
        DE: "Tablet",
        IT: "Tablet",
        DA: "Tablet",
        AR: "كمبيوتر لوحي",
        PT: "tablet",
        RO: "TODO",
        IND: "TODO"
    },
    phone: {
        EN: "Phone",
        FR: "Téléphone",
        SPN: "Teléfono",
        DE: "Telefon",
        IT: "Telefono",
        DA: "Telefon",
        AR: "هاتف",
        PT: "telefone",
        RO: "TODO",
        IND: "TODO"
    },
    location: {
        EN: "Location",
        FR: "Location",
        SPN: "Localización",
        DE: "Standort",
        IT: "Ubicazione",
        DA: "Placering",
        AR: "الموقع",
        PT: "localizaçao",
        RO: "TODO",
        IND: "TODO"
    },
    deviceInDmz: {
        EN: "This Device is in DMZ",
        FR: "Ce dispositif est en DMZ",
        SPN: "Este dispositivo está en DMZ",
        DE: "Dieses Gerät befindet sich in der DMZ",
        IT: "Questo dispositivo è in DMZ",
        DA: "Denne enhed er i DMZ",
        AR: "هذا الجهاز في DMZ.",
        PT: "este dispositivo esta em DMZ",
        RO: "TODO",
        IND: "TODO"
    },
    dmzTip: {
        EN: "Activate DMZ on a device to make it reachable from Internet.",
        FR: "Activer la DMZ sur un dispositif pour le rendre accessible depuis Internet.",
        SPN: "Activar DMZ en el dispositivo para que sea accesible a través de internet.",
        DE: "DMZ aktivieren, um auf das Gerät aus dem Internt zugreifen zu können.",
        IT: "Attiva la DMZ di un dispositivo per poterlo raggiungere da remoto.",
        DA: "Aktiver DMZ på en enhed for at gøre den tilgængelig fra internettet.",
        AR: "تنشيط DMZ على الجهاز لتمكين الوصول إليه من الإنترنت. ",
        PT: "activar DMZ no dispositivo para ser alcançado desde a internet",
        RO: "TODO",
        IND: "TODO"
    },
    noDeviceInDmz: {
        EN: "No Device in DMZ",
        FR: "Aucun dispositif dans la DMZ",
        SPN: "No hay dispositivos en DMZ",
        DE: "Kein Gerät in der DMZ",
        IT: "Nessun dispositivo in DMZ",
        DA: "Ingen enhed i DMZ",
        AR: "لا يوجد جهاز في DMZ.",
        PT: "Sem dispositivos em DMZ",
        RO: "TODO",
        IND: "TODO"
    },
    otherDeviceInDmz1: {
        EN: "One other device is already in DMZ",
        FR: "Un autre dispositif est déjà en DMZ",
        SPN: "Otro dispositivo ya está en DMZ",
        DE: "Es ist bereits ein Gerät in der DMZ",
        IT: "Un altro dispositivo è già in DMZ",
        DA: "Der findes allerede en anden enhed i DMZ",
        AR: "جهاز واحد آخر موجود بالفعل في DMZ. ",
        PT: "nenhum outro dispositivo esta em DMZ",
        RO: "TODO",
        IND: "TODO"
    },
    otherDeviceInDmz2: {
        EN: "Only one device can be set in DMZ. Clicking below will interrupt access to services on previous device.",
        FR: "La DMZ ne peut contenir qu'un seul dispositif. En cliquant ci-dessous, vous interromprez l'accès aux services sur le dispositif précédent.",
        SPN: "Sólo un dispositivo se puede configurar en DMZ. Al hacer clic abajo se interrumpirá el acceso a los servicios en el dispositivo anterior.",
        DE: "Es kann nur ein Gerät in der DMZ sein. Wenn Sie die Auswahl bestätigen wird der Zugriff auf das bisherige Gerät unterbrochen.",
        IT: "Solamente un dispositivo alla volta può esser messo in DMZ. Premere qui sotto interromperà l'accesso alla DMZ sul dispositivo precedentemente configurato.",
        DA: "Kun én enhed kan indstilles i DMZ. Ved at klikke herunder afbryder du adgang til tjenesten på den senest anvendte enhed.",
        AR: "يمكن تعيين جهاز واحد فقط في DMZ. بالضغط أدناه سوف يقطع الوصول للخدمات الموجودة على الجهاز السابق ",
        PT: "apenas um dispositivo pode ser configurado em DMZ. Pressionando aquí vai interromper o acesso aos serviços no outro dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    mainTip1: {
        EN: "Find here useful information about your gateway.",
        FR: "Trouvez ici des informations utiles sur votre modem.",
        SPN: "Aquí podrá encontrar información útil sobre su módem.",
        DE: "Hier finden Sie nützliche Informationen über Ihr Gateway.",
        IT: "Qui puoi trovare le informazioni utili sul tuo modem.",
        DA: "Her kan du finde praktiske oplysninger om din gateway.",
        AR: "تجد هنا معلوماتٍ مفيدة عن بوابتك.",
        PT: "encontre aquí informaçao util sobre o seu gateway",
        RO: "TODO",
        IND: "TODO"
    },
    mainTip2: {
        EN: "Here you can control the access of your gateway and your devices.",
        FR: "Ici vous pouvez contrôler l'accès de vos périphériques à votre modem.",
        SPN: "Aquí puede controlar el acceso de los dispositivos a su módem",
        DE: "Hier können Sie Einstellungen zur Zugangskontrolle des gateway und Ihrer Endgeräte vornehmen",
        IT: "Qui puoi controllare l'accesso al tup modem e ai tuoi apparati.",
        DA: "Her kan du styre adgang til din gateway og dine enheder.",
        AR: "هنا يمكنك التحكم في الوصول إلى بوابتك وأجهزتك.",
        PT: "aquí pode controlar o acesso ao seu gateway e outros dispositivos",
        RO: "TODO",
        IND: "TODO"
    },
    mainTip3: {
        EN: "Here you can see the current internet connectivity status.",
        FR: "Ici vous pouvez voir l'état actuel de la connexion Internet.",
        SPN: "Aquí puedes ver el estado de conectividad de Internet actual.",
        DE: "Hier sehen Sie den aktuellen Status Ihrer Internetverbindung.",
        IT: "Qui puoi vedere lo stato di connettività Internet.",
        DA: "Her kan du se den aktuelle status for din internetforbindelse.",
        AR: "هنا يمكنك رؤية حالة الإتصال بالانترنت الراهنة.",
        PT: "aquí pode ver o estado actual da sua ligaçao á internet",
        RO: "TODO",
        IND: "TODO"
    },
    mainTip4: {
        EN: "Find here the information about the devices connected to your gateway.",
        FR: "Trouvez ici les informations sur les appareils connectés à votre modem.",
        SPN: "Aquí podrá encontrar información sobre los dispositivos conectados a su módem.",
        DE: "Hier finden Sie Informationen über die an Ihrem Gateway angeschlossenen Endgeräte",
        IT: "Qui puoi trovare le informazioni sugli apparati connessi al tuo modem.",
        DA: "Her kan du finde oplysninger om de enheder, der er forbundet til din gateway.",
        AR: "تجد هنا معلومات مفيدة عن الأجهزة الموصولة ببوابتك.",
        PT: "encontre aquí informaçao sobre os dispositivos ligados ao seu gateway",
        RO: "TODO",
        IND: "TODO"
    },
    mainTip5: {
        EN: "Here you can see the information about your wireless 2.4 GHz.",
        FR: "Ici vous pouvez voir les informations sur votre réseau 2.4GHz sans fil.",
        SPN: "Aquí se puede ver la información acerca de su 2.4GHZ inalámbrica.",
        DE: "Hier finden Sie Informationen zu Ihrem 2.4GHz-WLAN.",
        IT: "Qui puoi vedere le informazioni sulla rete Wi-Fi 2.4Ghz.",
        DA: "Her kan du se oplysninger om dit 2,4 GHz trådløse netværk.",
        AR: "هنا يمكنك رؤية المعلومات بشأن الشبكة اللاسلكية الخاصة بك وسعتها  2.4 GHz.",
        PT: "aquí pode ver a informaçao sobre a sua rede sem fios de 2.4GHz",
        RO: "TODO",
        IND: "TODO"
    },
    mainTipBandsteering: {
        EN: "Here you can see the information about your wireless.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "aquí pode ver a informaçao sobre a sua rede sem fios",
        RO: "TODO",
        IND: "TODO"
    },
    mainTip6: {
        EN: "See the information about your phones.",
        FR: "Voir les informations sur votre téléphone.",
        SPN: "Aquí se puede ver la información sobre sus teléfonos.",
        DE: "Sehen Sie Informationen über angeschlossene Telefone.",
        IT: "Vedi le informazioni sui telefoni.",
        DA: "Se oplysninger om dine telefoner.",
        AR: "إنظر المعلومات بشأن الهواتف الخاصة بك",
        PT: "veja a informaçao sobre os seu telefones",
        RO: "TODO",
        IND: "TODO"
    },
    mainTip7: {
        EN: "Click on configure button for more details of each section.",
        FR: "Cliquer sur le bouton de configuration pour plus de détails sur chaque section.",
        SPN: "Puede hacer clic en el botón de configuración para más detalles de cada sección.",
        DE: "Klicken Sie auf das Konfigurationssymbol, um mehr Details zum jeweiligen Beriech zu erhalten.",
        IT: "Premere sul bottone di configurazione per aver più dettagli in ogni sezione.",
        DA: "Klik på konfigureringsknappen for at få flere detaljer om hver sektion.",
        AR: "إضغط على زر تكوين للمزيد من التفاصيل عن كل قسم",
        PT: "Pressione em configurar para obter mais detalhes em cada secçao",
        RO: "TODO",
        IND: "TODO"
    },
    mainTip8: {
        EN: "And click here to show updated data.",
        FR: "Et cliquez ici pour afficher des données actualisées.",
        SPN: "Y haga clic aquí para ver los datos actualizados.",
        DE: "Und klicken Sie hier, um die Anzeige zu aktualisieren.",
        IT: "E premi qui per visualizzare i dati aggiornati.",
        DA: "Og klik her for at få vist opdaterede data.",
        AR: "إضغط هنا لإظهار البيانات المحدثة",
        PT: "e pressione aquí para obter informaçao actualizada",
        RO: "TODO",
        IND: "TODO"
    },
    mainTip9: {
        EN: "Here you can see the information about your wireless 5 GHz.",
        FR: "Ici vous pouvez voir les informations sur votre réseau 5GHz sans fil.",
        SPN: "Aquí se puede ver la información acerca de su 5GHZ inalámbrica.",
        DE: "Hier finden Sie Informationen zu Ihrem 5GHz-WLAN.",
        IT: "Qui puoi vedere le informazioni sulla rete Wi-Fi 5Ghz.",
        DA: "Her kan du se oplysninger om dit trådløse 5 Ghz-netværk.",
        AR: "هنا يمكنك رؤية المعلومات بشأن الشبكة اللاسلكية الخاصة بك وسعتها  5 GHz.",
        PT: "aquí pode ver informaçao sobre a sua rede 5GHz",
        RO: "TODO",
        IND: "TODO"
    },
    mainTip10: {
        EN: "Here you can see the information about your USB devices.",
        FR: "Ici vous pouvez voir les informations sur vos périphériques USB.",
        SPN: "Aquí se puede ver la información acerca de los dispositivos USB.",
        DE: "Hier finden Sie Informationen der angeschlossenen USB-Geräte.",
        IT: "Qui puoi vedere le informazione sui dispositivi USB.",
        DA: "Her kan du se oplysninger om dine USB-enheder.",
        AR: "هنا يمكنك رؤية المعلومات بشأن أجهزة USB الخاصة بك.",
        PT: "aquí pode ver informaçao sobre os seus dispositivos USB",
        RO: "TODO",
        IND: "TODO"
    },
    mainTip11: {
        EN: "Check your voicemail.",
        FR: "Consulter votre répondeur téléphonique",
        SPN: "Chequee su buzon de voz",
        DE: "Sprachnachrichten prüfen.",
        IT: "Controlla la segreteria telefonica.",
        DA: "Tjek din voicemail.",
        AR: "TODO",
        PT: "Consulte o seu voicemail",
        RO: "Verificati casuta vocala.",
        IND: "TODO"
    },
    mainTip12: {
        EN: "Click here for Web Radio",
        FR: "Cliquer ici pour ouvrir la radio Web",
        SPN: "Click para Radio Web",
        DE: "Klicken Sie hier, um Internetradio zu hören",
        IT: "Seleziona qui per aprire la Web Radio",
        DA: "Klik her for web-radio",
        AR: "TODO",
        PT: "pressione aquí para radio web",
        RO: "Click aici pentru Radio Web",
        IND: "TODO"
    },
    intwoHelp: {
        EN: "Here you can see the information about InTwo.",
        FR: "Ici vous pouvez voir les informations sur InTwo.",
        SPN: "Aquí se puede ver la información acerca de InTwo.",
        DE: "Hier sehen Sie die Informationen über InTwo.",
        IT: "Qui puoi vedere le informazioni su InTwo.",
        DA: "Her kan du se oplysninger om InTwo.",
        AR: "هنا يمكنك رؤية المعلومات بشأن InTwo.",
        PT: "aquí pode obter informaçao sobre InTwo",
        RO: "TODO",
        IND: "TODO"
    },
    ethernetTip1: {
        EN: "Here you can see the current status of the port.",
        FR: "Ici vous pouvez voir l'état actuel du port.",
        SPN: "Aquí puede ver el estado actual dla porta.",
        DE: "Hier finden Sie Statusinformationen zu Ihrem Anschluss.",
        IT: "Qui puoi vedere lo stato attuale delle porte.",
        DA: "Her kan du se den aktuelle status for porten.",
        AR: "هنا يمكنك رؤية الوضع الحالي للمنفذ",
        PT: "aquí pode ver o estado da porta",
        RO: "TODO",
        IND: "TODO"
    },
    ethernetTip2: {
        EN: "Here you can see the detailed data about the port.",
        FR: "Trouvez ici les données détaillées sur le port.",
        SPN: "Aquí puede ver los datos detallados sobre la porta.",
        DE: "Hier finden Sie detaillierte Daten zu Ihrem Anschluss.",
        IT: "Qui puoi vedere i dati dettagliati sulle porte.",
        DA: "Her kan du se detaljerede data for porten.",
        AR: "هنا يمكنك رؤية البيانات التفصيلية عن المنفذ",
        PT: "aquí pode ver informaçao detalhada sobre a porta",
        RO: "TODO",
        IND: "TODO"
    },
    ethernetTip3: {
        EN: "Here you can reset the data of the port.",
        FR: "Réinitialisez ici les données du port.",
        SPN: "Aquí puede restablecer los datos dla porta.",
        DE: "Hier können Sie die Daten Ihres Anschlusses zurücksetzen.",
        IT: "Qui puoi reinizializzare i dati delle porte.",
        DA: "Her kan du nulstille data for porten.",
        AR: "هنا يمكنك إعادة تعيين بيانات المنفذ",
        PT: "aquí pode fazer o reset da informaçao da porta",
        RO: "TODO",
        IND: "TODO"
    },
    ethernetTip4: {
        EN: "Here you can hide the detailed data about the port, or show more information about the port.",
        FR: "Ici vous pouvez masquer les données détaillées sur le port ou afficher plus d'informations sur le port.",
        SPN: "Aquí usted puede ocultar los datos detallados sobre el puerto, o mostrar más información sobre la porta.",
        DE: "Hier könenn Sie die Details zu Ihrem Anschluss ein- bzw. ausblenden.",
        IT: "Qui puoi nascondere i dati dettagliati sulle porte, o visualizzare più informazioni sulle porte.",
        DA: "Her kan du skjule de detaljerede data for porten eller vise flere oplysninger om porten.",
        AR: "هنا يمكنك إخفاء البيانات التفصيلية عن المنفذ، أو إظهار المزيد من المعلومات عن المنفذ",
        PT: "aquí pode ocultar a informaçao detalhada da porta, ou mostrar mais informaçao sobre a porta",
        RO: "TODO",
        IND: "TODO"
    },
    ethernetDeviceTip1: {
        EN: "Here is some basic information about of the selected device.",
        FR: "Voici quelques informations de base sur le périphérique sélectionné.",
        SPN: "Aquí hay alguna información básica acerca del dispositivo seleccionado.",
        DE: "Hier finden Sie Informationen zum ausgewählten Gerät.",
        IT: "Qui puoi vedere informazioni concise sul dispositivo selezionato.",
        DA: "Her er nogle grundlæggende oplysninger om den udvalgte enhed.",
        AR: "هنا بعض المعلومات الأساسية عن الجهاز الذي تم اختياره",
        PT: "aquí tem alguma informaçao basica sobre o dispositivo seleccionado",
        RO: "TODO",
        IND: "TODO"
    },
    ethernetDeviceTip2: {
        EN: "Here you can fill with a friendly name to identify the device.",
        FR: "Ici vous pouvez entrer un nom convivial pour identifier le dispositif.",
        SPN: "Aquí usted puede llenar con un nombre descriptivo para identificar el dispositivo.",
        DE: "Hier können Sie einen Namen zur leichteren Identifikation des Geräts vergeben.",
        IT: "Qui puoi inserire un nome descrittivo per identificare il dispositivo.",
        DA: "Her kan du angive et brugervenligt navn til at identificere enheden.",
        AR: "هنا يمكنك وضع اسم مألوف لتعريف الجهاز",
        PT: "aquí pode preencher o nome para identificar o dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    ethernetDeviceTip3: {
        EN: "Here you can change the icon shown.",
        FR: "Ici vous pouvez changer l'icône affichée.",
        SPN: "Aquí puede cambiar el icono que se muestra.",
        DE: "Hier können Sie das Anzeigesymbol ändern.",
        IT: "Qui puoi cambiare l'icona da visualizzare.",
        DA: "Her kan du ændre det viste ikon.",
        AR: "هنا يمكنك تغيير الأيقونة الظاهرة.",
        PT: "aquí pode alterar o icono",
        RO: "TODO",
        IND: "TODO"
    },
    ethernetDeviceTip4: {
        EN: "Here you can put the physical location of the device.",
        FR: "Ici vous pouvez renseigner l'emplacement physique du périphérique.",
        SPN: "Aquí puedes poner la ubicación física del dispositivo.",
        DE: "Hier können Sie den Standort des Geräts angeben.",
        IT: "Qui puoi inserire l'ubicazione del dispositivo.",
        DA: "Her kan du angive enhedens fysiske placering.",
        AR: "هنا يمكنك وضع الموقع الطبيعي للجهاز.",
        PT: "aquí pode alterar a localizaçao do dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    ethernetDeviceTip5: {
        EN: "Click in apply to submit your changes or in cancel to exit without save.",
        FR: "Cliquez sur 'Appliquer' pour valider vos modifications ou sur Annuler pour quitter sans sauvegarder.",
        SPN: "Haga clic en Aplicar para enviar los cambios o en Cancelar para salir sin guardar en.",
        DE: "Zum Speichern auf 'Anwenden' klicken. Zurück ohne zu Speichern mit 'Abbrechen'.",
        IT: "Premere 'Salva' per validare le modifiche o 'Cancella' per uscire senza salvare.",
        DA: "Klik på 'Anvend' for at registrere dine ændringer eller på 'Annuller' for at afslutte uden at gemme.",
        AR: "إضغط على تقدم لإرسال التغييرات التي قمت بها أو على إلغاء للخروج بدون حفظ التغييرات. ",
        PT: "pressione aplicar para guardar as modificaçoes ou cancelar para sair sem guardar",
        RO: "TODO",
        IND: "TODO"
    },
    ethernetDeviceTip6: {
        EN: "You can navigate using these tabs to change additional configurations about the device.",
        FR: "Vous pouvez naviguer à l'aide de ces onglets pour modifier des paramètres supplémentaires pour ce dispositif.",
        SPN: "Puedes navegar usando estas fichas para cambiar configuraciones adicionales sobre el dispositivo.",
        DE: "Sie können weitere Konfigurationseinstellungen des Geräts vornehmen, indem Sie auf die entsprechenden Reiter klicken.",
        IT: "Puoi navigare usando queste schede per modificare ulteriori configurazioni sul dispositivo.",
        DA: "Du kan navigere ved hjælp af disse faner for at ændre resten af konfigurationerne for enheden.",
        AR: "يمكنك الإبحار باستخدام علامات التبويب تلك لتغيير التكوينات الإضافية بشأن الجهاز   ",
        PT: "Pode navegar usando estas paginas para alterar diferentes parametros do dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    ethernetDeviceTip7: {
        EN: "Here you can edit the hostname for DNS resolving.",
        FR: "Modifiez ici le nom d'hôte pour la résolution DNS.",
        SPN: "Aqui puede editar su nombre de host para la resolucion DNS",
        DE: "Hier können Sie den Hostnamen für die DNS-Auflösung ändern",
        IT: "Qui puoi modificare il nome del dispositivo per la risoluzione DNS",
        DA: "Her kan du redigere DNS hostnavnet.",
        AR: "TODO",
        PT: "aquí pode editar o hostname do DNS",
        RO: "Aici puteti modifica hostname pentru rezolvarea conexiunii DNS.",
        IND: "TODO"
    },
    wifiMACFilterTip1: {
        EN: "Here you can change the MAC Filtering mode.",
        FR: "Modifiez ici le mode de filtrage MAC. ",
        SPN: "Aquí puede cambiar el modo de filtrado MAC. ",
        DE: "Hier klicken, um die MAC-Filtermethode zu wechseln.",
        IT: "Qui puoi cambiare i filtri per indirizzi MAC.",
        DA: "Her kan du ændre MAC filtreringsmode.",
        AR: "هنا يمكنك تغيرر وضع تصفية MAC",
        PT: "aquí pode alterar o modo de filtro de MAC",
        RO: "TODO",
        IND: "TODO"
    },
    wifiMACFilterTip2: {
        EN: "Select which devices have acces to your network with 'Allow' or 'Deny' button.",
        FR: "Sélectionner les périphériques qui ont accès à votre réseau avec les boutons 'Autoriser'/'Refuser'.",
        SPN: "Selección de 'Permitir' o 'Denegar' se puede controlar qué dispositivos serán permitidos en su red. ",
        DE: "Wählen Sie aus, welche Geräte Zugriff auf Ihr Heimnetz haben, indem Sie auf entweder auf die Schaltfläche 'Erlauben' oder 'Ablehnen' klicken.",
        IT: "Seleziona quali dispositivi hanno accesso alla tua rete con i bottoni 'Autorizza' o 'Blocca'.",
        DA: "Vælg, hvilke enheder, der skal have adgang til dit netværk med knapperne 'Tillad' eller 'Afvis'.",
        AR: "إختر أي الأجهزة التي يمكنها الوصول إلى الشبكة الخاصة بك من خلال زي 'Allow' أو 'Deny'  ",
        PT: "Seleccionar que dispositivos tem acesso á sua rede com os botoes 'autorizar' ou 'denegar'.",
        RO: "TODO",
        IND: "TODO"
    },
    wifiMACFilterTip3: {
        EN: "Here you can select a known device or select 'Other'...",
        FR: "Sélectionnez ici un périphérique connu ou «Autres»... ",
        SPN: "Aquí puede seleccionar un dispositivo conocido o seleccionar 'Otros' ... ",
        DE: "Hier können Sie auswählen, ob es sich um ein bekanntes Gerät handelt, andernfalls wählen Sie 'Anderes'&",
        IT: "Qui puoi selezione un dispositivo conosciuto oppure selezionare 'Altro'",
        DA: "Her kan du vælge en kendt enhed eller vælge 'Anden' ...",
        AR: "هنا يمكنك إختيار جهاز معروف أو تحديد 'Other' ...",
        PT: "pode seleccionar um dispositivo ou seleccionar outro...",
        RO: "TODO",
        IND: "TODO"
    },
    wifiMACFilterTip4: {
        EN: "...to manually add its MAC Address.",
        FR: "... pour ajouter manuellement son adresse MAC. ",
        SPN: "... para agregar manualmente su dirección MAC.",
        DE: "& um dessen MAC-Adresse manuell einzutragen.",
        IT: "per aggiungere manualmente il suo indirizzo MAC.",
        DA: "... for manuelt at tilføje dens MAC-adresse.",
        AR: "لإضافة عنوان MAC الخاص بها يدويًا",
        PT: "... para adicionar o MAC address de forma manual",
        RO: "TODO",
        IND: "TODO"
    },
    wifiMACFilterTip5: {
        EN: "Click here to add it to the devices list.",
        FR: "Cliquez ici pour l'ajouter à la liste des périphériques.",
        SPN: "Haga clic aquí para agregarlo a la lista de dispositivos. ",
        DE: "Hier klicken, um das Gerät zur Liste hinzuzufügen.",
        IT: "Premere qui per aggiungerlo alla lista dei dispositivi.",
        DA: "Klik her for at føje den til listen over enheder.",
        AR: "إضغط هنا لإضافته إلى قائمة الأجهزة",
        PT: "pressione aquí para adicionar á lista de dispositivos",
        RO: "TODO",
        IND: "TODO"
    },
    wifiMACFilterTip6: {
        EN: "Here you can view and remove the Wi-Fi devices of control list.",
        FR: "TODO",
        SPN: "Aqui puede ver y eliminar los dispositivos WiFi de su lista de control",
        DE: "Hier können Sie die Übersicht der per WLAN verbundenen Endgeräte einsehen und diese aus der Liste löschen.",
        IT: "TODO",
        DA: "Her kan du se og fjerne Wi-Fi-enhederne i kontrolliste.",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wifiMACFilterSave: {
        EN: "Click here to save all modifications.",
        FR: "Cliquez ici pour enregistrer toutes les modifications.",
        SPN: "Haga clic aquí para guardar todas las modificaciones.",
        DE: "Hier klicken, um alle Änderungen zu speichern.",
        IT: "Premere qui per salvare le modifiche.",
        DA: "Klik her for at gemme alle ædnringer.",
        AR: "إضغط هنا لحفظ التعديلات",
        PT: "pressione aquí para guardar todas as modificaçoes",
        RO: "TODO",
        IND: "TODO"
    },
    goToWifi5G: {
        EN: "Go to Wi-Fi 5GHz",
        FR: "Wi-Fi 5GHz",
        SPN: "Wi-Fi 5GHz",
        DE: "Gehe zu WLAN 5 GHz",
        IT: "Vai a Wi-Fi 5GHz",
        DA: "Gå til Wi-Fi 5 GHz",
        AR: "انتقل إلى واي-فاي 5.0 جيغاهرتز",
        PT: "Ir para Wi-Fi 5GHz",
        RO: "TODO",
        IND: "TODO"
    },
    goToWifi24G: {
        EN: "Go to Wi-Fi 2.4GHz",
        FR: "Wi-Fi 2.4GHz",
        SPN: "Wi-Fi 2.4GHz",
        DE: "Gehe zu WLAN 2.4 GHz",
        IT: "Vai a Wi-Fi 2.4GHz",
        DA: "Gå til Wi-Fi 2,4 GHz",
        AR: "انتقل إلى واي-فاي 2.4 جيغاهرتز",
        PT: "Ir para Wi-Fi 2.4GHz",
        RO: "TODO",
        IND: "TODO"
    },
    wifiEnvironmentTip1: {
        EN: "Here you can scan wireless environment.",
        FR: "Scannez ici votre environement Wi-Fi.",
        SPN: "Aquí puede escanear entorno inalámbrico.",
        DE: "WLAN-Umgebung scannen.",
        IT: "Qui puoi vedere le reti Wi-Fi vicine.",
        DA: "Her kan du scanne dit trådløse miljø.",
        AR: "هنا يمكنك فحص البيئة اللاسلكية",
        PT: "aquí pode escanear o ambiente wireless",
        RO: "TODO",
        IND: "TODO"
    },
    wifiEnvironmentStartScan: {
        EN: "Start Scan",
        FR: "Démarrer le Scan",
        SPN: "Inicie Scan",
        DE: "Scan starten",
        IT: "Inizia la scansione",
        DA: "Start scanning",
        AR: "إبدأ الفحص",
        PT: "começar o escaneamento",
        RO: "TODO",
        IND: "TODO"
    },
    wifiEnvironmentWifiChannel: {
        EN: "Wi-Fi channel",
        FR: "Canal Wi-Fi",
        SPN: "Canal Wi-Fi",
        DE: "WLAN-Kanal",
        IT: "Canale Wi-Fi",
        DA: "WiFi-kanal",
        AR: "قناة واي-فاي",
        PT: "canal Wi-Fi",
        RO: "TODO",
        IND: "TODO"
    },
    wifiEnvironmentSignalStrength: {
        EN: "Signal strength (dBm)",
        FR: "Puissance du signal (dBm)",
        SPN: "Intensidad de señal (dBm)",
        DE: "Signalstärke (dBm)",
        IT: "Potenza del segnale (dBm)",
        DA: "Signalstyrke (dBm)",
        AR: "شدة الإشارة (ديسبل م)",
        PT: "força de sinal (dBm)",
        RO: "TODO",
        IND: "TODO"
    },
    signalStrength: {
        EN: "Signal strength",
        FR: "Puissance du signal",
        SPN: "Intensidad de señal",
        DE: "Signalstärke",
        IT: "Potenza del segnale",
        DA: "Signalstyrke",
        AR: "شدة الإشارة",
        PT: "força de sinal ",
        RO: "TODO",
        IND: "TODO"
    },
    signalRate: {
        EN: "Signal rate",
        FR: "Débit du signal",
        SPN: "Tasa de señal",
        DE: "Signalrate",
        IT: "Velocità del segnale",
        DA: "Signalhastighed",
        AR: "TODO",
        PT: "Taxa de sinal",
        RO: "Nivel semnal",
        IND: "TODO"
    },
    wifiEnvironmentSSId: {
        EN: "SSId",
        FR: "SSId",
        SPN: "SSId",
        DE: "SSId",
        IT: "SSId",
        DA: "SSId",
        AR: "معرِّف الخدمة SSId",
        PT: "SSId",
        RO: "TODO",
        IND: "TODO"
    },
    wifiEnvironmentChannel: {
        EN: "Channel",
        FR: "Canal",
        SPN: "Canal",
        DE: "Funkkanal",
        IT: "Canale",
        DA: "Kanal",
        AR: "قناة",
        PT: "canal",
        RO: "TODO",
        IND: "TODO"
    },
    wifiEnvironmentSignal: {
        EN: "Signal",
        FR: "Signal",
        SPN: "Señal",
        DE: "Signal",
        IT: "Segnale",
        DA: "Signal",
        AR: "إشارة",
        PT: "Sinal",
        RO: "TODO",
        IND: "TODO"
    },
    wifiRecommendedExplained: {
        EN: "Your modem can detect Wi-Fi channels with less interferences. It's recommended to use proposed channels.",
        FR: "Votre modem peut détecter les canaux Wi-Fi avec le moins d'interférences. Il est recommandé d'utiliser les canaux proposés.",
        SPN: "Su módem puede detectar canales Wi-Fi con menos interferencias. Es aconsejable el uso de los canales propuestos.",
        DE: "Ihr Modem kann WLAN-Kanäle mit weniger Störungen erkennen. Es wird empfohlen, die vorgeschlagenen Kanäle zu verwenden.",
        IT: "Il modem è in grado di rilevare i canali Wi-Fi con meno interferenze. Si consiglia di utilizzare i canali proposti.",
        DA: "Dit modem kan finde Wi-Fi kanaler med færre interferenser. Det anbefales at anvende de foreslåede kanaler.",
        AR: "يستطيع هذا الموديم كشفَ قنوات واي-فاي ذات التداخلات الأقل. يوصَى باستخدام القنوات المقترحة.",
        PT: "O modem pode detectar canais Wi-Fi com menos interferências. Recomenda-se usar os canais propostos.",
        RO: "TODO",
        IND: "TODO"
    },
    ssidCreationTitle: {
        EN: "SSID Creation",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ssidCreationSubtitle: {
        EN: "Create a new Wifi SSIDs.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ssidCreationError: {
        EN: "Invalid SSId",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ssidCreationEmpty: {
        EN: "There are no SSIDs",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpTip1: {
        EN: "In this page you can configure your DHCP (Dynamic Host Configuration Protocol).",
        FR: "Dans cette page, vous pouvez configurer votre serveur DHCP (Dynamic Host Configuration Protocol).",
        SPN: "En esta página se puede configurar el DHCP (Dynamic Host Configuration Protocol).",
        DE: "Auf dieser Seite können Sie den DHCP-Server konfigurieren (Dynamic Host Configuration Protocol).",
        IT: "In questa pagina puoi configurare il servizio DHCP (Dynamic Host Configuration Protocol).",
        DA: "På denne side kan du konfigurere din DHCP (Dynamic Host Configuration Protocol).",
        AR: "في هذه الصفحة يمكنك تكوين DHCP (بروتوكول إعدادات المضيف الديناميكي)",
        PT: "nesta pagina pode configurar o seu DHCP (Dynamic Host Configuration Protocol).",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpTip2: {
        EN: "Here is the option to enable and disable.",
        FR: "Voici l'option pour activer et désactiver le DHCP.",
        SPN: "Esta es la opción para activar y desactivar.",
        DE: "Hier ist die Option zum aktivieren oder deaktivieren.",
        IT: "Questa è l'opzione per attivare e disattivare.",
        DA: "Her er muligheden for at aktivere og deaktivere.",
        AR: "ها هو خيار التمكين والتعطيل.",
        PT: "aquí tem a opçao de habilitar e desabilitar",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpTip3: {
        EN: "Here your can change the IP address of your gateway, be careful to not forget it, because you only will have access to configure your gateway through this IP.",
        FR: "Changer ici l'adresse IP locale de votre modem, attention à ne pas l'oublier pour continuer a accèder à l'interface de votre modem.",
        SPN: "Aquí su puede cambiar la dirección IP de su puerta de entrada, tenga cuidado de no olvidarlo, ya que sólo tendrá acceso para configurar el portal de acceso a través de esta IP.",
        DE: "Hier können Sie die IP-Adresse Ihres Gateways ändern. Vergessen Sie diesen Punkt nicht, weil Sie nur über diese IP den Zugang haben, um Ihre Gateway zu konfigurieren.",
        IT: "Qui puoi cambiare l'indirizzo IP del gateway.",
        DA: "Her kan du ændre din gateways IP-adresse, og sørg for at huske den, for du kan kun få adgang til at konfigurere din gateway gennem denne IP.",
        AR: "هنا يمكنك تغيير عنوان بروتوكول الإنترنت (IP) للمنفذ الخاص بك، كن حذراً حتي لا تنساه، لأن إمكانيتك الوحيدة للوصول لضبط المنفذ الخاص بك هي من خلال عنوان بروتوكول الإنترنت هذا.",
        PT: "Aqui você pode mudar o endereço IP do seu gateway, tenha cuidado para não esquecê-lo, porque você só terá acesso para configurar o seu gateway através deste IP.",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpTip4: {
        EN: "Here you can change the subnet mask of your network, by changing this setting without prior knowledge can make your network stop working.",
        FR: "Ici vous pouvez changer le masque de sous-réseau, modifier cette valeur peut rendre votre réseau inutilisable.",
        SPN: "Aquí puede cambiar la máscara de subred de su red, al cambiar este ajuste sin conocimiento previo puede hacer su parada de la red de trabajo.",
        DE: "Hier können Sie die Subnetzmaske ändern. Achtung: Unbedachte Änderungen in diesem Bereich können zur Fehlfunktion Ihres Netzwerks führen.",
        IT: "Qui puoi cambiare la maschera sottorete, cambiando questo valore potrebbe rendere la rete non più utilizzabile.",
        DA: "Her kan du ændre dit netværks subnet maske men at ændre denne indstilling uden forkundskab kan afbryde dit netværks funktion.",
        AR: "هنا يمكنك تغيير قناع الشبكة الفرعية لشبكتك، عن طريق تغيير هذا الإعداد دون معرفة مسبقة يمكنك أن توقف عمل شبكتك.",
        PT: "Aqui você pode alterar a máscara de sub-rede, ao alterar esta configuração sem conhecimento prévio pode provocar o malfuncionamento da sua rede",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpTip5: {
        EN: "Here you can change dynamic IP address range for your network.",
        FR: "Ici vous pouvez changer la plage d'adresses IP dynamique de votre réseau.",
        SPN: "Aquí puede cambiar el rango de direcciones de IPs automáticas de su red.",
        DE: "Hier können Sie den dynamisch vergebenen IP-Adressbereich Ihres Heimnetzes anpassen.",
        IT: "Qui puoi cambiare l'insieme degli indirizzi IP dinamici.",
        DA: "Her kan du ændre intervallet for den dynamiske IP-adresse for dit netværk.",
        AR: "هنا يمكنك تغيير النطاق عنوان IP الديناميكي الخاص بشبكتك. ",
        PT: "aquí pode alterar o endereço IP dinamico da sua rede",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpTip6: {
        EN: "Here you can enable and disable a dynamic IP range for your Set-Top-Boxes.",
        FR: "Ici vous pouvez activer et désactiver la plage d'adresses IP dynamique pour vos décodeurs de télévision.",
        SPN: "Aquí puede activar y desactivar la gama manual de su TV.",
        DE: "Hier können Sie die dynamische IP-Adressvergabe Ihrer Set-Top-Box ein- bzw. ausschalten.",
        IT: "Qui puoi attivare o disattivare l'insieme degli indirizzi IP dinamici per il dispositivo TV.",
        DA: "Her kan du aktivere og deaktivere et dynamisk IP-interval for dine set-top-bokse.",
        AR: "هنا يمكنك تمكين وتعطيل نطاق IP ديناميكي لجهاز الإستقبال الرقمي الخاص بك. ",
        PT: "aquí pode habilitar e desabilitar o IP dinamico dos seus STB",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpTip7: {
        EN: "Here you can change the lease time of your network, it's the maximum time that a device can hold a dynamic IP without asking a renew.",
        FR: "Ici vous pouvez changer la durée du bail de votre réseau, c'est le temps maximum de conservation d'une IP dynamique sans demande de renouvellement.",
        SPN: "Aquí puede cambiar el tiempo de concesión de la red, que es el tiempo máximo que un dispositivo puede tener una dirección IP específica sin pedir una nueva.",
        DE: "Hier können Sie den Zeitraum für die Gültigkeit der zugewiesenen IP-Adressen einstellen, nach deren Ablauf die IP-Adressen wieder freigegeben werden.",
        IT: "Qui puoi cambiare il tempo di connessione della rete, questo è il tempo massimo che un dispositivo terrà l'indirizzo IP dinamico senza domandarne uno nuovo.",
        DA: "Her kan du ændre dit netværks lease time, som er den maksimale tid, en enhed kan holde en dynamisk IP-adresse uden at anmode om en fornyelse.",
        AR: "هنا يمكنك تغيير وقت إيجار شبكتك، وهو الحد الأقصى من الوقت الذي يمكن فيه للجهاز أن يتحمل IP ديناميكي دون أن يطلب التجديد.",
        PT: "Aqui você pode alterar o tempo de concessão de sua rede, é o tempo máximo que um dispositivo podemanter um IP dinâmico sem pedir uma renovação.",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpTip8: {
        EN: "Click here to restore the default configuration, the gateway will reboot.",
        FR: "Cliquez ici pour restaurer la configuration par défaut, le modem va redémarrer.",
        SPN: "Haga clic aquí para restaurar la configuración por defecto, la puerta de entrada se reiniciará.",
        DE: "Klicken Sie hier, um die Standardkonfiguration wiederherzustellen. Das Gateway wird dann neu starten.",
        IT: "Premere qui per ripristinare la configurazione iniziale, il gateway sarà riavviato.",
        DA: "Klik her for at genoprette standardkonfigurationen, derefter vil gatewayen genstartes.",
        AR: "إضغط هنا لإستعادة الضبط الإفتراضي، سوف يتم إعادة تشغيل المنفذ.",
        PT: "pressione aquí para restaurar a configuraçao por defeito, o gateway vai reiniciar",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpTip9: {
        EN: "Click here to add a reserved IP for one device.",
        FR: "Cliquez ici pour ajouter une adresse IP réservée pour un périphérique.",
        SPN: "Haga clic aquí para añadir una IP reservada para un solo dispositivo.",
        DE: "Feste IP-Adresse für ein Gerät zuweisen.",
        IT: "Premere qui per aggiungere un indirizzo pre-assegnato per un dispositivo.",
        DA: "Klik her for at tilføje en reserveret IP-adresse til en enhed.",
        AR: "إضغط هنا لإضافة عنوان IP محجوز لجهاز واحد.",
        PT: "pressione aquí para adicionar um IP reservada para um dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpTip10: {
        EN: "Here you can see the devices with reserved IPs.",
        FR: "Ici vous pouvez voir les périphériques dotés d'adresses IP réservées.",
        SPN: "Aquí podrá ver los dispositivos con direcciones IP reservadas.",
        DE: "Liste der Geräte mit fester IP-Adresse.",
        IT: "Qui puoi vedere i dispositivi con IP pre-assegnati.",
        DA: "Her kan du se enhederne med reserverede IP-adresser.",
        AR: "هنا يمكنك رؤية الأجهزة ذات عناوين الـ IP المحجوزة.",
        PT: "aquí pode consultar os dispositivos com Ips reservadas",
        RO: "TODO",
        IND: "TODO"
    },
    wifiGeneralTip1: {
        EN: "Here you can enable and disable your wireless network.",
        FR: "Ici vous pouvez activer et désactiver votre réseau sans fil.",
        SPN: "Aquí puede activar y desactivar la red inalámbrica.",
        DE: "Hier können Sie Ihr WLAN-Netzwerk ein- bzw. ausschalten.",
        IT: "Qui puoi attivare o disattivare la rete Wi-Fi.",
        DA: "Her kan du aktivere og deaktivere dit trådløse netværk.",
        AR: "هنا يمكنك تمكين وتعطيل الشبكة اللاسلكية الخاصة بك.",
        PT: "aquí pode habilitar e desabilitar a sua rede sem fios",
        RO: "TODO",
        IND: "TODO"
    },
    wifiGeneralTip1Guest: {
        EN: "Here you can enable and disable your wireless guest network.",
        FR: "Activez ici le réseau Wi-Fi invité.",
        SPN: "Aqui puede habilitar o deshabilitar su red WiFi de invitados",
        DE: "Hier können Sie den Zugang für Ihr WLAN-Gastnetzwerk ein- bzw. ausschalten.",
        IT: "Qui puoi attivare e disattivare la tua rete Wi-Fi ospiti.",
        DA: "Her kan du aktivere og deaktivere dit trådløse gæstenetværk.",
        AR: "TODO",
        PT: "aquí pode habilitar e desabilitar a sua rede sem fios de convidados",
        RO: "Aici puteti activa/dezactiva reteaua dvs. Wi-Fi.",
        IND: "TODO"
    },
    mainTipWiFiGuest2g: {
        EN: "Here you can see the information about your guest wireless 2.4 GHz.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    mainTipWiFiGuest5g: {
        EN: "Here you can see the information about your guest wireless 2.4 GHz.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wifiGeneralTip2: {
        EN: "Here you can change the SSID of your network.",
        FR: "Ici vous pouvez changer le SSID de votre réseau.",
        SPN: "Aquí puede cambiar el SSID de su red.",
        DE: "Hier können Sie den Namen Ihres WLAN-Netzwerks (SSID) ändern.",
        IT: "Qui puoi cambiare il nome della rete (SSID).",
        DA: "Her kan du ændre SSID for dit netværk.",
        AR: "هنا يمكنك تغيير معرف مجموعة الخدمات الخاص بشبكتك. ",
        PT: "aquí pode alterar o SSID da sua rede",
        RO: "TODO",
        IND: "TODO"
    },
    wifiGeneralTip2Guest: {
        EN: "Here you can change the SSID of your guest network.",
        FR: "Modifiez ici le nom du réseau invité.",
        SPN: "Aqui puede cambiar el SSID de su red de invitados",
        DE: "Hier können Sie den Namen Ihres WLAN-Gastnetzwerks (SSID) ändern.",
        IT: "Qui puoi cambiare il nome della rete Wi-Fi ospiti.",
        DA: "Her kan du ændre SSID på dit gæstenetværk.",
        AR: "TODO",
        PT: "aquí pode alterar o SSID da sua rede de convidados",
        RO: "Aici puteti schimba numele de retea al retelei dvs. Wi-Fi.",
        IND: "TODO"
    },
    wifiGeneralTip3: {
        EN: "Here you can stop or continue the broadcast of your network.",
        FR: "Diffuser ou non le nom du réseau Wi-Fi.",
        SPN: "Aquí usted puede parar o continuar la transmisión de su red.",
        DE: "Hier können Sie die Sichtbarkeit Ihres WLAN-Netzwerks ein- bzw. ausschalten.",
        IT: "Qui puoi interrompere o continuare ad avere la rete in broadcast.",
        DA: "Her kan du standse eller fortsætte dit netværks udsendelse.",
        AR: "هنا يمكنك التوقف أو الاستمرار في بث الشبكة.",
        PT: "aquí pode parar ou continuar a transmissao da sua rede",
        RO: "TODO",
        IND: "TODO"
    },
    wifiGeneralTip3Guest: {
        EN: "Broadcast or not Wi-Fi guest network name.",
        FR: "Diffuser ou non le nom du réseau Wi-Fi invité.",
        SPN: "Difusion o no del nombre de la red de invitados",
        DE: "Hier können Sie die Sichtbarkeit Ihres WLAN-Gastnetzwerks ein- bzw. ausschalten.",
        IT: "Rendere invisibile o meno il nome della rete Wi-Fi ospiti.",
        DA: "Udsend eller udsend ikke Wi-Fi gæstenetværksnavnet.",
        AR: "TODO",
        PT: "mostrar ou nao o nome da rede Wi-Fi de convidados",
        RO: "Setati ca vizibil sau invizibil numele retelei dvs. Wi-Fi.",
        IND: "TODO"
    },
    wifiGeneralTip4: {
        EN: "Here you can change the channel of your network.",
        FR: "Ici vous pouvez changer le canal de votre réseau.",
        SPN: "Aquí puede cambiar el canal de la red.",
        DE: "Hier können Sie den WLAN-Funkkanal ändern.",
        IT: "Qui puoi cambiare il canale radio della rete.",
        DA: "Her kan du ændre dit netværks kanal.",
        AR: "هنا يمكنك تغيير قناة شبكتك.",
        PT: "aquí pode alterar o canal da sua rede",
        RO: "TODO",
        IND: "TODO"
    },
    wifiGeneralTip4Guest: {
        EN: "Here you can change the channel of your guest network.",
        FR: "Ici vous pouvez changer le canal de votre réseau invité.",
        SPN: "Aqui puede cambiar el canal de su red de invitados",
        DE: "Hier können Sie den WLAN-Funkkanal für Ihr Gastnetzwerk ändern.",
        IT: "Qui puoi cambiare il canale della rete Wi-Fi ospiti.",
        DA: "Her kan du ændre kanalen for dit gæstenetværk.",
        AR: "TODO",
        PT: "aquí pode alterar o canal da sua rede de convidados",
        RO: "Aici puteti schimba canalul retelei dvs. Wi-Fi.",
        IND: "TODO"
    },
    wifiGeneralTip5: {
        EN: "Here you can change the security mode of your network.",
        FR: "Ici vous pouvez changer le mode de sécurité de votre réseau.",
        SPN: "Aquí puede cambiar el modo de seguridad de su red.",
        DE: "Hier können Sie den WLAN-Verschlüsselungstyp ändern.",
        IT: "Qui puoi cambiare la modalità di cifratura della rete.",
        DA: "Her kan du ændre dit netværks sikkerhedstilstand.",
        AR: "هنا يمكنك تغيير وضع أمان الشبكة.",
        PT: "aquí pode alterar o modo de segurança da sua rede",
        RO: "TODO",
        IND: "TODO"
    },
    wifiGeneralTip5Guest: {
        EN: "Here you can change the security mode of your guest network.",
        FR: "Ici vous pouvez changer le mode de sécurité de votre réseau invité.",
        SPN: "Aqui puede cambiar el modo de seguridad de su red de invitados",
        DE: "Hier können Sie den WLAN-Verschlüsselungstyp für Ihr Gastnetzwerk ändern.",
        IT: "Qui puoi cambaire la modalità di cifratura della rete Wi-Fi ospiti.",
        DA: "Her kan du ændre sikkerhedstilstanden for dit gæstenetværk.",
        AR: "TODO",
        PT: "aquí pode alterar o modo de segurança da sua rede de convidados",
        RO: "Aici puteti modifica tipul de securitate al retelei dvs. Wi-Fi.",
        IND: "TODO"
    },
    wifiGeneralTip6: {
        EN: "Here you can change the password of your network.",
        FR: "Ici vous pouvez changer le mot de passe de votre réseau.",
        SPN: "Aquí puede cambiar la contraseña de su red.",
        DE: "Hier können Sie den WLAN-Netzwerkschlüssel ändern.",
        IT: "Qui puoi cambiare la chiave di cifratura della rete.",
        DA: "Her kan du ændre dit netværks adgangskode.",
        AR: "هنا يمكنك تغيير كلمة المرور إلى الشبكة.",
        PT: "aquí pode alterar a password da sua rede",
        RO: "TODO",
        IND: "TODO"
    },
    wifiGeneralTip6Guest: {
        EN: "Here you can change the password of your guest network.",
        FR: "Ici vous pouvez changer le mot de passe de votre réseau invité.",
        SPN: "Aqui puede cambiar la contraseña de su red de invitados",
        DE: "Hier können Sie den WLAN-Netzwerkschlüssel für Ihr Gastnetzwerk ändern.",
        IT: "Qui puoi cambiare la chiave di cifratura della rete Wi-Fi ospiti.",
        DA: "Her kan du ændre adgangskoden til dit gæstenetværk.",
        AR: "TODO",
        PT: "aquí pode alterar a password da sua rede de convidados",
        RO: "Aici puteti modifica parola retelei dvs. Wi-Fi.",
        IND: "TODO"
    },
    wifiGeneralTip7: {
        EN: "You can click here to show the current password.",
        FR: "Vous pouvez cliquer ici pour afficher le mot de passe actuel.",
        SPN: "Puede hacer clic aquí para mostrar la contraseña actual.",
        DE: "Hier klicken, um das aktuelle Passwort anzuzeigen.",
        IT: "Premere qui per vedere la chiave attuale.",
        DA: "Du kan klikke her for at få vist den aktuelle adgangskode.",
        AR: "تستطيع أن تضغط هنا لإظهار كلمة المرور الحالية.",
        PT: "pode pressionar aquí para mostrar a password actual",
        RO: "TODO",
        IND: "TODO"
    },
    wifiGeneralTip10: {
        EN: "Access this Wi-Fi network through a QR code reader.",
        FR: "Accédez à ce réseau Wi-Fi via un lecteur de code QR.",
        SPN: "Código QR, lo utilizan para tener acceso a la red a través de un lector de códigos QR.",
        DE: "QR Code. Scannen Sie diesen mit einer QR Code App, um Zugang zu Ihrem Heimnetz zu erhalten.",
        IT: "QR code, usalo per accedere direttamente alla rete grazie ad un lettore di QR code.",
        DA: "QR-kode, anvend den til at få adgang til netværket gennem en QR-kodelæser.",
        AR: "رمز الاستجابة السريعة، إستخدمه للوصول إلى الشبكة من خلال قارئ رمز الاستجابة السريعة.",
        PT: "aceder á rede Wi-Fi atravez de um codigo QR",
        RO: "TODO",
        IND: "TODO"
    },
    wifiGeneralTip10Guest: {
        EN: "Access the guest network through a QR code reader.",
        FR: "Accédez à ce réseau Wi-Fi invité via un lecteur de code QR.",
        SPN: "Acceso a la red de invitados a traves de un lector de codigos QR",
        DE: "QR Code: Scannen Sie diesen mit einer QR Code App, um Zugang zu Ihrem Gastnetzwerk zu erhalten.",
        IT: "QR code: usalo per accedere direttamente alla rete Wi-Fi ospiti grazie ad un lettore di QR code.",
        DA: "Få adgang til gæstenetværket via en QR-kodelæser.",
        AR: "TODO",
        PT: "aceder é rede de convidados atravez do codigo QR",
        RO: "Accesati reteaua Wi-Fi citind un cod QR.",
        IND: "TODO"
    },
    wifiGeneralTip11Guest: {
        EN: "Here you can see the security mode of your guest network.",
        FR: "TODO",
        SPN: "Aqui puede ver el modo de seguridad de su red de invitados",
        DE: "Hier können Sie den WLAN-Funkkanal für Ihr Gastnetzwerk einsehen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "aquí pode consultar o modo de segurança da sua rede de convidados",
        RO: "Aici puteti vedea tipul de securitate al retelei dvs. Wi-Fi.",
        IND: "TODO"
    },
    wifiGeneralTip12: {
        EN: "Here you can see the status of your network.",
        FR: "TODO",
        SPN: "Aqui puede ver el estado de su red",
        DE: "Hier sehen Sie den Status Ihres WLAN-Netzwerks.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "aquí pode consultar o estado da sua rede",
        RO: "Aici puteti vedea statusul retelei dvs.",
        IND: "TODO"
    },
    wifiGeneralTip12Guest: {
        EN: "Here you can see the status of your guest network.",
        FR: "TODO",
        SPN: "Aqui puede ver el estado de su red de invitados",
        DE: "Hier sehen Sie den Status Ihres WLAN-Gastnetzwerks.",
        IT: "TODO",
        DA: "Her kan du se status på dit gæstenetværk",
        AR: "TODO",
        PT: "aquí pode consultar o estado da sua rede de convidados",
        RO: "Aici puteti vedea statusul retelei dvs. Wi-Fi.",
        IND: "TODO"
    },
    wifiGeneralTip13: {
        EN: "Here you can change the Group rekey interval of your network.",
        FR: "TODO",
        SPN: "Aqui puede cambiar el intervalo de grupo de su red",
        DE: "Neuaushandlung des WPA-Sitzungsschlüssels in Sekunden (WPA group rekey interval)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti modifica intervalul de timp de schimbare a cheii de securitate a retelei dvs.",
        IND: "TODO"
    },
    wifiGeneralTip14: {
        EN: "Here you can see the BSSID (Basic service set identifier) of your guest network.",
        FR: "TODO",
        SPN: "Aqui puede ver el BSSID (Basic service set identifier) de su red de invitados",
        DE: "Aussendung der SSID (Name des WLAN-Funknetzes) sichtbar oder versteckt.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti vedea numele BSSID (numele de identificare de baza a retelei) al retelei dvs. Wi-Fi.",
        IND: "TODO"
    },
    wifiGeneralTip15: {
        EN: "Here you can see the strength of the password typed.",
        FR: "TODO",
        SPN: "Aqui puede ver la robustez de su contraseña",
        DE: "Hier sehen Sie wie sicher das von Ihnen eingegebene Passwort ist.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti vedea puterea parolei introduse.",
        IND: "TODO"
    },
    wifiModalTitle: {
        EN: "Wi-Fi Settings",
        FR: "Paramètres Wi-Fi",
        SPN: "Configuración Wi-Fi",
        DE: "WLAN-Einstellungen",
        IT: "Configurazione Wi-Fi",
        DA: "WiFi-indstillinger",
        AR: "إعدادات الإتصال اللاسلكي.",
        PT: "parametros de Wi-Fi",
        RO: "TODO",
        IND: "TODO"
    },
    wifiWpsModalDescription: {
        EN: "Enabling Mac filtering will disable WPS and may cause a loss of your Wi-Fi connectivity.",
        FR: "l'activation du filtrage Mac désactivera le WPS et peut causer la perte de votre connexion Wi-Fi.",
        SPN: "Habilitar el filtrado de Mac desactivará WPS y puede causar pérdida de la conectividad Wi-Fi.",
        DE: "Einschalten des MAC-Adress-Filters deaktiviert WPS. Geräte ohne Erlaubnis des MAC-Adress-Filters können nicht mehr auf das Heimnetz zugreifen.",
        IT: "Attivando i filtri su indirizzi MAC porterà alla disattivazione WPS e potrebbe causare la perdita di connettività Wi-Fi.",
        DA: "Aktivering af MAC-filtrering vil deaktivere WPS og kan forårsage tab af din WiFi-forbindelse.",
        AR: "تمكين فلترة التحكم بالوصول إلى الوسائط (ماك) سيقوم بتعطيل إعداد الحماية علي الإنترنت وقد يتسبب في فقدان الإتصال اللاسلكي.",
        PT: "Ligar o filtro de MAC desactivara o WPS e pode causar a perda de ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    wifiModalDescription: {
        EN: "Changing any values in this page may cause a loss of connectivity for Wi-Fi users.",
        FR: "Changer l'un des paramètres de cette page peut causer une perte de connexion pour les utilisateurs du Wi-Fi.",
        SPN: "Cambio de los valores en esta página puede causar una pérdida de conectividad para los usuarios de Wi-Fi.",
        DE: "Änderungen an Einstellungen auf dieser Seite können dazu führen, dass Geräte nicht mehr per WLAN auf das Heimnetz zugreifen können.",
        IT: "Cambiare uno qualsiasi di questi parametri potrebbe causare la perdita di connettività Wi-Fi.",
        DA: "Ændring af enhver værdi på denne side kan forårsage afbrydelser af din forbindelse for WiFi-brugere.",
        AR: "تغيير أي قيم في هذة الصفحة قد يتسبب في فقدان الإتصال لأي من مستخدمي الإتصال اللاسلكي. ",
        PT: "Mudar os valores nesta pagina pode provocar a perda de ligaçao dos utilizadores de Wi-Fi",
        RO: "TODO",
        IND: "TODO"
    },
    wifiDfsWarning1min: {
        EN: "Warning! Before using the selected channel it is necessary to check for privileged services (e.g. weather radar) wich may be active on this channel. The check will take at least 1 minute. During this time the network name (SSID) is not broadcast. If the channel is not available a different channel will be checked.",
        FR: "TODO",
        SPN: "Aviso! Antes de usar el canal seleccionado es necesario revisar los servicios privilegiados que pueden estar activos en este canal (radares). La revision durara mas de un minuto. Durante este tiempo no se difundira el nombre de la red (SSID). Si el canal no esta disponible se revisara otro canal.",
        DE: "Achtung! Vor Verwendung des gewählten Kanals muss geprüft werden, ob bevorrechtigte Dienste (z.B. Wetter-Radar) auf diesem Kanal aktiv sinf. Diese Prüfung dauent mindestens 1 Minute. Während dieser Zeit wird der Netzwerkname (SSID) nicht ausgesendet. Sofern der Kanal nicht verwendet werden kann, wird ein weiterer Kanal geprüft.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Atentie! Inainte de a folosi canalul selectat este obligatoriu sa verificati serviciile speciale (Ex. Radarul de vreme) care pot fi active pe acest canal. Verificarea va dura cel putin 1 minut. In acest timp numele de retea (SSID) nu va fi transmis. Daca respectivul canal nu este disponibil, atunci un canal nou va fi verificat.",
        IND: "TODO"
    },
    wifiDfsWarning10min: {
        EN: "Warning! Before using the selected channel it is necessary to check for privileged services (e.g. weather radar) wich may be active on this channel. The check will take at least 10 minutes. During this time the network name (SSID) is not broadcast. If the channel is not available a different channel will be checked.",
        FR: "TODO",
        SPN: "Aviso! Antes de usar el canal seleccionado es necesario revisar los servicios privilegiados que pueden estar activos en este canal (radares). La revision durara mas de 10 minuto. Durante este tiempo no se difundira el nombre de la red (SSID). Si el canal no esta disponible se revisara otro canal.",
        DE: "Achtung! Vor Verwendung des gewählten Kanals muss geprüft werden, ob bevorrechtigte Dienste (z.B. Wetter-Radar) auf diesem Kanal aktiv sinf. Diese Prüfung dauent mindestens 10 Minuten. Während dieser Zeit wird der Netzwerkname (SSID) nicht ausgesendet. Sofern der Kanal nicht verwendet werden kann, wird ein weiterer Kanal geprüft.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Atentie! Inainte de a folosi canalul selectat este obligatoriu sa verificati serviciile speciale (Ex. Radarul de vreme) care pot fi active pe acest canal. Verificarea va dura cel putin 10 minute. In acest timp numele de retea (SSID) nu va fi transmis. Daca respectivul canal nu este disponibil, atunci un canal nou va fi verificat.",
        IND: "TODO"
    },
    wifiStbWarning: {
        EN: "By disabling Wi-Fi 5.0GHz connection, you will lose access to TV services. Are you sure?",
        FR: "Em désctivant le Wi-Fi 5G, vous allez perdre le service de télévision. Etes-vous sûr ?",
        SPN: "Al deshabilitar la conexión Wi-Fi 5.0GHz, dejará de tener acceso a los servicios de TV. ¿Está seguro/a?",
        DE: "Durch Deaktivieren der WLAN-Verbindung 5.0 GHz werden Sie den Zugang zu TV-Diensten verlieren. Sind Sie sicher?",
        IT: "Disattivando il collegamento Wi-Fi 5.0GHz, si perderà l'accesso ai servizi televisivi. Sei sicuro?",
        DA: "Ved at deaktivere din Wi-Fi 5,0 GHz-forbindelse vil du miste forbindelsen til tv-tjenesterne. Er du sikker?",
        AR: "بتعطيل وصلة واي-فاي 5.0 جيغاهرتز، ستفقد إمكانية الوصول إلى خدمات التلفزيون. هل أنت متأكد؟",
        PT: "ao desligar a ligaçao de Wi-Fi 5GHz, vai perder acesso aos serviços de TV. Tem a certeza?",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip0: {
        EN: "Here's where you can change the interface name. All interface names can be changed.",
        FR: "Changez ici le nom de l'interface. Tous les noms d'interface peuvent être modifiés.",
        SPN: "Aquí es donde se puede cambiar el nombre de la interfaz. Todos los nombres de interfaz se pueden cambiar.",
        DE: "Hier können Sie den Namen des Internetzugangs ändern. Alle Namen können geändert werden.",
        IT: "Qui puoi cambiare il nome dell'interfaccia. Tutti i nomi possono esser modificati.",
        DA: "Her kan du ændre navnet på et interface. Alle interfaces kan få et nyt navn.",
        AR: "هنا حيث يمكنك تغيير اسم الوصلة. يمكن تغيير جميع أسماء الوصلات.",
        PT: "Aquí pode mudar o nome do interface. Todos os nomes de interface podem ser alterados",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip1: {
        EN: "Here's where you set the VPI's value.",
        FR: "Entrez ici la valeur VPI.",
        SPN: "Aquí es donde se define el valor de la VPI.",
        DE: "Hier ändern Sie die VPI-Werte.",
        IT: "Qui puoi configurare il valore di VPI.",
        DA: "Her indstiller du værdien for VPI.",
        AR: "هنا حيث تقوم بتعيين قيمة معرف المسار الإفتراضي.",
        PT: "aquí é onde pode alterar o valor de VPI",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip2: {
        EN: "Here's where you set the VCI's value.",
        FR: "Entrez ici la valeur VCI.",
        SPN: "Aquí es donde se define el valor de la VCI.",
        DE: "Hier ändern Sie die VCI-Werte.",
        IT: "Qui puoi configurare il valore di VCI.",
        DA: "Her indstiller du værdien for VCI.",
        AR: "هنا حيث تقوم بتعيين قيمة معرف القناة الإفتراضية. ",
        PT: "aquí é onde pode alterar o valor de VCI",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip3: {
        EN: "Here's where you set the DSL Latency's value.",
        FR: "Entrez ici la valeur de la latence DSL.",
        SPN: "Aquí es donde se define el valor de la Latencia DSL .",
        DE: "Hier ändern Sie die DSL-Latenz-Werte.",
        IT: "Qui puoi definire la latenza DSL.",
        DA: "Her indstiller du værdien for DSL-latency.",
        AR: "هنا حيث تقوم بتعيين قيمة زمن وصول الـ DSL.",
        PT: "aquí é onde pode alterar o valor de latencia de DSl",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip4: {
        EN: "Here's where you set the Link Type's value.",
        FR: "Entrez ici le type de Lien.",
        SPN: "Aquí es donde se establece el valor del tipo de vínculo.",
        DE: "Hier ändern Sie die Verbindungsart.",
        IT: "Qui puoi configurare il tipo di Link.",
        DA: "Her indstiller du værdien for linktype.",
        AR: "هنا حيث تقوم بتعيين قيمة نوع الرابط. ",
        PT: "aquí é onde pode alterar o valor do tipo de link",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip5: {
        EN: "Here's where you set the encapsulation's mode.",
        FR: "Entrez ici le mode d'encapsulation.",
        SPN: "Aquí es donde se configura el modo de la encapsulación.",
        DE: "Hier ändern Sie die Enkapsulation-Werte.",
        IT: "Qui puoi configurare il modo di incapsulazione.",
        DA: "Her indstiller du værdien for indkapslingstilstanden.",
        AR: "هنا حيث تقوم بتعيين وضع التغليف.",
        PT: "aquí é onde pode alterar o modo de encapsolamento",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip6: {
        EN: "Here's where you set the encapsulation's mode.",
        FR: "Entrez ici le protocole réseau.",
        SPN: "Aquí es donde se configura el protocolo de la red.",
        DE: "Hier ändern Sie das Übertragungsprotokoll.",
        IT: "Qui puoi definire il protocollo rete.",
        DA: "Her indstiller du værdien for indkapslingstilstanden.",
        AR: "هنا حيث تقوم بتعيين وضع التغليف.",
        PT: "aquí é onde pode alterar o modo de encapsolamento",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip7: {
        EN: "Here's where you set the DSL Latency's value.",
        FR: "Entrez ici la valeur de la latence DSL.",
        SPN: "Aquí es donde se define el valor de la Latencia DSL .",
        DE: "Hier ändern Sie die DSL-Latenz-Werte",
        IT: "Qui puoi definire la latenza DSl",
        DA: "Her indstiller du værdien for DSL-latens.",
        AR: "هنا حيث تقوم بتعيين قيمة زمن وصول الـ DSL.",
        PT: "aquí é onde pode alterar o valor de latencia de DSl",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip8: {
        EN: "Here's where you set the DSL Latency's value.",
        FR: "Entrez ici la valeur de la latence DSL.",
        SPN: "Aquí es donde se define el valor de la Latencia DSL .",
        DE: "Hier ändern Sie die DSL-Latenz-Werte.",
        IT: "Qui puoi definire la latenza DSL.",
        DA: "Her indstiller du værdien for DSL-latens.",
        AR: "هنا حيث تقوم بتعيين قيمة زمن وصول الـ DSL.",
        PT: "aquí é onde pode alterar o valor de latencia de DSl",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip9: {
        EN: "Here's where you set the WAN over Ethernet mode.",
        FR: "Entrez ici le mode WAN via Ethernet.",
        SPN: "Aquí es donde se establece la WAN a través de Ethernet.",
        DE: "Hier ändern Sie die WAN-via-Ethernet-Werte.",
        IT: "Qui puoi configurare la rete WAN via Ethernet.",
        DA: "Her indstiller du WAN over Ethernet-tilstanden.",
        AR: "هنا حيث تقوم بتعيين الشبكة واسعة النطاق عبر الإيثرنت.",
        PT: "aquí é onde pode alterar a WANM sobre o mode de rede",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip10: {
        EN: "Here's where you set the PPPoe Username.",
        FR: "Entrez ici le Nom d'utilisateur PPPoE.",
        SPN: "Aquí es donde se establece la PPPoe Nombre de usuario.",
        DE: "Hier ändern Sie den PPPoe Benutzernamen.",
        IT: "Qui puoi mettere lo username della sessione PPPoE.",
        DA: "Her indstiller du brugernavnet for PPPoe.",
        AR: "هنا حيث تقوم بتعيين إسم مستخدم الـ pppoe.",
        PT: "aquí é onde pode alterar o username de Ppoe",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip11: {
        EN: "Here's where you set the PPPoe password.",
        FR: "Entrez ici le mot de passe PPPoE.",
        SPN: "Aquí es donde se establece la contraseña de PPPoE.",
        DE: "Hier ändern Sie das PPPoe Benutzerpasswort.",
        IT: "Qui puoi mettere la password della sessione PPPoE.",
        DA: "Her indstiller du adgangskoden for PPPoe.",
        AR: "هنا حيث تقوم بتعيين كلمة مرور الـ pppoe.",
        PT: "aquí é onde pode alterar a password de Ppoe",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip12: {
        EN: "Here's where you set the PPPoe server name.",
        FR: "Entrez ici le nom du serveur PPPoE.",
        SPN: "Aquí es donde se define el nombre del servidor PPPoE.",
        DE: "Hier ändern Sie den PPPoe Servernamen",
        IT: "Qui puoi configurare il nome del server PPPoE",
        DA: "Her indstiller du servernavnet for PPPoe.",
        AR: "هنا حيث تقوم بتعيين إسم خادم الـ pppoe. ",
        PT: "aquí é onde pode alterar o sevidor de Ppoe",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip13: {
        EN: "Here's where you set the PPPoE authentication method.",
        FR: "Entrez ici la méthode d'authentification PPPoE.",
        SPN: "Aquí es donde se define el método de autenticación PPPoE.",
        DE: "Hier ändern Sie die PPPoe Authentifizierungsmethode.",
        IT: "Qui puoi configurare il metodo di autenticazione per la sessione PPPoE.",
        DA: "Her indstiller du godkendelsesmetoden for PPPoe.",
        AR: "هنا حيث تقوم بتعيين طريقة تحقيق الـ pppoe.",
        PT: "aquí é onde pode alterar o metodo de autenticaçao de Ppoe",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityWanTip14: {
        EN: "Here's where you set the PPPoE authentication method.",
        FR: "Entrez ici la méthode d'authentification PPPoE.",
        SPN: "Aquí es donde se define el método de autenticación PPPoE.",
        DE: "Hier ändern Sie die PPPoe Authentifizierungsmethode",
        IT: "Qui puoi configurare il metodo di autenticazione per la sessione PPPoE",
        DA: "Her indstiller du godkendelsesmetoden for PPPoe.",
        AR: "هنا حيث تقوم بتعيين طريقة تحقيق الـ pppoe.",
        PT: "aquí é onde pode alterar o metodo de autenticaçao de Ppoe",
        RO: "TODO",
        IND: "TODO"
    },
    statisticsTip1: {
        EN: "Here you can see the LAN Statistics from each source.",
        FR: "Ici, vous pouvez voir les statistiques de chaque lien du réseau local.",
        SPN: "Aquí puede ver las estadísticas de la LAN de cada fuente.",
        DE: "Hier sehen Sie die LAN-Statistiken jeder Quelle.",
        IT: "Qui puoi vedere le statistiche LAN per ciascuna interfaccia.",
        DA: "Her kan du se LAN-statistik fra hver kilde.",
        AR: "هنا يمكنك رؤية إحصائيات شبكة الإتصال المحلية من كل مصدر.",
        PT: "aquí pode consultar as estatisticas da LAN en cada fonte",
        RO: "TODO",
        IND: "TODO"
    },
    statisticsTip2: {
        EN: "Here you can see the WAN Statistics.",
        FR: "Vous pouvez voir ici les statistiques du réseau WAN.",
        SPN: "Aquí puede ver las estadísticas de la WAN.",
        DE: "Hier sehen Sie die WAN-Statistiken.",
        IT: "Qui puoi vedere le statistiche di rete WAN.",
        DA: "Her kan du se WAN-statistik.",
        AR: "هنا يمكنك رؤية إحصائيات الشبكة واسعة النطاق. ",
        PT: "aquí pode consultar as estatisticas de WAN",
        RO: "TODO",
        IND: "TODO"
    },
    statisticsTip3: {
        EN: "Here you can see the ATM / PTM Statistics.",
        FR: "Vous pouvez voir ici les statistiques des couches ATM / PTM.",
        SPN: "Aquí puede ver las estadísticas de ATM / PTM.",
        DE: "Hier sehen Sie die ATM/PTM Statistiken.",
        IT: "Qui puoi vedere le statistiche ATM/PTM.",
        DA: "Her kan du se ATM/PTM-statistik.",
        AR: "هنا يمكنك رؤية إحصائيات الـ ATM\\PTM. ",
        PT: "aquí pode consultar as estatisticas de ATM/PTM",
        RO: "TODO",
        IND: "TODO"
    },
    statisticsTip4: {
        EN: "Here you can see the xDSL configuration.",
        FR: "Ici vous pouvez voir la configuration xDSL.",
        SPN: "Aquí puede ver la configuración de xDSL.",
        DE: "Hier sehen Sie die xDSL-Konfiguration.",
        IT: "Qui puoi vedere la configurazione xDSl",
        DA: "Her kan du se xDSL-konfigurationen.",
        AR: "هنا يمكنك رؤية تهيئة الـ xDSL.",
        PT: "aquí pode consultar a configuraçao xDSl",
        RO: "TODO",
        IND: "TODO"
    },
    statisticsTip5: {
        EN: "Here you can see the xDSL Statistics.",
        FR: "Vous pouvez voir ici les statistiques du réseau xDSL.",
        SPN: "Aquí puede ver las estadísticas de xDSL.",
        DE: "Hier sehen Sie die xDSL Statistiken.",
        IT: "Qui puoi vedere le statistiche xDSL.",
        DA: "Her kan du se xDSL-statistik.",
        AR: "هنا يمكنك رؤية إحصائيات الـ xDSL.",
        PT: "aquí pode consultar as estatisticas da xDSl",
        RO: "TODO",
        IND: "TODO"
    },
    statisticsTip6: {
        EN: "Here you can see the WAN status.",
        FR: "Ici vous pouvez voir l'état WAN.",
        SPN: "Aquí puedes ver el estado de la WAN.",
        DE: "Hier sehen Sie den WAN-Status.",
        IT: "Qui puoi vedere lo stato WAN.",
        DA: "Her kan du se WAN-status.",
        AR: "هنا يمكنك رؤية وضع الشبكة واسعة النطاق.",
        PT: "aquí pode consultar o estado da WAN",
        RO: "TODO",
        IND: "TODO"
    },
    statisticsTip7: {
        EN: "Here you can see the WAN Statistics.",
        FR: "Vous pouvez voir ici les statistiques du réseau WAN.",
        SPN: "Aquí puede ver las estadísticas de WAN.",
        DE: "Hier sehen Sie die WAN-Statistiken.",
        IT: "Qui puoi vedere le statistiche di rete WAN.",
        DA: "Her kan du se WAN-statistik.",
        AR: "هنا يمكنك رؤية إحصائيات الشبكة واسعة النطاق. ",
        PT: "aquí pode consultar as estatisticas da WAN",
        RO: "TODO",
        IND: "TODO"
    },
    statisticsTip8: {
        EN: "Here you can see the SFP Statistics.",
        FR: "Ici vous pouvez voir les statistiques SFP.",
        SPN: "Aquí puede ver las estadísticas de SFP.",
        DE: "Hier sehen Sie die SFP-Statistiken.",
        IT: "Qui puoi vedere le statistiche di SFP.",
        DA: "Her kan du se SFP-statistik.",
        AR: "هنا يمكنك رؤية إحصائيات SFP",
        PT: "aquí pode consultar as estatisticas da SFP",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpLeasesTip1: {
        EN: "Here you can see the lease time of your devices, it's the maximum time that a device can hold one specific IP without asking for a renew.",
        FR: "Ici vous pouvez voir la durée du bail de vos périphériques, c'est le temps maximum qu'un périphérique peut conserver une adresse IP spécifique sans avoir à demander un renouvellement.",
        SPN: "Aquí se puede ver el tiempo de concesión de los dispositivos, es el tiempo máximo que un dispositivo puede tener una dirección IP específica sin tener que pedir una nueva.",
        DE: "Hier sehen Sie den maximalen Zeitraum für die Gültigkeit der zugewiesenen IP-Adressen, nach deren Ablauf die IP-Adressen wieder freigegeben werden.",
        IT: "Qui puoi vedere il tempo di connessione della rete per dispositivo, questo è il tempo massimo che un dispositivo terrà l'indirizzo IP dinamico senza domandarne uno nuovo.",
        DA: "Her kan du se dine enheders lease time, som er den maksimale tid, en enhed kan holde en specifik IP-adresse uden at anmode om en fornyelse.",
        AR: "هنا يمكنك رؤية وقت إيجار شبكتك، وهو الحد الأقصى من الوقت الذي يمكن فيه للجهاز أن يتحمل IP واحد محدد دون أن يطلب التجديد.",
        PT: "aquí pode consultar o tempo de conseçao dos seu dispositivos, é o tempo maximo que um dispositivo pode manter um especifico IP sem perguntar para renovar.",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpLeasesTip2: {
        EN: "Here you can see some information about the connected devices and the expiration of its IPs.",
        FR: "Vous pouvez voir ici quelques informations sur les périphériques connectés et le délai d'expiration de leur adresse IP.",
        SPN: "Aquí se puede ver un poco de información sobre los dispositivos conectados y a la expiración de su IPS.",
        DE: "Hier sehen Sie Informationen über die angeschlossenen Geräte und deren derzeit zugewiesene IP-Adressen.",
        IT: "Qui puoi vedere delle informazioni sui dispositivi connessi e quando finirà il suo tempo di connessione IP.",
        DA: "Her kan du se nogle oplysninger om de tilsluttede enheder og udløbet af deres IP-adresser.",
        AR: "هنا يمكنك ان ترى بعض المعلومات عن الأجهزة المتصلة وإنتهاء الـ IPs الخاصة بها.",
        PT: "aquí pode consultar alguma informaçao sobre os dispositivos ligados e a expiraçao dos seu Ips",
        RO: "TODO",
        IND: "TODO"
    },
    arpTip1: {
        EN: "Here you can see the contents of your ARP table. The query for ARP table entries is usually done when you suspect of a duplicate IP causing a problem in the network.",
        FR: "Ici vous pouvez voir le contenu de votre table ARP. La table ARP peut permettre de détecter un doublon d'adresse IP dans votre réseau.",
        SPN: "Aquí se puede ver el contenido de su tabla ARP. La consulta para entradas de la tabla ARP generalmente se realiza cuando se sospecha de una IP duplicada causando un problema en la red.",
        DE: "Hier können Sie die Inhalte Ihrer ARP-Tabelle einsehen. Diese Suche innerhalb dieser Tabelle wird üblicherweise zur Identifikation von doppelt vorhandenen IP-Adressen in Ihrem Heimnetz genutzt. Diese können zu Problemen führen.",
        IT: "Qui puoi vedere il contenuto della tabella ARP. La tabella ARP potrebbe aiutare a trovare un indirizzo IP duplicato nella rete.",
        DA: "Her kan du se indholdet af din ARP-tabel. Anmodningen om poster i ART-tabel er normalt sket, når du mistænker, at en dobbelt IP-adresse forårsager et problem i netværket.",
        AR: "هنا يمكنك الاطلاع على محتويات جدول الـ ARP الخاص بك. وعادة ما يكون الاستعلام عن مدخلات جدول الـ ARP عندما تشك في وجود IP مكرر يسبب مشكلة في الشبكة.",
        PT: "aquí pode consultar o conteudo da sua tabela de ARP.A consulta para entradas na tabela ARP é normalmente feita quando há uma suspeita de IP duplicado causando um problema na rede",
        RO: "TODO",
        IND: "TODO"
    },
    arpTip2: {
        EN: "Find here information about the ARP entries and their interfaces.",
        FR: "Trouvez ici des informations sur les entrées ARP et leurs interfaces.",
        SPN: "Aquí se puede ver un poco de información acerca de las entradas ARP y sus interfaces.",
        DE: "Hier finden Sie Informationen zu ARP-Einträgen und deren Anschlüssen.",
        IT: "Qui puoi trovare le informazioni sui dispositivi della tabella ARP e ciascuna interfaccia.",
        DA: "Her kan du finde oplysninger om ARP-poster og deres interfaces.",
        AR: "تجد هنا معلومات حول مدخالات الـ ARP ووصلاتها.",
        PT: "encontre aquí informaçao sobre as entradas de ARP e os proprios interfaces",
        RO: "TODO",
        IND: "TODO"
    },
    dmzTip1: {
        EN: "Here you can enable and disable the DMZ.",
        FR: "Activez et désactivez la DMZ ici.",
        SPN: "Aquí se puede activar y desactivar la DMZ.",
        DE: "Hier können Sie DMZ ein- bzw. ausschalten.",
        IT: "Qui puoi attivare e disattivare la DMZ",
        DA: "Her kan du aktivere og deaktivere DMZ.",
        AR: "هنا حيث يمكنك تمكيين وتعطيل الـ DMZ.",
        PT: "aquí pode activar or desactivar o DMZ",
        RO: "TODO",
        IND: "TODO"
    },
    dmzTip2: {
        EN: "Here you can set the local host address.",
        FR: "Entrez ici l'adresse de l'hôte local.",
        SPN: "Aquí puede configurar la dirección de host local.",
        DE: "Hier können Sie die lokale Host-Adreese einstellen.",
        IT: "Qui puoi configurare l'indirizzo dell'host locale",
        DA: "Her kan du angive den lokale hostadresse.",
        AR: "هنا يمكنك تعيين عنوان المستضيف المحلي.",
        PT: "aquí pode alterar o endereço local de host",
        RO: "TODO",
        IND: "TODO"
    },
    dmzDeviceTip1: {
        EN: "Here you can add or remove this device from DMZ. Please notice that only one device can be active in the DMZ.",
        FR: "Ici, vous pouvez ajouter ou supprimer un dispositif en DMZ. Attention, seul un dispositif peut être contenu dans la DMZ.",
        SPN: "Aquí puede añadir o eliminar este dispositivo del DMZ. Tenga en cuenta que sólo un dispositivo puede estar activo en la DMZ.",
        DE: "Hier können Sie das Gerät in die DMZ hinzufügen oder aus dieser entfernen. Hinweis: es kann immer nur ein Gerät in die DMZ eingestellt werden!",
        IT: "Qui puoi aggiungere o togliere il dispositivo dalla DMZ. Attenzione che solo un dispositivo per volta puó esser attivato nella DMZ.",
        DA: "Her kan du tilføje eller fjerne denne enhed fra DMZ. Vær opmærksom på, at kun én enhed kan være aktiv i DMZ.",
        AR: "هنا يمكنك إضافة أو إزالة هذا الجهاز من الـ DMZ. برجاء الملاحظة أن يمكن لجهاز واحد فقط أن يكون نشطاً في الـ DMZ.",
        PT: "aquí pode adicionar ou remover este dispositivo do DMZ. Tenha atençao de que apenas um dispositivo pode ser activo no DMZ",
        RO: "TODO",
        IND: "TODO"
    },
    applyTip: {
        EN: "You can change the fields above but the information will only be saved if you click on 'apply'.",
        FR: "Vous pouvez modifier les champs ci-dessus. Attention, les informations ne seront enregistrées qu'après l'appui sur le bouton 'appliquer'.",
        SPN: "Puede cambiar los campos de arriba, pero la información sólo se guardarán si hace clic en aplicar.",
        DE: "Sie können die Felder oben entsprechend ändern. Ihre Änderungen werden allerdings erst wirksam, wenn Sie auf die Schaltfläche 'Anwenden' klicken.",
        IT: "Puoi cambiare i campi qua sopra, ma le informazioni saranno salvate solo premendo 'Salva'.",
        DA: "Du kan ændre felterne herover, men oplysningerne vil kun blive gemt, hvis du klikker på 'Anvend'.",
        AR: "يمكنك تغيير الحقول أعلاه لكنّ المعلومات لن تُحفَظ إلا إذا نقرت على ‘تطبيق’.",
        PT: "Pode alterar os campos mas a informaçao só será guardada se pressionar 'apply''",
        RO: "TODO",
        IND: "TODO"
    },
    cancelTip: {
        EN: "If you want to leave the page without saving your changes, click on 'cancel' button.",
        FR: "Pour quitter la page sans enregistrer vos modifications, cliquez sur le bouton 'annuler'.",
        SPN: "Si quieres salir de la página sin guardar las modificaciones que usted puede hacer clic en el botón de cancelación. ",
        DE: "Wenn Sie die Seite ohne Änderungen verlassen wollen, klicken Sie auf die Schaltfläche 'Abbrechen'.",
        IT: "Se vuoi lasciare questa pagina senza salvare le modifiche, premere su 'Cancella'.",
        DA: "Hvis du vil forlade siden uden at gemme dine ændringer, skal du klikke på knappen 'Annullér'.",
        AR: "إإذا أردت مغادرةَ الصفحة دون حفظ تغييراتِك، انقر على زر إلغاء",
        PT: "se quiser abandonar a pagina sem guardar, pressione 'cancel''",
        RO: "TODO",
        IND: "TODO"
    },
    addTip: {
        EN: "You can change the fields above but the new user will only be saved if you click on 'Add'.",
        FR: "Vous pouvez changer les champs ci-dessus mais le nouvel utilisateur sera sauvé uniquement si vous cliquez sur le bouton 'Ajouter'.",
        SPN: "Puede cambiar los campos de arriba pero el nuevo usuario solo se slavara si pincha en 'Añadir'",
        DE: "Sie können die vorstehenden Felder ändern, aber der neue Nutzer wird erst gespeichert, wenn Sie auf  'Hinzufügen'  klicken.",
        IT: "Puoi modificare i campi sopra ma il nuovo utilizzatore sarà salvato solo se selezioni 'Aggiungi'",
        DA: "Du kan ændre i felterne ovenfor, men den nye bruger vil først blive gemt når du trykker 'tilføj'.",
        AR: "TODO",
        PT: "Pode alterar os campos mas a informaçao só será guardada se pressionar 'uupdate''",
        RO: "Puteti modifica campurile de mai sus dar noul nume de utilizator va fi salvat prin  apasarea butonului 'Adaugare'.'",
        IND: "TODO"
    },
    clearTip: {
        EN: "If you click on 'Clear' all the fields will be clear.",
        FR: "Si vous cliquez sur 'Effacer', tous les champs seront effacés.",
        SPN: "Si pincha en 'Limpiar' todos los campos se limpiaran",
        DE: "Wenn Sie die obigen Felder wieder löschen wollen, klicken Sie auf  'Löschen'.",
        IT: "Se selezioni 'Ripulisci'  tutti i campi saranno cancellati",
        DA: "Hvis du taster 'nulstil', vil alt indhold i felterne blive slettet.",
        AR: "TODO",
        PT: "se pressionar 'clear' todos os campos serao apagados'",
        RO: "Daca apasati 'Stergere', toate campurile vor fi golite.'",
        IND: "TODO"
    },
    updateTip: {
        EN: "You can change the fields above but the information will only be saved if you click on 'Update'.",
        FR: "Vous pouvez changer les champs ci-dessus mais l'information sera sauvée uniquement si vous cliquez sur le bouton 'Mise à jour'.",
        SPN: "Puede cambiar los campos de arriba pero la informacion solo se salvara si pincha en 'Actualizar'",
        DE: "Sie können die vorstehenden Felder ändern, aber die Daten werden erst gespeichert, wenn Sie auf  'Aktualisieren'  klicken.",
        IT: "Puoi modificare i campi sopra ma le informazioni verranno salvate solo se clicchi su 'applica'.",
        DA: "Du kan ændre i felterne ovenfor, men informationen vil først blive gemt når du trykker 'opdater'.",
        AR: "TODO",
        PT: "Pode alterar os campos mas a informaçao só será guardada se pressionar 'update''",
        RO: "Puteti schimba campurile de mai sus, dar informatiile vor fi salvate doar daca apasati 'Actualizare'.'",
        IND: "TODO"
    },
    cancelSimpleTip: {
        EN: "If you click on 'Cancel' you will back to add user functionality.",
        FR: "Si vous cliquez sur 'Annuler', vous retournerez à la fonction d'ajout utilisateur.",
        SPN: "Si pincha en 'Cancelar' volvera a añadir funcionalidad de usuario",
        DE: "Wenn Sie auf 'Abbrechen' klicken, gelangen Sie zurück zur Nutzerverwaltung.",
        IT: "Se selezioni 'Cancella' ritornerai alla funzionalità di aggiunta utilizzatore",
        DA: "Hvis du taster 'fortryd' vil du komme tilbage til tilføj bruger funktionalitet.",
        AR: "TODO",
        PT: "se pressionar 'cancel' sera direccionado a adicionar funcionalidade de utilizador'",
        RO: "Daca apasati 'Cancel', veti fi redirectionati sa adaugati functionalitatile de utilizator.'",
        IND: "TODO"
    },
    tableUsersTip: {
        EN: "Here you can see the users list.",
        FR: "Vous pouvez voir ici la liste des utilisateurs.",
        SPN: "Aqui puede ver la lista de usuarios",
        DE: "Hier sehen Sie die Liste der eingetragenen Nutzer.",
        IT: "Qui puoi vedere la lista degli utilizzatori",
        DA: "Her kan du se listen af brugere.",
        AR: "TODO",
        PT: "aquí pode consultar a lista de utilizadores",
        RO: "Aici puteti accesa lista cu utilizatori.",
        IND: "TODO"
    },
    tabTip: {
        EN: "You can navigate using these tabs to change additional configurations.",
        FR: "Naviguez à l'aide des onglets pour modifier les configurations supplémentaires.",
        SPN: "Puedes navegar usando estas fichas para cambiar configuraciones adicionales.",
        DE: "Zur Änderung weiterer Einstellungen nutzen Sie die entsprechenden Reiter.",
        IT: "Puoi navigare usando queste schede per modificare ulteriormente la configurazione.",
        DA: "Du kan navigere ved hjælp af disse faner for at ændre flere konfigurationer.",
        AR: "يمكنك التنقل باستخدام علامات التبويب هذه لتغيير إعدادات إضافية.",
        PT: "Pode navegar usando estas paginas para alterar configuraçoes adicionais",
        RO: "TODO",
        IND: "TODO"
    },
    deviceInfoTip: {
        EN: "You can navigate using these tabs to see more informations about the device.",
        FR: "Naviguez à l'aide des onglets pour voir plus d'informations sur le périphérique.",
        SPN: "Usted puede navegar utilizando estas fichas para ver más información sobre el dispositivo.",
        DE: "Zur Anzeige weiterer Information zu Ihren Einstellungen nutzen Sie die entsprechenden Reiter.",
        IT: "Puoi navigare usando queste schede per avere più informazioni sul dispositivo.",
        DA: "Du kan navigere ved hjælp af disse faner for at se flere oplysninger om enheden.",
        AR: "يمكنك التنقل باستخدام علامات التبويب هذه لتري المزيد من المعلومات عن الجهاز.",
        PT: "Pode navegar usando estas paginas para ver mais informaçoes sobre o dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    linkSpeed: {
        EN: "Link speed:",
        FR: "Vitesse du lien:",
        SPN: "Velocidad de enlace:",
        DE: "Link speed:",
        IT: "Velocità del Link",
        DA: "Linkhastighed:",
        AR: "سرعة الرابط:",
        PT: "velocidade do link:",
        RO: "TODO",
        IND: "TODO"
    },
    linkSpeedTable: {
        EN: "Link speed",
        FR: "Vitesse du lien",
        SPN: "Velocidad de enlace",
        DE: "Link speed",
        IT: "Velocità del Link",
        DA: "Linkhastighed",
        AR: "سرعة الرابط",
        PT: "velocidade do link",
        RO: "TODO",
        IND: "TODO"
    },
    bytes: {
        EN: "Bytes",
        FR: "Octets",
        SPN: "Bytes",
        DE: "Bytes",
        IT: "Byte",
        DA: "Bytes",
        AR: "بايت",
        PT: "bytes",
        RO: "TODO",
        IND: "TODO"
    },
    packet: {
        EN: "Packet",
        FR: "Paquet",
        SPN: "Paquete",
        DE: "Paket",
        IT: "Pacchetti",
        DA: "Pakke",
        AR: "حزمة",
        PT: "paquete",
        RO: "TODO",
        IND: "TODO"
    },
    errors: {
        EN: "Errors",
        FR: "Erreurs",
        SPN: "Errores",
        DE: "Fehler",
        IT: "Errori",
        DA: "Fejl",
        AR: "أخطاء",
        PT: "erros",
        RO: "TODO",
        IND: "TODO"
    },
    drops: {
        EN: "Drops",
        FR: "Pertes",
        SPN: "Pérdidas",
        DE: "Drops",
        IT: "Drops",
        DA: "Afbrydelser",
        AR: "عددَ ما أُسقِطَ مِن (مكالمات)",
        PT: "perdas",
        RO: "TODO",
        IND: "TODO"
    },
    discardedPacket: {
        EN: "Discarded Pkt",
        FR: "Pqt rejetés",
        SPN: "Pkt Descartados",
        DE: "Verworfene Packete",
        IT: "Discarded Pkt",
        DA: "Afvist pakke",
        AR: "حزمة مهملة",
        PT: "PKT descartados",
        RO: "TODO",
        IND: "TODO"
    },
    unicastPacket: {
        EN: "Unicast Pkt",
        FR: "Pqt Unicast",
        SPN: "Unicast Pkt",
        DE: "Unicast Pakete",
        IT: "Unicast Pkt",
        DA: "Unicast-pakke",
        AR: "حزمة أحادية الإرسال",
        PT: "unicast PKT",
        RO: "TODO",
        IND: "TODO"
    },
    multcastPacket: {
        EN: "Multicast Pkt",
        FR: "Pqt Multicast",
        SPN: "Multicast Pkt",
        DE: "Multicast Pakete",
        IT: "Multicast Pkt",
        DA: "Multicast-pakke",
        AR: "حزمة الإرسال المتعدد",
        PT: "multicast pkt",
        RO: "TODO",
        IND: "TODO"
    },
    broadcastPacket: {
        EN: "Broadcast Pkt",
        FR: "Pqt Broadcast",
        SPN: "Broadcast Pkt",
        DE: "Broadcast Pakete",
        IT: "Broadcast Pkt",
        DA: "Broadcast-pakke",
        AR: "حزمة البث",
        PT: "broadcast PKT",
        RO: "TODO",
        IND: "TODO"
    },
    multicast: {
        EN: "Multicast",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    resetCounters: {
        EN: "Reset Counters",
        FR: "Rèinitialiser compteurs",
        SPN: "Restablecer contadores",
        DE: "Zähler zurücksetzen",
        IT: "Azzera contatori",
        DA: "Nulstil tællere",
        AR: "إعادة تعيين العدادات",
        PT: "reset de contadores",
        RO: "TODO",
        IND: "TODO"
    },
    showMore: {
        EN: "Show More",
        FR: "Voir plus",
        SPN: "Mostrar Más",
        DE: "Details anzeigen",
        IT: "Mostra",
        DA: "Vis mere",
        AR: "أظهر أكثر",
        PT: "mostrar mais",
        RO: "TODO",
        IND: "TODO"
    },
    hide: {
        EN: "Hide",
        FR: "Masquer",
        SPN: "Ocultar",
        DE: "Verbergen",
        IT: "Nascondi",
        DA: "Skjul",
        AR: "إخفاء",
        PT: "ocultar",
        RO: "TODO",
        IND: "TODO"
    },
    macFilterMainTitle2: {
        EN: "MAC Filter",
        FR: "Filtre MAC",
        SPN: "Filtrado MAC",
        DE: "MAC-Adressfilter",
        IT: "Filtro Mac",
        DA: "TODO",
        AR: "TODO",
        PT: "Filtro Mac",
        RO: "Filtru MAC",
        IND: "TODO"
    },
    macFilterMainTitle5: {
        EN: "MAC Filter",
        FR: "Filtre MAC",
        SPN: "Filtrado MAC",
        DE: "MAC-Adressfilter",
        IT: "Filtro Mac",
        DA: "TODO",
        AR: "TODO",
        PT: "Filtro MAC",
        RO: "Filtru MAC",
        IND: "TODO"
    },
    macFilterDescription: {
        EN: "You can control the Wi-Fi access to the gateway using the below Mac-Filter settings.",
        FR: "Contrôlez l'accès sans fil au modem à l'aide des paramètres de filtrage MAC.",
        SPN: "Puede controlar el acceso Wi-Fi a la pasarela mediante el siguiente configuración Mac-Filter.",
        DE: "Sie können den WLAN-Zugriff Ihrer Geräte über die Verwendung des MAC-Filters steuern.",
        IT: "Puoi controllare l'accesso Wi-Fi al gateway utilizzando i parametri seguenti per il filtro MAC.",
        DA: "Du kan kontrollere WiFi-adgangen til gatewayen ved hjælp af MAC-filterindstillingerne herunder.",
        AR: "يمكنك التحكم في وصول الإتصال اللاسلكي إلى الوصلة باستخدام إعدادات فلترة ماك المبينة أدناه.",
        PT: "pode controlar o acesso de Wi-Fi ao gateway usando as configuraçoes de MAC-filter",
        RO: "TODO",
        IND: "TODO"
    },
    macFilterMode: {
        EN: "MAC Filtering Mode",
        FR: "Mode de filtrage MAC",
        SPN: "Modo de filtrado MAC",
        DE: "MAC-Filter",
        IT: "Filtro MAC",
        DA: "MAC-filtreringstilstand",
        AR: "وضع فلترة ماك",
        PT: "Modo de filtro MAC",
        RO: "TODO",
        IND: "TODO"
    },
    allow: {
        EN: "Allow",
        FR: "Autoriser",
        SPN: "Permitir",
        DE: "Zulassen",
        IT: "Autorizza",
        DA: "Tillad",
        AR: "السماح",
        PT: "autorizar",
        RO: "TODO",
        IND: "TODO"
    },
    allowAll: {
        EN: "Allow all",
        FR: "Tout autoriser",
        SPN: "Permitir todo",
        DE: "Alle zulassen",
        IT: "Autorizza tutti",
        DA: "Tillad alle",
        AR: "السماح للكل",
        PT: "autorizar tudo",
        RO: "TODO",
        IND: "TODO"
    },
    allowAllMacfilter: {
        EN: "Allow all",
        FR: "Tout autoriser",
        SPN: "Permitir todo",
        DE: "Alle zulassen",
        IT: "Autorizza tutti",
        DA: "Tillad alle",
        AR: "السماح للكل",
        PT: "autorizar tudo",
        RO: "TODO",
        IND: "TODO"
    },
    blockAll: {
        EN: "Block all",
        FR: "Tout bloquer",
        SPN: "Bloquear todo",
        DE: "Alle blockieren",
        IT: "Blocca tutti",
        DA: "Bloker alle",
        AR: "منع الكل",
        PT: "bloquear tudo",
        RO: "TODO",
        IND: "TODO"
    },
    deny: {
        EN: "Deny",
        FR: "Bloquer",
        SPN: "Negar",
        DE: "Ablehnen",
        IT: "Blocca",
        DA: "Afvis",
        AR: "رفض",
        PT: "negar",
        RO: "TODO",
        IND: "TODO"
    },
    addWifiDevice: {
        EN: "Add Wi-Fi Devices",
        FR: "Ajouter des périphériques Wi-Fi",
        SPN: "Agregar dispositivos Wi-Fi",
        DE: "WLAN-Gerät hinzufügen",
        IT: "Aggiungi dispositivo Wi-Fi",
        DA: "Tilføj WiFi-enheder",
        AR: "إضافة أجهزة إتصال لاسلكي",
        PT: "adicionar dispositivos Wi-Fi",
        RO: "TODO",
        IND: "TODO"
    },
    other: {
        EN: "Other",
        FR: "Autre",
        SPN: "Otro",
        DE: "Anderes",
        IT: "Altro",
        DA: "Andet",
        AR: "أخري",
        PT: "outro",
        RO: "TODO",
        IND: "TODO"
    },
    wifiControlList: {
        EN: "Wi-Fi Control List",
        FR: "Liste des périphériques Wi-Fi",
        SPN: "Lista de control de Wi-Fi",
        DE: "Übersicht der WLAN-Geräte (maximal 16 Einträge)",
        IT: "Lista di controllo Wi-Fi (fino a 16 elementi)",
        DA: "WiFi-kontrolliste",
        AR: "قائمة التحكم بالإتصال اللاسلكي (حتي 16 عنصر)",
        PT: "lista de control Wi-Fi",
        RO: "TODO",
        IND: "TODO"
    },
    noFiltering: {
        EN: "no filtering",
        FR: "pas de filtrage",
        SPN: "Sin filtrado",
        DE: "Kein Filter",
        IT: "Senza filtro MAC",
        DA: "ingen filtrering",
        AR: "دون فلترة",
        PT: "Sem filtro",
        RO: "TODO",
        IND: "TODO"
    },
    allowBelow: {
        EN: "Allow access <strong>only</strong> for devices in table below",
        FR: "Autoriser l'accès <strong>uniquement</strong> pour les périphériques du tableau ci-dessous",
        SPN: "Permitir el acceso <strong>sólo</strong> para los dispositivos de la tabla de abajo",
        DE: "Zugang <strong>nur</strong> für unten aufgeführte Geräte erlauben",
        IT: "Autorizza accesso solo per i dispositivi indicati qui sotto",
        DA: "Tillad adgang <strong>kun</strong> til enhederne i tabellen herunder",
        AR: "السماح بالوصول <قوي> فقط </ قوي> للأجهزة في الجدول أدناه",
        PT: "autorizar o acesso <strong>só</strong>para os dispositivos da tabela",
        RO: "TODO",
        IND: "TODO"
    },
    denyBelow: {
        EN: "Deny access for devices in table below",
        FR: "Interdire l'accès pour les périphériques du tableau ci-dessous",
        SPN: "Denegar el acceso de los dispositivos en la tabla de abajo",
        DE: "Zugang für unten aufgeführte Gräte unterbinden",
        IT: "Blocca l'accesso ai dispositivi indicati qui sotto",
        DA: "Afvis adgang til enhederne i tabellen herunder",
        AR: "رفض الوصول للأجهزة بالجدول أدناه",
        PT: "negar acesso aos dispositivos da tabela",
        RO: "TODO",
        IND: "TODO"
    },
    noConnectedDevices: {
        EN: "There are no connected devices",
        FR: "Aucun périphérique connecté",
        SPN: "No hay dispositivos conectados",
        DE: "Keine Geräte angeschlossen",
        IT: "Non ci sono dispositivi connessi",
        DA: "Der er ingen enheder tilsluttet",
        AR: "لا يوجد أجهزة متصلة",
        PT: "Nao existen dispositivos ligados",
        RO: "TODO",
        IND: "TODO"
    },
    dhcpLeases: {
        EN: "DHCP Leases",
        FR: "Baux DHCP",
        SPN: "Concesiones DHCP",
        DE: "DHCP Gültigkeitszeitraum",
        IT: "Tempo di connessione DHCP",
        DA: "DHCP-rettighedstider",
        AR: "إيجارات الـ DHCP",
        PT: "conceçoes DHCP",
        RO: "TODO",
        IND: "TODO"
    },
    expiresIn: {
        EN: "Expires in",
        FR: "Expire dans",
        SPN: "Expira En",
        DE: "Läuft ab in",
        IT: "Espira in",
        DA: "Udløber om",
        AR: "ينتهي في",
        PT: "expira em",
        RO: "TODO",
        IND: "TODO"
    },
    add: {
        EN: "Add",
        FR: "Ajouter",
        SPN: "Añadir",
        DE: "Hinzufügen",
        IT: "Aggiungi",
        DA: "Tilføj",
        AR: "إضافة ",
        PT: "adicionar",
        RO: "TODO",
        IND: "TODO"
    },
    update: {
        EN: "Update",
        FR: "Mettre à jour",
        SPN: "Actualización",
        DE: "Aktualisieren",
        IT: "Aggiorna",
        DA: "Opdater",
        AR: "تحديث",
        PT: "update",
        RO: "TODO",
        IND: "TODO"
    },
    clear: {
        EN: "Clear",
        FR: "Effacer",
        SPN: "Aclarar",
        DE: "Löschen",
        IT: "Cancella",
        DA: "Ryd",
        AR: "مسح",
        PT: "limpar",
        RO: "TODO",
        IND: "TODO"
    },
    Remove: {
        EN: "Remove",
        FR: "Supprimer",
        SPN: "Retirar",
        DE: "Entfernen",
        IT: "Elimina",
        DA: "Fjern",
        AR: "إزالة",
        PT: "remover",
        RO: "TODO",
        IND: "TODO"
    },
    wps: {
        EN: "WPS",
        FR: "WPS",
        SPN: "WPS",
        DE: "WPS",
        IT: "WPS",
        DA: "WPS",
        AR: "إعداد الحماية علي الإنترنت",
        PT: "WPS",
        RO: "TODO",
        IND: "TODO"
    },
    wpsApPinCode: {
        EN: "WPS AP PIN Code",
        FR: "TODO",
        SPN: "Codigo PIN WPS AP",
        DE: "PIN Code für WPS Access Point",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "codigo WPS AP PIN",
        RO: "Cod PIN WPS AP",
        IND: "TODO"
    },
    wpsDevicePinCode: {
        EN: "WPS Device PIN Code",
        FR: "TODO",
        SPN: "Codigo PIN dispositivo WPS",
        DE: "PIN Code für WPS Ihres Endgerätes",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "codigo PIN de dispositivo WPS",
        RO: "Cod PIN dispozitiv WPS",
        IND: "TODO"
    },
    connectUsingWps: {
        EN: "Connect using WPS",
        FR: "TODO",
        SPN: "Conectar usando WPS",
        DE: "Per WPS verbinden",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "ligar usando WPS",
        RO: "Conectare folosind WPS",
        IND: "TODO"
    },
    advanced: {
        EN: "Advanced",
        FR: "Avancé",
        SPN: "Avanzado",
        DE: "Erweitert",
        IT: "Avanzato",
        DA: "Avanceret",
        AR: "متقدم",
        PT: "avançado",
        RO: "TODO",
        IND: "TODO"
    },
    advancedOptions: {
        EN: "Advanced",
        FR: "Avancé",
        SPN: "Avanzado",
        DE: "Erweitert",
        IT: "Avanzato",
        DA: "Avanceret",
        AR: "متقدم",
        PT: "avançado",
        RO: "TODO",
        IND: "TODO"
    },
    wifiScheduling: {
        EN: "Wi-Fi Scheduling",
        FR: "Planification Wi-Fi",
        SPN: "Programación Wi-Fi",
        DE: "WLAN-Zeitschaltung",
        IT: "Programmazione Wi-Fi",
        DA: "WiFi-planlægning",
        AR: "جدولة الإتصال اللاسلكي",
        PT: "programaçao de Wi-Fi",
        RO: "TODO",
        IND: "TODO"
    },
    wifiScheduling2: {
        EN: "Wi-Fi Scheduling 2.4GHz",
        FR: "Planification Wi-Fi 2.4GHz",
        SPN: "Programación Wi-Fi 2.4GHz",
        DE: "WLAN-Zeitschaltung 2.4GHz",
        IT: "Programmazione Wi-Fi 2.4GHz",
        DA: "WiFi-planlægning 2.4GHz",
        AR: "جدولة الإتصال اللاسلكي",
        PT: "programaçao de Wi-Fi 2.4GHz",
        RO: "TODO",
        IND: "TODO"
    },
    wifiScheduling5: {
        EN: "Wi-Fi Scheduling 5GHz",
        FR: "Planification Wi-Fi 5GHz",
        SPN: "Programación Wi-Fi 5GHz",
        DE: "WLAN-Zeitschaltung 5GHz",
        IT: "Programmazione Wi-Fi 5GHz",
        DA: "WiFi-planlægning 5GHz",
        AR: "جدولة الإتصال اللاسلكي",
        PT: "programaçao de Wi-Fi 5GHz",
        RO: "TODO",
        IND: "TODO"
    },
    wirelessEnviroment: {
        EN: "Wireless Environment",
        FR: "Environnement Wi-Fi",
        SPN: "Ambiente Wireless",
        DE: "WLAN-Umgebung",
        IT: "Ambiente Wireless",
        DA: "Trådløst miljø",
        AR: "بيئة الإتصال اللاسلكي",
        PT: "hambiente wireless",
        RO: "TODO",
        IND: "TODO"
    },
    macFilter: {
        EN: "MAC Filter",
        FR: "Filtre MAC",
        SPN: "Filtro MAC",
        DE: "MAC-Filter",
        IT: "Filtro MAC",
        DA: "MAC-filter",
        AR: "فلتر ماك",
        PT: "filtro MAC",
        RO: "TODO",
        IND: "TODO"
    },
    guestSSId: {
        EN: "Guest SSId",
        FR: "SSID Invité",
        SPN: "SSID Huésped",
        DE: "Gastfunknetz",
        IT: "SSID Ospiti",
        DA: "Gæste-SSId",
        AR: "إسم الشبكة الضيف",
        PT: "hospede SSId",
        RO: "TODO",
        IND: "TODO"
    },
    enable5GWireless: {
        EN: "Enable 5 GHz Wireless",
        FR: "Activer Wi-Fi 5 GHz",
        SPN: "Habilitar Wireless 5 GHz",
        DE: "5 GHz WLAN einschalten",
        IT: "Attiva Wireless 5 GHz",
        DA: "Aktivér 5 GHz trådløst",
        AR: "تمكين 5 غيغاهرتز لاسلكي ",
        PT: "habilitar wireless 5GHz",
        RO: "TODO",
        IND: "TODO"
    },
    enable24Wireless: {
        EN: "Enable 2.4GHz Wireless",
        FR: "Activer Wi-Fi 2.4 GHz",
        SPN: "Habilitar Wireless 2.4 GHz",
        DE: "2.4GHz WLAN einschalten",
        IT: "Attiva Wireless 2.4 GHz",
        DA: "Aktivér 2,4 GHz trådløst",
        AR: "تمكين 2.4 غيغاهرتز لاسلكي",
        PT: "habilitar wireless 2.4GHz",
        RO: "TODO",
        IND: "TODO"
    },
    ssid: {
        EN: "SSId",
        FR: "SSId",
        SPN: "SSId",
        DE: "WLAN-Funknetz",
        IT: "SSId",
        DA: "SSId",
        AR: "إسم الشبكة ",
        PT: "SSId",
        RO: "TODO",
        IND: "TODO"
    },
    invalidSSId: {
        EN: "Invalid SSId",
        FR: "SSID Invalide",
        SPN: "SSID no Válida",
        DE: "Ungülter Name für WLAN-Funknetz",
        IT: "SSID non valido",
        DA: "Ugyldigt SSId",
        AR: "إسم شبكة غير صحيح",
        PT: "SSID invalido",
        RO: "TODO",
        IND: "TODO"
    },
    visible: {
        EN: "Visible",
        FR: "Visible",
        SPN: "Visible",
        DE: "Sichtbar",
        IT: "Visibile",
        DA: "Synlig",
        AR: "مرئي",
        PT: "Visivel",
        RO: "TODO",
        IND: "TODO"
    },
    channelSelection: {
        EN: "Channel Selection",
        FR: "Sélection du Canal",
        SPN: "Selección de Canal",
        DE: "Funkkanal auswählen",
        IT: "Selezione del canale radio",
        DA: "Kanalvalg",
        AR: "إختيار القناة ",
        PT: "Seleçao de canal",
        RO: "TODO",
        IND: "TODO"
    },
    security: {
        EN: "Security",
        FR: "Sécurité",
        SPN: "Seguridad",
        DE: "Sicherheit",
        IT: "Sicurezza",
        DA: "Sikkerhed",
        AR: "الأمن",
        PT: "Segurança",
        RO: "TODO",
        IND: "TODO"
    },
    securityMode: {
        EN: "Security Mode",
        FR: "TODO",
        SPN: "Modo de seguridad",
        DE: "Sicherheitsmodus",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "modo de segurança",
        RO: "Mod Securitate",
        IND: "TODO"
    },
    passwordWiFi: {
        EN: "Password",
        FR: "Mot de passe",
        SPN: "Contraseña de Wi-Fi",
        DE: "Passwort",
        IT: "Password",
        DA: "Adgangskode",
        AR: "كلمة المرور",
        PT: "password",
        RO: "TODO",
        IND: "TODO"
    },
    confirmPasswordWiFi: {
        EN: "Confirm Password",
        FR: "Confirmez le nouveau mot de passe",
        SPN: "Confirma la contraseña de Wi-Fi",
        DE: "Password bestätigen",
        IT: "Conferma password",
        DA: "Bekræft Adgangskode",
        AR: "TODO",
        PT: "confirma a password",
        RO: "Confirmati Parola",
        IND: "TODO"
    },
    wepKey: {
        EN: "WEP Key",
        FR: "TODO",
        SPN: "Clave WEP",
        DE: "WEP-Kennwort",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "chave WEP",
        RO: "Cheie WPS",
        IND: "TODO"
    },
    networkKey: {
        EN: "Network Key",
        FR: "TODO",
        SPN: "Clave de red",
        DE: "Netzwerk-Kennwort",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "chave de rede",
        RO: "Cheie retea",
        IND: "TODO"
    },
    wpsWarning: {
        EN: "WPS is automatically disabled if you choose WEP or WPA-only security or disable broadcast of the SSId",
        FR: "TODO",
        SPN: "WPS se deshabilitara automaticamente si escoge WEP o WPA-only o si deshabilita la difusion del SSId",
        DE: "WPS ist automatisch deaktiviert, wenn Sie WEP,  oder ",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "o WPS é automaticamente desligado se voce escolher a segurança WEP ou WPA-only ou desligar a transmissao de SSId",
        RO: "Modul WPS este dezactivat in mod automat daca selectati modul de securitate WEP sau doar WPA, sau daca anulati transmiterea numelui de retea SSID.",
        IND: "TODO"
    },
    securityModeWarning: {
        EN: "Security for this wireless network is disabled, anybody can connect or listen to it",
        FR: "TODO",
        SPN: "La seguridad de esta red WiFi esta deshabilitada",
        DE: "Für diese WLAN wurde keine Verschlüsselungsmethode ausgewählt und eingerichtet. Dies hat zur Folge, dass sich jedes Endgerät an Ihrem WLAN anmelden und gegebenenfalls Ihre Datenkommunikation mitverfolgen kann!",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "a segurança para esta rede esta desligada, qualquer pessoa pode ligar-se our ver a rede",
        RO: "Securitatea pentru aceasta retea wireless este dezactivata. Oricine se poate conecta la ea, sau poate asculta.",
        IND: "TODO"
    },
    passphrase: {
        EN: "Passphrase",
        FR: "Mot de Passe",
        SPN: "Contraseña",
        DE: "WLAN-Passwort",
        IT: "Chiave di sicurezza",
        DA: "Adgangsudtryk",
        AR: "عبارة المرور",
        PT: "frase de password",
        RO: "TODO",
        IND: "TODO"
    },
    showPassword: {
        EN: "Show Password",
        FR: "Afficher le Mot de Passe",
        SPN: "Mostrar la Contraseña",
        DE: "WLAN-Passwort anzeigen",
        IT: "Mostra la chiave",
        DA: "Vis adgangskode",
        AR: "إظهار كلمة المرور",
        PT: "Mostrar password",
        RO: "TODO",
        IND: "TODO"
    },
    showUserPassword: {
        EN: "Show Password",
        FR: "Afficher le Mot de Passe",
        SPN: "Mostrar la Contraseña",
        DE: "Passwort anzeigen",
        IT: "Mostra la chiave",
        DA: "Vis adgangskode",
        AR: "إظهار كلمة المرور",
        PT: "Mostrar password",
        RO: "TODO",
        IND: "TODO"
    },
    invalidPassword: {
        EN: "Invalid Password",
        FR: "Mot de Passe Invalide",
        SPN: "Contraseña no Válida",
        DE: "Ungültiges Passwort",
        IT: "Chiave di sicurezza non valida",
        DA: "Ugyldig adgangskode",
        AR: "كلمة مرور غير صحيحة",
        PT: "password invalida",
        RO: "TODO",
        IND: "TODO"
    },
    passwordMinimunLeght: {
        EN: "Invalid Password length",
        FR: "TODO",
        SPN: "Longitud de contraseña incorrecta",
        DE: "Kennwortlänge unzureichend",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Tamanho minimo é 8 caracteres",
        RO: "Lungime parola incorecta",
        IND: "TODO"
    },
    trafficSpeedMonitoring: {
        EN: "Traffic Speed Monitoring",
        FR: "Vitesse de connexion",
        SPN: "Velocidad del Tráfico",
        DE: "Geschwindigkeitsmonitor",
        IT: "Monitoraggio del traffico",
        DA: "Overvågning af trafikhastighed",
        AR: "التحكم في سرعة المرور",
        PT: "monitor de velovidade de trafico",
        RO: "TODO",
        IND: "TODO"
    },
    dslSpeed: {
        EN: "Internet Speed",
        FR: "Débit Internet",
        SPN: "Velocidad Internet",
        DE: "Internet-Geschwindigkeit",
        IT: "Velocità Internet",
        DA: "Internet hastighed",
        AR: "سرعة Internet",
        PT: "velocidade de internet",
        RO: "TODO",
        IND: "TODO"
    },
    internetSpeed: {
        EN: "Speed Test",
        FR: "Test de débit Internet",
        SPN: "Test de velocidad",
        DE: "Geschwindigkeitstest",
        IT: "Test della velocità Internet",
        DA: "Test hastighed",
        AR: "TODO",
        PT: "teste de velocidade",
        RO: "Test de viteza",
        IND: "TODO"
    },
    xdslConf: {
        EN: "xDSL Configuration",
        FR: "Configuration xDSl",
        SPN: "Configuración xDSl",
        DE: "xDSL-Konfiguration",
        IT: "Configurazione xDSl",
        DA: "xDSL-konfiguration",
        AR: "تهيئة xDSl",
        PT: "configuraçao xDSl",
        RO: "TODO",
        IND: "TODO"
    },
    dslLatency: {
        EN: "DSL Latency",
        FR: "Latence DSl",
        SPN: "Latencia DSl",
        DE: "Latenz der DSL-Verbindung",
        IT: "Latenza DSl",
        DA: "DSL-latens",
        AR: "زمن وصول الـ DSl",
        PT: "latencia de DSl",
        RO: "TODO",
        IND: "TODO"
    },
    linkType: {
        EN: "Link Type",
        FR: "Type de lien",
        SPN: "Tipo de enlace",
        DE: "Verbindungstyp",
        IT: "Tipo di Link",
        DA: "Linktype",
        AR: "نوع الرابط",
        PT: "tipo de Link",
        RO: "TODO",
        IND: "TODO"
    },
    encapMode: {
        EN: "Encap. Mode",
        FR: "Mode d'encap.",
        SPN: "Modo de Encap.",
        DE: "Enkap. Methode",
        IT: "Incapsulazione",
        DA: "Indkapsl. tilstand",
        AR: "وضع التغلييف",
        PT: "modo de encap.",
        RO: "TODO",
        IND: "TODO"
    },
    netProt: {
        EN: "Network Prot.",
        FR: "Prot. réseau.",
        SPN: "Prot. de red",
        DE: "Netzwerkprotokoll",
        IT: "Protocollo rete",
        DA: "Netværksbeskyt.",
        AR: "منفذ الشبكة ",
        PT: "prototipo de rede",
        RO: "TODO",
        IND: "TODO"
    },
    wanOE: {
        EN: "WAN over Ethernet",
        FR: "WAN sur Ethernet",
        SPN: "WAN sobre Ethernet",
        DE: "WAN über Ethernet",
        IT: "WAN via Ethernet",
        DA: "WAN over Ethernet",
        AR: "الشبكة واسعة النطاق عبر الإيثرنت",
        PT: "WAN sobre ethernet",
        RO: "TODO",
        IND: "TODO"
    },
    type: {
        EN: "Type",
        FR: "Type",
        SPN: "Tipo",
        DE: "Typ",
        IT: "Tipo",
        DA: "Type",
        AR: "نوع ",
        PT: "tipo",
        RO: "TODO",
        IND: "TODO"
    },
    vlan8021Mark: {
        EN: "VLAN Id",
        FR: "VLAN Id",
        SPN: "VLAN Id",
        DE: "VLAN Id",
        IT: "VLAN Id",
        DA: "VLAN-id",
        AR: "معرف شبكة المنطقة المحلية الإفتراضية",
        PT: "ID VLAN",
        RO: "TODO",
        IND: "TODO"
    },
    username: {
        EN: "Username",
        FR: "Nom d'utilisateur",
        SPN: "Usuario",
        DE: "Benutzer- name",
        IT: "Nome utente",
        DA: "Brugernavn",
        AR: "إسم المستخدم",
        PT: "utilizador",
        RO: "TODO",
        IND: "TODO"
    },
    password: {
        EN: "Password",
        FR: "Mot de passe",
        SPN: "Contraseña",
        DE: "Passwort",
        IT: "Password",
        DA: "Adgangskode",
        AR: "كلمة المرور",
        PT: "password",
        RO: "TODO",
        IND: "TODO"
    },
    loginTitle: {
        EN: "Please enter username and password to login:",
        FR: "TODO",
        SPN: "Por favor introduzca nombre de usuario y contraseña para entrar",
        DE: "Bitte zum Anmelden Benutzername und Kennwort eingeben:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODOلمرور",
        PT: "TODO",
        RO: "Va rog introduceti numele de utilizator si parola pentru logare:",
        IND: "TODO"
    },
    serviceName: {
        EN: "Service Name",
        FR: "Nom de Service",
        SPN: "Nombre del Servicio",
        DE: "Dienst",
        IT: "Nome del servizio",
        DA: "Tjenestenavn",
        AR: "إسم الخدمة",
        PT: "nome de serviço",
        RO: "TODO",
        IND: "TODO"
    },
    serviceCategory: {
        EN: "Serv. Category",
        FR: "Catégorie du Serv.",
        SPN: "Categoría del Serv.",
        DE: "Service-Kategorie",
        IT: "Categoria del servizio",
        DA: "Serv. kategori",
        AR: "فئة الخدمة",
        PT: "categoria de serviço",
        RO: "TODO",
        IND: "TODO"
    },
    authenticationMethod: {
        EN: "Auth. Method",
        FR: "Procédé d'auth.",
        SPN: "Método de Autent.",
        DE: "Authentifizier- ungsmethode",
        IT: "Autenticazione",
        DA: "Aut. metode",
        AR: "طريقة التحقيق",
        PT: "metodo de autorizaçao",
        RO: "TODO",
        IND: "TODO"
    },
    dialOnDemand: {
        EN: "Dial on demand",
        FR: "Dial on demand",
        SPN: "Llamada bajo demanda",
        DE: "Manuelle Verbindung",
        IT: "Chiamata su richiesta",
        DA: "Opkald efter behov",
        AR: "الإتصال عند الطلب",
        PT: "chamada em demanda",
        RO: "TODO",
        IND: "TODO"
    },
    retryOnError: {
        EN: "PPP Retry on auth. error",
        FR: "PPP Retry sur erreur d'auth.",
        SPN: "Reintento de PPP en error",
        DE: "PPP-Wiederverbindungsversuch nach Auth.fehler",
        IT: "PPP Retry su errore di autenticazione",
        DA: "PPP-genforsøg ved aut. fejl",
        AR: "إعادة محاولة الـ PPP علي خطأ التحقيق",
        PT: "tentativa de PPP em erro de autenticaçao",
        RO: "TODO",
        IND: "TODO"
    },
    retryOnPeriod: {
        EN: "PPP retry period (sec.)",
        FR: "Période du retry PPP (sec.)",
        SPN: "Período de reintento de PPP (seg.)",
        DE: "Zeitraum bis PPP-Wiederverbindungsversuch (in Sek.)",
        IT: "Periodo per il PPP Retry (sec.)",
        DA: "PPP-genforsøgsperiode (sek.)",
        AR: "فترة إعادة محاولة الـ PPP (ثواني)",
        PT: "periodo de tentativa de PPP (seg.)",
        RO: "TODO",
        IND: "TODO"
    },
    useStaticIp: {
        EN: "Static IP Address",
        FR: "Adresse IP statique",
        SPN: "Dirección IP estática",
        DE: "Statische IP-Adresse",
        IT: "Indirizzo IP statico",
        DA: "Statisk IP-adresse",
        AR: "عنوان IP ثابت",
        PT: "endereço de IP estatico",
        RO: "TODO",
        IND: "TODO"
    },
    useDynamicIp: {
        EN: "Dynamic IP Address",
        FR: "Adresse IP dynamique",
        SPN: "Dirección IP dinámica",
        DE: "Dynamische IP-Adresse",
        IT: "Indirizzo IP dinamico",
        DA: "Dynamisk IP-adresse",
        AR: "عنوان IP ديناميكي (متغير)",
        PT: "endereço de IP dinamico",
        RO: "TODO",
        IND: "TODO"
    },
    dnsServer: {
        EN: "DNS Server",
        FR: "Serveur DNS",
        SPN: "Servidor DNS",
        DE: "DNS-Server",
        IT: "Server DNS",
        DA: "DNS-Server",
        AR: "ملقم DNS",
        PT: "Servidor de DNS",
        RO: "TODO",
        IND: "TODO"
    },
    gwIpAddr: {
        EN: "Gateway",
        FR: "Passerelle",
        SPN: "Gateway",
        DE: "Gateway",
        IT: "Gateway",
        DA: "Gateway",
        AR: "المنفذ",
        PT: "gateway",
        RO: "TODO",
        IND: "TODO"
    },
    ipAddr: {
        EN: "IP Address",
        FR: "Adresse IP",
        SPN: "Dirección IP",
        DE: "IP-Adresse",
        IT: "Indirizzo IP",
        DA: "IP-adresse",
        AR: "عنوان IP",
        PT: "endereço de IP",
        RO: "TODO",
        IND: "TODO"
    },
    staticDNS: {
        EN: "Static DNS IP Address",
        FR: "IP DNS statique",
        SPN: "IP de DNS estático",
        DE: "Statische DNS IP-Adresse",
        IT: "Indirizzo IP statico del DNS",
        DA: "Statisk DNS IP-adresse",
        AR: "عنوان IP DNS ثابت",
        PT: "IP de DNS estatico",
        RO: "TODO",
        IND: "TODO"
    },
    reset: {
        EN: "Reset",
        FR: "Réinitialiser",
        SPN: "Reanudar",
        DE: "Zurücksetzen",
        IT: "Ripristina",
        DA: "Nulstil",
        AR: "إعادة تعيين",
        PT: "reset",
        RO: "TODO",
        IND: "TODO"
    },
    resetExplained: {
        EN: "Factory reset will restore Gateway default options, you will lose all your changes.",
        FR: "La réinitialisation usine restaure les options par défaut du modem, vous perdrez toutes vos modifications.",
        SPN: "El restablecimiento de la configuración predeterminada de fábrica restaurará las opciones predeterminadas del módem. Perderá todos los cambios realizados.",
        DE: "Das Rest auf die Werkseinstellungen wird die Gateway-Standardoptionen wiederherstellen. Alle Ihre Änderungen gehen verloren.",
        IT: "Il ripristino delle impostazioni predefinite ripristina le opzioni di gateway predefinite, si perderanno tutte le modifiche.",
        DA: "Gendan til fabriksindstillinger vil gendanne standardmulighederne for gatewayen, og du mister alle dine ændringer.",
        AR: "سوف تستعيد عملية إعادة تعيين إعدادات المصنع الخياراتِ الافتراضية للبوابة، وستفقد كلَ ما عَمِلته من تغييرات.",
        PT: "o reset de fabrica faz o gateway voltar as opçoes de defeito, perderá todos as configuraçoes",
        RO: "TODO",
        IND: "TODO"
    },
    rebootExplained: {
        EN: "Restarting  will take a few minutes, check leds on your gateway to follow status.",
        FR: "Le redémarrage prendra quelques minutes, vérifiez les indicateurs lumineux de votre modem pour connaitre son statut.",
        SPN: "El reinicio llevará unos minutos. Compruebe los indicadores luminosos de su módem para conocer el estado.",
        DE: "Der Neustart kann einige Minuten dauern. Überprüfen Sie die LEDs auf Ihrem Gateway, um den Status zu überwachen.",
        IT: "Il riavvio richiederà alcuni minuti, controlla i led sul gateway per seguire lo stato.",
        DA: "Genstart tager et par minutter, tjek din gateways LEd'er for at følge status.",
        AR: "سوف تستغرق إعادة التشغيل بضعَ دقائق، انظر مصابيح الإشارة على جهاز البوابة لديك لمتابعة الحالة.",
        PT: "o reinicio tardara alguns minutos, verifique os leds para seguir o estado",
        RO: "TODO",
        IND: "TODO"
    },
    wanTip1: {
        EN: "Here you can change username WAN.",
        FR: "Changez ici le nom d'utilisateur WAN.",
        SPN: "Aquí se puede cambiar el nombre de usuario WAN.",
        DE: "Hier können Sie den Benutzernamen für Ihre Internetverbindung ändern.",
        IT: "Qui puoi cambiare lo username della rete WAN.",
        DA: "Her kan du ændre brugernavnet for WAN.",
        AR: "هنا يمكنك تغيير إسم مستخدم الشبكة واسعة النطاق.",
        PT: "aquí pode alterar o usarname da WAN",
        RO: "TODO",
        IND: "TODO"
    },
    wanTip2: {
        EN: "Change here WAN password.",
        FR: "Changez ici le mot de passe WAN.",
        SPN: "Aquí se puede cambiar la contraseña de la WAN.",
        DE: "Passwort für Internetverbindung hier ändern.",
        IT: "Qui puoi cambiare la password della rete WAN.",
        DA: "Her kan du ændre adgangskoden for WAN.",
        AR: "غير هنا كلمة مرور الشبكة واسعة النطاق.",
        PT: "altere aquí a password da WAN",
        RO: "TODO",
        IND: "TODO"
    },
    maintenance: {
        EN: "Maintenance",
        FR: "Maintenance",
        SPN: "Manutención",
        DE: "Verwaltung",
        IT: "Manutenzione",
        DA: "Vedligeholdelse",
        AR: "الصيانة",
        PT: "manutençao",
        RO: "TODO",
        IND: "TODO"
    },
    dynDns: {
        EN: "DynDNS",
        FR: "DynDNS",
        SPN: "DynDNS",
        DE: "DynDNS",
        IT: "DynDNS",
        DA: "DynDNS",
        AR: "DNS ديناميكية (متغيرة)",
        PT: "DynDNS",
        RO: "TODO",
        IND: "TODO"
    },
    upnp: {
        EN: "UPnP",
        FR: "UPnP",
        SPN: "UPnP",
        DE: "UPnP",
        IT: "UPnP",
        DA: "UPnP",
        AR: "UPnP",
        PT: "UPnP",
        RO: "TODO",
        IND: "TODO"
    },
    upnpPortForwarding: {
        EN: "UPnP Port Forwarding",
        FR: "TODO",
        SPN: "Reenvio de puerto UPnP",
        DE: "UPnP Port-Weiterleitung",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Redirectionare Port UPnP",
        IND: "TODO"
    },
    dns: {
        EN: "DNS",
        FR: "DNS",
        SPN: "DNS",
        DE: "DNS",
        IT: "DNS",
        DA: "DNS",
        AR: "DNS ",
        PT: "DNS",
        RO: "TODO",
        IND: "TODO"
    },
    dhcp: {
        EN: "DHCP",
        FR: "DHCP",
        SPN: "DHCP",
        DE: "DHCP",
        IT: "DHCP",
        DA: "DHCP",
        AR: "DHCP",
        PT: "DHCP",
        RO: "TODO",
        IND: "TODO"
    },
    "static": {
        EN: "Static",
        FR: "Statique",
        SPN: "Estática",
        DE: "Statisch",
        IT: "Statica",
        DA: "Statisk",
        AR: "ثابت",
        PT: "Static",
        RO: "TODO",
        IND: "TODO"
    },
    autoip: {
        EN: "Auto IP",
        FR: "Auto IP",
        SPN: "Auto IP",
        DE: "Auto IP",
        IT: "Auto IP",
        DA: "TODO",
        AR: "TODO",
        PT: "auto IP",
        RO: "IP Auto",
        IND: "TODO"
    },
    ipcp: {
        EN: "IPCP",
        FR: "IPCP",
        SPN: "IPCP",
        DE: "IPCP",
        IT: "IPCP",
        DA: "IPCP",
        AR: "IPCP",
        PT: "IPCP",
        RO: "TODO",
        IND: "TODO"
    },
    route: {
        EN: "Route",
        FR: "Route",
        SPN: "Ruta",
        DE: "Routing",
        IT: "Routing",
        DA: "Rute",
        AR: "مسار",
        PT: "Ruta",
        RO: "TODO",
        IND: "TODO"
    },
    massStorage: {
        EN: "Mass Storage",
        FR: "Disques",
        SPN: "Almacenamiento",
        DE: "Massenspeicher",
        IT: "Dischi",
        DA: "Datalager",
        AR: "وحدة تخزين كبيرة السعة",
        PT: "Armazenamento",
        RO: "TODO",
        IND: "TODO"
    },
    arp: {
        EN: "ARP",
        FR: "ARP",
        SPN: "ARP",
        DE: "ARP",
        IT: "ARP",
        DA: "ARP",
        AR: "ARP",
        PT: "ARP",
        RO: "TODO",
        IND: "TODO"
    },
    statistics: {
        EN: "Statistics",
        FR: "Statistiques",
        SPN: "Estadística",
        DE: "Statistiken",
        IT: "Statistiche",
        DA: "Statistik",
        AR: "إحصائيات",
        PT: "estatisticas",
        RO: "TODO",
        IND: "TODO"
    },
    statFecError: {
        EN: "FEC Errors",
        FR: "Erreurs FEC",
        SPN: "Errores FEC",
        DE: "FEC-Fehler",
        IT: "Errori FEC",
        DA: "FEC-fejl",
        AR: "أخطاء FEC",
        PT: "erros FEC",
        RO: "TODO",
        IND: "TODO"
    },
    statCrcError: {
        EN: "Code violations (CRC)",
        FR: "Violation de code (CRC)",
        SPN: "Violacion de codigo (CRC)",
        DE: "Code-Fehler (CRC)",
        IT: "Violazione codice (CRC)",
        DA: "Kodeovertrædelser (CRC)",
        AR: "TODO",
        PT: "violaçao de codigo (CRC)",
        RO: "Incalcari ale codului (CRC)",
        IND: "TODO"
    },
    lossOfFrames: {
        EN: "Loss of frames [s]",
        FR: "Perte de trames [s]",
        SPN: "Pérdida de Frames [s]",
        DE: "Loss of Frames [s]",
        IT: "Trame perdute (s)",
        DA: "Rammetab [s]",
        AR: "فقدان الإطارات",
        PT: "perda de frames [s]",
        RO: "TODO",
        IND: "TODO"
    },
    power: {
        EN: "Power [dBm]",
        FR: "Puissance [dBm]",
        SPN: "Potencia [dBm]",
        DE: "Power [dBm]",
        IT: "Potenza (dBm)",
        DA: "Strøm [dBm]",
        AR: "الطاقة (dBm)",
        PT: "Power [dBm]",
        RO: "TODO",
        IND: "TODO"
    },
    attenuation: {
        EN: "Attenuation [dB]",
        FR: "Atténuation [dB]",
        SPN: "Atenuación [dB]",
        DE: "Dämpfung [dB]",
        IT: "Attenuazione (dB)",
        DA: "Dæmpning [dB]",
        AR: "تضعيف (dB)",
        PT: "atenuaçao [dB]",
        RO: "TODO",
        IND: "TODO"
    },
    noiseMargin: {
        EN: "Noise Margin [dB]",
        FR: "Marge de Bruit [dB]",
        SPN: "Margen de Ruido [dB]",
        DE: "Noise Margin [dB]",
        IT: "SNR (dB)",
        DA: "Støjmargen [dB]",
        AR: "هامش الضوضاء (dB)",
        PT: "margem de ruido [dB]",
        RO: "TODO",
        IND: "TODO"
    },
    maximumRate: {
        EN: "Maximum Rate [Kbps]",
        FR: "Débit Maximum [Kbps]",
        SPN: "Tasa Máxima [Kbps]",
        DE: "Maximale Rate [Kbps]",
        IT: "Velocità massima (Kbps)",
        DA: "Maksimal frekvens [Kbps]",
        AR: "المعدل الأقصي (كيلوبايت)",
        PT: "taxa maxima [Kbps]",
        RO: "TODO",
        IND: "TODO"
    },
    actualRate: {
        EN: "Actual Rate [Kbps]",
        FR: "Débit actuel [Kbps]",
        SPN: "Tasa Real [Kbps]",
        DE: "Aktuelle Rate [Kbps]",
        IT: "Velocità attuale (Kbps)",
        DA: "Faktisk frekvens [Kbps]",
        AR: "المعدل الفعلي (كيلوبايت)",
        PT: "taxa real [Kbps]",
        RO: "TODO",
        IND: "TODO"
    },
    linkStatus: {
        EN: "Link Status",
        FR: "État de la Liaison",
        SPN: "Estado de Enlace",
        DE: "Verbindungsstatus",
        IT: "Stato del Link",
        DA: "Linkstatus",
        AR: "حالة الرابط",
        PT: "estado do link",
        RO: "TODO",
        IND: "TODO"
    },
    statusStats: {
        EN: "Status",
        FR: "Statut",
        SPN: "Estado",
        DE: "Status",
        IT: "Stato del Link",
        DA: "Status",
        AR: "الحالة",
        PT: "estado",
        RO: "TODO",
        IND: "TODO"
    },
    linkEncapsulation: {
        EN: "Link encapsulation",
        FR: "Encapsulation du lien",
        SPN: "Encapsulación de Enlace",
        DE: "Encapsulation der Verbindung",
        IT: "Incapsulazione Link",
        DA: "Linkindkapsling",
        AR: "تغليف الرابط",
        PT: "encapsulaçao do link",
        RO: "TODO",
        IND: "TODO"
    },
    lineEncoding: {
        EN: "Line Encoding",
        FR: "Codage de Ligne",
        SPN: "Codificación de Línea",
        DE: "Line Encoding",
        IT: "Linea di codifica",
        DA: "Linjekodning",
        AR: "ترميز الخط",
        PT: "linha de encoding",
        RO: "TODO",
        IND: "TODO"
    },
    standard: {
        EN: "Standard",
        FR: "Standard",
        SPN: "Estándar",
        DE: "Standard",
        IT: "Standard",
        DA: "Standard",
        AR: "قياسي",
        PT: "Standard",
        RO: "TODO",
        IND: "TODO"
    },
    sent: {
        EN: "Sent",
        FR: "Emis",
        SPN: "Enviado",
        DE: "Gesendet",
        IT: "Inviato",
        DA: "Sendt",
        AR: "مرسل",
        PT: "enviado",
        RO: "TODO",
        IND: "TODO"
    },
    received: {
        EN: "Received",
        FR: "Reçu",
        SPN: "Recebido",
        DE: "Empfangen",
        IT: "Ricevuto",
        DA: "Modtagelse",
        AR: "مستلم",
        PT: "recebido",
        RO: "TODO",
        IND: "TODO"
    },
    description: {
        EN: "Description",
        FR: "Description",
        SPN: "Descripción",
        DE: "Beschreibung",
        IT: "Descrizione",
        DA: "Beskrivelse",
        AR: "وصف",
        PT: "descriçao",
        RO: "TODO",
        IND: "TODO"
    },
    "interface": {
        EN: "Interface",
        FR: "Interface",
        SPN: "Interfaz",
        DE: "Anschluss",
        IT: "Interfaccia",
        DA: "Brugerflade",
        AR: "وصلة",
        PT: "interface",
        RO: "TODO",
        IND: "TODO"
    },
    transmitted: {
        EN: "Transmitted",
        FR: "Transmis",
        SPN: "Transmitido",
        DE: "Übermittelt",
        IT: "Trasmesso",
        DA: "Overført",
        AR: "مرسلة",
        PT: "transmitido",
        RO: "TODO",
        IND: "TODO"
    },
    packets: {
        EN: "Packets",
        FR: "Paquets",
        SPN: "Paquetes",
        DE: "Pakete",
        IT: "Pacchetti",
        DA: "Pakker",
        AR: "حزم",
        PT: "paquetes",
        RO: "TODO",
        IND: "TODO"
    },
    localHost: {
        EN: "Local host",
        FR: "Hôte local",
        SPN: "Local host",
        DE: "Lokaler Host",
        IT: "Host locale",
        DA: "Lokal host",
        AR: "المضيف المحلي",
        PT: "local host",
        RO: "TODO",
        IND: "TODO"
    },
    usbStorageDevice: {
        EN: "USB Storage Device",
        FR: "Dispositif de stockage USB",
        SPN: "Dispositivo USB de almacenamiento",
        DE: "USB-Massenspeicher",
        IT: "Dispositivo USB",
        DA: "USB-hukommelsesenhed",
        AR: "جهاز تخزين USB",
        PT: "dispositivo de armazenamento",
        RO: "TODO",
        IND: "TODO"
    },
    sambaServer: {
        EN: "File Server",
        FR: "Serveur de Fichiers",
        SPN: "Servidor Archivo",
        DE: "Samba-Server",
        IT: "Server Samba",
        DA: "Filserver",
        AR: "ملقم ملفات السامبا",
        PT: "ficheiro de servidor",
        RO: "TODO",
        IND: "TODO"
    },
    or: {
        EN: "Or",
        FR: "Ou",
        SPN: "O",
        DE: "Oder",
        IT: "O",
        DA: "eller",
        AR: "أو",
        PT: "ou",
        RO: "TODO",
        IND: "TODO"
    },
    selectHost: {
        EN: "Select Host",
        FR: "Sélectionner l'hôte",
        SPN: "Seleccione Host",
        DE: "Host auswählen",
        IT: "Selezione l'host",
        DA: "Vælg host",
        AR: "أختر مضيف",
        PT: "Selecione host",
        RO: "TODO",
        IND: "TODO"
    },
    massStorageTip1: {
        EN: "Here you can enable and disable the DLNA.",
        FR: "Ici vous pouvez activer et désactiver le DLNA.",
        SPN: "Aquí se puede activar y desactivar la DNLA.",
        DE: "Hier können Sie DLNA (Mediaserver über UPnP-AV) ein- bzw. ausschalten.",
        IT: "Qui puoi attivare o disattivare il DLNA.",
        DA: "Her kan du aktivere og deaktivere DLNA.",
        AR: "هنا يمكنك تمكين وتعطيل الـ DNLA.",
        PT: "aquí pode autorizar ou nao autorizar o DLNA",
        RO: "TODO",
        IND: "TODO"
    },
    massStorageTip2: {
        EN: "Here you can enable and disable the file server. ",
        FR: "Ici vous pouvez activer et désactiver le serveur de fichier.",
        SPN: "Aquí puede activar y desactivar el servidor de archivo Samba.",
        DE: "Hier können Sie den Samba-Server ein- bzw. ausschalten.",
        IT: "Qui puoi attivare o disattivare il server Samba.",
        DA: "Her kan du aktivere og deaktivere filserveren. ",
        AR: "هنا يمكنك تمكين وتعطيل ملقم ملفات السامبا.",
        PT: "aquí pode autorizar ou nao autorizar o ficheiro de servidor",
        RO: "TODO",
        IND: "TODO"
    },
    usbDriveTip: {
        EN: "You can plug a USB drive into the gateway, and share all files with your other computers in the network.",
        FR: "Vous pouvez brancher un lecteur USB sur votre modem et partager son contenu avec les autres ordinateurs du réseau.",
        SPN: "Puede conectar la unidad USB en la puerta de entrada, y compartir todo archivos con otros equipos de la red.",
        DE: "Sie können ein USB-Laufwerk an das Gateway anschließen und alle Dateien mit anderen Computern im Netzwerk teilen.",
        IT: "Puoi connettere un disco USB al gateway, e quindi condividere tutti i file con ogni altro computer in rete.",
        DA: "Du kan sætte et USB-drev ind i gatewayen og dele alle filer med dine andre computere i netværket.",
        AR: "يمكنك توصيل محرك الأقراص USB في المنفذ، ومشاركة كل الملفات مع أجهزة الكمبيوتر الأخرى في الشبكة.",
        PT: "pode ligar um USB no gateway, e partilhar os ficheiros com outros computadores na sua rede",
        RO: "TODO",
        IND: "TODO"
    },
    usbDriveTip2: {
        EN: "Copy and paste the paths below in the address bar of your file explorer.",
        FR: "Copier et coller le chemin ci-dessous dans la barre d'adresse de votre explorateur de fichiers.",
        SPN: "Copie y pegue las siguientes rutas en la barra de direcciones de su explorador de archivos.",
        DE: "Kopieren und fügen Sie die nachstehende Pfade in die Adresszeile Ihres Explorers ein.",
        IT: "Copia e incolla i percorsi sottostanti nella barra degli indirizzi del file explorer.",
        DA: "Kopier og indsæt stierne herunder i din stifinders adressebjælke.",
        AR: "انسخ المسارات أدناه والصقها في شريط عناوين مستكشف الملفات لديك.",
        PT: "copie e cole os endereços na barra de endereços do seu explorador",
        RO: "TODO",
        IND: "TODO"
    },
    massStorageTip3: {
        EN: "File server path, right click to copy it.",
        FR: "Chemain du serveur de fichiers, cliquez droit pour copier.",
        SPN: "Dirección del servidor de archivos Samba haga clic en 'Copy to Clipboard' para copiarlo.",
        DE: "Um die Adresse des Samba-Servers zu kopieren klicken Sie auf die Schaltfläche 'In Zwischenablage kopieren'.",
        IT: "Indirizzo del server Samba, premere su 'Copia' per copiarlo.",
        DA: "Stifinderstien, højreklik for at kopiere den.",
        AR: "عنوان ملقم ملفات السامبا، اضغط زر 'نسخ إلى الحافظة' لنسخه.",
        PT: "direçao de file server, clique direito para copiar",
        RO: "TODO",
        IND: "TODO"
    },
    massStorageTip4: {
        EN: "Press Apply to save your changes, or Cancel to return to home page.",
        FR: "Appuyez sur 'Appliquer' pour enregistrer vos modifications, ou sur 'Annuler' pour revenir à la page d'accueil.",
        SPN: "Pulse Aplicar para guardar los cambios o en Cancelar para volver a la página principal.",
        DE: "Klicken Sie auf die Schaltfläche 'Anwenden', um die Änderungen zu speichern oder auf 'Abbrechen', um auf die Startseite zu gelangen.",
        IT: "Premere Salva per salvare le modifiche o su Cancella per ritornare alla pagina principale.",
        DA: "Klik på' Anvend' for at gemme dine ændringer eller 'Annullér' for at gå tilbage til siden 'Hjem'.",
        AR: "اضغط على تطبيق لحفظ التغييرات، أو إلغاء للعودة إلى الصفحة الرئيسية.",
        PT: "pressione aplicar para guardar as modificaçoes, ou cancelar para voltar á pagina de inicio",
        RO: "TODO",
        IND: "TODO"
    },
    remoteManagementTip0: {
        EN: "Select here the users to edit.",
        FR: "Sélectionnez ici les utilisateurs à éditer.",
        SPN: "Seleccione aquí los usuarios disponibles para editar.",
        DE: "Wählen Sie aus, welches Benutzerkonto Sie anpassen möchten.",
        IT: "Select here the available users to edit.",
        DA: "Her kan du vælge de brugere, der skal redigeres.",
        AR: "اختر هنا المستخدمين المتاحين للتعديل.",
        PT: "Selecione aquí os utilizadores para editar",
        RO: "TODO",
        IND: "TODO"
    },
    remoteManagementTip1: {
        EN: "Here you can enable the protocols for remote managemet.",
        FR: "Activez ici les protocoles pour le contôle à distance.",
        SPN: "Aquí puede activar la gestión remota de los protocolos.",
        DE: "Hier können Sie die Protokolle zur Nutzung von Remote Management einrichten.",
        IT: "Qui puoi attivare i protocolli per il controllo da remoto.",
        DA: "Her kan du aktivere protokollerne for remote management",
        AR: "هنا يمكنك تمكين البروتوكولات للإدارة عن بعد.",
        PT: "aquí pode autorizar os protocolos para remote management",
        RO: "TODO",
        IND: "TODO"
    },
    remoteManagementTip2: {
        EN: "Here you can add the trusted IPs and networks to have remote access.",
        FR: "Ajoutez ici les IPs et les réseaux autorisés pour l'accès distant.",
        SPN: "Aquí puede agregar la IP de confianza y redes de acceso remoto.",
        DE: "Hier können Sie die IP-Adressen der Geräte und Netze einrichten, denen Sie den Fernzugriff erlauben.",
        IT: "Qui puoi aggiungere gli indirizzi IP e le reti di fiducia per avere l'accesso remoto.",
        DA: "Her kan du give de pålidelige IP-adresser og netværk fjernadgang.",
        AR: "هنا يمكنك إضافة الـ IPs والشبكات الموثوقة لتكون لها قدرة التحكم عن بعد.",
        PT: "aquí pode adicionar os IP de confiança e redes de acesso remoto",
        RO: "TODO",
        IND: "TODO"
    },
    remoteManagementTip3: {
        EN: "Here you can put the port to HTTP remote access.",
        FR: "TODO",
        SPN: "Aqui puede meter el puerto para gestion remota HTTP",
        DE: "Hier können Sie den Port für den HTTP-Fernzugriff eintragen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti completa portul pentru accesul HTTP la distanta.",
        IND: "TODO"
    },
    remoteManagementTip4: {
        EN: "Here you can enable or disable HTTP remote access.",
        FR: "TODO",
        SPN: "Aqui puede habilitar o deshabilitar la gestion remota HTTP",
        DE: "Hier können Sie den HTTP-Fernzugriff ein- oder ausschalten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa sau dezactiva accesul HTTP la distanta.",
        IND: "TODO"
    },
    remoteManagementTip5: {
        EN: "Here you can select the types of HTTP remote access.",
        FR: "TODO",
        SPN: "Aqui puede seleccionar los tipos de gestion remota HTTP",
        DE: "Hier können Sie die verschiedenen Arten des HTTP-Fernzugriffs auswählen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti selecta tipurile de acces HTTP la distanta.",
        IND: "TODO"
    },
    remoteManagementTip6: {
        EN: "Here you can put the port to HTTPS remote access.",
        FR: "TODO",
        SPN: "Aqui puede meter el puerto para gestion remota HTTPS",
        DE: "Hier können Sie den Port für den HTTPS-Fernzugriff eintragen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti completa portul pentru accesul HTTPS la distanta.",
        IND: "TODO"
    },
    remoteManagementTip7: {
        EN: "Here you can enable or disable HTTPS remote access.",
        FR: "TODO",
        SPN: "Aqui puede habilitar o deshabilitar la gestion remota HTTPS",
        DE: "Hier können Sie den HTTPS-Fernzugriff ein- oder ausschalten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa sau dezactiva accesul HTTPS la distanta.",
        IND: "TODO"
    },
    remoteManagementTip8: {
        EN: "Here you can select the types of HTTPS remote access.",
        FR: "TODO",
        SPN: "Aqui puede seleccionar los tipos de gestion remota HTTPS",
        DE: "Hier können Sie die verschiedenen Arten des HTTPS-Fernzugriffs auswählen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti selecta tipurile de acces HTTPS la distanta.",
        IND: "TODO"
    },
    remoteManagementTip9: {
        EN: "Here you can put the port to Telnet remote access.",
        FR: "TODO",
        SPN: "Aqui puede meter el puerto para gestion remota Telnet",
        DE: "Hier können Sie den Port für den Telnet-Fernzugriff eintragen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti completa portul pentru accesul Telnet la distanta.",
        IND: "TODO"
    },
    remoteManagementTip10: {
        EN: "Here you can enable or disable Telnet remote access.",
        FR: "TODO",
        SPN: "Aqui puede habilitar o deshabilitar la gestion remota Telnet",
        DE: "Hier können Sie den Telnet-Fernzugriff ein- oder ausschalten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa sau dezactiva accesul Telnet la distanta.",
        IND: "TODO"
    },
    remoteManagementTip11: {
        EN: "Here you can select the types of Telnet remote access.",
        FR: "TODO",
        SPN: "Aqui puede seleccionar los tipos de gestion remota Telnet",
        DE: "Hier können Sie die verschiedenen Arten des Telnet-Fernzugriffs auswählen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti selecta tipurile de acces Telnet la distanta.",
        IND: "TODO"
    },
    remoteManagementTip12: {
        EN: "Here you can put the port to SSH remote access.",
        FR: "TODO",
        SPN: "Aqui puede meter el puerto para gestion remota SSH",
        DE: "Hier können Sie den Port für den SSH-Fernzugriff eintragen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti completa portul pentru accesul SSH la distanta.",
        IND: "TODO"
    },
    remoteManagementTip13: {
        EN: "Here you can enable or disable SSH remote access.",
        FR: "TODO",
        SPN: "Aqui puede habilitar o deshabilitar la gestion remota SSH",
        DE: "Hier können Sie den SSH-Fernzugriff ein- oder ausschalten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa sau dezactiva accesul SSH la distanta.",
        IND: "TODO"
    },
    remoteManagementTip14: {
        EN: "Here you can select the types of SSH remote access.",
        FR: "TODO",
        SPN: "Aqui puede seleccionar los tipos de gestion remota SSH",
        DE: "Hier können Sie die verschiedenen Arten des SSH-Fernzugriffs auswählen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti selecta tipurile de acces SSH la distanta.",
        IND: "TODO"
    },
    remoteManagementTip15: {
        EN: "Here you can enable or disable if you want allow remote access from everywhere.",
        FR: "TODO",
        SPN: "Aqui puede habilitar o deshabilitar la gestion remota desde cualquier sitio",
        DE: "Hier können Sie auswählen, ob Sie den globalen Fernzugriff ermöglichen wollen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa sau dezactiva controlul la distanta de oriunde.",
        IND: "TODO"
    },
    remoteManagementTip16: {
        EN: "Here you can put the IP address that you want to allow remote access.",
        FR: "TODO",
        SPN: "Aqui puede introducir la direccion IP que desea habilitar para la gestion remota",
        DE: "Hier können Sie die IP-Adresse festlegen, von der aus Sie den Fernzugriff erlauben wollen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    remoteManagementTip17: {
        EN: "Here you can view and remove the trusted IPs.",
        FR: "TODO",
        SPN: "Aqui puede ver y eliminar las Ips confiadas",
        DE: "Hier können Sie die vertrauenswürdigen IP-Adressen einsehen bzw. verwalten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    flags: {
        EN: "Flags",
        FR: "Flags",
        SPN: "Banderas",
        DE: "Flags",
        IT: "Flags",
        DA: "Flag",
        AR: "مؤشرات",
        PT: "bandeiras",
        RO: "TODO",
        IND: "TODO"
    },
    hwAddress: {
        EN: "HW Address",
        FR: "Adresse physique",
        SPN: "HW Dirección",
        DE: "MAC-Adresse",
        IT: "Indirizzo HW",
        DA: "HW-adresse",
        AR: "عنوان HW",
        PT: "endereço de HW",
        RO: "TODO",
        IND: "TODO"
    },
    serialNumber: {
        EN: "Serial Number",
        FR: "Numéro de série",
        SPN: "Número de Serie",
        DE: "Seriennummer",
        IT: "Numero seriale",
        DA: "Serienummer",
        AR: "رقم مسلسل",
        PT: "numero de serie",
        RO: "TODO",
        IND: "TODO"
    },
    hardwareVersion: {
        EN: "Hardware Version",
        FR: "Version du matériel",
        SPN: "Hardware Version",
        DE: "Hardware-Version",
        IT: "Versione hardware",
        DA: "Hardwareversion",
        AR: "إصدار الأجهزة",
        PT: "versao de hardware",
        RO: "TODO",
        IND: "TODO"
    },
    softwareVersion: {
        EN: "Software Version",
        FR: "Version du logiciel",
        SPN: "Versión de software",
        DE: "Software-Version",
        IT: "Versione software",
        DA: "Softwareversion",
        AR: "إصدار البرامج",
        PT: "versao de software",
        RO: "TODO",
        IND: "TODO"
    },
    guiVersion: {
        EN: "GUI Version",
        FR: "Version de l'interface utilisateur",
        SPN: "Versión de GUI",
        DE: "GUI-Version",
        IT: "Versione GUI",
        DA: "GUI-version",
        AR: "إصدار GUI",
        PT: "versao de GUI",
        RO: "TODO",
        IND: "TODO"
    },
    driverVersion: {
        EN: "Wireless Driver",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Trådløs driver",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    datapumpVersion: {
        EN: "Datapump Version",
        FR: "Version de la Datapump",
        SPN: "Versión de Datapump",
        DE: "Datapump-Version",
        IT: "Versione Datapump",
        DA: "Datapump-version",
        AR: "إصدار مضخة البيانات",
        PT: "versao de datapump",
        RO: "TODO",
        IND: "TODO"
    },
    wanMACAddress: {
        EN: "WAN MAC Address",
        FR: "Adresse MAC WAN",
        SPN: "Dirección WAN MAC",
        DE: "MAC-Adresse WAN",
        IT: "Indirizzo WAN MAC",
        DA: "CM MAC-adresse",
        AR: "عنوان MAC للشبكة واسعة النطاق",
        PT: "endereço de WAN MAC",
        RO: "TODO",
        IND: "TODO"
    },
    uptime: {
        EN: "UpTime",
        FR: "Durée de fonctionnement",
        SPN: "Tiempo de actividad",
        DE: "Eingeschaltet seit",
        IT: "Tempo di attività",
        DA: "Oppetid",
        AR: "وقت التشغيل",
        PT: "tempo de actividade",
        RO: "TODO",
        IND: "TODO"
    },
    localIpv4Address: {
        EN: "Local IPv4 Address",
        FR: "Adresses IPv4 locale",
        SPN: "Local Dirección IPv4",
        DE: "Lokale IPv4-Adresse",
        IT: "Indirizzo IPv4 locale",
        DA: "Lokal IPv4-adresse",
        AR: "عنوان IPv4 المحلي",
        PT: "endereço local de IPv4",
        RO: "TODO",
        IND: "TODO"
    },
    localSubnetMask: {
        EN: "Local Subnet Mask",
        FR: "Masque du sous-réseau local",
        SPN: "Máscara de subred local",
        DE: "Lokale Subnetzmaske",
        IT: "Maschera di sottorete locale",
        DA: "Lokal subnet netmaske",
        AR: "قناع الشبة الفرعية المحلي",
        PT: "mascara de subnet local",
        RO: "TODO",
        IND: "TODO"
    },
    localEthernetMac: {
        EN: "Local Ethernet Mac address",
        FR: "Adresse MAC Ethernet locale",
        SPN: "Local dirección Ethernet Mac",
        DE: "Lokale MAC-Adresse Heimnetz",
        IT: "Indirizzo Mac Ethernet locale",
        DA: "Lokal Ethernet-MAC-adresse",
        AR: "عنوان إيثرنت ماك المحلي",
        PT: "endereço local de MAC ethernet",
        RO: "TODO",
        IND: "TODO"
    },
    publicSubnetMask: {
        EN: "Public Subnet Mask",
        FR: "Masque public de sous-réseau",
        SPN: "Máscara de Subred Pública",
        DE: "Öffentliche Subnetzmaske",
        IT: "Maschera di sottorete pubblica",
        DA: "Offentlig undernetmaske",
        AR: "قناع الشبة الفرعية العام",
        PT: "mascara de subnet local",
        RO: "TODO",
        IND: "TODO"
    },
    publicIpv4Address: {
        EN: "Public IPv4 Address",
        FR: "Adresse IPv4 publique",
        SPN: "IPv4 pública Dirección",
        DE: "Öffentliche IPv4-Adresse",
        IT: "Indirizzo IPv4 pubblico",
        DA: "Offentlig IPv4-adresse",
        AR: "عنوان IPv4 العام",
        PT: "endereço IPv4 publico",
        RO: "TODO",
        IND: "TODO"
    },
    defaultGateway: {
        EN: "Default Gateway",
        FR: "Passerelle par défaut",
        SPN: "Puerta de enlace predeterminada",
        DE: "Standard-Gateway",
        IT: "Gateway predefinito",
        DA: "Standardgateway",
        AR: "المنفذ الإفتراضي",
        PT: "gateway por defeito",
        RO: "TODO",
        IND: "TODO"
    },
    PrimaryDNSServer: {
        EN: "Primary DNS Server",
        FR: "Serveur DNS Primaire",
        SPN: "Servidor DNS Primario",
        DE: "Erster DNS-Server",
        IT: "Server DNS primario",
        DA: "Primær DNS-server",
        AR: "ملقم DNS الأولي",
        PT: "Servidor DNS primario",
        RO: "TODO",
        IND: "TODO"
    },
    secondaryDNSServer: {
        EN: "Secondary DNS Server",
        FR: "Serveur DNS Secondaire",
        SPN: "Servidor DNS Secundario",
        DE: "Zweiter DNS-Server",
        IT: "Server DNS secondario",
        DA: "Sekundær DNS-server",
        AR: "ملقم DNS الثانوي",
        PT: "Servidor DNS secundario",
        RO: "TODO",
        IND: "TODO"
    },
    dnsTip1: {
        EN: "Disable here the static DNS servers",
        FR: "Désactivez ici les serveurs DNS statiques",
        SPN: "Desactive aquí los servidores DNS estáticos",
        DE: "Hier schalten Sie die statischen DNS-Server aus",
        IT: "Disabilita qui i server DNS statici",
        DA: "Deaktiver de statiske DNS-servere her",
        AR: "تعطيل خوادم DNS الثابتة هنا",
        PT: "desactivar aquí as estatisticas de servidor DNS",
        RO: "TODO",
        IND: "TODO"
    },
    dnsTip2: {
        EN: "Type here the DNS servers static addresses",
        FR: "Entrez ici les adresses des serveurs DNS",
        SPN: "Escribe aquí las direcciones estáticas de los servidores DNS",
        DE: "Hier tragen Sie die statische Adresse Ihre DNS-Servers ein",
        IT: "Digita qui gli indirizzi statici dei server DNS",
        DA: "Indtast de statiske adresser for DNS-serverne her",
        AR: "اكتب هنا عناوين خوادم DNS الثابتة",
        PT: "escreva aquí os endereços de estatisticas dos servidores de DNS",
        RO: "TODO",
        IND: "TODO"
    },
    linkLocalIpv6: {
        EN: "Link Local Gateway IPv6 Address",
        FR: "Adresse IPv6 lien local",
        SPN: "Enlace de Gateway local IPv6 Dirección",
        DE: "Link zur IPv6-Adresse des lokalen Gateways",
        IT: "Linka l'indirizzo del gateway locale IPv6",
        DA: "Link lokal gateway IPv6-adresse",
        AR: "اربط عنوان المنفذ المحلي IPv6",
        PT: "link local de endereço do gateway IPv6",
        RO: "TODO",
        IND: "TODO"
    },
    globalGatewayAddressIpv6: {
        EN: "Global Gateway IPv6 Address",
        FR: "Adresse IPv6 globale",
        SPN: "Global Gateway IPv6 Dirección",
        DE: "Globale IPv6-Adresse des Gateways",
        IT: "Indirizzo globale gateway IPv6",
        DA: "Global gateway IPv6-adresse",
        AR: "عنوان المنفذ العالمي IPv6",
        PT: "endereço global de gateway IPv6",
        RO: "TODO",
        IND: "TODO"
    },
    ipv6PortForwarding: {
        EN: "IPv6 Port Forwarding",
        FR: "TODO",
        SPN: "reenvio de puerto IPv6",
        DE: "IPv6 Port-Weiterleitung",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Redirectionare port IPv6",
        IND: "TODO"
    },
    telephoneStatus: {
        EN: "Status",
        FR: "Statut",
        SPN: "Estatus",
        DE: "Status",
        IT: "Stato",
        DA: "Status",
        AR: "الحالة",
        PT: "estado",
        RO: "TODO",
        IND: "TODO"
    },
    telephone1: {
        EN: "Telephone 1",
        FR: "Téléphone 1",
        SPN: "Teléfono 1",
        DE: "Telefon 1",
        IT: "Telefono 1",
        DA: "Telefon 1",
        AR: "هاتف 1",
        PT: "telefone 1",
        RO: "TODO",
        IND: "TODO"
    },
    telephone2: {
        EN: "Telephone 2",
        FR: "Téléphone 2",
        SPN: "Teléfono 2",
        DE: "Telefon 2",
        IT: "Telefono 2",
        DA: "Telefon 2",
        AR: "هاتف 2",
        PT: "telefone 2",
        RO: "TODO",
        IND: "TODO"
    },
    telephone: {
        EN: "Telephone",
        FR: "Téléphone",
        SPN: "Teléfono",
        DE: "Telefon",
        IT: "Telefono",
        DA: "Telefon",
        AR: "هاتف",
        PT: "telefone",
        RO: "TODO",
        IND: "TODO"
    },
    DSLDownstream: {
        EN: "DSL Downstream",
        FR: "DSL Downstream",
        SPN: "DSL Abajo",
        DE: "DSL-Downstream",
        IT: "DSL Downstream",
        DA: "DSL downstream",
        AR: "التدفق التحتي للـ DSl",
        PT: "downstream DLS",
        RO: "TODO",
        IND: "TODO"
    },
    DSLUpstream: {
        EN: "DSL Upstream",
        FR: "DSL Upstream",
        SPN: "DSL Arriba",
        DE: "DSL-Upstream",
        IT: "DSL Upstream",
        DA: "DSL upstream",
        AR: "التدفق العلوي للـ DSl",
        PT: "upstream DSl",
        RO: "TODO",
        IND: "TODO"
    },
    DSLStatus: {
        EN: "DSL Status",
        FR: "Statut DSl",
        SPN: "Estatus DSl",
        DE: "DSL-Status",
        IT: "Stato DSl",
        DA: "DSL-status",
        AR: "حالة DSl",
        PT: "estado DSl",
        RO: "TODO",
        IND: "TODO"
    },
    connectionTime: {
        EN: "Connection Time",
        FR: "Temps de connexion",
        SPN: "Tiempo de conexion",
        DE: "Verbunden seit",
        IT: "Tempo di connessione",
        DA: "Forbindelsestid",
        AR: "وقت الإتصال",
        PT: "tempo de ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    wifi: {
        EN: "Wi-Fi",
        FR: "Wi-Fi",
        SPN: "Wi-Fi",
        DE: "WLAN",
        IT: "Wi-Fi",
        DA: "Wi-Fi",
        AR: "واي-فاي",
        PT: "Wi-Fi",
        RO: "TODO",
        IND: "TODO"
    },
    xdsl: {
        EN: "xDSl",
        FR: "xDSl",
        SPN: "xDSl",
        DE: "Internet Verbindung",
        IT: "xDSl",
        DA: "xDSl",
        AR: "خط مشترِك رقمي (xDSL)",
        PT: "xDSl",
        RO: "TODO",
        IND: "TODO"
    },
    stboxes: {
        EN: "Set-top Boxes",
        FR: "Décodeurs TV",
        SPN: "Decodificadores",
        DE: "Set-Top-Boxen",
        IT: "Set-top box",
        DA: "Set-top-bokse",
        AR: "وحدات طرفية للمشترِكين",
        PT: "descodificadores",
        RO: "TODO",
        IND: "TODO"
    },
    upstream: {
        EN: "Upstream",
        FR: "Montant",
        SPN: "Ascendente",
        DE: "Upstream",
        IT: "Upstream",
        DA: "Upstream",
        AR: "في الاتجاه الصاعد",
        PT: "upstream",
        RO: "TODO",
        IND: "TODO"
    },
    downstream: {
        EN: "Downstream",
        FR: "Descendant",
        SPN: "Descendente",
        DE: "Downstream",
        IT: "Downstream",
        DA: "Downstream",
        AR: "في الاتجاه النازل",
        PT: "downstream",
        RO: "TODO",
        IND: "TODO"
    },
    ssidWifi24: {
        EN: "2.4 GHz Wi-Fi SSId",
        FR: "SSID Wi-Fi 2.4 GHz",
        SPN: "Wi-Fi 2.4 GHz SSId",
        DE: "SSID WLAN 2.4 GHz",
        IT: "SSID Wi-Fi 2.4 GHz",
        DA: "SSID Wi-Fi 2,4 GHz",
        AR: "تعريف خدمة واي-فاي 2.4 جيغاهرتز",
        PT: "SSID Wi-Fi 2.4GHz",
        RO: "TODO",
        IND: "TODO"
    },
    ssidWifi50: {
        EN: "5.0 GHz Wi-Fi SSId",
        FR: "SSID Wi-Fi 5.0 GHz",
        SPN: "Wi-Fi 5.0 GHz SSId",
        DE: "SSID WLAN 5.0 GHz",
        IT: "SSID Wi-Fi 5.0 GHz",
        DA: "SSID Wi-Fi 5,0 GHz",
        AR: "تعريف خدمة واي-فاي 5.0 جيغاهرتز",
        PT: "SSID Wi-Fi 5GHz",
        RO: "TODO",
        IND: "TODO"
    },
    ssidGuestWifi24: {
        EN: "2.4 GHz Guest Wi-Fi SSId",
        FR: "Nom du réseau Wi-Fi 2.4 GHz",
        SPN: "SSID de la red de invitados para 2.4 Ghz",
        DE: "Name des 2.4GHz WLAN-Gastnetzwerks",
        IT: "Rete Wi-Fi ospiti (2.4 GHz):",
        DA: "2.4 GHz gæste Wi-Fi SSId",
        AR: "TODO",
        PT: "SSID Wi-Fi de convidado 2.4GHz",
        RO: "Nume retea Wi-Fi Oaspete 2.4 GHz",
        IND: "TODO"
    },
    ssidGuestWifi50: {
        EN: "5.0 GHz Guest Wi-Fi SSId",
        FR: "Nom du réseau Wi-Fi 5 GHz",
        SPN: "SSID de la red de invitados para 5 Ghz",
        DE: "Name des 5GHz WLAN-Gastnetzwerks",
        IT: "Rete Wi-Fi ospiti (5 GHz):",
        DA: "5.0 GHz gæste Wi-Fi SSId",
        AR: "TODO",
        PT: "SSID Wi-Fi de convidado 5GHz",
        RO: "Nume retea Wi-Fi Oaspete 5.0 GHz",
        IND: "TODO"
    },
    deviceInfoTip1: {
        EN: "General information about the gateway",
        FR: "Informations générales sur le modem",
        SPN: "Información general sobre la puerta de entrada",
        DE: "Allgemeine Informationen über das Gateway",
        IT: "Informazioni generali sulla porta",
        DA: "Generelle oplysninger om gatewayen",
        AR: "معلومات عامة عن المنفذ",
        PT: "informaçao geral do gateway",
        RO: "TODO",
        IND: "TODO"
    },
    deviceInfoTip2: {
        EN: "Network information about the gateway",
        FR: "Informations réseau sur le modem",
        SPN: "Información de la red sobre la puerta de entrada",
        DE: "Netzwerk-Informationen über das Gateway",
        IT: "Informazioni di rete sulla porta",
        DA: "Netværksoplysninger om gatewayen",
        AR: "معلومات الشبكة عن المنفذ",
        PT: "informaçao de rede do gateway",
        RO: "TODO",
        IND: "TODO"
    },
    deviceInfoTip3: {
        EN: "Wireless network information about the gateway",
        FR: "Informations sur le réseau Wi-Fi du modem",
        SPN: "Información de la red inalámbrica de la puerta de enlace",
        DE: "Informationen zu Ihrem WLAN",
        IT: "Informazioni di rete wireless sulla porta",
        DA: "Trådløse netværksoplysninger om gatewayen",
        AR: "معلومات الشبكة اللاسلكية عن المنفذ",
        PT: "informaçao da rede sem fios do gateway",
        RO: "TODO",
        IND: "TODO"
    },
    deviceInfoTip4: {
        EN: "Telephones line number",
        FR: "Numéro de la ligne téléphonique",
        SPN: "Número de líneas de teléfono",
        DE: "Telefonnummern",
        IT: "Numero della linea telefonica",
        DA: "Telefonlinjernes nummer",
        AR: "رقم خطوط الهاتف",
        PT: "numeros de linhas de telefone",
        RO: "TODO",
        IND: "TODO"
    },
    deviceInfoTip5: {
        EN: "DSL information",
        FR: "Informations DSl",
        SPN: "Información DSl",
        DE: "DSL-Informationen",
        IT: "Informazioni DSl",
        DA: "DSL-information",
        AR: "معلومات DSl",
        PT: "informaçao DSl",
        RO: "TODO",
        IND: "TODO"
    },
    deviceInfoTip6: {
        EN: "WAN information",
        FR: "Informations WAN",
        SPN: "Información WAN",
        DE: "Informationen zu Ihrer Internetverbindung",
        IT: "Informazioni WAN",
        DA: "WAN-information",
        AR: "معلومات الشبكة واسعة النطاق",
        PT: "informaçao WAN",
        RO: "TODO",
        IND: "TODO"
    },
    restart: {
        EN: "Restart",
        FR: "Redémarrer",
        SPN: "Reanudar",
        DE: "Neustart",
        IT: "Riavvia",
        DA: "Genstart",
        AR: "إعادة تشغيل",
        PT: "restart",
        RO: "TODO",
        IND: "TODO"
    },
    yes: {
        EN: "Yes",
        FR: "Oui",
        SPN: "Sí",
        DE: "Ja",
        IT: "Sì",
        DA: "Ja",
        AR: "نعم",
        PT: "Sim",
        RO: "TODO",
        IND: "TODO"
    },
    rsAddRemoveStaticRoute: {
        EN: "Here you can add or delete a static route.",
        FR: "Ici vous pouvez ajouter ou supprimer une route statique.",
        SPN: "Aquí puede agregar o eliminar una ruta estática.",
        DE: "Hier können Sie statische Routen einrichten oder löschen.",
        IT: "Qui puoi aggiungere o eliminare una route statica.",
        DA: "Her kan du tilføje eller slette en statisk rute.",
        AR: "هنا يمكنك إضافة أو إزالة مسار ثابت.",
        PT: "aquí pode adicionar or apagar uma rota estatica",
        RO: "TODO",
        IND: "TODO"
    },
    rsStatic: {
        EN: "Static",
        FR: "Statique",
        SPN: "Estática",
        DE: "Statisch",
        IT: "Statica",
        DA: "Statisk",
        AR: "ثابت",
        PT: "estatica",
        RO: "TODO",
        IND: "TODO"
    },
    rsStaticRoute: {
        EN: "Static Route",
        FR: "Route Statique",
        SPN: "Ruta Estática",
        DE: "Statische Routen",
        IT: "Route statica",
        DA: "Statisk rute",
        AR: "مسار ثابت",
        PT: "rota estatica",
        RO: "TODO",
        IND: "TODO"
    },
    rsDescription: {
        EN: "Enter the destination network address, subnet mask, gateway AND/OR available WAN interface then add the entry to the routing table.",
        FR: "Entrez l'adresse réseau de destination, le masque de sous-réseau, la passerelle ET/OU l'interface WAN puis ajoutez la nouvelle entrée à la table de routage.",
        SPN: "Introduzca la dirección de red de destino, máscara de subred, puerta de enlace Y/O disponibles interfaz WAN a continuación, agregar la entrada a la tabla de enrutamiento.",
        DE: "Geben Sie die Zieladresse, Subnetzmaske, Gateway und/oder verfügbaren Internet-Anschluss ein und fügen Sie diesen Eintrag dann in Ihre Routing-Tabelle hinzu.",
        IT: "Inserisci l'indirizzo di rete di destinazione, la subnet mask, il gateway E/O l'interfaccia WAN disponibile,  poi aggiungi la voce alla tabella di routing.",
        DA: "Indtast destinationens netværksadresse, undernetmaske, gateway OG/ELLER tilgængelig WAN-brugerflade, og tilføj derefter angivelsen i routingtabellen.",
        AR: "أدخل عنوان شبكة الوجهة وقناع الشبكة الفرعية والمنفذ و/أو وصلة الشبكة واسعة النطاق المتاحة ثم أضف الإدخال إلى جدول المسار.",
        PT: "adicione o destino do endereço de rede, mascara de subnet, gateway y/ou interface de WAN disponivel e depois adicione a entrada para a tabela de router.",
        RO: "TODO",
        IND: "TODO"
    },
    rsIpVersion: {
        EN: "IP Version",
        FR: "Version IP",
        SPN: "Versión IP",
        DE: "IP-Version",
        IT: "Versione IP",
        DA: "IP-version",
        AR: "إصدار الـ IP",
        PT: "versao IP",
        RO: "TODO",
        IND: "TODO"
    },
    rsDestination: {
        EN: "Destination IP Address / Prefix Length",
        FR: "Adresse IP de destination / Longueur du préfixe",
        SPN: "Dirección IP de destino / Longitud del prefijo",
        DE: "Zieladresse / Länge Präfix",
        IT: "Indirizzo di destinazione IP / Lunghezza prefisso",
        DA: "Destinationens IP-adresse/Længde af præfiks",
        AR: "عنوان IP الوجهة / طول البادئة.",
        PT: "destino da direçao de IP / longitude do prefixo",
        RO: "TODO",
        IND: "TODO"
    },
    rsInterface: {
        EN: "Interface",
        FR: "Interface",
        SPN: "Interfaz",
        DE: "Anschluss",
        IT: "Interfaccia",
        DA: "Interface",
        AR: "الوصلة",
        PT: "interface",
        RO: "TODO",
        IND: "TODO"
    },
    rsOrigin: {
        EN: "Origin",
        FR: "Origine",
        SPN: "Origen",
        DE: "Herkunft",
        IT: "Origine",
        DA: "Oprindelse",
        AR: "المنشأ",
        PT: "origem",
        RO: "TODO",
        IND: "TODO"
    },
    rsGateway: {
        EN: "Gateway IP Address",
        FR: "IP passerelle",
        SPN: "Dirección IP del gateway",
        DE: "IP-Adresse des Gateways",
        IT: "Indirizzo IP del gateway",
        DA: "Gatewayens IP-adresse",
        AR: "عنوان IP المنفذ",
        PT: "direçao de endereço de IP",
        RO: "TODO",
        IND: "TODO"
    },
    rsMetric: {
        EN: "Metric",
        FR: "Métrique",
        SPN: "Métrico",
        DE: "Netzmaske",
        IT: "Metrica",
        DA: "Metrik",
        AR: "مقاييس",
        PT: "metrico",
        RO: "TODO",
        IND: "TODO"
    },
    rsOptions: {
        EN: "Options",
        FR: "Options",
        SPN: "Opciones",
        DE: "Optionen",
        IT: "Opzioni",
        DA: "Valgmuligheder",
        AR: "إختيارات",
        PT: "opçoes",
        RO: "TODO",
        IND: "TODO"
    },
    rsMetricValue: {
        EN: "Invalid Metric",
        FR: "Métrique invalide",
        SPN: "Métrica Inválido",
        DE: "Ungültige Netzmaske",
        IT: "Metrica non valida",
        DA: "Ugyldig metrik",
        AR: "مقاييس غير صحيحة",
        PT: "metrica invalida",
        RO: "TODO",
        IND: "TODO"
    },
    mMonitoring: {
        EN: "Monitoring",
        FR: "Monitoring",
        SPN: "Monitoreo",
        DE: "Überwachung",
        IT: "Monitoraggio",
        DA: "Overvågning",
        AR: "مراقبة",
        PT: "monitor",
        RO: "TODO",
        IND: "TODO"
    },
    mQuickView: {
        EN: "Quick View",
        FR: "Vue rapide",
        SPN: "Vista Rápida",
        DE: "Schnellansicht",
        IT: "Visualizzazione rapida",
        DA: "Hurtigt overblik",
        AR: "نظرة سريعة",
        PT: "vista rapida",
        RO: "TODO",
        IND: "TODO"
    },
    mToday: {
        EN: "Today",
        FR: "Aujourd'hui",
        SPN: "Hoy",
        DE: "Heute",
        IT: "Oggi",
        DA: "I dag",
        AR: "اليوم",
        PT: "hoje",
        RO: "TODO",
        IND: "TODO"
    },
    mLast7Days: {
        EN: "Last 7 days",
        FR: "7 Derniers jours",
        SPN: "Últimos 7 días",
        DE: "Letzte 7  tage",
        IT: "Ultimi 7 giorni",
        DA: "De seneste 7 dage",
        AR: "السبع أيام الماضية",
        PT: "ultimos 7 dias",
        RO: "TODO",
        IND: "TODO"
    },
    mLastDays: {
        EN: "Last 30 days",
        FR: "30 derniers jours",
        SPN: "Últimos 30 días",
        DE: "Letzte 30 tage",
        IT: "Ultimi 30 giorni",
        DA: "De seneste 30 dage",
        AR: "الثلاثون يوماً الماضيين",
        PT: "ultimos 30 dias",
        RO: "TODO",
        IND: "TODO"
    },
    mCurrentMonth: {
        EN: "Current month",
        FR: "Mois en cours",
        SPN: "Mes actual",
        DE: "Aktueller monat",
        IT: "Mese corrente",
        DA: "Indeværende måned",
        AR: "الشهر الحالي",
        PT: "mes actual",
        RO: "TODO",
        IND: "TODO"
    },
    mCust: {
        EN: "Custom",
        FR: "Personnaliser",
        SPN: "Personalizar",
        DE: "Benutzerdefiniert",
        IT: "Personalizza",
        DA: "Tilpas",
        AR: "مخصص",
        PT: "personalizar",
        RO: "TODO",
        IND: "TODO"
    },
    mBandWidth: {
        EN: "Bandwidth usage per device:",
        FR: "Utilisation de la bande passante par périphérique:",
        SPN: "El uso de ancho de banda por dispositivo:",
        DE: "Online-Nutzung pro Gerät",
        IT: "Utilizzo della larghezza di banda per dispositivo:",
        DA: "Båndbreddeforbrug pr. enhed:",
        AR: "استخدام عرض الحزمة الترددية لكل جهاز",
        PT: "uso de banda por dispositivo:",
        RO: "TODO",
        IND: "TODO"
    },
    mClearAll: {
        EN: "Clear All",
        FR: "Effacer tout",
        SPN: "Borrar todo",
        DE: "Alles Löschen",
        IT: "Cancella tutto",
        DA: "Ryd alt",
        AR: "مسح الكل",
        PT: "apagar tudo",
        RO: "TODO",
        IND: "TODO"
    },
    mDevice: {
        EN: "Device",
        FR: "Dispositif",
        SPN: "Dispositivo",
        DE: "Gerät",
        IT: "Dispositivo",
        DA: "Enhed",
        AR: "جهاز  ",
        PT: "dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    mMac: {
        EN: "MAC",
        FR: "MAC",
        SPN: "MAC",
        DE: "MAC-Adresse WAN",
        IT: "MAC",
        DA: "MAC",
        AR: "ماك",
        PT: "MAC",
        RO: "TODO",
        IND: "TODO"
    },
    mVolume: {
        EN: "MB",
        FR: "MB",
        SPN: "MB",
        DE: "MB",
        IT: "MB",
        DA: "MB",
        AR: "ميغابايت",
        PT: "MB",
        RO: "TODO",
        IND: "TODO"
    },
    mVolumePerCent: {
        EN: "Volume (%)",
        FR: "Volume (%)",
        SPN: "Volumen (%)",
        DE: "Volumen (%)",
        IT: "Volume (%)",
        DA: "Volumen (%)",
        AR: "الصوت (%)",
        PT: "volume (%)",
        RO: "TODO",
        IND: "TODO"
    },
    mTotal: {
        EN: "Total",
        FR: "Total",
        SPN: "Total",
        DE: "Gesamt",
        IT: "Totale",
        DA: "Total",
        AR: "مجموع",
        PT: "total",
        RO: "TODO",
        IND: "TODO"
    },
    mCustom: {
        EN: "Custom View",
        FR: "Vue personnalisée",
        SPN: "Vista Personalizada",
        DE: "Benutzerdefinierte Ansicht",
        IT: "Visualizzazione personalizzata",
        DA: "Tilpas oversigt",
        AR: "عرض مخصص",
        PT: "vista personalizada",
        RO: "TODO",
        IND: "TODO"
    },
    mFrom: {
        EN: "From",
        FR: "De",
        SPN: "De",
        DE: "Von",
        IT: "Da",
        DA: "Fra",
        AR: "من",
        PT: "de",
        RO: "TODO",
        IND: "TODO"
    },
    mTo: {
        EN: "To",
        FR: "à",
        SPN: "A",
        DE: "bis",
        IT: "A",
        DA: "Til",
        AR: "إلي",
        PT: "a",
        RO: "TODO",
        IND: "TODO"
    },
    mView: {
        EN: "View",
        FR: "Voir",
        SPN: "Ver",
        DE: "Ansicht",
        IT: "Vista",
        DA: "Vis",
        AR: "عرض مخصص",
        PT: "vista",
        RO: "TODO",
        IND: "TODO"
    },
    menuQuickViewTip: {
        EN: "Here you can see the summary of the bandwidth used by device.",
        FR: "Ici vous pouvez voir le résumé de la bande passante utilisée par le dispositif.",
        SPN: "Aquí puedes ver el resumen del ancho de banda utilizado por el dispositivo.",
        DE: "Hier sehen Sie die Übersicht der von jedem Gerät verbrauchten Bandbreite.",
        IT: "Qui puoi vedere la sintesi della larghezza di banda utilizzata dal dispositivo.",
        DA: "Her kan du se en opsummering af den båndbredde, som hver enhed anvender.",
        AR: "هنا يمكنك الإطلاع على ملخص عرض الحزمة الترددية المستخدمة من قبل الجهاز.",
        PT: "aquí pode ver o resumo da banda usada por dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    menuTrafficHistoryTip: {
        EN: "Here you can see the detailed traffic history of all devices.",
        FR: "Ici vous pouvez voir l'histoire détaillée du trafic de tous les appareils.",
        SPN: "Aquí se puede ver la historia detallada del tráfico de todos los dispositivos.",
        DE: "Hier sehen Sie den detaillierten Traffic-Verlauf sämtlicher Geräte.",
        IT: "Qui puoi vedere la cronologia dettagliata del traffico di tutti i dispositivi.",
        DA: "Her kan du se den detaljerede trafikhistorik for alle enheder.",
        AR: "هنا يمكنك ان ترى تاريخ حركة مفصل لجميع الأجهزة.",
        PT: "aquí pode ver o historico detalhado de trafico de todos os dispositivos",
        RO: "TODO",
        IND: "TODO"
    },
    mTip1: {
        EN: "Here you choose the period for viewing the bandwidth history.",
        FR: "Ici, vous choisissez la période à visualiser.",
        SPN: "Aquí elegimos el período de visualización de la historia de ancho de banda.",
        DE: "Hier können Sie den Zeitraum für die dargestellte Online-Historie auswählen.",
        IT: "Qui puoi scegliere il periodo per la visualizzazione della cronologia della larghezza di banda.",
        DA: "Her kan du vælge den periode, som du vil se historik for båndbredden for.",
        AR: "هنا يمكنك إختيار فترة إظهار تاريخ عرض الحزمة الترددية.",
        PT: "aquí pode escolher o periodo de vista do historial de banda",
        RO: "TODO",
        IND: "TODO"
    },
    mTip2: {
        EN: "Here you clear the bandwidth history.",
        FR: "Ici, vous effacez l'historique.",
        SPN: "Aquí se borra la historia del ancho de banda.",
        DE: "Hier löschen Sie den Zähler der Online-Historie.",
        IT: "Qui puoi cancellare la cronologia della larghezza di banda.",
        DA: "Her kan du rydde historik for båndbredden.",
        AR: "هنا يمكنك مسح تاريخ عرض الحزمة الترددية. ",
        PT: "aquí pode apagar o historial de banda ",
        RO: "TODO",
        IND: "TODO"
    },
    mTip3: {
        EN: "Here you see the history by device.",
        FR: "Ici vous voyez l'historique par dispositif.",
        SPN: "Aquí puede ver la historia por el dispositivo.",
        DE: "Hier sehen sie die Online-Historie pro Gerät.",
        IT: "Qui puoi visualizzare la cronologia del dispositivo.",
        DA: "Her kan du se historikken pr. enhed.",
        AR: "هنا تري التاريخ من خلال الجهاز.",
        PT: "aquí pode ver o historial por dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    mTip4: {
        EN: "If Quick View is selected, enter the starting date.",
        FR: "Si 'vue rapide' est sélectionné, entrez la date de début.",
        SPN: "Si Vista Rápida es personalizado, introduzca la fecha de inicio.",
        DE: "Wenn Sie Schnellansicht ausgewählt haben, geben Sie den Startzeitpunkt an.",
        IT: "Se selezioni Visualizzazione rapida, digita la data di partenza.",
        DA: "Hvis 'Hurtigt overblik' er valgt, skal du angive startdatoen.",
        AR: "إذا تم إختيار العرض السريع، أدخل تاريخ البدء.",
        PT: "se vista rapida estiver selecionada, insira a data de inicio",
        RO: "TODO",
        IND: "TODO"
    },
    mTip5: {
        EN: "If Quick View is customized, enter the end date.",
        FR: "Si 'vue rapide' est sélectionné, entrez la date de fin.",
        SPN: "Si Vista rápida es personalizado, introduzca la fecha de finalización.",
        DE: "Wenn Sie Schnellansicht ausgewählt haben, geben Sie den Endzeitpunkt an.",
        IT: "Se la Visualizzazione rapida è personalizzata, digita la data finale.",
        DA: "Hvis 'Hurtigt overblik' er tilpasset, skal du angive slutdatoen.",
        AR: "إذا تم تخصيص العرض السريع، أدخل تاريخ الإنتهاء.",
        PT: "se vista rapida estiver selecionada, insira a data final",
        RO: "TODO",
        IND: "TODO"
    },
    mTip6: {
        EN: "Press the View button to view the history related.",
        FR: "Appuyez sur le bouton Voir pour afficher l'historique correspondant.",
        SPN: "Pulse el botón Ver para ver la historia relacionada.",
        DE: "Klicken Sie auf 'Ansicht', um sich die entsprechende Online-Historie anzeigen zu lassen.",
        IT: "Premi il pulsante Visualizza per visualizzare la cronologia correlata.",
        DA: "Tryk på knappen 'Vis' for at se den relaterede historik.",
        AR: "إضغط على زر العرض لعرض التاريخ ذا الصلة.",
        PT: "pressione o botao de vista para ver o historial relacionado.",
        RO: "TODO",
        IND: "TODO"
    },
    tTrafficHistory: {
        EN: "Traffic History",
        FR: "Historique du traffic",
        SPN: "Historial de Tráfico",
        DE: "Online-Historie",
        IT: "Cronologia del traffico",
        DA: "Trafikhistorik",
        AR: "تاريخ الحركة",
        PT: "historico de trafico",
        RO: "TODO",
        IND: "TODO"
    },
    tSelectDevice: {
        EN: "Select Device",
        FR: "Sélectionner le périphérique",
        SPN: "Seleccionar dispositivo",
        DE: "Gerät auswählen",
        IT: "Seleziona dispositivo",
        DA: "Vælg enhed",
        AR: "أختر جهاز",
        PT: "Selecione o dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    tTip1: {
        EN: "Here you choose the device for viewing the traffic history.",
        FR: "Ici vous choisissez le dispositif à visualiser.",
        SPN: "Aquí elegimos el dispositivo para ver el historial de tráfico.",
        DE: "Hier wählen Sie das Gerät aus, für den Sie die Online-Historie anzeigen lassen möchten.",
        IT: "Qui puoi scegliere il dispositivo per la visualizzazione della cronologia del traffico.",
        DA: "Her kan du vælge den enhed, som du vil se trafikhistorik for.",
        AR: "هنا تختار الجهاز لعرض تاريخ المرور.",
        PT: "aquí pode escolher o dispositivo para ver o historial de trafico",
        RO: "TODO",
        IND: "TODO"
    },
    tTip2: {
        EN: "Here you choose the period for viewing the traffic history.",
        FR: "Ici, vous choisissez la période à visualiser.",
        SPN: "Aquí elegimos el período de visualización de la historia de ancho de banda.",
        DE: "Hier wählen Sie den Zeitraum für den Sie sich die Online-Historie anzeigen lassen möchten.",
        IT: "Qui puoi scegliere il periodo per la visualizzazione della cronologia del traffico.",
        DA: "Her kan du vælge den periode, som du vil se trafikhistorik for.",
        AR: "هنا يمكنك اختيار فترة عرض تاريخ المرور.",
        PT: "aquí pode escolher o dispositivo para ver o historial de trafico",
        RO: "TODO",
        IND: "TODO"
    },
    tTip3: {
        EN: "Here you clear the traffic history.",
        FR: "Ici, vous effacez l'historique.",
        SPN: "Aquí se borra la historia del ancho de banda.",
        DE: "Hier setzen Sie den Zähler für die Online-Historie zurück.",
        IT: "Qui puoi cancellare la cronologia del traffico.",
        DA: "Her kan du rydde trafikhistorikken.",
        AR: "هنا يمكنك مسح تاريخ المرور.",
        PT: "aquí pode apagar o historial de trafico",
        RO: "TODO",
        IND: "TODO"
    },
    tTip4: {
        EN: "Here you see the download history by day.",
        FR: "Ici vous voyez l'historique du traffic.",
        SPN: "Aquí se ve el historial de descargas por día.",
        DE: "Hier Sieen Sie die Download-Historie pro Tag.",
        IT: "Qui sotto puoi visualizzare la cronologia dei download per giorno.",
        DA: "Her kan du downloadhistorikken pr. dag.",
        AR: "هنا يمكنك رؤية تاريخ التحميل باليوم.",
        PT: "aquí pode fazer o download do historial por dia",
        RO: "TODO",
        IND: "TODO"
    },
    tTip5: {
        EN: "Here you see the download for today. ",
        FR: "Ici, vous voyez le traffic du jour.",
        SPN: "Aquí puedes ver la descarga de hoy.",
        DE: "Hier sehen Sie die Download-Historie für den heutigen Tag.",
        IT: "Qui sotto puoi visualizzare i download odierni.",
        DA: "Her kan du se det, som blev downloadet i dag. ",
        AR: "هنا يمكنك رؤية التحميل لليوم.",
        PT: "aquí pode fazer o download do dia",
        RO: "TODO",
        IND: "TODO"
    },
    resets: {
        EN: "Resets",
        FR: "Réinitialisation",
        SPN: "Resets",
        DE: "Zurücksetzen",
        IT: "Reinizializzazione",
        DA: "Nulstillinger",
        AR: "إعادة تعيين",
        PT: "resets",
        RO: "TODO",
        IND: "TODO"
    },
    restartGateway: {
        EN: "Restart Gateway",
        FR: "Redémarrer le modem",
        SPN: "Reiniciar Gateway",
        DE: "Gateway neu starten",
        IT: "Riavvia gateway",
        DA: "Genstart gateway",
        AR: "إعادة تشغيل المنفذ",
        PT: "reiniciar gateway",
        RO: "TODO",
        IND: "TODO"
    },
    factorySettings: {
        EN: "Factory Settings",
        FR: "Réglages usine",
        SPN: "Configuración de fábrica",
        DE: "Werkseinstellungen",
        IT: "Impostazioni di fabbrica",
        DA: "Fabriksindstillinger",
        AR: "إعدادات المصنع",
        PT: "configuraçao de fabrica",
        RO: "TODO",
        IND: "TODO"
    },
    factorySettingsReset: {
        EN: "Factory Settings Reset",
        FR: "Restauration des paramètres usine",
        SPN: "Reposición de los ajustes de fábrica",
        DE: "Auf Werkseinstellungen zurücksetzen",
        IT: "Ripristina le impostazioni di fabbrica",
        DA: "Nulstil fabriksindstillinger",
        AR: "إعادة تعيين إعدادات المصنع",
        PT: "resert de ajustes de fabrica",
        RO: "TODO",
        IND: "TODO"
    },
    factorySettingsResetDescription: {
        EN: "This will restore factory default settings. All your current configuration will be lost and your gateway will reboot.",
        FR: "Cette opération va restaurer les pramètres par défaut. Votre configuration actuelle sera perdue et votre modem va redémarrer.",
        SPN: "Esto va a eliminar y restablecer la configuración de la puerta de enlace a la configuración predeterminada de fábrica.",
        DE: "Damit werden die Werkseinstellungen wiederhergestellt. Ihre gesamte aktuelle Konfiguration geht verloren und das Gateway wird neu gestartet.",
        IT: "Ciò ripristinerà le impostazioni predefinite di fabbrica. Tutta la configurazione corrente verrà persa e il gateway si riavvierà.",
        DA: "Dette vil gendanne standardindstillingerne fra fabrikken. Alle dine aktuelle konfigurationer vil gå tabt, og din gateway vil blive genstartet.",
        AR: "هذا سوف يعيد إعدادات المصنع الافتراضية. سيتم فقدان جميع الإعدادات الحالية وسيتم إعادة تشغيل المنفذ الخاص بك.",
        PT: "isto vai restabelecer a configuraçao de fabrica. Todas as configuraçoes feitas sera perdidas e o seu gateway reiniciara",
        RO: "TODO",
        IND: "TODO"
    },
    restartDescription: {
        EN: "Are you sure you want to restart the Gateway? All connected devices will lose Internet connectivity and will be reconnected after operation completed.",
        FR: "Etes-vous sûr de vouloir redémarrer le modem? Les périphériques connectés perdront la connexion Internet et seront reconnectés à la fin de l'opération.",
        SPN: "¿Seguro que desea reiniciar lo Gateway?",
        DE: "Sind Sie sicher, dass Sie das Gateway neu starten wollen? Alle angeschlossenen Geräte werden die Verbindung zum Internet verlieren und werden nach Abschluss des Vorgangs wieder verbunden werden.",
        IT: "Sei sicuro di voler riavviare il Gateway? Tutti i dispositivi collegati perderanno la connettività Internet e saranno ricollegati una volta completata l'operazione.",
        DA: "Er du sikker på, at du vil genstarte gatewayen? Alle tilsluttede enheder vil miste internetforbindelsen og først få forbindelse igen, når handlingen er gennemført.",
        AR: "هل أنت متأكد أنك تريد إعادة تشغيل المنفذ؟ كل الأجهزة المتصلة ستفقد الإتصال بالإنترنت وسيتم إعادة إتصالها بعد إكتمال العملية.",
        PT: "tem a certeza que quer restabelecer os valores de fabrica do gateway? Todos os dispositivo ligados vao perder a ligaçao á internet e voltarao a ligar depois do reinicio",
        RO: "TODO",
        IND: "TODO"
    },
    resetDescription: {
        EN: "Please wait while the Gateway is rebooting...",
        FR: "Redémarrage du modem en cours...",
        SPN: "Por favor, espere mientras que lo Gateway se está reiniciando ...",
        DE: "Bitte warten Sie, während das Gateway neu startet ...",
        IT: "Per favore, attendi il riavvio del gateway...",
        DA: "Vent venligst, mens gatewayen genstartes ...",
        AR: "برجاء الإنتظار بينما يعاد تشغيل المنفذ",
        PT: "por favor aguarde enquanto o gateway reinicia...",
        RO: "TODO",
        IND: "TODO"
    },
    responseDescription: {
        EN: "Please wait for Gateway response...",
        FR: "Attendez la réponse du modem...",
        SPN: "Por favor espere la respuesta del gateway",
        DE: "Bitte warten Sie einen Moment",
        IT: "Attendere una risposta del gateway ...",
        DA: "Vent på svar fra gateway...",
        AR: "TODO",
        PT: "por favor aguarde a resposta do gateway...",
        RO: "Va rugam asteptati raspunsul modem-ului?",
        IND: "TODO"
    },
    restoreConfigurationMessage: {
        EN: "Please wait while the Gateway is restoring the settings...",
        FR: "Restauration des paramètres sauvegardés en cours...",
        SPN: "Por favor espere mientras el gateway restaura valores",
        DE: "Bitte warten Sie, bis die Einstellungen des Gateways wiederhergestellt wurden",
        IT: "Attendere che il gateway ripristini la configurazione iniziale",
        DA: "Vent mens gatewayen genopretter indstillingerne...",
        AR: "TODO",
        PT: "por favor aguarde enquanto o gateway repoe as definiçoes...",
        RO: "Va rugam asteptati refacerea setarilor?",
        IND: "TODO"
    },
    restartGatewayTip: {
        EN: "This will restart your gateway.",
        FR: "Ceci permet de réinitialiser votre modem.",
        SPN: "Esto restablecerá su pasarela.",
        DE: "Das wird Ihr Gateway neu starten.",
        IT: "Questo riavvia il gateway.",
        DA: "Dette vil genstarte din gateway.",
        AR: "هذا سوف يعيد تشغيل المنفذ الخاص بك",
        PT: "isto fará reiniciar o seu gateway",
        RO: "TODO",
        IND: "TODO"
    },
    resetGatewayTip: {
        EN: "This will replace your current gateway settings with factory default settings. A confirmation pop-up will be displayed before applying this change.",
        FR: "Ceci supprimera votre configuration et restaurera les paramètres par défaut. Une confirmation vous sera demandé avant la réinitialisation de votre modem.",
        SPN: "Esto borrará y restablecer la configuración de puerta de enlace a la configuración predeterminada de fábrica. Será necesaria una confirmación antes de restablecer su pasarela.",
        DE: "Dies wird Ihre aktuellen Gateway-Einstellungen mit den Werkseinstellungen ersetzen. Es wird ein Bestätigungsdialog angezeigt, bevor diese Änderung wirksam wird.",
        IT: "Questo sostituirà le impostazioni del gateway correnti con le impostazioni predefinite di fabbrica. Verrà visualizzata una conferma pop-up prima di applicare questo cambiamento.",
        DA: "Dette vil erstatte dine aktuelle gatewayindstillinger med standardindstillingerne fra fabrikken. Et pop op-vindue til bekræftelse vil blive vist, før denne ændring træder i kraft.",
        AR: "هذا سوف يمسح ويعيد تعيين إعدادات المنفذ الخاص بك إلى إعدادات المصنع الإفتراضية. سيتم طلب التأكيد قبل إعادة تعيين المنفذ.",
        PT: "isto vai substituir as suas actuais configuraçoes do gateway pelos valores de fabrica.  Um pop-up de confirmaçao confirmará antes de aplicar.",
        RO: "TODO",
        IND: "TODO"
    },
    systemLog: {
        EN: "System Log",
        FR: "Journal Système",
        SPN: "Registro del Sistema",
        DE: "Systemereignisse",
        IT: "Registro di sistema",
        DA: "Systemlog",
        AR: "سجل النظام",
        PT: "resgistro de sistema",
        RO: "TODO",
        IND: "TODO"
    },
    securityLog: {
        EN: "Security Log",
        FR: "Logs de sécurité",
        SPN: "Log de seguridad",
        DE: "Sicherheits-Log",
        IT: "Log di sicurezza",
        DA: "Sikkerhedslog",
        AR: "TODO",
        PT: "registro de segurança",
        RO: "Jurnal de securitate",
        IND: "TODO"
    },
    upnpLog: {
        EN: "UPnP Log",
        FR: "Logs UPNP",
        SPN: "Log UPnP",
        DE: "UPnP-Log",
        IT: "Log UPnP",
        DA: "UpnP-log",
        AR: "TODO",
        PT: "registro de UPnP",
        RO: "Jurnal UPnP",
        IND: "TODO"
    },
    systemLogTip: {
        EN: "This page allows you to view and set the System Log options.",
        FR: "Cette page vous permet de visualiser et de configurer les options du journal système.",
        SPN: "Esta página le permite ver el registro del sistema y configurar las opciones de registro del sistema.",
        DE: "Diese Seite zeigt Ihnen die Systemereignisse an und ermöglicht die Konfiguration der Optionen.",
        IT: "Questa pagina consente di visualizzare e impostare le opzioni del registro di sistema.",
        DA: "På denne side kan du se og indstille valgmulighederne for systemlog.",
        AR: "هذة الصفحة تسمح لك بعرض سجل النظام وضبط خيارات سجل النظام",
        PT: "esta pagina permite ver e alterar as opçoes de registro de sistema",
        RO: "TODO",
        IND: "TODO"
    },
    securityLogTip: {
        EN: "This page allows you to view and set the Security Log options.",
        FR: "Cette page permet de configurer et visualiser les logs de sécurité.",
        SPN: "Esta pagina le permite ver y ajustar las opciones del log de seguridad",
        DE: "Auf dieser Seite können Sie die Einstellungen für die Security-Log Optionen anzeigen und ändern.",
        IT: "Questa pagina permette di configurare e visualizzare i log sulla sicurezza",
        DA: "Denne side gør det muligt for dig, at se og indstille muligheder for sikkerhedsloggen.",
        AR: "TODO",
        PT: "esta pagina permite ver e alterar as opçoes de registro de segurança",
        RO: "Aceasta pagina va permite vizualizarea si setarea optiunilor de Istoric de Securitate.",
        IND: "TODO"
    },
    upnpLogTip: {
        EN: "This page allows you to view the UPnP Log.",
        FR: "Cette page permet de visualiser les logs UPNP.",
        SPN: "Esta pagina le permite ver y ajustar las opciones del log UPnP",
        DE: "Auf dieser Seite können Sie die Einstellungen für die UPnP-Log Optionen anzeigen und ändern.",
        IT: "Questa pagina permette di visualizzare i log UPnP",
        DA: "Denne side gør det muligt for dig at se UPnP-loggen.",
        AR: "TODO",
        PT: "esta pagina permite ver o registro de UPnP",
        RO: "Aceasta pagina va permite vizualizarea jurnalului UPnP.",
        IND: "TODO"
    },
    operatorLogTip: {
        EN: "This page allows you to view the Operator Log.",
        FR: "Cette page permet de visualiser les logs opérateur.",
        SPN: "Esta pagina le permite ver y ajustar las opciones del log de Operador",
        DE: "Auf dieser Seite können Sie die Einstellungen für die Operator-Log Optionen anzeigen und ändern.",
        IT: "Questa pagina permette di visualizzare i log operatore",
        DA: "Denne side gør det muligt for dig at se operatør-loggen.",
        AR: "TODO",
        PT: "esta pagina permite ver o registro de operador",
        RO: "Aceasta pagina va permite vizualizarea jurnalului Operatorului.",
        IND: "TODO"
    },
    firewallApplyChangesOrder: {
        EN: "Apply order changes",
        FR: "Appliquer le changement d'ordre",
        SPN: "Aplicar cambios",
        DE: "Regeländerung übernehmen",
        IT: "Applica il cambio dell'ordine",
        DA: "Udfør ændringer i rækkefølgen",
        AR: "TODO",
        PT: "aplicar a ordem de mudança",
        RO: "Aplicati modificarile comenzii",
        IND: "TODO"
    },
    firewallCancelChangesOrder: {
        EN: "Cancel order changes",
        FR: "Annuler le changement d'ordre",
        SPN: "Cancelar cambios",
        DE: "Regeländerung abbrechen",
        IT: "Cancella il cambio dell'ordine",
        DA: "Afbryd ændringer i rækkefølgen",
        AR: "TODO",
        PT: "cancelar a ordem de mudança",
        RO: "Anulati modificarile comenzii",
        IND: "TODO"
    },
    firewallClickDragOrder: {
        EN: "Click and drag the rules to change the order",
        FR: "Cliquez et déplacez pour changer l'ordre des règles",
        SPN: "Selecciona y arrastra las reglas para cambiar el orden",
        DE: "Klicken und ziehen Sie Regeln, um die gewünschte Reihenfolge festzulegen.",
        IT: "Seleziona e sposta per cambiare l'ordine delle regole",
        DA: "Klik og træk i reglerne, for at ændre rækkefølgen",
        AR: "TODO",
        PT: "presione e arraste as regras para mudar a ordem",
        RO: "Apasati si trageti regula pentru a schimba ordinea",
        IND: "TODO"
    },
    configuration: {
        EN: "Configuration",
        FR: "Configuration",
        SPN: "Configuración",
        DE: "Konfiguration",
        IT: "Configurazione",
        DA: "Konfiguration",
        AR: "التهيئة",
        PT: "configuraçao",
        RO: "TODO",
        IND: "TODO"
    },
    log: {
        EN: "Log",
        FR: "Journal",
        SPN: "Registro",
        DE: "Ereignisse",
        IT: "Registro",
        DA: "Log",
        AR: "سجل  ",
        PT: "registro",
        RO: "TODO",
        IND: "TODO"
    },
    dateTime: {
        EN: "Date/Time",
        FR: "Date/Heure",
        SPN: "Fecha/Tiempo",
        DE: "Datum/Uhrzeit",
        IT: "Data/Ora",
        DA: "Dato/tid",
        AR: "التاريخ/ الوقت",
        PT: "data / hora",
        RO: "TODO",
        IND: "TODO"
    },
    facility: {
        EN: "Facility",
        FR: "Type",
        SPN: "Facilidad",
        DE: "Art",
        IT: "Funzione",
        DA: "Facilitet",
        AR: "وسيلة ",
        PT: "instalaçao",
        RO: "TODO",
        IND: "TODO"
    },
    module: {
        EN: "Module",
        FR: "Module",
        SPN: "Módulo",
        DE: "Modul",
        IT: "Modulo",
        DA: "Modul",
        AR: "وحدة برمجية",
        PT: "modulo",
        RO: "TODO",
        IND: "TODO"
    },
    severity: {
        EN: "Severity",
        FR: "Gravité",
        SPN: "Severidad",
        DE: "Ernsthaftigkeit",
        IT: "Gravità",
        DA: "Alvorlighed",
        AR: "الخدمة",
        PT: "Severidade",
        RO: "TODO",
        IND: "TODO"
    },
    message: {
        EN: "Message",
        FR: "Message",
        SPN: "Mensaje",
        DE: "Nachricht",
        IT: "Messaggio",
        DA: "Besked",
        AR: "رسالة",
        PT: "mensagem",
        RO: "TODO",
        IND: "TODO"
    },
    selectDebug: {
        EN: "Debug or higher",
        FR: "Debug ou supérieur",
        SPN: "Debug o superior",
        DE: "Debug oder höher",
        IT: "Debug o superiore",
        DA: "Fejlfinding eller herover",
        AR: "تصحيح أو أعلى",
        PT: "debug ou superior",
        RO: "TODO",
        IND: "TODO"
    },
    selectInfo: {
        EN: "Info or higher",
        FR: "Info ou supérieur",
        SPN: "Info o superior",
        DE: "Info oder höher",
        IT: "Info o superiore",
        DA: "Information eller herover",
        AR: "معلومات أو أعلى",
        PT: "informaçao ou superior",
        RO: "TODO",
        IND: "TODO"
    },
    selectNotice: {
        EN: "Notice or higher",
        FR: "Avis ou supérieur",
        SPN: "Aviso o superior",
        DE: "Nachricht oder höher",
        IT: "Notifica o superiore",
        DA: "Bemærkning eller herover",
        AR: "إشعار أو أعلى",
        PT: "Noticia ou superior",
        RO: "TODO",
        IND: "TODO"
    },
    selectWarning: {
        EN: "Warning or higher",
        FR: "Avertissement ou supérieur",
        SPN: "Advertencia o superior",
        DE: "Warnung oder höher",
        IT: "Avvertenza o superiore",
        DA: "Advarsel eller herover",
        AR: "تحذير أو أعلى",
        PT: "aviso ou superior",
        RO: "TODO",
        IND: "TODO"
    },
    selectError: {
        EN: "Error or higher",
        FR: "Erreur ou supérieur",
        SPN: "Error o superior",
        DE: "Fehler oder höher",
        IT: "Errore o superiore",
        DA: "Fejl eller herover",
        AR: "خطأ أو أعلى",
        PT: "erro ou superior",
        RO: "TODO",
        IND: "TODO"
    },
    selectCrit: {
        EN: "Critical or higher",
        FR: "Critique ou supérieur",
        SPN: "Crítico o superior",
        DE: "Kritisch oder höher",
        IT: "Critico o superiore",
        DA: "Kritisk eller herover",
        AR: "خطر او اعلى",
        PT: "critico ou superior",
        RO: "TODO",
        IND: "TODO"
    },
    selectAlert: {
        EN: "Alert or higher",
        FR: "Alerte ou supérieur",
        SPN: "Alerta o superior",
        DE: "Alarm oder höher",
        IT: "Allarme o superiore",
        DA: "Alarm eller herover",
        AR: "تنبية أو أعلى",
        PT: "alerta ou superior",
        RO: "TODO",
        IND: "TODO"
    },
    selectEmergency: {
        EN: "Emergency or higher",
        FR: "Urgent ou supérieur",
        SPN: "Emergencia o superior",
        DE: "Dringend oder höher",
        IT: "Emergenza o superiore",
        DA: "Nødstilfælde eller herover",
        AR: "طوارئ أو أعلى",
        PT: "emergencia ou superior",
        RO: "TODO",
        IND: "TODO"
    },
    descDebug: {
        EN: "Debug",
        FR: "Debug",
        SPN: "Debug",
        DE: "Debug",
        IT: "Debug",
        DA: "Fejlfinding",
        AR: "تصحيح  ",
        PT: "debug",
        RO: "TODO",
        IND: "TODO"
    },
    descInfo: {
        EN: "Info",
        FR: "Info",
        SPN: "Info",
        DE: "Info",
        IT: "Info",
        DA: "Information",
        AR: "معلومات",
        PT: "info",
        RO: "TODO",
        IND: "TODO"
    },
    descNotice: {
        EN: "Notice",
        FR: "Avis",
        SPN: "Aviso",
        DE: "Nachricht",
        IT: "Notifica",
        DA: "Bemærkning",
        AR: "إشعار  ",
        PT: "noticia",
        RO: "TODO",
        IND: "TODO"
    },
    descWarning: {
        EN: "Warning",
        FR: "Avertissement",
        SPN: "Advertencia",
        DE: "Warnung",
        IT: "Avvertimento",
        DA: "Advarsel",
        AR: "تحذير  ",
        PT: "aviso",
        RO: "TODO",
        IND: "TODO"
    },
    descError: {
        EN: "Error",
        FR: "Erreur",
        SPN: "Error",
        DE: "Fehler",
        IT: "Errore",
        DA: "Fejl",
        AR: "خطأ   ",
        PT: "erro",
        RO: "TODO",
        IND: "TODO"
    },
    descCrit: {
        EN: "Critical",
        FR: "Critique",
        SPN: "Crítico",
        DE: "Kritisch",
        IT: "Critico",
        DA: "Kritisk",
        AR: "خطر",
        PT: "critico",
        RO: "TODO",
        IND: "TODO"
    },
    descAlert: {
        EN: "Alert",
        FR: "Alerte",
        SPN: "Alerta",
        DE: "Alarm",
        IT: "Allarme",
        DA: "Alarm",
        AR: "تنبية  ",
        PT: "alerta",
        RO: "TODO",
        IND: "TODO"
    },
    descEmergency: {
        EN: "Emergency",
        FR: "Urgent",
        SPN: "Emergencia",
        DE: "Dringend",
        IT: "Emergenza",
        DA: "Nødstilfælde",
        AR: "طوارئ  ",
        PT: "emergencia",
        RO: "TODO",
        IND: "TODO"
    },
    days: {
        EN: "days",
        FR: "jours",
        SPN: "días",
        DE: "Tage",
        IT: "Giorni",
        DA: "Dage",
        AR: "أيام",
        PT: "dias",
        RO: "TODO",
        IND: "TODO"
    },
    hours: {
        EN: "Hours",
        FR: "Heures",
        SPN: "Horas",
        DE: "Stunden",
        IT: "Ore",
        DA: "Timer",
        AR: "ساعات",
        PT: "horas",
        RO: "TODO",
        IND: "TODO"
    },
    minutes: {
        EN: "Minutes",
        FR: "Minutes",
        SPN: "Acta",
        DE: "Minuten",
        IT: "Minuti",
        DA: "Minutter",
        AR: "دقائق",
        PT: "minutos",
        RO: "TODO",
        IND: "TODO"
    },
    seconds: {
        EN: "Seconds",
        FR: "Secondes",
        SPN: "Segundos",
        DE: "Sekunden",
        IT: "Secondi",
        DA: "Sekunder",
        AR: "ثواني",
        PT: "Segundos",
        RO: "TODO",
        IND: "TODO"
    },
    between3and90seconds: {
        EN: "Value should be between 3 and 90 seconds",
        FR: "TODO",
        DE: "Der Wert sollte zwischen 3 und 90 Sekunden betragen",
        IT: "TODO",
        SPN: "Valor debe estar entre 3 y 90 segundos",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    max90seconds: {
        EN: "Max 90 Seconds",
        FR: "90 secondes maximum",
        DE: "Maximal 90 Sekunden",
        IT: "Massimo 90 secondi",
        SPN: "maximo 90 segundos",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    labelSeconds: {
        EN: "Seconds",
        FR: "Secondes",
        SPN: "Segundos",
        DE: "Sekunden",
        IT: "Secondi",
        DA: "Sekunder",
        AR: "ثواني",
        PT: "Segundos",
        RO: "TODO",
        IND: "TODO"
    },
    systemLogTip1: {
        EN: "You can select the filter you want to apply in this report. ",
        FR: "Vous pouvez sélectionner le filtre à apppliquer dans le rapport ci-contre.",
        SPN: "Puede seleccionar el filtro que desea aplicar en el presente informe.",
        DE: "Hier können Sie den Ansichtenfilter auswählen, der für diesen Report angewendet wird.",
        IT: "Puoi selezionare il filtro da applicare in questo rapporto.",
        DA: "Du kan vælge det filter, som du vil anvende i denne rapport. ",
        AR: "يمكنك اختيار المرشح الذي تريد تطبيقه في هذا التقرير.",
        PT: "aquí pode seleccionar o filtro a aplicar neste resumo",
        RO: "TODO",
        IND: "TODO"
    },
    systemLogTip2: {
        EN: "Click in Apply to see the filtered system logs report.",
        FR: "Cliquez sur Appliquer pour voir le résultat de l'application du filtre.",
        SPN: "Haga clic en Aplicar para ver el informe de los registros del sistema filtrada.",
        DE: "Klicken Sie auf 'Anwenden', um den Report der Systemereignisse anzuzeigen.",
        IT: "Clicca su Applica per visualizzare il rapporto del registro di sistema filtrato.",
        DA: "Klik på 'Anvend' for at se rapporten for filtrerede systemlogs.",
        AR: "اضغط في تطبيق لرؤية تقرير سجلات النظام المفلتره.",
        PT: "pressione apply para ver o resumo filtrado de registro de sistema ",
        RO: "TODO",
        IND: "TODO"
    },
    systemLogTip3: {
        EN: "This is the related log.",
        FR: "Voici les logs associées.",
        SPN: "Este es el log requerido",
        DE: "Dies ist das zugehörige Log",
        IT: "questi sono i log associati",
        DA: "Dette er den tilhørende log.",
        AR: "TODO",
        PT: "isto esta relacionado com o registro",
        RO: "Acesta este jurnalul aferent.",
        IND: "TODO"
    },
    internetUtilities: {
        EN: "Internet Utilities",
        FR: "Utilitaires Internet",
        SPN: "Internet Utilidades",
        DE: "Internet-Anwendungen",
        IT: "Utilità Internet",
        DA: "Internetfunktiner",
        AR: "برامج خدمة الإنترنت",
        PT: "utilidades de internet",
        RO: "TODO",
        IND: "TODO"
    },
    utility: {
        EN: "Utility",
        FR: "Utilitaires",
        SPN: "Utilidad",
        DE: "Anwendungen",
        IT: "Utilità",
        DA: "Funktion",
        AR: "برامج خدمية",
        PT: "utilidades",
        RO: "TODO",
        IND: "TODO"
    },
    destination: {
        EN: "Destination",
        FR: "Destination",
        SPN: "Destino",
        DE: "Zieladresse",
        IT: "Destinazione",
        DA: "Destination",
        AR: "الوجهة",
        PT: "destino",
        RO: "TODO",
        IND: "TODO"
    },
    numberOfPings: {
        EN: "Number of Pings",
        FR: "Nombre de pings",
        SPN: "Número de pings",
        DE: "Anzahl Pings",
        IT: "Numero di Ping",
        DA: "Antal ping",
        AR: "عدد النبضات",
        PT: "numero de pings",
        RO: "TODO",
        IND: "TODO"
    },
    maxNumberOfHops: {
        EN: "Max. Number of Hops",
        FR: "Nombre de sauts max.",
        SPN: "Max. Número de saltos",
        DE: "Max. Anzahl Hops",
        IT: "Numero max di Hop",
        DA: "Maks. antal hop",
        AR: "العدد الأقصي للوصلات المباشرة",
        PT: "numero maximo de Hops",
        RO: "TODO",
        IND: "TODO"
    },
    test: {
        EN: "Test",
        FR: "Test",
        SPN: "Prueba",
        DE: "Test",
        IT: "Prova",
        DA: "Test",
        AR: "إختبار",
        PT: "teste",
        RO: "TODO",
        IND: "TODO"
    },
    pingResults: {
        EN: "Ping results",
        FR: "Résultats du Ping",
        SPN: "Resultados Ping",
        DE: "Ping-Ergebnis",
        IT: "Risultati Ping",
        DA: "Ping-resultater",
        AR: "نتائج النبضات",
        PT: "resultado de ping",
        RO: "TODO",
        IND: "TODO"
    },
    statusDNSQuery: {
        EN: "Can't resolve destination: Name or service unknown",
        FR: "Echec: Nom ou service inconnu",
        SPN: "No se puede resolver destinación: Nombre o servicio no conocida",
        DE: "Zieladresse nicht erreichbar: Name oder Dienst unbekannt",
        IT: "Impossibile risolvere destinazione: Nome o servizio sconosciuto",
        DA: "Kan finde destination: Ukendt navn eller tjeneste",
        AR: "لا يمكن إيجاد الوجهة: الإسم أو الخمة غير معروفين",
        PT: "nao pode resolver destino: nome ou serviço desconhecido",
        RO: "TODO",
        IND: "TODO"
    },
    addressDNSQuery: {
        EN: "Address: ",
        FR: "Adresse: ",
        SPN: "Dirección: ",
        DE: "Adresse:",
        IT: "Indirizzo:",
        DA: "Adresse: ",
        AR: "العنوان:",
        PT: "endereço:",
        RO: "TODO",
        IND: "TODO"
    },
    dnsqueryResults: {
        EN: "DNS Query results",
        FR: "Résultats du DNS Query",
        SPN: "Resultados DNS Query",
        DE: "DNS-Ergebnisabfrage",
        IT: "Risultati delle query DNS",
        DA: "DNS-anmodningsresultater",
        AR: "نتائج الإستعلام عن DNS",
        PT: "resultados de DNS query",
        RO: "TODO",
        IND: "TODO"
    },
    testsRunning: {
        EN: "Please wait while tests are being executed",
        FR: "Veuillez attendre la fin de l'exécution des tests.",
        SPN: "Por favor, espere mientras se ejecutan las pruebas",
        DE: "Bitte warten Sie bis der Test abgeschlossen ist",
        IT: "Per favore attendi l’esecuzione dei test",
        DA: "Vent venligst, mens testene udføres",
        AR: "برجاء الإنتظار بينما يتم الإنتهاء من الفحص",
        PT: "por favor aguarde enquanto os testes sao executados",
        RO: "TODO",
        IND: "TODO"
    },
    packetsSent: {
        EN: "Packets sent: ",
        FR: "Paquets émis: ",
        SPN: "Paquetes enviados: ",
        DE: "Gesendete Pakete",
        IT: "Pacchetti inviati:",
        DA: "Pakker sendt: ",
        AR: "الحزم المرسلة:",
        PT: "paquetes enviados",
        RO: "TODO",
        IND: "TODO"
    },
    packetsReceived: {
        EN: "Packets received ",
        FR: "Paquets reçus: ",
        SPN: "Paquetes recibidos ",
        DE: "Empfangene Pakete",
        IT: "Pacchetti ricevuti",
        DA: "Pakker modtaget: ",
        AR: "الحزم المستلمة:",
        PT: "paquetes recebidos",
        RO: "TODO",
        IND: "TODO"
    },
    bytesReceived: {
        EN: "Bytes received",
        FR: "Octets reçus",
        SPN: "Bytes recibidos",
        DE: "Bytes empfangen",
        IT: "Byte ricevuti",
        DA: "Antal bytes modtaget",
        AR: "TODO",
        PT: "Bytes recebidos",
        RO: "Octeti primiti ",
        IND: "TODO"
    },
    bytesSent: {
        EN: "Bytes sent",
        FR: "Octets émis",
        SPN: "Bytes enviados",
        DE: "Bytes gesendet",
        IT: "Byte inviati",
        DA: "Antal bytes sendt",
        AR: "TODO",
        PT: "Bytes enviados",
        RO: "Octeti trimisi",
        IND: "TODO"
    },
    errorsReceived: {
        EN: "RX Errors",
        FR: "Erreurs RX",
        SPN: "Errores RX",
        DE: "RX-Fehler",
        IT: "Errori in ricezione",
        DA: "Fejl i modtagelse",
        AR: "TODO",
        PT: "erros RX",
        RO: "Erori RX",
        IND: "TODO"
    },
    errorsSent: {
        EN: "TX Errors",
        FR: "Erreurs TX",
        SPN: "Errores TX",
        DE: "TX-Fehler",
        IT: "Errori in invio",
        DA: "Fejl i afsendelse",
        AR: "TODO",
        PT: "erros TX",
        RO: "Erori TX",
        IND: "TODO"
    },
    dropsReceived: {
        EN: "RX Drops",
        FR: "Pertes RX",
        SPN: "Descartes RX",
        DE: "Verlorene RX-Pakete",
        IT: "Scartati in ricezione",
        DA: "Mistede modtagelser",
        AR: "TODO",
        PT: "RX Drops",
        RO: "Pierderi RX",
        IND: "TODO"
    },
    dropsSent: {
        EN: "TX Drops",
        FR: "Pertes TX",
        SPN: "Descartes TX",
        DE: "Verlorene TX-Pakete",
        IT: "Scartati in invio",
        DA: "Mistede afsendelser",
        AR: "TODO",
        PT: "TX Drops",
        RO: "Pierderi TX",
        IND: "TODO"
    },
    crcErrors: {
        EN: "CRC errors",
        FR: "Erreurs CRC",
        SPN: "Errores CRC",
        DE: "CRC-Fehler",
        IT: "Errori CRC",
        DA: "Fejl i CRC",
        AR: "TODO",
        PT: "erros CRC",
        RO: "Erori CRC",
        IND: "TODO"
    },
    hecErrors: {
        EN: "HEC errors",
        FR: "Erreurs HEC",
        SPN: "Errores HEC",
        DE: "HEC-Fehler",
        IT: "Errori HEC",
        DA: "Fejl i HEC",
        AR: "TODO",
        PT: "erros HEC",
        RO: "Erori HEC",
        IND: "TODO"
    },
    perCentLoss: {
        EN: "Loss of frames: ",
        FR: "Trames perdues: ",
        SPN: "Pérdida de tramas: ",
        DE: "Verlorene Pakete",
        IT: "Perdita di fotogrammi:",
        DA: "Rammetab: ",
        AR: "فقدان الإطارات",
        PT: "perda de frames:",
        RO: "TODO",
        IND: "TODO"
    },
    pingMin: {
        EN: "Round Trip - Minimum: ",
        FR: "Round Trip - Minimum: ",
        SPN: "Round Trip - Mínimo: ",
        DE: "Antwortzeit - Minimum:",
        IT: "Round Trip - minimo:",
        DA: "Roundtrip - minimum: ",
        AR: "دورة كاملة- حد أدني:",
        PT: "Round Trip - Minimo: ",
        RO: "TODO",
        IND: "TODO"
    },
    pingMax: {
        EN: "Round Trip - Maximum: ",
        FR: "Round Trip - Maximum: ",
        SPN: "Round Trip - Máximo: ",
        DE: "Antwortzeit - Maximum:",
        IT: "Round Trip - max:",
        DA: "Roundtrip - maksimum: ",
        AR: "دورة كاملة- حد أقصي:",
        PT: "Round Trip - Maximo: ",
        RO: "TODO",
        IND: "TODO"
    },
    pingAverage: {
        EN: "Round Trip - Average: ",
        FR: "Round Trip - Moyen: ",
        SPN: "Round Trip - Media: ",
        DE: "Antwortzeit - Durchschnitt:",
        IT: "Round Trip - Medio:",
        DA: "Roundtrip - gennemsnit: ",
        AR: "دورة كاملة- متوسط:",
        PT: "Round Trip - Media: ",
        RO: "TODO",
        IND: "TODO"
    },
    invalidDestination: {
        EN: "Invalid Destination",
        FR: "Destination Invalide",
        SPN: "Destino Inválido",
        DE: "Ungültige Zieladresse",
        IT: "Destinazione non valida",
        DA: "Ugyldig destination",
        AR: "جهة وصول غير صحيحة",
        PT: "destino invalido",
        RO: "TODO",
        IND: "TODO"
    },
    outOfRangePing: {
        EN: "Value must be between 1 and 10",
        FR: "La valeur doit être comprise entre 1 et 10",
        SPN: "El valor no está entre 1 y 10",
        DE: "Wert muss zwischen 1 und 10 liegen",
        IT: "Il valore deve essere compreso tra 1 e 10",
        DA: "Værdien skal være mellem 1 og 10",
        AR: "القيمة يجب أن تكون بين 1 و 10",
        PT: "valor debe ser entre 1 e 10",
        RO: "TODO",
        IND: "TODO"
    },
    outOfRangeTraceroute: {
        EN: "Value must be between 1 and 30",
        FR: "La valeur doit être comprise entre 1 et 30",
        SPN: "El valor no está entre 1 y 30",
        DE: "Wert muss zwischen 1 und 30 liegen",
        IT: "Il valore deve essere compreso tra 1 e 30",
        DA: "Værdien skal være mellem 1 og 30",
        AR: "القيمة يجب أن تكون بين 1 و 30",
        PT: "valor debe ser entre 1 e 30",
        RO: "TODO",
        IND: "TODO"
    },
    trUrlError: {
        EN: "Invalid URl",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "URL Inválida",
        RO: "TODO",
        IND: "TODO"
    },
    utilitiesSelect: {
        EN: "Here you can choose a tool for testing",
        FR: "Choisissez ici un outil pour les tests",
        SPN: "Aquí usted puede elegir la herramienta que desea probar",
        DE: "Hier können Sie eine Anwendung für weiterführende Tests auswählen",
        IT: "Qui puoi scegliere uno strumento per i test",
        DA: "Her kan du vælge et værktøj, som skal testes",
        AR: "هنا يمكنك إختيار أداة للفحص",
        PT: "aquí pode escolher uma ferramenta para teste",
        RO: "TODO",
        IND: "TODO"
    },
    utilitiesDestination: {
        EN: "Here you can type a domain or an IP address to test connectivity",
        FR: "Entrez un nom de domaine ou une adresse IP pour tester la connexion",
        SPN: "Aquí puede introducir un dominio o una dirección IP para probar la conectividad",
        DE: "Hier können Sie eine Internetseite oder eine IP-Adresse für den Verbindungstest eingeben",
        IT: "Qui puoi digitare un dominio o un indirizzo IP per verificare la connettività",
        DA: "Her kan du vælge en type af domæne eller en IP-adresse til at teste forbindelsen med",
        AR: "هنا يمكنك كتابة نطاق أو عنوان IP لإختبار الإتصال",
        PT: "aquí pode escrever um dominio ou um endereço de IP para testar a ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    utilitiesNumberOfPings: {
        EN: "Here you can specify the number of pings to test with. You can choose a number between 1 and 10",
        FR: "Ici vous pouvez spécifier le nombre de pings pour le test. Vous pouvez choisir une valeur entre 1 et 10",
        SPN: "Aquí puede especificar el número de pings para hacer los tests. Usted puede elegir un número del 1 al 10",
        DE: "Hier können Sie auswählen, wie viele Testpakete (Pings) gesendet werden. Sie können zwischen 1 und 10 Testpaketen auswählen",
        IT: "Qui puoi specificare il numero di Ping con i quali testare. Puoi scegliere un numero compreso tra 1 e 10",
        DA: "Her kan du specificere det antal af ping, som der skal testes med. Du kan vælge et tal mellem 1 og 10",
        AR: "هنا يمكنك تحديد عدد النبضات للإختبار بها. يمكنك اختيار رقم بين 1 و 10.",
        PT: "aquí pode especificar o numero de pings para testar. Pode escolher um numero entre 1 e 10",
        RO: "TODO",
        IND: "TODO"
    },
    utilitiesNumberOfHops: {
        EN: "Here you can specify the number of hops to test with. You can choose a number between 1 and 30",
        FR: "Ici vous pouvez spécifier le nombre de sauts pour le test. Vous pouvez choisir une valeur entre 1 et 30",
        SPN: "Aquí puede especificar el número de hops para hacer los tests. Usted puede elegir un número del 1 al 30",
        DE: "Hier können Sie auswählen, wie viele Zwischenstationen (Hops) angesteuert werden. Sie können zwischen 1 und 30 Zwischenstationen auswählen",
        IT: "Qui è possibile specificare il numero di Hop con i quali testare. Puoi scegliere un numero compreso tra 1 e 30",
        DA: "Her kan du specificere det antal hop, som der skal testes med. Du kan vælge et tal mellem 1 og 30",
        AR: "هنا يمكنك تحديد عدد الوصلات المباشرة للإختبار بها. يمكنك اختيار رقم بين 1 و 30.",
        PT: "aquí pode especificar o numero de hops para testar. Pode escolher um numero entre 1 e 30",
        RO: "TODO",
        IND: "TODO"
    },
    utilitiesTestStart: {
        EN: "You can click this button to start the test with the given parameters",
        FR: "Cliquer sur ce bouton pour démarrer le test avec les paramètres spécifiés",
        SPN: "Puede hacer clic en este botón para iniciar la prueba con los parámetros dados",
        DE: "Mit dieser Schaltfläche starten Sie den Verbindungstest mit den ausgewählten Parametern",
        IT: "Puoi fare clic su questo pulsante per avviare il test con i parametri indicati",
        DA: "Du kan klikke på denne knap for at starte testen med de angivne parametre.",
        AR: "يمكنك الضغط على هذا الزر لبدء الفحص بالمعاملات المعطاه",
        PT: "pode pressionar este botao para iniciar o teste com os parametros escolhidos",
        RO: "TODO",
        IND: "TODO"
    },
    chooseAUser: {
        EN: "Choose an user",
        FR: "Choisissez un utilisateur",
        SPN: "Selecciona un usuario",
        DE: "Benutzer auswählen",
        IT: "Scegli un utente",
        DA: "Vælg en bruger",
        AR: "اختر مستخدم",
        PT: "escolha um utilizador",
        RO: "TODO",
        IND: "TODO"
    },
    newPassword: {
        EN: "New Password",
        FR: "Nouveau mot de passe",
        SPN: "Nueva contraseña",
        DE: "Neues Kennwort",
        IT: "Nuova Password",
        DA: "Ny adgangskode",
        AR: "كلمة المرور الجديدة",
        PT: "nova password",
        RO: "TODO",
        IND: "TODO"
    },
    currentPassword: {
        EN: "Current Password",
        FR: "Mot de passe actuel",
        SPN: "Contraseña actual",
        DE: "Aktuelles Kennwort",
        IT: "Password Attuale",
        DA: "Aktuel adgangskode",
        AR: "كلمة المرور الحالية",
        PT: "password actual",
        RO: "TODO",
        IND: "TODO"
    },
    oldPassword: {
        EN: "Old Password",
        FR: "Ancien mot de passe",
        SPN: "Contraseña antigua",
        DE: "Altes Passwort",
        IT: "Vecchia password",
        DA: "Gammelt password",
        AR: "TODO",
        PT: "password antiga",
        RO: "Parola veche",
        IND: "TODO"
    },
    oldPasswordColon: {
        EN: "Current Password:",
        FR: "Mot de passe actuel:",
        SPN: "Contraseña actual:",
        DE: "Aktuelles Passwort:",
        IT: "Password Attuale",
        DA: "Aktuel adgangskode:",
        AR: "كلمة المرور الحالية:",
        PT: "password actual",
        RO: "TODO",
        IND: "TODO"
    },
    confirmNewPassword: {
        EN: "Confirm New Password",
        FR: "Confirmer le nouveau mot de passe",
        SPN: "Confirmar Nueva Contraseña",
        DE: "Kennwortbestätigung",
        IT: "Conferma nuova password",
        DA: "Bekræft den nye adgangskode",
        AR: "أكد كلمة المرور الجديدة",
        PT: "confirme a nova password",
        RO: "TODO",
        IND: "TODO"
    },
    confirmPassword: {
        EN: "Confirm Password",
        FR: "Confirmez le nouveau mot de passe",
        SPN: "Confirmar contraseña",
        DE: "Password bestätigen",
        IT: "Conferma password",
        DA: "Bekræft password",
        AR: "TODO",
        PT: "confirma a password",
        RO: "Confirmati Parola",
        IND: "TODO"
    },
    accessControlUserTip1: {
        EN: "Here you can type the full name.",
        FR: "Vous pouvez entrer ici le nom complet.",
        SPN: "Aqui puede escribir el nombre completo",
        DE: "Hier können Sie den vollen Namen eintragen",
        IT: "Qui puoi inserire il nome completo",
        DA: "Her kan du indtaste dit fulde navn.",
        AR: "TODO",
        PT: "aquí pode escrever o nome completo",
        RO: "Aici puteti completa numele intreg.",
        IND: "TODO"
    },
    accessControlUserTip2: {
        EN: "Here you choose which user you want to set up.",
        FR: "Choisissez ici l'utilisateur que vous souhaitez configurer.",
        SPN: "Aquí elegimos qué usuario que desea configurar.",
        DE: "Hier können Sie auswählen, welchen Nutzer Sie einrichten möchten.",
        IT: "Qui puoi scegliere quale utente impostare.",
        DA: "Her vælger du, hvilken bruger du vil sætte op.",
        AR: "هنا تختار أي مستخدم ترغب في تعيينه",
        PT: "aquí pode escolher o utilizador que quer configurar",
        RO: "TODO",
        IND: "TODO"
    },
    accessControlUserTip3: {
        EN: "Here you can set the username.",
        FR: "Vous pouvez entrer ici le nom utilisateur.",
        SPN: "Aqui puede ajustar el nombre de usuario",
        DE: "Hier legen Sie den Benutzernamen fest",
        IT: "Qui poui inserire lo username",
        DA: "Her kan du indtaste dit brugernavn.",
        AR: "TODO",
        PT: "aquí pode definir o nome de utilizador",
        RO: "Aici puteti seta numele de utilizator.",
        IND: "TODO"
    },
    accessControlUserTip4: {
        EN: "Here you type the old password.",
        FR: "Entrez ici l'ancien mot de passe.",
        SPN: "Aquí se escribe la contraseña vieja.",
        DE: "Hier geben Sie bitte das aktuell gültige Kennwort ein.",
        IT: "Qui digiti la vecchia password.",
        DA: "Her angiver du den gamle adgangskode.",
        AR: "هنا تكتب كلمة المرور القديمة",
        PT: "escreva aquí a password antiga",
        RO: "TODO",
        IND: "TODO"
    },
    accessControlUserTip5: {
        EN: "Here you can type the new password. You must confirm it in the field below.",
        FR: "Saisissez ici le nouveau mot de passe puis confirmez dans le champ ci-dessous.",
        SPN: "Aquí puede escribir la nueva contraseña. Debe confirmar en el campo de abajo.",
        DE: "Hier legen Sie das neue Kennwort fest. Wiederholen Sie das neue Kennwort im Feld 'Kennwortbestätigung'.",
        IT: "Qui puoi digitare la nuova password. Devi confermarla nel campo sottostante.",
        DA: "Her kan du angive den nye adgangskode. Du kan bekræfte den i feltet herunder.",
        AR: "هنا يمكنك كتابة كلمة المرور الجديدة. ينبغي أن تقوم بتأكيدها في الحقل أدناه.",
        PT: "aquí pode escrever a nova password. Debe confirmar no campo debaixo",
        RO: "TODO",
        IND: "TODO"
    },
    accessControlUserTip6: {
        EN: "Here you can confirm the password.",
        FR: "Vous pouvez confirmer ici le mot de passe.",
        SPN: "Aqui puede confirmar la contraseña",
        DE: "Hier bestätigen Sie das gewählte Passwort",
        IT: "Qui puoi confermare la password",
        DA: "Her kan du bekræfte passwordet.",
        AR: "TODO",
        PT: "aquí pode confirmar a password",
        RO: "Aici puteti confirma parola.",
        IND: "TODO"
    },
    passwordDoesntMatch: {
        EN: "Passwords don't match, please type again.",
        FR: "Les mots de passe ne correspondent pas, recommencez.",
        SPN: "Las contraseñas no coinciden, por favor escriba de nuevo.",
        DE: "Das Kennwort konnte nicht geändert werden, da das neue Kennwort nicht mit der Kennwortbestätigung übereinstimmt. Bitte erneut eingeben.",
        IT: "Le password non corrisponde, digitarla nuovamente.",
        DA: "Adgangskoderne stemmer ikke overens, indtast dem venligst igen.",
        AR: "كلمة المرور غير متطابقة. يرجي إعادة الإدخال.",
        PT: "as passwords nao coincidem, por favor escreva novamente",
        RO: "TODO",
        IND: "TODO"
    },
    fieldRequired: {
        EN: "Required field",
        FR: "Champ obligatoire",
        SPN: "Campo obligatorio",
        DE: "Pflichtfeld",
        IT: "Campo obbligatorio",
        DA: "Obligatorisk felt",
        AR: "الحقل مطلوب",
        PT: "campo obrigatorio",
        RO: "TODO",
        IND: "TODO"
    },
    allFieldRequired: {
        EN: "All fields are required",
        FR: "Champ obligatoire",
        SPN: "Campo obligatorio",
        DE: "Pflichtfeld",
        IT: "Campo obbligatorio",
        DA: "Obligatorisk felt",
        AR: "الحقل مطلوب",
        PT: "campo obrigatorio",
        RO: "TODO",
        IND: "TODO"
    },
    fieldAtLeast3: {
        EN: "This field needs to have at least 3 characters.",
        FR: "Ce champ doit avoir au moins 3 caractères.",
        SPN: "Este campo debe tener al menos 3 caracteres.",
        DE: "Dieses Feld muss aus mindestens 3 Zeichen (Ziffern oder Buchstaben) bestehen.",
        IT: "Questo campo deve avere almeno 3 caratteri.",
        DA: "Dette felt skal have mindst 3 karakterer.",
        AR: "هذا الحقل يجب أن يحتوي عل ثلاث حروف علي الأقل",
        PT: "este campo debe ter como minimo 3 caracteres",
        RO: "TODO",
        IND: "TODO"
    },
    wrongOldPassword: {
        EN: "Wrong password",
        FR: "Mot de passe incorrect",
        SPN: "Contraseña incorrecta",
        DE: "Kennwort ungültig",
        IT: "Password errata",
        DA: "Forkert adgangskode",
        AR: "كلمة مرور خاطئة",
        PT: "passoword errada",
        RO: "TODO",
        IND: "TODO"
    },
    invalidVlanId: {
        EN: "Invalid VLAN Id",
        FR: "Incorrect VLAN Id",
        SPN: "VLAN ID incorrecto",
        DE: "Ungültige VLAN Id",
        IT: "VLAN ID non valido",
        DA: "Ugyldigt VLAN-id",
        AR: "معرف VLAN غير صحيح",
        PT: "VLAN ID invalido",
        RO: "TODO",
        IND: "TODO"
    },
    invalidMRU: {
        EN: "MPU must be greater or equal 64",
        FR: "Le MPU doit être supérieur ou égal à 64",
        SPN: "MPU debe ser mayor o igual 64",
        DE: "MPU muss grösser oder gleich 64 sein",
        IT: "MPU deve essere maggiore o uguale a 64",
        DA: "MPU skal være større eller lig med 64",
        AR: "وحدة المايكروبروسيسور يجب ان تكون أعلى من أو تساوي 64",
        PT: "MPU debe ser igual ou maior a 64",
        RO: "TODO",
        IND: "TODO"
    },
    invalidAddress: {
        EN: "Invalid address",
        FR: "Adresse non valide",
        SPN: "Direccion invalida",
        DE: "Ungültige Adresse",
        IT: "Indirizzo non valido",
        DA: "Ugyldig adresse",
        AR: "TODO",
        PT: "endereço invalido",
        RO: "Adresa incorecta",
        IND: "TODO"
    },
    invalidUsername: {
        EN: "Invalid username",
        FR: "Nom d'utilisateur invalide",
        SPN: "Nombre de usuario inválido",
        DE: "Ungültiger Benutzername",
        IT: "Nome utente non valido",
        DA: "Ugyldigt brugernavn",
        AR: "إسم مستخدم غير صحيح",
        PT: "username invalido",
        RO: "TODO",
        IND: "TODO"
    },
    invalidHostname: {
        EN: "Invalid hostname",
        FR: "Nom d'hôte invalide",
        SPN: "Nombre de host inválido",
        DE: "Ungültiger Host-Name",
        IT: "Hostname non valido",
        DA: "Ugyldigt hostnavn",
        AR: "إسم مضيف غير صحيح",
        PT: "hostname invalido",
        RO: "TODO",
        IND: "TODO"
    },
    invalidProvider: {
        EN: "Select a provider",
        FR: "Sélectionner un fournisseur",
        SPN: "Seleccionar un proveedor",
        DE: "Wählen Sie einen Provider aus",
        IT: "Seleziona un provider",
        DA: "Vælg en udbyder",
        AR: "حدِد مقدِّمَ خدمة",
        PT: "Selecione um fornecedor",
        RO: "TODO",
        IND: "TODO"
    },
    ddnsTip1: {
        EN: "Here you enable or disable the dynamic DNS configuration.",
        FR: "Ici vous activez ou désactivez la configuration DNS dynamique.",
        SPN: "Allí puede activar o desactivar la configuración de DNS dinámico.",
        DE: "Hier können Sie die dynamische DNS-Konfiguration ein- bzw. ausschalten.",
        IT: "Qui puoi attivare o disattivare la configurazione DNS dinamica.",
        DA: "Her kan du aktivere eller deaktivere den dynamiske DNS-konfiguration.",
        AR: "هنا تقوم بتمكين أو تعطيل تهيئة DNS الديناميكية.",
        PT: "aquí pode activar ou desactivar a configuraçao dinamica de DNS",
        RO: "TODO",
        IND: "TODO"
    },
    ddnsTip2: {
        EN: "Here you choose among the providers list.",
        FR: "Ici, vous choisissez parmi la liste des fournisseurs.",
        SPN: "Esta opción permite elegir entre la lista de proveedores.",
        DE: "Hier können Sie einen Internetprovider auswählen.",
        IT: "Qui scegli tra l’elenco dei provider.",
        DA: "Her kan du vælge fra listen over udbydere.",
        AR: "هنا تقوم بالإختيار بين قائمة المزودين.",
        PT: "aquí pode escolher entre a lista de fornecedores",
        RO: "TODO",
        IND: "TODO"
    },
    ddnsTip3: {
        EN: "Here you type the username you want to use.",
        FR: "Entrez ici le nom d'utilisateur.",
        SPN: "Aquí se escribe el nombre de usuario que desee utilizar.",
        DE: "Hier geben Sie den Benutzernamen ein, den Sie verwenden möchten.",
        IT: "Qui digiti il nome utente che desideri utilizzare.",
        DA: "Her kan du indtaste det brugernavn, som du vil anvende.",
        AR: "هنا تكتب إسم المستخدم الذي تريد إستخدامه.",
        PT: "aquí pode escrever o nome de utilizador que quer usar",
        RO: "TODO",
        IND: "TODO"
    },
    ddnsTip4: {
        EN: "Here you type the password you want to use.",
        FR: "Ici vous entrez le mot de passe.",
        SPN: "Aquí se escribe la contraseña que desea utilizar.",
        DE: "Hier geben Sie das Passwort ein, das Sie verwenden möchten.",
        IT: "Qui digiti la password che desideri utilizzare.",
        DA: "Her kan du indtaste den adgangskode, som du vil anvende.",
        AR: "هنا تكتب كلمة المرور التي تود إستخدامها.",
        PT: "aquí pode escrever a password que quer usar",
        RO: "TODO",
        IND: "TODO"
    },
    ddnsTip5: {
        EN: "Here you type the host name you want to use.",
        FR: "Ici vous tapez le nom d'hôte que vous souhaitez utiliser.",
        SPN: "Aquí se escribe el nombre de host que desea utilizar.",
        DE: "Hier geben Sie den Hoste-Namen ein, den Sie verwenden möchten.",
        IT: "Qui digiti il nome host che desideri utilizzare.",
        DA: "Her kan du indtaste det hostnavn, som du vil anvende.",
        AR: "هنا تكتب إسم المضيف الذي تود إستخدامه.",
        PT: "aquí pode escrever o host name que quer usar",
        RO: "TODO",
        IND: "TODO"
    },
    ddnsTip6: {
        EN: "Here you set which type of authentication you want to use.",
        FR: "Ici, vous définissez le type d'authentification que vous souhaitez utiliser.",
        SPN: "Aquí se ajusta el tipo de autenticación que desea utilizar.",
        DE: "Hier wählen Sie aus, welche Authentifizierungsmethode Sie verwenden möchten.",
        IT: "Qui puoi impostare il tipo di autenticazione che desideri utilizzare.",
        DA: "Her kan du indstille den godkendelsestype, som du vil anvende.",
        AR: "هنا تقوم بتحديد أي نوع من التحقيق تود إستخدامه.",
        PT: "aquí pode escolher que tipo de autenticaçao quer usar",
        RO: "TODO",
        IND: "TODO"
    },
    ddnsTip7: {
        EN: "Here you type the server URL.",
        FR: "Ici vous entrez l'URL du serveur.",
        SPN: "Aquí se escribe la URL del servidor.",
        DE: "Hier geben Sie die Server-Adresse ein.",
        IT: "Qui digiti l'URL del server.",
        DA: "Her angiver du serverens URL.",
        AR: "هنا تكتب الـ URL الخاص بالخادم.",
        PT: "aquí pode escrever o URL de servidor",
        RO: "TODO",
        IND: "TODO"
    },
    ddnsTip8: {
        EN: "Here you type the server port.",
        FR: "Ici vous entrez le port du serveur.",
        SPN: "Aquí se escribe la puerta del servidor.",
        DE: "Hier geben Sie den Server-Port ein.",
        IT: "Qui digiti la porta del server.",
        DA: "Her angiver du serverporten.",
        AR: "هنا تكتب مدخل الخادم.",
        PT: "aquí pode escrever a porta de servidor",
        RO: "TODO",
        IND: "TODO"
    },
    ddnsTip9: {
        EN: "Here you type the request URL.",
        FR: "Ici vous entrez l'URL de requête.",
        SPN: "Aquí escribe el URL de solicitud.",
        DE: "Hier geben Sie die Request-Adresse ein.",
        IT: "Qui digiti l'URL richiesto.",
        DA: "Her angiver du anmodningens URL.",
        AR: "هنا تكتب URL الطلب.",
        PT: "aquí pode escrever o pedido de URl",
        RO: "TODO",
        IND: "TODO"
    },
    ddnsTip10: {
        EN: "Here you type the update interval, in seconds.",
        FR: "Ici vous entrez l'intervalle de mise à jour en secondes.",
        SPN: "Aquí se escribe el intervalo de actualización, en cuestión de segundos.",
        DE: "Hier geben Sie das Aktualisierungsintervall in Sekunden ein.",
        IT: "Qui digiti l'intervallo di aggiornamento, in secondi.",
        DA: "Her angiver du intervallet for opdatering, i sekunder.",
        AR: "هنا تكتب الفاصل الزمني للتحديث بالثواني.",
        PT: "aquí pode escrever o intervalo de update, em segundos",
        RO: "TODO",
        IND: "TODO"
    },
    ddnsTip11: {
        EN: "Here you type the retry interval, in seconds.",
        FR: "Ici vous entrez l'intervalle de relance en secondes.",
        SPN: "Aquí se escribe el intervalo de reintento, en cuestión de segundos.",
        DE: "Hier geben Sie das Intervall in Sekunden ein, indem ein neuer Verbindungsversuch gestartet wird.",
        IT: "Qui digiti l'intervallo di tentativi, in secondi.",
        DA: "Her angiver du intervallet for genforsøg, i sekunder.",
        AR: "هنا تكتب الفاصل الزمني لإعادة المحاولة بالثواني.",
        PT: "aquí pode escrever o intervalo de tentativa, em segundos",
        RO: "TODO",
        IND: "TODO"
    },
    ddnsTip12: {
        EN: "Here you type the maximum amount of retry attempts.",
        FR: "Ici vous entrez le nombre maximal de tentatives.",
        SPN: "Aquí se escribe la cantidad máxima de reintentos.",
        DE: "Hier geben Sie ein, wie oft der Verbindungsversuch maximal erfolgen soll.",
        IT: "Qui digiti il numero massimo di tentativi.",
        DA: "Her angiver du det maksimale antal af genforsøg.",
        AR: "هنا تكتب الكم الأقصي من محاولات إعادة المحاولة. ",
        PT: "aquí pode escrever a maxima quantidade de tentativas",
        RO: "TODO",
        IND: "TODO"
    },
    remoteManagement: {
        EN: "Remote Management",
        FR: "Contrôle à Distance",
        SPN: "Gestión Remota",
        DE: "Remote Management",
        IT: "Gestione remota",
        DA: "Remote Management",
        AR: "إدارة بعيدة",
        PT: "gestao remota",
        RO: "TODO",
        IND: "TODO"
    },
    remoteManagementTitle: {
        EN: "Remote Management",
        FR: "Contrôle à Distance",
        SPN: "Gestión Remota",
        DE: "Fernzugriff",
        IT: "Gestione remota",
        DA: "Fjernstyring",
        AR: "TODO",
        PT: "gestao remota",
        RO: "Management la distanta",
        IND: "TODO"
    },
    remoteGuiAccess: {
        EN: "Remote GUI Access User",
        FR: "Contrôle à distance de l'interface graphique utilisateur",
        SPN: "El acceso GUI de usuario remoto",
        DE: "Remote-Zugriff auf die Benutzeroberfläche",
        IT: "Accesso remoto GUI utente",
        DA: "Bruger for GUI fjernadgang",
        AR: "مستخدم GUI الدخول عن بعد",
        PT: "acesso remoto á GUI de utilizador",
        RO: "TODO",
        IND: "TODO"
    },
    remoteTelnetAccess: {
        EN: "Telnet remote access user",
        FR: "Utilisateur pour accès distant Telnet",
        SPN: "El acceso Telnet de usuario remoto",
        DE: "Remote-Zugriff per Telnet",
        IT: "Accesso remoto Telnet utente",
        DA: "Bruger for Telnet fjernadgang",
        AR: "مستخدم تلينت الدخول عن بعد",
        PT: "acesso remoto á telnet de utilizador",
        RO: "TODO",
        IND: "TODO"
    },
    remoteSshAccess: {
        EN: "SSH remote access user",
        FR: "Utilisateur pour accès distant SSH",
        SPN: "El acceso SSH de usuario remoto",
        DE: "Remote-Zugriff per SSH",
        IT: "Accesso remoto SSH utente",
        DA: "Bruger for SSH fjernadgang",
        AR: "مستخدم SSH للدخول عن بعد",
        PT: "acesso remoto á SSH de utilizador",
        RO: "TODO",
        IND: "TODO"
    },
    remoteIpList: {
        EN: "Remote Management Address (IPv4):",
        FR: "Adresse pour contrôle à distance (IPv4):",
        SPN: "Dirección de gestión remota (IPv4):",
        DE: "Remote Management Adresse (IPv4)",
        IT: "Indirizzo di gestione remota (IPv4):",
        DA: "Remote management adresse (IPv4):",
        AR: "عنوان الإدارة عن بعد (IPv4):",
        PT: "endereço de gestao remota (IPv4):",
        RO: "TODO",
        IND: "TODO"
    },
    remoteIpListIpv6: {
        EN: "Remote Management Address (IPv6):",
        FR: "Adresse pour contrôle à distance (IPv6):",
        SPN: "Dirección de gestión remota (IPv6):",
        DE: "Remote Management Adresse (IPv6)",
        IT: "Indirizzo di gestione remota (IPv6):",
        DA: "Remote management adresse (IPv6):",
        AR: "عنوان الإدارة عن بعد (IPv6):",
        PT: "endereço de gestao remota (IPv6):",
        RO: "TODO",
        IND: "TODO"
    },
    remoteVoipAddress: {
        EN: "VOIP Address:",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    trustedIp: {
        EN: "Trusted IP for",
        FR: "IP de confiance pour",
        SPN: "IP confiable para",
        DE: "Zugriff erlauben für",
        IT: "IP fidato per",
        DA: "Pålidelig IP for",
        AR: "IP موثوق لـ",
        PT: "IP de confirança para",
        RO: "TODO",
        IND: "TODO"
    },
    trustedIpDesc: {
        EN: "Only computers with following addresses or from following networks will have access to remote services. If no address has been specified, any computer on the Internet can acces the remote services you enabled, it may cause a serious security risk.",
        FR: "Seuls les ordinateurs munis des adresses suivantes ou appartenant aux réseaux suivants auront accès aux services d'accès distant. Si aucune adresse n'est spécifiée, n'importe quel ordinateur sur Internet pourra accéder aux services à distance que vous avez activés, ceci peut provoquer un grave risque de sécurité.",
        SPN: "Sólo los equipos con direcciones siguientes o de redes siguientes tendrán acceso a servicios remotos. Si se ha especificado ninguna dirección, ningún equipo en Internet puede acces los servicios a distancia ha habilitado, puede causar un riesgo de seguridad.",
        DE: "Nur Computer, die folgende IP-Adresse oder aus dem folgenden Netzwerk zugreifen. Achtung: Wenn Sie keine Adresse spezifizieren kann <bold>jeder</bold> Computer aus dem Internet auf die von Ihnen ausgewählten Diesnte zugreifen. Dies birgt ein sehr hohes Sicherheitsrisiko!",
        IT: "Solo i computer con i seguenti indirizzi o da seguenti reti avranno accesso ai servizi remoti. Se non è stato specificato nessun indirizzo, qualsiasi computer su Internet può accedere ai servizi remoti abilitati, mettendo gravemente a rischio la sicurezza.",
        DA: "Kun computere med de følgende adresser eller fra de følgende netværk vil have adgang til fjerntjenester. Hvis ingen adresse er angivet, kan enhver computer på internettet få adgang til de fjerntjenester, som du har aktiveret, og dette kan udgøre en alvorlig sikkerhedsrisiko.",
        AR: "فقط أجهزة الكمبيوتر ذات العناوين التالية أو من الشبكات التالية سيكون لها إمكانية الوصول إلى الخدمات عن بعد. إذا لم يتم تحديد عنوان ما، أي جهاز كمبيوتر يمكنه الولوج إلى الخدمات عن بعد التي قمت بتفعيلها، هذا من شأنه أن يسبب خطراً أمنياً حقيقياً. ",
        PT: "Somente computadores com os seguintes endereços ou desde as seguintes reder terao acesso ao serviço remoto. Se nao for especificado um endereço, nenhum computador na internet terá acesso aos serviços remotos que voce autorizou, poderia causar um grave risco de segurança.",
        RO: "TODO",
        IND: "TODO"
    },
    trustedIpDesc1: {
        EN: "When WAN option is selected above, only computers whose address is listed below have access to remote services. If no address is entered, any computer on the Internet can access the remote services you enabled, it may cause a security risk.",
        FR: "Lorsque l'option WAN est sélectionnée ci-dessus, seuls les ordinateurs dont l'adresse est listée ci-dessous ont accès aux services d'accès distant. Si aucune adresse n'est entrée, n'importe quel ordinateur sur Internet pourra accéder aux services à distance que vous avez activé, ceci peut provoquer un grave risque de sécurité.",
        SPN: "Cuando la opción WAN fue seleccionado anteriormente, sólo los equipos con las siguientes direcciones o de las redes siguientes tendrán acceso a servicios remotos. Si se ha especificado ninguna dirección, ningún equipo en Internet puede acceder a los servicios a distancia ha habilitado, puede causar un riesgo de seguridad.",
        DE: "Wenn die Option 'WAN' ausgewählt wurde, haben nur Computer mit folgender IP-Adresse oder aus dem folgenden Netzwerk Zugriff. Achtung: Wenn Sie keine Adresse spezifizieren kann <bold>jeder</bold> Computer aus dem Internet auf die von Ihnen ausgewählten Diesnte zugreifen. Dies birgt ein sehr hohes Sicherheitsrisiko!",
        IT: "Quando l'opzione WAN è stata selezionata in precedenza, solo i computer con i seguenti indirizzi o da seguenti reti avranno accesso ai servizi remoti. Se non è stato specificato nessun indirizzo, qualsiasi computer su Internet può accedere ai servizi remoti abilitati, mettendo gravemente a rischio la sicurezza.",
        DA: "Når WAN-valgmuligheden er valgt ovenfor, kan kun computere med de følgende adresser eller fra de følgende netværk få adgang til fjerntjenester. Hvis ingen adresse er angivet, kan enhver computer på internettet få adgang til de fjerntjenester, som du har aktiveret, og dette kan udgøre en sikkerhedsrisiko.",
        AR: "عندما تم إختيار الشبكة واسعة النطاق أعلاه، فقط أجهزة الكمبيوتر ذات العناوين التالية أو من الشبكات التالية سيكون لها إمكانية الوصول للخدمات عن بعد. إذا لم يتم تحديد عنوان ما، أي جهاز كمبيوتر يمكنه الولوج إلى الخدمات عن بعد التي قمت بتفعيلها، هذا من شأنه أن يسبب خطراً أمنياً.",
        PT: "Quando a opçao WAN esta selecionada, comente computadores que tenham o endereço nesta lista terao acesso remoto. Se nao tiver endereço, nenhum computador na internet poderá aceder remotamente aos serviços que voce autorizou, pode causar um risco de segurança.",
        RO: "TODO",
        IND: "TODO"
    },
    trustedIpDesc2: {
        EN: "Use format as in following example for network addresses : 200.123.56.0/24",
        FR: "Utilisez la syntaxe comme dans l'exemple suivant pour les adresses réseaux: 200.123.56.0/24",
        SPN: "Utilice la sintaxis siguiente para redes: 200.123.56.0/24",
        DE: "Wählen Sie folgende Schreibweise für Netzwerkadressen: 200.123.56.0/24",
        IT: "Usa il formato del seguente esempio per gli indirizzi di rete: 200.123.56.0/24",
        DA: "Brug formatet i følgende eksempel for netværksadresser: 200.123.56.0/24",
        AR: "استخدم الصياغة التالية للشبكات: 200.123.56.0/24",
        PT: "Use este exemplo de formato para os endereços de rede: 200.123.56.0/24",
        RO: "TODO",
        IND: "TODO"
    },
    invalidPort: {
        EN: "Invalid port",
        FR: "Port incorrect",
        SPN: "Puerta no válida",
        DE: "Ungültiger Port",
        IT: "Port non valido",
        DA: "Ugyldig port",
        AR: "مدخل غير صحيح",
        PT: "porta invalida",
        RO: "TODO",
        IND: "TODO"
    },
    portConflict: {
        EN: "Port conflict",
        FR: "Conflit de port",
        SPN: "Conflicto de puertos",
        DE: "Port-Konflikt",
        IT: "Conflitto di porte",
        DA: "Portkonflikt",
        AR: "تعارض المدخل",
        PT: "conflito de portas",
        RO: "TODO",
        IND: "TODO"
    },
    addIPAddressorNetwork: {
        EN: "Add IP Address or Network",
        FR: "Ajouter une Adresse IP ou de réseau",
        SPN: "Añadir la Dirección IP o Network",
        DE: "IP-Adresse oder Netzwerkadresse hinzufügen",
        IT: "Aggiungi l’Indirizzo IP o la rete",
        DA: "Tilføj IP-adresser eller netværk",
        AR: "أضف عنوان IP أو شبكة",
        PT: "adicionar endereço IP ou rede",
        RO: "TODO",
        IND: "TODO"
    },
    confirmRemoveGenericTitle: {
        EN: "Remove this item?",
        FR: "Supprimer cet élément?",
        SPN: "¿Eliminar este elemento?",
        DE: "Diesen Eintrag löschen?",
        IT: "Rimuovi questo elemento?",
        DA: "Vil du fjerne dette element?",
        AR: "إزالة هذا العنصر ؟",
        PT: "eliminar este item?",
        RO: "TODO",
        IND: "TODO"
    },
    confirmRemoveGenericTip: {
        EN: "The item will be removed permanently after you click on 'Apply' button.",
        FR: "Le élément sera définitivement supprimé après avoir cliqué sur le bouton 'Appliquer'.",
        SPN: "El elemento se eliminará de forma permanente después de hacer clic en el botón 'Aplicar'.",
        DE: "Dieser Eintrag wird dauerhaft gelöscht, wenn Sie auf die Schaltfläche 'Annehmen' klicken.",
        IT: "L'elemento verrà rimosso definitivamente dopo aver cliccato sul pulsante 'Applica'.",
        DA: "Dette element vil blive fjernet permanent, når du klikker på knappen 'Anvend'.",
        AR: "سيتم إزالة العنصر بشكل دائم بعد الضغط على زر 'تطبيق'.",
        PT: "o item será removido definitivamente depois de pressionar 'apply''",
        RO: "TODO",
        IND: "TODO"
    },
    confirmRemoveAllTitle: {
        EN: "Do you want to remove all items?",
        FR: "Voulez-vous supprimer tout les éléments?",
        SPN: "¿Quieres eliminar todos los elemento?",
        DE: "Alle Einträge löschen?",
        IT: "Vuoi rimuovere tutti gli elementi?",
        DA: "Vil du fjerne alle elementer?",
        AR: "هل تريد إزالة كل العناصر؟",
        PT: "quer remover todos os items?",
        RO: "TODO",
        IND: "TODO"
    },
    confirmRemoveAllTip: {
        EN: "The items will be removed permanently after you click on 'Apply' button.",
        FR: "Les éléments seront définitivement supprimé après avoir cliqué sur le bouton 'Appliquer'.",
        SPN: "Los elementos se eliminarán de forma permanente después de hacer clic en el botón 'Aplicar'.",
        DE: "Alle Einträge werden dauerhaft gelöscht, wenn Sie auf die Schaltfläche 'Annehmen' klicken.",
        IT: "Gli articoli saranno rimossi definitivamente dopo aver cliccato sul pulsante 'Applica'.",
        DA: "Disse elementer vil blive fjernet permanent, når du klikker på knappen 'Anvend'.",
        AR: "سيتم إزالة العنصر بشكل دائم بعد الضغط على زر 'تطبيق'.",
        PT: "so items serao removidos definitivamente depois de pressionar 'apply''",
        RO: "TODO",
        IND: "TODO"
    },
    confirmRemoveMessageTitle: {
        EN: "Do you want to remove this message?",
        FR: "Voulez-vous effacer ce message?",
        SPN: "Desea eliminar este mensaje?",
        DE: "Möchten Sie diese Nachricht löschen?",
        IT: "Vuoi veramente cancellare questo messaggio?",
        DA: "Ønsker du at fjerne denne besked?",
        AR: "TODO",
        PT: "quer remover esta mensagem?",
        RO: "Doriti stergerea mesajului?",
        IND: "TODO"
    },
    confirmRemoveTitle: {
        EN: "Do you want to remove this rule?",
        FR: "Voulez-vous supprimer cette règle?",
        SPN: "¿Deseas eliminar esta regla?",
        DE: "Regel löschen?",
        IT: "Vuoi rimuovere questa regola?",
        DA: "Vil du fjerne denne regel?",
        AR: "هل تريد إزالة هذة القاعدة؟",
        PT: "quer remover esta regra?",
        RO: "TODO",
        IND: "TODO"
    },
    confirmRemoveTip: {
        EN: "This rule will be removed permanently.",
        FR: "Cette règle sera définitivement supprimé.",
        SPN: "Esta regla se eliminará de forma permanente.",
        DE: "Diese Regel wird dauerhaft gelöscht.",
        IT: "Questa regola verrà rimossa definitivamente.",
        DA: "Denne regel vil blive fjernet permanent.",
        AR: "سوف يتم إزالة هذة القاعدة بشكل دائم.",
        PT: "esta regra será removida permanentemente",
        RO: "TODO",
        IND: "TODO"
    },
    confirmRemoveMessage: {
        EN: "This message will be removed permanently.",
        FR: "Ce message sera effacé définitivement.",
        SPN: "Este mensaje ser  eliminado de forma permanente",
        DE: "Diese Nachricht wird endgültig gelöscht.",
        IT: "Questo messaggio sarà cancellato definitivamente",
        DA: "Denne besked fjernes permanent.",
        AR: "TODO",
        PT: "esta mensagem será removida permanentemente",
        RO: "Acest mesaj va fi sters definitiv.",
        IND: "TODO"
    },
    addRulessManually: {
        EN: "Add Rules Manually",
        FR: "Ajouter des règles manuellement",
        SPN: "Añadir Reglas Manualmente",
        DE: "Regel manuell hinzufügen",
        IT: "Aggiungere regole manualmente",
        DA: "Tilføj regler manuelt",
        AR: "إضافة القواعد يدوياً",
        PT: "adicionar regras manualmente",
        RO: "TODO",
        IND: "TODO"
    },
    dashObservation: {
        EN: NaN,
        FR: NaN,
        SPN: NaN,
        DE: NaN,
        IT: NaN,
        DA: NaN,
        AR: NaN,
        PT: NaN,
        RO: "TODO",
        IND: "TODO"
    },
    customServiceName: {
        EN: "Custom service name",
        FR: "Nom du service personnalisé",
        SPN: "Nombre del servicio personalizado",
        DE: "Benutzerdefinierter dienst",
        IT: "Nome del servizio personalizzato",
        DA: "Standardtjenestenavn",
        AR: "إسم خدمة مخصصة",
        PT: "nome do serviço personalizado",
        RO: "TODO",
        IND: "TODO"
    },
    externalHost: {
        EN: "External host",
        FR: "Hôte externe",
        SPN: "Host Externo",
        DE: "Externer Host",
        IT: "Host esterno",
        DA: "Ekstern host",
        AR: "مضيف خارجي",
        PT: "host externo",
        RO: "TODO",
        IND: "TODO"
    },
    internalHost: {
        EN: "Internal host",
        FR: "Hôte Interne",
        SPN: "Host Interno",
        DE: "Interner Host",
        IT: "Host interno",
        DA: "Intern host",
        AR: "مضيف داخلي",
        PT: "host interno",
        RO: "TODO",
        IND: "TODO"
    },
    externalPort: {
        EN: "External Port",
        FR: "Port Externe",
        SPN: "Porta Externa",
        DE: "Externer Port",
        IT: "Porta esterna",
        DA: "Ekstern port",
        AR: "مدخل خارجي",
        PT: "porta externa",
        RO: "TODO",
        IND: "TODO"
    },
    externalPortRange: {
        EN: "External Port Range",
        FR: "TODO",
        SPN: "Rango de puerto externo",
        DE: "Externer Port-Bereich",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Interval porturi extern",
        IND: "TODO"
    },
    internalPort: {
        EN: "Internal Port",
        FR: "Port Interne",
        SPN: "Porta Interna",
        DE: "Interner Port",
        IT: "Porta interna",
        DA: "Intern port",
        AR: "مدخل داخلي",
        PT: "porta interna",
        RO: "TODO",
        IND: "TODO"
    },
    upnpRule: {
        EN: "UPnP Rule",
        FR: "Règle UPNP",
        SPN: "Regla UPnP",
        DE: "UPnP-Regel",
        IT: "Regola UPnP",
        DA: "UPnP-regel",
        AR: "قاعدة UPnP",
        PT: "regra UPnP",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip1: {
        EN: "You can select one of the available services here and type the hosts it will affect. ",
        FR: "Vous pouvez sélectionner l'un des services disponible ici et entrez la machine hôte.",
        SPN: "Puede seleccionar uno de los servicios disponibles aquí y escribe los ejércitos lo afectará.",
        DE: "Hier können Sie den gewünschten Dienst auswählen sowie den Host, auf den diese Regel angewendet wird.",
        IT: "Qui puoi selezionare uno dei servizi disponibili digitare gli host interessati.",
        DA: "Du kan vælge en af de tilgængelige tjenester her og angive de hosts, som dette vil påvirke. ",
        AR: "يمكنك إختيار واحدة من الخدمات المتاحة هنا واكتب المضيفين الذين سوف تؤثر عليهم.",
        PT: "pode seleccionar um dos serviços disponiveis aquí e escrever quais os hosts que serao afectados",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip2: {
        EN: "You can choose the protocols and ports here.",
        FR: "Vous pouvez choisir les protocoles et les ports ici.",
        SPN: "Usted puede elegir los protocolos y puertos aquí.",
        DE: "Hier können Sie das verwendete Protokoll und die entsprechenden Ports auswählen.",
        IT: "Qui puoi selezionare i protocolli e le porte.",
        DA: "Du kan vælge protokollerne og portene her.",
        AR: "يمكنك إختيار البرتوكولات والمداخل هنا.",
        PT: "pode escolher os protocolos e portas aquí",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip3: {
        EN: "Add it here to include the new rule in the preview list.",
        FR: "Ajoutez-le ici pour inclure la nouvelle règle dans la liste de prévisualisation.",
        SPN: "Añádelo aquí para incluir la nueva regla en la lista de vista previa.",
        DE: "Hier hinzufügen, um die neue Regel in die Vorschauliste zu übernehmen.",
        IT: "Aggiungilo qui per includere la nuova regola nell’elenco di anteprima.",
        DA: "Tilføj dem her for at inkludere den nye regel i listen over previews.",
        AR: "أضفها هنا لتشمل القاعدة الجديدة في قائمة المعاينة.",
        PT: "adicione aquí para incluir uma nova regra na lista previa",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip4: {
        EN: "You can store your changes in the preview list by clicking the 'Update' button.",
        FR: "Vous pouvez enregistrer vos modifications dans la liste de prévisualisation en cliquant sur le bouton 'Mettre à jour'.",
        SPN: "Puede almacenar sus cambios en la lista de vista previa haciendo clic en el botón 'Actualizar'.",
        DE: "Sie können die Änderungen an Ihrer Vorschauliste speichern, indem Sie auf die Schaltfläche 'Aktualisieren' klicken.",
        IT: "Puoi memorizzare le modifiche nell’elenco di anteprima facendo clic sul pulsante 'Aggiorna'.",
        DA: "Du kan gemme ændringerne i listen over previews ved at klikke på knappen 'Opdatér'.",
        AR: "يمكنك حفظ التغييرات في قائمة المعاينة من خلال الضغط على زر 'تحديث'",
        PT: "pode guardar as alteraçoes na lista previa ao pressionar o botao 'update'.'",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip5: {
        EN: "Click on 'Apply' button to save the changes.",
        FR: "Cliquez sur le bouton 'Appliquer' pour enregistrer les modifications.",
        SPN: "Haga clic en el botón 'Aplicar' para guardar los cambios.",
        DE: "Klicken Sie auf die Schaltfläche 'Anwenden', um die Änderungen zu speichern.",
        IT: "Clicca sul pulsante 'Applica' per salvare le modifiche.",
        DA: "Klik på knappen 'Anvend' for at gemme ændringerne.",
        AR: "اضغط على زر 'تطبيق' لحفظ التغييرات.",
        PT: "pressione o botao 'apply' para guardar as alteraçoes'",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip6: {
        EN: "Here you must add a name for the service.",
        FR: "Ajoutez ici un nom de service.",
        SPN: "Aquí hay que añadir un nombre para el servicio.",
        DE: "Hier müssen Sie einen Namen für den Dienst vergeben.",
        IT: "Qui è necessario aggiungere un nome per il servizio.",
        DA: "Her skal du tilføje et navn til tjenesten.",
        AR: "هنا يجب أن تضيف إسماً للخدمة.",
        PT: "aquí debe adicionar um nome para o serviço",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip7: {
        EN: "Clears all form fields.",
        FR: "Efface tous les champs du formulaire.",
        SPN: "Borra todos los campos del formulario.",
        DE: "Alle Felder löschen.",
        IT: "Cancella tutti i campi del modulo.",
        DA: "Rydder alle formularens felter.",
        AR: "مسح كل حقول النموذج",
        PT: "apagar os campos do formulario",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip8: {
        EN: "Cancel changes and redirect to home.",
        FR: "Annuler les modifications et retourner à la page d'accueil.",
        SPN: "Cancelar los cambios y redirigir a casa.",
        DE: "Änderungen abbrechen und zurück zur Startseite.",
        IT: "Annulla le modifiche e torna alla home.",
        DA: "Annuller ændringerne, og omdiriger til 'Hjem'.",
        AR: "إلغاء التغييرات وإعادة التوجية إلى الصفحة الرئيسية.",
        PT: "cancelar as alteraçoes e direcionar ao inicio",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip9: {
        EN: "Enable or disable UPnP rules.",
        FR: "Activer ou désactiver les règles UPnP.",
        SPN: "Activa o desactiva normas UPnP.",
        DE: "UPnP-Regeln ein- bzw. ausschalten",
        IT: "Abilita o disabilita le regole UPnP.",
        DA: "Aktivér elle deaktivér UPnP-reglerne.",
        AR: "تمكين أو تعطيل قواعد UPnP.",
        PT: "activa ou desactiva as regras de UPnP",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip10: {
        EN: "Here is the port forwarding rules table.",
        FR: "Table des règles de redirection de ports.",
        SPN: "Aquí está la tabla de reglas de port forwarding.",
        DE: "Hier ist die Übersicht der Regeln zur Port-Weiterleitung.",
        IT: "Ecco la tabella delle regole di invio porta.",
        DA: "Her er tabellen for regler til omdirigering af port.",
        AR: "هنا هو المدخل الموجه لجدول القواعد",
        PT: "aquí tem a tabela de regras de port forwarding",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip11: {
        EN: "Here you enable or disable the rule, by now your new settings are not in use by the system.",
        FR: "Ici vous activez ou désactivez la règle, les nouveaux paramètres ne sont pas encore utilisés par le système.",
        SPN: "Aquí se puede activar o desactivar la regla, por ahora los nuevos ajustes no están en uso por el sistema.",
        DE: "Hier können Sie die Regel aktivieren oder ausschalten. Ihre Einstellungen werden noch nicht vom System übernommen.",
        IT: "Qui puoi attivare o disattiva la regola, ora le nuove impostazioni non sono in uso da parte del sistema.",
        DA: "Her aktiverer eller deaktiverer du reglen, pt. er dine nye indstillinger ikke i anvendelse i systemet.",
        AR: "هنا تقوم بتمكين أو تعطيل القاعدة، الآن إعداداتك الجديدة ليست قيد الاستخدام من قبل النظام.",
        PT: "aqu pode activar ou desactivar a regra, por agora as suas novas definiçoes nao estao em uso pelo sistema.",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip12: {
        EN: "Here you remove the rule, by now your new settings are not in use by the system.",
        FR: "Ici vous supprimez la règle, les nouveaux paramètres ne sont pas encore utilisés par le système.",
        SPN: "Aquí se quita la regla, por ahora los nuevos ajustes no están en uso por el sistema.",
        DE: "Hier können Sie die Regeln löschen. Ihre Einstellungen werden noch nicht vom System übernommen.",
        IT: "Qui puoi rimuovere la regola, ora le nuove impostazioni non sono in uso da parte del sistema.",
        DA: "Her fjerner du reglen, pt. er er dine nye indstillinger ikke i anvendelse i systemet.",
        AR: "هنا تقوم بحذف القاعدة، الآن إعداداتك الجديدة ليست قيد الاستخدام من قبل النظام.",
        PT: "aquí pode remover a regra, por agora as suas novas definiçoes nao estao em uso pelo sistema.",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip13: {
        EN: "Here you edit the rule, by now your new settings are not in use by the system.",
        FR: "Ici, vous modifier la règle, les nouveaux paramètres ne sont pas encore utilisés par le système.",
        SPN: "Aquí puede editar la regla, por ahora los nuevos ajustes no están en uso por el sistema.",
        DE: "Hier können Sie die Regeln ändern. Ihre Einstellungen werden noch nicht vom System übernommen.",
        IT: "Qui puoi modificare la regola, ora le nuove impostazioni non sono in uso da parte del sistema.",
        DA: "Her redigerer du reglen, pt. er dine nye indstillinger ikke i anvendelse i systemet.",
        AR: "هنا تقوم بتحرير القاعدة، الآن إعداداتك الجديدة ليست قيد الاستخدام من قبل النظام.",
        PT: "aquí pode editar a regra, por agora as suas novas definiçoes nao estao em uso pelo sistema.",
        RO: "TODO",
        IND: "TODO"
    },
    pfTip14: {
        EN: "The Advertisement Period is how often the router will advertise (broadcast) its UPnP information.",
        FR: "TODO",
        SPN: "El periodo de anuncio es la frecuencia con la que el router advierte (difunde)la informacion UPnP",
        DE: "Aktualisierungsintervall Ihres Gateways für UPnP-Statusinformationen Ihrer Endgeräte.",
        IT: "TODO",
        DA: "Advertisement Period angiver hvor ofte modemmet adviserer (broadcaster) dens UPnP information",
        AR: "TODO",
        PT: "TODO",
        RO: "Perioada de Emisie este intervalul de timp in care router-ul va emite (broadcast) informatia UPnP.",
        IND: "TODO"
    },
    pfTip15: {
        EN: "Advertisement Time To Live is the time to live for the advertisement is measured in hops (steps) for each UPnP packet sent. ",
        FR: "TODO",
        SPN: "El anuncio de tiempo de vida se mide en saltos por cada paquete UPnP enviado",
        DE: "Anzahl der hops (Stationen im Netzwerk), die ein UPnP-Statuspaket überdauert. In Heimnetzen sind Werte zwischen 4 und 6 meist ausreichend.",
        IT: "TODO",
        DA: "Advertisement Time to Live angiver levetiden for adveticement målt i hop`s for hver sendt uPnP pakke",
        AR: "TODO",
        PT: "TODO",
        RO: "Timpul pana la Emisie este intervalul de timp pana la inceperea emisiei care este masurat in hops (pasi) pentru fiecare pachet UPnP trimis.",
        IND: "TODO"
    },
    pfAddRule: {
        EN: "Add Rule",
        FR: "Ajouter une règle",
        SPN: "Agregar regla",
        DE: "Regel hinzufügen",
        IT: "Aggiungi regola",
        DA: "Tilføj regel",
        AR: "إضافة قاعدة.",
        PT: "adicionar regra",
        RO: "TODO",
        IND: "TODO"
    },
    pfGamesApps: {
        EN: "Games & Applications",
        FR: "Jeux et applications",
        SPN: "Juegos y Aplicaciones",
        DE: "Spiele & Anwendungen",
        IT: "Giochi e applicazioni",
        DA: "Spil og applikationer",
        AR: "ألعاب وتطبيق",
        PT: "jogos e aplicaçoes",
        RO: "TODO",
        IND: "TODO"
    },
    pfGamesOrApp: {
        EN: "Game or application",
        FR: "Jeu ou application",
        SPN: "Juego o aplicación",
        DE: "Spiele oder Anwendungen",
        IT: "Gioco o applicazione",
        DA: "Spil eller applikation",
        AR: "ألعاب أو تطبيق",
        PT: "jogo e aplicaçao",
        RO: "TODO",
        IND: "TODO"
    },
    pfIpAddress: {
        EN: "IP Address",
        FR: "Adresse IP",
        SPN: "Dirección IP",
        DE: "IP-Adresse",
        IT: "Indirizzo IP",
        DA: "IP-adresse",
        AR: "عنوان IP",
        PT: "endereço IP",
        RO: "TODO",
        IND: "TODO"
    },
    pfLocalIpAddress: {
        EN: "Local IP Address",
        FR: "TODO",
        SPN: "Direccion IP local",
        DE: "Lokale IP-Adresse",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Adresa IP locala",
        IND: "TODO"
    },
    pfExternalIpAddress: {
        EN: "External IP Address:",
        FR: "TODO",
        SPN: "Direccion IP externa",
        DE: "Externe IP-Adresse:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Adresa IP Externa:",
        IND: "TODO"
    },
    pfEnable: {
        EN: "Enable",
        FR: "Autoriser",
        SPN: "Permitir",
        DE: "Aktivieren",
        IT: "Consenti",
        DA: "Aktivér",
        AR: "تمكين",
        PT: "activar",
        RO: "TODO",
        IND: "TODO"
    },
    pfGameApp: {
        EN: "Game / Application",
        FR: "Jeu / Application",
        SPN: "Juego / Aplicación",
        DE: "Spiel / Anwendung",
        IT: "Gioco / Applicazioni",
        DA: "Spil/applikation",
        AR: "ألعاب / تطبيق",
        PT: "jogo / aplicaçao",
        RO: "TODO",
        IND: "TODO"
    },
    pfOptions: {
        EN: "Options",
        FR: "Options",
        SPN: "Opciones",
        DE: "Optionen",
        IT: "Opzioni",
        DA: "Valgmuligheder",
        AR: "خيارات",
        PT: "opçoes",
        RO: "TODO",
        IND: "TODO"
    },
    pfGameAppDescription: {
        EN: "Here you can select a game or application.",
        FR: "Ici, vous pouvez sélectionner un jeu ou une application.",
        SPN: "Aquí puede seleccionar un juego o aplicación.",
        DE: "Hier können Sie ein Spiel oder eine Anwendung aus der Liste auswählen.",
        IT: "Qui puoi selezionare un gioco o un'applicazione.",
        DA: "Her kan du vælge et spil eller en applikation.",
        AR: "هنا يمكنك إختيار لعبة أو تطبيق.",
        PT: "aquí pode escolher um jogo ou aplicaçao",
        RO: "TODO",
        IND: "TODO"
    },
    pfGameAppIpAddress: {
        EN: "Here you can inform the IP address.",
        FR: "Ici vous pouvez entrer l'adresse IP.",
        SPN: "Aquí puede informar a la dirección IP.",
        DE: "Hier können Sie die IP-Adresse eingeben.",
        IT: "Qui puoi informare l'indirizzo IP.",
        DA: "Her kan du angive IP-adressen.",
        AR: "هنا يمكنك الإعلام بعنوان الـ IP.",
        PT: "aquí pode informar o endereço IP",
        RO: "TODO",
        IND: "TODO"
    },
    pfGameAppTable: {
        EN: "Here is the Port Forwarding rules table.",
        FR: "Table des règles de redirection de ports.",
        SPN: "Aquí está la tabla de reglas Port Forwarding.",
        DE: "Übersicht der Port-Weiterleitungen.",
        IT: "Ecco la tabella regole Port Forwarding.",
        DA: "Her er tabellen for regler til omdirigering af port.",
        AR: "هنا هو المدخل الموجه لجدول القواعد",
        PT: "aquí esta a tabela de regras de port forwarding",
        RO: "TODO",
        IND: "TODO"
    },
    lanToWan: {
        EN: "LAN-to-WAN",
        FR: "LAN-to-WAN",
        SPN: "LAN-to-WAN",
        DE: "LAN zu WAN",
        IT: "LAN-to-WAN",
        DA: "LAN-to-WAN",
        AR: "LAN-to-WAN",
        PT: "LAN-to-WAN",
        RO: "TODO",
        IND: "TODO"
    },
    wanToLan: {
        EN: "WAN-to-LAN",
        FR: "WAN-to-LAN",
        SPN: "WAN-to-LAN",
        DE: "WAN zu LAN",
        IT: "WAN-to-LAN",
        DA: "WAN-to-LAN",
        AR: "WAN-to-LAN",
        PT: "WAN-to-LAN",
        RO: "TODO",
        IND: "TODO"
    },
    respondToPing: {
        EN: "Respond To Ping",
        FR: "Réponse au Ping",
        SPN: "Respuesta de Ping",
        DE: "Auf Ping antworten",
        IT: "Rispondere al ping",
        DA: "Svar på ping",
        AR: "TODO",
        PT: "resposta ao ping",
        RO: "Raspundere la Ping",
        IND: "TODO"
    },
    level: {
        EN: "Level",
        FR: "Niveau",
        SPN: "Nivel",
        DE: "Stufe",
        IT: "Livello",
        DA: "Niveau",
        AR: "مستوى",
        PT: "nivel",
        RO: "TODO",
        IND: "TODO"
    },
    low: {
        EN: "Low",
        FR: "Faible",
        SPN: "Bajo",
        DE: "Niedrig",
        IT: "Basso",
        DA: "Lav",
        AR: "منخفض",
        PT: "baixo",
        RO: "TODO",
        IND: "TODO"
    },
    medium: {
        EN: "Medium",
        FR: "Moyen",
        SPN: "Medio",
        DE: "Mittel",
        IT: "Medio",
        DA: "Mellem",
        AR: "متوسط",
        PT: "medio",
        RO: "TODO",
        IND: "TODO"
    },
    high: {
        EN: "High",
        FR: "Haut",
        SPN: "Alto",
        DE: "Hoch",
        IT: "Alto",
        DA: "Høj",
        AR: "عالي",
        PT: "alto",
        RO: "TODO",
        IND: "TODO"
    },
    custom: {
        EN: "Custom",
        FR: "Personnalisé",
        SPN: "Costumbre",
        DE: "Benutzerdefiniert",
        IT: "Personalizza",
        DA: "Tilpas",
        AR: "مخصص",
        PT: "personalizada",
        RO: "TODO",
        IND: "TODO"
    },
    blockAsPerBelow: {
        EN: "Block all below",
        FR: "Tout bloquer ci-dessous",
        SPN: "Bloquear todo abajo",
        DE: "Alle blockieren",
        IT: "Blocca tutto sotto",
        DA: "Bloker alle herunder",
        AR: "تجميد كل أدناه ",
        PT: "bloquear todos abaixo",
        RO: "TODO",
        IND: "TODO"
    },
    allowAllBelow: {
        EN: "Allow all below",
        FR: "Tout autoriser ci-dessous",
        SPN: "Permitir todo debajo",
        DE: "Alle erlauben",
        IT: "Consenti tutto sotto",
        DA: "Tillad alle herunder",
        AR: "السماح لجميع أدناه",
        PT: "autorizar todos abaixo",
        RO: "TODO",
        IND: "TODO"
    },
    localIp: {
        EN: "Local IP",
        FR: "IP locale",
        SPN: "IP local",
        DE: "Lokale IP-Adresse",
        IT: "IP locale",
        DA: "Lokal IP",
        AR: "IP محلي",
        PT: "IP local",
        RO: "TODO",
        IND: "TODO"
    },
    remoteIp: {
        EN: "Remote IP",
        FR: "IP distante",
        SPN: "IP remota",
        DE: "Remote IP-Adresse",
        IT: "IP remoto",
        DA: "Fjern-IP",
        AR: "IP بعيد ",
        PT: "IP remoto",
        RO: "TODO",
        IND: "TODO"
    },
    rejectFromLocal: {
        EN: "Reject From Local",
        FR: "Rejeter depuis intérieur",
        SPN: "Rechazar De Local",
        DE: "Von Lokaler Adresse abweisen",
        IT: "Rifiuta da locale",
        DA: "Afvis fra lokal",
        AR: "الرفض من المحلي",
        PT: "rejeitar desde local",
        RO: "TODO",
        IND: "TODO"
    },
    rejectFromRemote: {
        EN: "Reject From Remote",
        FR: "Rejeter depuis extérieur",
        SPN: "Rechazar desde remoto",
        DE: "Von der Remote-Adresse abweisen",
        IT: "Rifiuta da remoto",
        DA: "Afvis fra fjern",
        AR: "الرفض من البعيد",
        PT: "rejeitar desde remoto",
        RO: "TODO",
        IND: "TODO"
    },
    BOTH: {
        EN: "BOTH",
        FR: "TODO",
        SPN: "Ambos",
        DE: "BEIDE",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "BOTH",
        IND: "TODO"
    },
    rejectBoth: {
        EN: "Reject in Both Way",
        FR: "Rejeter dans les deux sens",
        SPN: "Rechazar en ambas vías",
        DE: "Von beiden Seiten abweisen",
        IT: "Rifiuta da entrambi",
        DA: "Afvis på begge måder",
        AR: "الرفض من كلا الطريقين",
        PT: "rejeitar em ambos sentidos",
        RO: "TODO",
        IND: "TODO"
    },
    acceptFromLocal: {
        EN: "Accept From Local",
        FR: "Accepter depuis intérieur",
        SPN: "Aceptar De Local",
        DE: "Von Lokaler Adresse erlauben",
        IT: "Accetta da locale",
        DA: "Acceptér fra lokal",
        AR: "القبول من المحلي",
        PT: "aceitar desde local",
        RO: "TODO",
        IND: "TODO"
    },
    acceptFromRemote: {
        EN: "Accept From Remote",
        FR: "Accepter depuis extérieur",
        SPN: "Acepte desde remoto",
        DE: "Von der Remote-Adresse erlauben",
        IT: "Accetta da remoto",
        DA: "Acceptér fra fjern",
        AR: "القبول من البعيد",
        PT: "aceitar desde remoto",
        RO: "TODO",
        IND: "TODO"
    },
    acceptBoth: {
        EN: "Accept in Both Way",
        FR: "Accepter dans les deux sens",
        SPN: "Aceptar en ambas vías",
        DE: "Von beiden Seiten erlauben",
        IT: "Accetta da entrambi",
        DA: "Acceptér på begge måder",
        AR: "القبول من كلا الطرفين",
        PT: "aceitar em ambos sentidos",
        RO: "TODO",
        IND: "TODO"
    },
    localPort: {
        EN: "Local Port",
        FR: "Port Local",
        SPN: "Puerta Local",
        DE: "Lokaler Port",
        IT: "Porta locale",
        DA: "Lokal port",
        AR: "مدخل محلي",
        PT: "porta local",
        RO: "TODO",
        IND: "TODO"
    },
    remotePort: {
        EN: "Remote Port",
        FR: "Port Distant",
        SPN: "Puerta Remoto",
        DE: "Remote-Port",
        IT: "Porta remota",
        DA: "Fjernport",
        AR: "مدخل بعيد",
        PT: "porta remota",
        RO: "TODO",
        IND: "TODO"
    },
    service: {
        EN: "Service",
        FR: "Service",
        SPN: "Servicio",
        DE: "Dienst",
        IT: "Servizio",
        DA: "Tjeneste",
        AR: "خدمة",
        PT: "Serviço",
        RO: "TODO",
        IND: "TODO"
    },
    protocol: {
        EN: "Protocol",
        FR: "Protocole",
        SPN: "Protocolo",
        DE: "Protokoll",
        IT: "Protocollo",
        DA: "Protokol",
        AR: "برتوكول",
        PT: "protocolo",
        RO: "TODO",
        IND: "TODO"
    },
    action: {
        EN: "Action",
        FR: "Action",
        SPN: "Acción",
        DE: "Aktion",
        IT: "Azione",
        DA: "Handling",
        AR: "نشاط",
        PT: "acçao",
        RO: "TODO",
        IND: "TODO"
    },
    options: {
        EN: "Options",
        FR: "Options",
        SPN: "Opciones",
        DE: "Optionen",
        IT: "Opzioni",
        DA: "Valgmuligheder",
        AR: "خيارات",
        PT: "opçoes",
        RO: "TODO",
        IND: "TODO"
    },
    gatewayTime: {
        EN: "Gateway Time",
        FR: "Heure du modem",
        SPN: "Tiempo de gateway",
        DE: "Gateway-Zeit",
        IT: "Orario Gateway",
        DA: "Gatewaytid",
        AR: "وقت المنفذ",
        PT: "tempo de gateway",
        RO: "TODO",
        IND: "TODO"
    },
    firstServer: {
        EN: "First Server",
        FR: "Serveur 1",
        SPN: "Primer Servidor",
        DE: "Erster Zeitserver",
        IT: "Primo server",
        DA: "Første server",
        AR: "ملقم أول",
        PT: "primero servidor",
        RO: "TODO",
        IND: "TODO"
    },
    secondServer: {
        EN: "Second Server",
        FR: "Serveur 2",
        SPN: "Segundo Servidor",
        DE: "Zweiter Zeitserver",
        IT: "Secondo server",
        DA: "Sekundære server",
        AR: "ملقم ثاني",
        PT: "Segundo servidor",
        RO: "TODO",
        IND: "TODO"
    },
    timeZone: {
        EN: "Time Zone",
        FR: "Fuseau Horaire",
        SPN: "Huso horario",
        DE: "Zeitzone",
        IT: "Fuso Orario",
        DA: "Tidszone",
        AR: "منطقة زمنية",
        PT: "time zone",
        RO: "TODO",
        IND: "TODO"
    },
    invalidTimeZone: {
        EN: "Invalid time zone",
        FR: "TODO",
        SPN: "Franja horaria invalida",
        DE: "Ungültige Zeitzone",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "aquí pode ver o estado do tempo de internet",
        RO: "TODO",
        IND: "TODO"
    },
    ntpTip1: {
        EN: "Here you see Internet time status",
        FR: "Ici, vous voyez l'état de l'heure Internet",
        SPN: "Aquí puede ver el tiempo de Internet",
        DE: "Hier sehen Sie den Status, ob die Uhrzeit aus dem Internet abgerufen werden kann",
        IT: "Qui puoi vedere lo stato dell’orario di Internet",
        DA: "Her kan du se status for internettid",
        AR: "هنا يمكنك رؤية حالة الوقت الداخلي",
        PT: "aquí pode ver o estado do tempo de internet",
        RO: "TODO",
        IND: "TODO"
    },
    ntpTip2: {
        EN: "Here you see gateway time",
        FR: "Ici vous pouvez voir l'heure du modem",
        SPN: "Aquí se puede ver el tiempo de gateway",
        DE: "Hier sehen Sie die Gateway-Zeit",
        IT: "Qui sotto puoi vedere l’orario del gateway",
        DA: "Her kan du se status for gatewaytid",
        AR: "هنا يمكنك رؤية وقت المنفذ.",
        PT: "aqu pode ver o tempo de gateqay",
        RO: "TODO",
        IND: "TODO"
    },
    ntpTip3: {
        EN: "Here you type the primary server",
        FR: "Ici vous entrez le serveur principal",
        SPN: "Aquí se escribe el servidor primario",
        DE: "Geben Sie hier den ersten Zeitserver ein",
        IT: "Qui digiti il server primario",
        DA: "Her angiver du den primære server",
        AR: "هنا يمكنك أن تكتب الملقم الأول",
        PT: "aquí pode escrever o servidor primario",
        RO: "TODO",
        IND: "TODO"
    },
    ntpTip4: {
        EN: "Here you type the secondary server",
        FR: "Ici vous entrez le serveur secondaire",
        SPN: "Aquí se escribe el servidor secundario",
        DE: "Geben Sie hier den zweiten Zeitserver ein",
        IT: "Qui digiti il server secondario",
        DA: "Her angiver du den sekundære server",
        AR: "هنا يمكنك أن تكتب الملقم الثاني",
        PT: "aquí pode escrever o servidor secundario",
        RO: "TODO",
        IND: "TODO"
    },
    ntpTip5: {
        EN: "Here you choose your timezone",
        FR: "Ici, vous choisissez votre fuseau horaire",
        SPN: "Aquí elegir su zona horaria",
        DE: "Wählen Sie hier Ihre Zeitzone aus",
        IT: "Qui puoi scegliere il fuso orario",
        DA: "Her kan du vælge din tidszone",
        AR: "هنا يمكنك أن تختار المنطقة الزمنية",
        PT: "aquí pode escolher a sua zona horaria",
        RO: "TODO",
        IND: "TODO"
    },
    backupConfiguration: {
        EN: "Backup Configuration",
        FR: "Sauver la configuration",
        SPN: "Configuración de copia de seguridad",
        DE: "Konfiguration speichern",
        IT: "Configurazione di backup",
        DA: "Backup af konfigurationen",
        AR: "تهيئة النسخ الإحتياطي",
        PT: "configuraçao de backup",
        RO: "TODO",
        IND: "TODO"
    },
    restoreConfiguration: {
        EN: "Restore Configuration",
        FR: "Restaurer la Configuration",
        SPN: "Restaurar Configuración",
        DE: "Konfiguration wiederherstellen",
        IT: "Ripristina configurazione",
        DA: "Gendannelse af konfigurationen",
        AR: "إستعادة التهيئة",
        PT: "configuraçao de restaurar",
        RO: "TODO",
        IND: "TODO"
    },
    backupSettingsResetDescription: {
        EN: "Your current gateway settings will be replaced.",
        FR: "Les paramètres actuels de votre modem seront remplacés.",
        SPN: "Serán reemplazados la configuración del gateway actuales.",
        DE: "Ihre aktuellen Gateway-Einstellungen werden ersetzt.",
        IT: "Le attuali impostazioni del gateway saranno sostituite.",
        DA: "Dine aktuelle gatewayindstillinger vil blive erstattet.",
        AR: "سيتم إستبدال الإعدادات الحالية للمنفذ الخاص بك.",
        PT: "as configuraçoes actuais de seu gateway serao substituidas",
        RO: "TODO",
        IND: "TODO"
    },
    backupRestore: {
        EN: "Backup & Restore",
        FR: "Sauvegarde & Restauration",
        SPN: "Backup & Restaurar",
        DE: "Sichern & Wiederherstellen",
        IT: "Ripristino e Backup",
        DA: "Tag backup, og gendan",
        AR: "النسخ الإحتياطي و الإستعادة",
        PT: "backup & restore",
        RO: "TODO",
        IND: "TODO"
    },
    backupOnlyText: {
        EN: "Backup",
        FR: "Sauvegarde",
        SPN: "Backup",
        DE: "Sichern",
        IT: "Ripristino",
        DA: "TODO",
        AR: "TODO",
        PT: "Backup",
        RO: "TODO",
        IND: "TODO"
    },
    backupSettingsReset: {
        EN: "Restore Backup Settings",
        FR: "Restaurer les paramètres sauvegardés",
        SPN: "Restaurar configuración de copia de seguridad",
        DE: "Gespeicherte Konfiguration wiederherstellen",
        IT: "Ripristina impostazioni di backup",
        DA: "Gendan backupindstillinger",
        AR: "إستعادة إعدادات النسخ الإحتياطي",
        PT: "restaurar dados de backup",
        RO: "TODO",
        IND: "TODO"
    },
    step1: {
        EN: "Step 1",
        FR: "Etape 1",
        SPN: "Paso 1",
        DE: "Schritt 1",
        IT: "Fase 1",
        DA: "Trin 1",
        AR: "خطوة 1",
        PT: "passo 1 ",
        RO: "TODO",
        IND: "TODO"
    },
    step2: {
        EN: "Step 2",
        FR: "Etape 2",
        SPN: "Paso 2",
        DE: "Schritt 2",
        IT: "Fase 2",
        DA: "Trin 2",
        AR: "خطوة 2",
        PT: "passo 2",
        RO: "TODO",
        IND: "TODO"
    },
    step3: {
        EN: "Step 3",
        FR: "Etape 3",
        SPN: "Paso 3",
        DE: "Schritt 3",
        IT: "Fase 3",
        DA: "Trin 3",
        AR: "خطوة 3",
        PT: "passo 3",
        RO: "TODO",
        IND: "TODO"
    },
    step4: {
        EN: "Step 4",
        FR: "Etape 4",
        SPN: "Paso 4",
        DE: "Schritt 4",
        IT: "Fase 4",
        DA: "Trin 4",
        AR: "خطوة 4",
        PT: "passo 4",
        RO: "TODO",
        IND: "TODO"
    },
    step5: {
        EN: "Step 5",
        FR: "Etape 5",
        SPN: "Paso 5",
        DE: "Schritt 5",
        IT: "Fase 5",
        DA: "Trin 5",
        AR: "خطوة 5",
        PT: "passo 5",
        RO: "TODO",
        IND: "TODO"
    },
    step6: {
        EN: "Step 6",
        FR: "Etape 6",
        SPN: "Paso 6",
        DE: "Schritt 6",
        IT: "Fase 6",
        DA: "Trin 6",
        AR: "خطوة 6",
        PT: "passo 6",
        RO: "TODO",
        IND: "TODO"
    },
    step1Description: {
        EN: " - Obtain an updated software image file from your ISP.",
        FR: " - Récupérez un fichier de mise à jour logicielle au travers de votre fournisseur d'accès.",
        SPN: " - Obtener un archivo de imagen de software actualizado de su ISP.",
        DE: " - Laden Sie eine aktualisierte Software-Imagedatei von Ihrem ISP herunter.",
        IT: "Ottieni un software di file immagine aggiornato dall'ISP.",
        DA: " - Hent en opdateret firmware fra din ISP.",
        AR: "احصل على برنامج ملف صورة محدث من الـISP الخاص بك.",
        PT: " - Obter um ficheiro de imagem do update de sotware",
        RO: "TODO",
        IND: "TODO"
    },
    step2Description: {
        EN: " - Click the 'Browse' button to locate the image file.",
        FR: " - Cliquez sur le bouton 'Parcourir' pour localiser le fichier.",
        SPN: " - Introduzca la ruta al archivo de imagen ubicación en el cuadro a continuación o haga clic en el botón 'Examinar' para localizar el archivo de imagen.",
        DE: " - Geben Sie den Speiherort der neuen Firmware ein oder klicken Sie auf die Schaltfläche 'Durchsuchen...', um das entsprechende Verzeichnis auszuwählen.",
        IT: "Clicca sul pulsante 'Sfoglia' per individuare il file di immagine.",
        DA: " - Klik på knappen 'Gennemse' for at lokalisere firmware filen.",
        AR: "أدخل المسار إلى موقع ملف الصورة في المربع أدناه أو اضغط على زر 'استعراض' لتحديد موقع ملف الصورة.",
        PT: " - pressione o botao 'browse' para colocar a imagem'",
        RO: "TODO",
        IND: "TODO"
    },
    step3Description: {
        EN: " - Click the 'Update' button to upload the new image file.",
        FR: " - Cliquez ensuite sur le bouton 'Update'.",
        SPN: " - Haga clic en el botón 'Actualizar software' una vez para subir el nuevo archivo de imagen.",
        DE: " - Klicken Sie auf die Schaltfläche 'Firmware aktualisieren', um die neue Firmware zu laden.",
        IT: "Clicca sul pulsante 'Aggiorna' per caricare il nuovo file immagine.",
        DA: " - Klik på knappen 'Opdater' for at lokalisere den nye firmware fil.",
        AR: "اضغط على زر 'تحديث البرنامج' مرة واحدة لرفع ملف الصورة الجديد.",
        PT: " - pressione o botao 'update' para subir a nova imagem.'",
        RO: "TODO",
        IND: "TODO"
    },
    noteDescription: {
        EN: "NOTE: The Update process takes about 2 minutes to complete, and your gateway will reboot.",
        FR: "REMARQUE: Le processus de mise à jour dure environ 2 minutes et votre modem redémarrera.",
        SPN: "NOTA: El proceso de actualización tarda unos 2 minutos en completarse, y el portal de acceso se reiniciará.",
        DE: "HINWEIS: Der Update-Vorgang dauert ca. 2 Minuten. Dann wird das Gateway neu gestartet.",
        IT: "NOTA: Il processo di aggiornamento richiede circa 2 minuti per essere completato, e il gateway si riavvierà.",
        DA: "BEMÆRK: Opdateringsprocessen tager omkring 2 minutter at fuldføre, og din gateway vil blive genstartet.",
        AR: "ملحوظة: عملية التحديث تستغرق حوالي 2 دقيقة لإكمالها، ثم سيتم إعادة تشغيل المنفذ الخاص بك.",
        PT: "NOTA: o processo de update demora aproximadamente 2 minutos a ser completado, e o seu gateway reiniciará",
        RO: "TODO",
        IND: "TODO"
    },
    firmwareModalMessage: {
        EN: "Your gateway will be updated with selected file.",
        FR: "Votre modem sera mise à jour avec le fichier sélectionné.",
        SPN: "Su gateway se actualizará con firmware seleccionado.",
        DE: "Die Firmware wird nun aktualisiert.",
        IT: "Il gateway verrà aggiornato con il firmware selezionato.",
        DA: "Din gateway vil blive opdateret med den valgte firmware.",
        AR: "سوف يتم تحديث المنفذ الخاص بك بالبرامج الثابتة المحددة.",
        PT: "o seu gateway sera actualizado com o ficheiro selecionado",
        RO: "TODO",
        IND: "TODO"
    },
    firmwareUpdateTip1: {
        EN: "Select which type of upgrade you want to perform in your gateway.",
        FR: "Sélectionnez le type de mise à jour que vous souhaitez effectuer.",
        SPN: "Seleccione qué tipo de actualización que desea realizar en su puerta de entrada.",
        DE: "Wählen Sie, welche Art des Upgrades Sie in Ihrem Gateway durchführen möchten.",
        IT: "Seleziona il tipo di aggiornamento che desideri eseguire nel gateway.",
        DA: "Vælg, hvilken type opgradering, du vil udføre i din gateway.",
        AR: "اختر أي نوع من الترقيات تريد تنفيذها بالمنفذ الخاص بك.",
        PT: "Selecione que tipo de upgrade quer para o seu gateway",
        RO: "TODO",
        IND: "TODO"
    },
    firmwareUpdateTip2: {
        EN: "Click here to enter a valid file for the selected upgrade type.",
        FR: "Cliquez ici pour entrer un fichier valide pour le type de mise à jour sélectionné.",
        SPN: "Haga clic aquí para seleccionar un archivo válido para el tipo de actualización elegido.",
        DE: "Wählen Sie hier die passende Datei für die Aktualisierung aus.",
        IT: "Clicca qui per inserire un file valido per il tipo di aggiornamento selezionato.",
        DA: "Klik her for at angive en gyldig fil til den udvalgte opgraderingstype.",
        AR: "اضغط هنا لإختيار ملف صحيح لنوع الترقية المختار.",
        PT: "pressione aquí para dar entrada de um ficheiro valido para o upgrade selecionado",
        RO: "TODO",
        IND: "TODO"
    },
    firmwareUpdateTip3: {
        EN: "And finally click here to start the upgrade process. Note that it might take a while to complete, and you will lose connectivity during this period.",
        FR: "Cliquez ensuite ici pour lancer le processus de mise à jour. Notez que cela durera quelques minutes, le modem sera hors service pendant l'opération.",
        SPN: "Y, por último, haga clic aquí para iniciar el proceso de actualización. Tenga en cuenta que puede ser que tome un tiempo para terminar la actualización, y puede experimentar pérdida de conectividad mientras se está actualizando.",
        DE: "Zuletzt klicken Sie hier, um die Aktualisierung zu starten. Bitte beachten Sie, dass die Aktualisierung mehrere Minuten dauern kann während der Sie keinen Zugriff auf das Internet oder andere Geräte im Heimnetz haben.",
        IT: "E infine, clicca qui per iniziare il processo di aggiornamento. Il processo potrebbe richiedere un po’ di tempo e durante l’aggiornamento la connessione andrà persa.",
        DA: "Klik til sidst her for at starte opgraderingsproceduren. Vær opmærksom på, at det måske kan tage et stykke tid at gennemføre, og du vil være uden forbindelse i løbet af denne periode.",
        AR: "و أخيراً اضغط هنا لبدأ عملية الترقية. مع ملاحظة أنه قد يستغرق بعد الوقت للإنتهاء من الترقية، وأنك قد تواجه فقدان الإتصال أثناء الترقية.",
        PT: "finalmente pressione aquí para começar o processo de upgrade. Note que debe demorar até ser completado, e perderá ligaçao durante este periodo.",
        RO: "TODO",
        IND: "TODO"
    },
    firmwareUpdateInput: {
        EN: "Click here to choose a file type '.gsdf' that has the desired settings for firmware update.",
        FR: "Cliquez ici pour choisir un type de fichier '.gsdf' qui a les paramètres souhaités pour la mise à jour du firmware.",
        SPN: "Haga clic aquí para elegir un '.gsdf' tipo de archivo que tiene los ajustes deseados para la actualización del firmware.",
        DE: "Klicken Sie hier, um einen Dateityp  .gsdf  auszuwählen, der die gewünschten Einstellungen für Firmware-Updates aufweist.",
        IT: "Clicca qui per scegliere un tipo di file '.gsdf' con le impostazioni desiderate per l'aggiornamento del firmware.",
        DA: "Klik her for at vælge en filtype .gsdf, som har de ønskede indstillinger til firmwareopdateringen.",
        AR: "اضغط هنا لإختيار نوع الملف. 'gsdf' الذي لديه الإعدادات المرغوبة لتحديث البرامج الثابتة",
        PT: "pressione aquí para escolher o ficheiro do tipo '.gsdf' que tem as configuraçoes desejadas para o update do firmware.'",
        RO: "TODO",
        IND: "TODO"
    },
    firmwareVersion: {
        EN: "Firmware Version:",
        FR: "Version du firmware",
        SPN: "Versión de firmware:",
        DE: "Firmware-Version:",
        IT: "Versione Firmware:",
        DA: "Firmwareversion:",
        AR: "رقم إصدار البرامج الثابتة:",
        PT: "versao de firmware:",
        RO: "TODO",
        IND: "TODO"
    },
    invalidFile: {
        EN: "No file chosen. Please click 'Choose File' button and select a file.",
        FR: "Aucun fichier choisi. Merci de cliquer sur Parcourir et sélectionner un fichier.",
        SPN: "No ha elegido ningun archivo. Por favor click en el boton 'Seleccionar Archivo' y seleccione un archivo",
        DE: "Keine Datei ausgewählt. Bitte klicken Sie auf 'Durchsuchen' und wählen Sie eine Datei aus.",
        IT: "Nessun file selezionato. Per cortesia scegli un file",
        DA: "TODO",
        AR: "TODO",
        PT: "nao escolheu ficheiro. Pressione 'choose file' e selecione o ficheiro'",
        RO: "Niciun fisier ales. Va rog apasati butonul 'Selectare fisier' si selectati un fisier.'",
        IND: "TODO"
    },
    backup1: {
        EN: "Click here to create a backup file",
        FR: "Cliquez ici pour créer un fichier de sauvegarde",
        SPN: "Haga clic aquí para crear un archivo de copia de seguridad",
        DE: "Hier klicken, um eine Sicherung Ihrer Konfiguration zu erstellen",
        IT: "Clicca qui per creare un file di backup",
        DA: "Klik her for at oprette en backupfil",
        AR: "اضغط هنا لإنشاء ملف نسخ إحتياطي",
        PT: "pressione aquí para crear um ficheiro de backup",
        RO: "TODO",
        IND: "TODO"
    },
    backup2: {
        EN: "Click here to pick a backup file that has your desired settings",
        FR: "Cliquez ici pour sélectionner un fichier comportant les parmètres à restaurer",
        SPN: "Haga clic aquí para elegir un archivo de copia de seguridad que tiene la configuración deseada",
        DE: "Klicken Sie hier, um eine Sicherungsdatei auszuwählen",
        IT: "Clicca qui per scegliere un file di backup con le impostazioni desiderate",
        DA: "Klik her for at vælge en backupfil, som har de ønskede indstillinger",
        AR: "اضغط هنا لإختيار ملف نسخ إحتياطي لديه إعداداتك المرغوبة.",
        PT: "pressione aquí para escolher um ficheiro de backup que tenha as suas configuraçoes desejadas",
        RO: "TODO",
        IND: "TODO"
    },
    backup3: {
        EN: "After you picked a file, click here to restore your gateway",
        FR: "Après avoir sélectionné un fichier, cliquez ici pour restaurer la configuration de votre modem",
        SPN: "Después de que usted escogió un archivo, haga clic aquí para restaurar el gateway",
        DE: "Nachdem Sie eine Datei ausgewählt haben, klicken Sie hier, um Ihr Gateway wiederherzustellen",
        IT: "Dopo aver scelto un file, clicca qui per ripristinare il gateway",
        DA: "Når du har valgt en fil, skal du klikke her for at gendanne din gateway",
        AR: "بعد أن قمت بإختيار ملف، اضغط هنا لإستعادة المنفذ الخاص بك.",
        PT: "depois de escolher o ficheiro, pressione restaurar o gateway",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Client: {
        EN: "TR-069 Client",
        FR: "Client TR-069",
        SPN: "Cliente TR-069",
        DE: "TR-069 Client",
        IT: "TR-069 Client",
        DA: "TR-069-klient",
        AR: "عميل TR-069",
        PT: "cliente TR-069",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Url: {
        EN: "URl",
        FR: "URl",
        SPN: "URl",
        DE: "URl",
        IT: "URl",
        DA: "URl",
        AR: "URl",
        PT: "URl",
        RO: "TODO",
        IND: "TODO"
    },
    tr69UserName: {
        EN: "User Name",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    tr69Password: {
        EN: "Password",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    tr69PeriodicTime: {
        EN: "Inform Periodic time",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    tr69PeriodicStatus: {
        EN: "Inform Periodic Enable/Disabled",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    tr69ClientConfiguration: {
        EN: "TR-069 Client - Configuration",
        FR: "Client TR-069 - Configuration",
        SPN: "Cliente TR-069 - Configuración",
        DE: "TR-069 Client-Konfiguration",
        IT: "TR-069 Client - Configurazione",
        DA: "TR-069-klient - konfiguration",
        AR: "عميل TR-069 - الضبط",
        PT: "cliente TR-069 - configuraçao",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Description1: {
        EN: "WAN Management Protocol (TR-069) allows to configure automatically your gateway, collect data and diagnose issues remotely.",
        FR: "Le protocole de gestion WAN TR-069 permet une configuration automatique, la collecte de données et le diagnostic à distance de ce modem.",
        SPN: "Protocolo de gestión de red WAN (TR-069) permite a un servidor de configuración automática (ACS) para realizar la configuración automática, el suministro, recolección y diagnósticos en este dispositivo.",
        DE: "TR-069 erlaubt die automatische Einrichtung per 'Auto-Configuration Server' (ACS).",
        IT: "Il protocollo di gestion WAN Management (TR-069) permette di configurare automaticamente il gateway, raccogliere dati e diagnosticare i problemi in remoto.",
        DA: "WAN-styringsprotokollen (TR-069) giver mulighed for at konfigurere din gateway automatisk, indsamle data og diagnosticere problemer med fjernadgang.",
        AR: "بروتوكول إدارة الشبكات واسعة المدى (TR-069) يسمح لخادم الضبط التلقائي (ACS) بآداء التكوين التلقائي والتقديم والجمع والتشخيص لهذا الجهاز.",
        PT: "protocolo de gestao WAN (TR-069) permite configurar automaticamente o gateway, recolher dados e diagnosticos remotamente.",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Enable: {
        EN: "Enable",
        FR: "Activer",
        SPN: "Permitir",
        DE: "Aktivieren",
        IT: "Consenti",
        DA: "Aktivér",
        AR: "تفعيل",
        PT: "autorizar",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Description2: {
        EN: "Select the desired values and click 'Apply' to configure the TR-069 client options.",
        FR: "Sélectionner les valeurs souhaitées et cliquez sur 'Appliquer'.",
        SPN: "Seleccione los valores deseados y haga clic en 'Aplicar' para configurar las opciones del cliente TR-069.",
        DE: "Geben Sie die entsprechenden Werte für die Konfiguration des TR-069 Clients ein und klicken Sie anschließend auf 'Annehmen'.",
        IT: "Seleziona i valori desiderati e clicca su 'Applica' per configurare le opzioni client TR-069.",
        DA: "Vælg de ønskede værdier, og klik på 'Anvend' for at konfigurere TR-069-klientmuligheder.",
        AR: "حدد القيم المطلوبة واضغط على 'تطبيق' لضبط خيارات عميل TR-069.",
        PT: "Selecione os valores desejados e pressione 'apply' para configurar as opçoes de cliente TR-069'",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Inform: {
        EN: "Inform",
        FR: "Inform",
        SPN: "Informar",
        DE: "Inform",
        IT: "Inform",
        DA: "Informering",
        AR: "إعلام",
        PT: "informar",
        RO: "TODO",
        IND: "TODO"
    },
    tr69InformInterval: {
        EN: "Inform Interval",
        FR: "Intervalle de l'Inform",
        SPN: "Informe a Intervalos",
        DE: "Inform Intervall",
        IT: "Intervallo inform",
        DA: "Informeringsinterval",
        AR: "فترة الإعلام",
        PT: "informar intervalo",
        RO: "TODO",
        IND: "TODO"
    },
    tr69AcsUserName: {
        EN: "ACS User Name",
        FR: "ACS Nom d'Utilisateur",
        SPN: "ACS Nombre de Usuario",
        DE: "ACS User Name",
        IT: "Nome utente ACS",
        DA: "ACS-brugernavn",
        AR: "إسم مستخدم ACS",
        PT: "username de ACS",
        RO: "TODO",
        IND: "TODO"
    },
    tr69AcsPassword: {
        EN: "ACS Password",
        FR: "ACS Mot de Passe",
        SPN: "ACS Contraseña",
        DE: "ACS Passwort",
        IT: "Password ACS",
        DA: "ACS-adgangskode",
        AR: "كلمة مرور ACS",
        PT: "password de ACS",
        RO: "TODO",
        IND: "TODO"
    },
    tr69ConnectionsRequest: {
        EN: "Connection Request",
        FR: "Demande de connexion",
        SPN: "Conexiones Solicitud",
        DE: "Connection Request",
        IT: "Richiesta di connessione",
        DA: "Forbindelsesanmodning",
        AR: "طلب الإتصال",
        PT: "pedido de ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    tr69CrUsername: {
        EN: "User Name",
        FR: "Nom d'utilisateur",
        SPN: "Nombre de usuario",
        DE: "User Name",
        IT: "Nome utente",
        DA: "Brugernavn",
        AR: "إسم المستخدم",
        PT: "username",
        RO: "TODO",
        IND: "TODO"
    },
    tr69CrUrlPort: {
        EN: "URL Port",
        FR: "Port de URl",
        SPN: "URL Puerto",
        DE: "URL Port",
        IT: "URL del port",
        DA: "URL-port",
        AR: "مدخل URl",
        PT: "porta URl",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Tip1: {
        EN: "Enable or disable TR-069. TR-069 configurations can take effect only after you enable TR-069.",
        FR: "Activer ou désactiver le TR-069. La configuration TR-069 prendra effet après`l'activation.",
        SPN: "Activar o desactivar la TR-069. TR-069 configuraciones tengan efecto sólo después de habilitar TR-069.",
        DE: "TR-069 ein- bzw. ausschalten. TR-069 Einstellungen werden erst angewendet, nachdem Sie TR-069 eingschaltet haben.",
        IT: "Attiva o disattiva TR-069. Le configurazioni TR-069 possono avere effetto solo dopo aver attivato TR-069.",
        DA: "Aktivér eller deaktivér TR-069. TR-069-konfigurationerne kan kun træde i kraft, når du har aktiveret  TR-069.",
        AR: "تمكين أو تعطيل تكوينات TR-069. TR-069 يمكن أن يكون له تأثير فقط بعد تمكين TR-069.",
        PT: "habilitar ou desabilitar o TR-069. as configuraçoes terao efeito somente depois de habilitar o TR-069.",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Tip2: {
        EN: "Enable the inform messages.",
        FR: "Activer les messages d'Inform.",
        SPN: "Habilitar los mensajes de inform.",
        DE: "Inform Messages einschalten.",
        IT: "Abilita messaggi inform.",
        DA: "Aktivér informeringsbeskederne. ",
        AR: "تمكين رسائل الإعلام.",
        PT: "habilitar as mensagens de informaçao",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Tip3: {
        EN: "Configure the interval between sending the inform messages.",
        FR: "Configurez l'intervalle entre l'envoi des messages d'Inform.",
        SPN: "Configure el intervalo entre el envío de los mensajes de inform.",
        DE: "Konfigurieren Sie das Intervall für die Übermittlung von Inform Messages.",
        IT: "Configura l'intervallo tra l'invio dei messaggi inform. Clicca qui per scegliere un file di backup con le impostazioni desiderate.",
        DA: "Konfigurer intervallet mellem afsendelse af informeringsbeskederne.",
        AR: "تهيئة الفاصل الزمني بين إرسال رسائل الإعلام",
        PT: "configurar o intervalo entre envio de mensagens de informaçao",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Tip4: {
        EN: "Configure the URL to connect to the auto-configuration server.",
        FR: "Configurer l'URL pour la connexion à l'ACS.",
        SPN: "Configure la dirección URL utilizada por el equipo del cliente para iniciar una conexión con el servidor de configuración automática.",
        DE: "Konfigurieren Sie die URL, um sich mit dem Autokonfigurationsserver zu verbinden.",
        IT: "Configura l'URL per la connessione al server di configurazione automatica.",
        DA: "Konfigurer URL til at oprette forbindelse til autokonfigurationsserveren.",
        AR: "تهيئة الـ URL المستخدم من قبل معدات عملاء لبدء الإتصال مع خادم الضبط التلقائي",
        PT: "configurar URL para ligar ao servidor de auto-configuraçao",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Tip5: {
        EN: "Configure the username to connect to the auto-configuration server.",
        FR: "Configurez le nom d'utilisateur pour la connexion à l'ACS.",
        SPN: "Configurar el nombre de usuario utilizado por un equipo de cliente para iniciar una conexión con el servidor de configuración automática.",
        DE: "Konfigurieren Sie den Benutzernamen, um sich mit dem Autokonfigurationsserver zu verbinden.",
        IT: "Configura il nome utente per connettersi al server di configurazione automatica.",
        DA: "Konfigurer brugernavnet til at oprette forbindelse til autokonfigurationsserveren.",
        AR: "تهيئة إسم المستخدم المستخدم من قبل معدات عملاء لبدء الإتصال مع خادم الضبط التلقائي",
        PT: "configurar o username para ligar ao servidor de auto-configuraçao",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Tip6: {
        EN: "Configure the password to connect to the auto-configuration server.",
        FR: "Configurer le mot de passe pour la connexion à l'ACS.",
        SPN: "Configure la contraseña utilizada por el equipo del cliente para iniciar una conexión con el servidor de configuración automática.",
        DE: "Konfigurieren Sie das Passwort, um sich mit dem Autokonfigurationsserver zu verbinden.",
        IT: "Configura la password per collegarsi al server di configurazione automatica.",
        DA: "Konfigurer adgangskoden til at oprette forbindelse til autokonfigurationsserveren.",
        AR: "تهيئة كلمة المرور المستخدمة من قبل معدات عملاء لبدء الإتصال مع خادم الضبط التلقائي.",
        PT: "configurar a password para ligar ao servidor de auto-configuraçao",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Tip7: {
        EN: "You can set connection request username.",
        FR: "Vous pouvez configurer l'utilisateur pour les demandes de connexion.",
        SPN: "Se puede establecer el nombre de usuario para a solicitud de conexión.",
        DE: "User Name, der für die Verbindungsanfrage genutzt wird.",
        IT: "Puoi impostare la richiesta di connessione nome utente.",
        DA: "Du kan indstille forbindelsen til at anmode om brugernavn.",
        AR: "يمكنك تعيين إسم مستخدم لطلب الإتصال.",
        PT: "pode escolher o username de ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Tip8: {
        EN: "You can set connection request URL.",
        FR: "Vous pouvez configurer l'URL de demande de connexion.",
        SPN: "Se puede establecer la dirección URL para a solicitud de conexión.",
        DE: "URL, die für die Verbindungsanfrage genutzt wird.",
        IT: "Puoi  impostare la richiesta di connessione URL.",
        DA: "Du kan indstille forbindelsen til at anmode om URL.",
        AR: "يمكنك تعيين URL لطلب الإتصال.",
        PT: "pode escolher o URL de ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Tip9: {
        EN: "You can set connection request password.",
        FR: "Vous pouvez configurer le mot de passe pour les demandes de connexion.",
        SPN: "Se puede establecer la contraseña para a solicitud de conexión.",
        DE: "Passwort, das für die Verbindungsanfrage genutzt wird.",
        IT: "Puoi  impostare una password di richiesta di connessione.",
        DA: "Du kan indstille forbindelsen til at anmode om adgangskode.",
        AR: "يمكنك تعيين كلمة مرور لطلب الإدخال.",
        PT: "pode escolher a password de ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Tip10: {
        EN: "You can set connection request URL port.",
        FR: "Vous pouvez configurer le port de l'URL de demande de connexion.",
        SPN: "Se puede establecer la port de la dirección URL para a solicitud de conexión.",
        DE: "URL Port, der für die Verbindungsanfrage genutzt wird.",
        IT: "Puoi impostare la richiesta di connessione della porta URL.",
        DA: "Du kan indstille forbindelsen til at anmode om URL-port.",
        AR: "يمكنك تعيين مدخل URL لطلب إتصال.",
        PT: "pode escolher a porta URL de ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    tr69Tip11: {
        EN: "Enable the SSLAuthentication messages.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    usbDevice: {
        EN: "USB Device",
        FR: "Dispositif USB",
        SPN: "Dispositivo USB",
        DE: "USB-Gerät",
        IT: "Dispositivo USB",
        DA: "USB-enhed",
        AR: "جهاز USB",
        PT: "dispositivo USB",
        RO: "TODO",
        IND: "TODO"
    },
    ejectDevice: {
        EN: "Eject device",
        FR: "Éjecter le dispositif",
        SPN: "Expulsar dispositivo",
        DE: "Geräteverbindung trennen",
        IT: "Espelli dispositivo",
        DA: "Skub enheden ud",
        AR: "أخرج الجهاز",
        PT: "ejectar o dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    forceEject: {
        EN: "Force to eject",
        FR: "Éjection forcée",
        SPN: "Fuerza para expulsar",
        DE: "Gerätetrennung erzwingen",
        IT: "Dispositivo di espulsione",
        DA: "Tvungen udskubning",
        AR: "الإخراج بالقوة",
        PT: "TODOforçar ejecçao",
        RO: "TODO",
        IND: "TODO"
    },
    eject: {
        EN: "Eject",
        FR: "Éjecter",
        SPN: "Expulsar",
        DE: "Trennen",
        IT: "Espelli",
        DA: "Skub ud",
        AR: "إخراج ",
        PT: "ejectar",
        RO: "TODO",
        IND: "TODO"
    },
    name: {
        EN: "Name",
        FR: "Nom",
        SPN: "Nombre",
        DE: "Name",
        IT: "Nome",
        DA: "Navn",
        AR: "الاسم",
        PT: "nome",
        RO: "TODO",
        IND: "TODO"
    },
    deviceType: {
        EN: "Device type",
        FR: "Type de périphérique",
        SPN: "Tipo de dispositivo",
        DE: "Gerätetyp",
        IT: "Tipo di dispositivo",
        DA: "Enhedstype",
        AR: "نوع الجهاز ",
        PT: "tipo de dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    partitionList: {
        EN: "Partition list",
        FR: "Liste de partage",
        SPN: "Lista de particiones",
        DE: "Partitionsübersicht",
        IT: "Lista delle partizioni",
        DA: "Partitionsliste",
        AR: "قائمة التقسيم ",
        PT: "lista de partiçao",
        RO: "TODO",
        IND: "TODO"
    },
    partition: {
        EN: "Partition",
        FR: "Partition",
        SPN: "Partición",
        DE: "Partition",
        IT: "Partizione",
        DA: "Partition",
        AR: "تقسيم ",
        PT: "partiçao",
        RO: "TODO",
        IND: "TODO"
    },
    size: {
        EN: "Size",
        FR: "Taille",
        SPN: "Tamaño",
        DE: "Größe",
        IT: "Dimensione",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    fileSystem: {
        EN: "File System",
        FR: "Système de Fichiers",
        SPN: "Sistema de Archivos",
        DE: "Dateisystem",
        IT: "File System",
        DA: "Filsystem",
        AR: "نظام الملفات ",
        PT: "Sistema de arquivos",
        RO: "TODO",
        IND: "TODO"
    },
    capacity: {
        EN: "Capacity",
        FR: "TODO",
        SPN: "Capacidad",
        DE: "Speicherplatz",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Capacitate",
        IND: "TODO"
    },
    used: {
        EN: "Used",
        FR: "Utilisé",
        SPN: "Usado",
        DE: "Verwendet",
        IT: "Usato",
        DA: "Anvendt",
        AR: "مستخدم ",
        PT: "usado",
        RO: "TODO",
        IND: "TODO"
    },
    usbDeviceInfoTip1: {
        EN: "Displays the status of the device.",
        FR: "Affiche l'état du périphérique.",
        SPN: "Muestra el estado del dispositivo.",
        DE: "Gerätestatus anzeigen.",
        IT: "Visualizza lo stato del dispositivo.",
        DA: "Viser enhedens status.",
        AR: "عرض حالة الجهاز ",
        PT: "mostra o estado do dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    usbDeviceInfoTip2: {
        EN: "Click the 'Eject' button to eject the device.",
        FR: "Cliquez sur le bouton 'Eject' pour éjecter le périphérique.",
        SPN: "Haga clic en el botón 'Expulsar' para expulsar el dispositivo.",
        DE: "Klicken Sie auf die Schaltfläche 'Trennen', um die Geräteverbindung aufzuheben.",
        IT: "Clicca sul pulsante 'Espelli' per espellere il dispositivo.",
        DA: "Klik på knappen 'Skub ud' for at skubbe enheden ud.",
        AR: "انقر على زر 'إخراج' من أجل اخراج الجهاز ",
        PT: "pressione 'eject' para ejectar o dispositivo'",
        RO: "TODO",
        IND: "TODO"
    },
    usbDeviceInfoTip3: {
        EN: "Indicate on which port device is connected.",
        FR: "Indique sur quel port le périphérique est connecté.",
        SPN: "Indica que el puerto está conectado el dispositivo.",
        DE: "Auswählen, an welchem Anschluss das Gerät verbunden ist.",
        IT: "Indica su quale porta è collegato il dispositivo.",
        DA: "Indiker, på hvilken port enheden er forbundet.",
        AR: "الاشارة إلى أي منفذ الجهاز متصل به",
        PT: "indica em que porta o dispositivo esta ligado",
        RO: "TODO",
        IND: "TODO"
    },
    usbDeviceInfoTip4: {
        EN: "Displays the device name.",
        FR: "Affiche le nom du périphérique.",
        SPN: "Muestra el nombre del dispositivo.",
        DE: "Gerätename anzeigen.",
        IT: "Consenti di visualizzare il nome del dispositivo.",
        DA: "Viser enhedens navn.",
        AR: "عرض اسم الجهاز ",
        PT: "indica o nome do dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    usbDeviceInfoTip5: {
        EN: "Choose the type of device that is connected.",
        FR: "Choisissez le type de périphérique connecté.",
        SPN: "Elija el tipo de dispositivo que está conectado.",
        DE: "Wählen Sie den verwendeten Gerätetyp aus.",
        IT: "Scegli il tipo di dispositivo collegato.",
        DA: "Vælg, hvilken type enhed, som er forbundet.",
        AR: "اختر نوع الجهاز المتصل ",
        PT: "escolha o tipo de dispositivo que esta ligado",
        RO: "TODO",
        IND: "TODO"
    },
    usbDeviceInfoTip6: {
        EN: "Displays the partitions, total space, used space, file system device.",
        FR: "Affiche les partitions, l'espace total, l'espace utilisé, le système de fichiers.",
        SPN: "Muestra las particiones, espacio total, espacio utilizado, el dispositivo de sistema de archivos.",
        DE: "Zeigt detaillierte Informationen über Partitionen, Größe und Dateisystem an.",
        IT: "Consenti di visualizzare le partizioni, lo spazio totale, lo spazio utilizzato, il file system del dispositivo.",
        DA: "Viser partitionerne, samlet plads, anvendt plads, filsystemenhed.",
        AR: "عرض التقسيمات، المساحة الإجمالية، المساحة المستخدمة، جهاز نظام الملفات ",
        PT: "mostra as partiçoes, espaço total, em uso, ficheiro de sistema",
        RO: "TODO",
        IND: "TODO"
    },
    usbDeviceInfoTip7: {
        EN: "Name of the manufacturer.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Herstellername",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    enableWPS: {
        EN: "Enable WPS",
        FR: "Activer WPS",
        SPN: "Habilitar WPS",
        DE: "WPS einschalten",
        IT: "Attiva WPS",
        DA: "Aktivér WPS",
        AR: "تمكين WPS",
        PT: "habilitar WPS",
        RO: "TODO",
        IND: "TODO"
    },
    wpsMacFilterDisabled: {
        EN: "Enabling WPS will disable MAC Filtering mode.",
        FR: "Activer WPS cette désactiver le mode de filtrage MAC.",
        SPN: "Habilitar WPS inhabilitará el modo de filtrado MAC.",
        DE: "Wenn Sie WPS einschalten wird dadurch automatisch der MAC-Filter ausgeschaltet.",
        IT: "Abilitando il WPS saranno disattivare la modalità di filtraggio MAC.",
        DA: "Aktivering af WPS vil deaktivere MAC-filtreringstilstanden.",
        AR: "إن تفعيل WPS سيؤدي إلى تعطيل وضع الفلترة MAC",
        PT: "habilitar WPS vai desabilitar o modo de filtro de MAC",
        RO: "TODO",
        IND: "TODO"
    },
    wpsAlert: {
        EN: "If Wi-Fi Protected Setup is disabled here, the physical button on your router will also be disabled.",
        FR: "Si la connexion Wi-Fi Protected Setup est désactivée ici, le bouton physique de votre routeur sera également désactivé.",
        SPN: "Si la función Wi-Fi Protected Setup está deshabilitada aquí, también se desactivará el botón en el router.",
        DE: "Wenn hier WLAN Protected Setup deaktiviert ist, wird die physische Taste auf Ihrem Router ebenfalls deaktiviert werden.",
        IT: "Se il setup Wi-Fi protetto è disabilitato qui, anche il pulsante fisico sul router sarà disabilitato.",
        DA: "Hvis 'Wi-Fi beskyttet opsætning' (WPS) er deaktiveret her, vil den fysiske knap på din router også være deaktiveret.",
        AR: "في حال تم تعطيل إعدادات حماية واي فاي هنا، فإنه سيتم تعطيل الزر على جهاز الرواتر لديك. ",
        PT: "Se o setup protegido de Wi-Fi estiver desabilitado aquí, o botao fisico do seu router tambem esta desativado.",
        RO: "TODO",
        IND: "TODO"
    },
    wpsInstruction1: {
        EN: "Use one method below to connect your device using Wi-Fi Protected Setup.",
        FR: "Utilisez une méthode ci-dessous pour connecter votre périphérique à l'aide d'une connexion Wi-Fi Protected Setup.",
        SPN: "Utilice uno método para conectar su dispositivo a través de Wi-Fi Protected Setup.",
        DE: "Verwenden Sie eine Methode, um Ihr Gerät mithilfe des WLAN Protected Setup zu verbinden.",
        IT: "Utilizza un metodo indicati per collegare il dispositivo tramite setup Wi-Fi protetto.",
        DA: "Anvend en af metoderne herunder til at tilslutte din enhed ved hjælp af 'Wi-Fi beskyttet opsætning' (WPS).",
        AR: "استخدم احدى الطرق التالية لتوصيل جهازك من خلال استخدام اعداد حماية واي فاي",
        PT: "Use um método abaixo para ligar o seu dispositivo usando o setup protegido de Wi-Fi",
        RO: "TODO",
        IND: "TODO"
    },
    pushButton: {
        EN: "Push Button",
        FR: "Bouton",
        SPN: "Push Button",
        DE: "Push-Button-Methode",
        IT: "Premi il pulsante",
        DA: "Trykknap",
        AR: "اضغط على الزر ",
        PT: "botao de pressao",
        RO: "TODO",
        IND: "TODO"
    },
    pin: {
        EN: "PIN",
        FR: "PIN",
        SPN: "PIN",
        DE: "PIN",
        IT: "PIN",
        DA: "PIN",
        AR: "PIN",
        PT: "PIN",
        RO: "TODO",
        IND: "TODO"
    },
    wpsInstruction2: {
        EN: "Click the button below.",
        FR: "Cliquez sur le bouton ci-dessous.",
        SPN: "Haga clic en el botón de abajo.",
        DE: "Klicken Sie auf die Schaltfläche",
        IT: "Clicca sul pulsante qui sotto.",
        DA: "Klik på knappen herunder.",
        AR: "اضغط على الزر في الاسفل ",
        PT: "pressione o botao",
        RO: "TODO",
        IND: "TODO"
    },
    wpsInstruction3: {
        EN: "Activate WPS on the wireless client within 2 minutes after clicking the button.",
        FR: "Activer la fonction WPS sur le client Wi-Fi dans les 2 minutes après avoir cliquer sur le bouton.",
        SPN: "Activar WPS en el cliente inalámbrico dentro de los 2 minutos después de hacer clic en el botón.",
        DE: "Nachdem Sie auf die Schaltfläche geklickt haben, müssen Sie WPS auch auf Ihrem WLAN-Gerät innerhalb von zwei Minuten aktivieren.",
        IT: "Attiva WPS sul client wireless entro 2 minuti dopo aver fatto clic sul pulsante.",
        DA: "Aktiver WPS på den trådløse klient inden for 2 minutter efter, at du har klikket på knappen.",
        AR: "تفعيل WPS على مستخدم الاتصال اللاسلكي في غضون دقيقتين بعد النقر على الزر",
        PT: "active o WPS no wireless do cliente dentro dos primeiros 2 minutos depois de pressionar o botao",
        RO: "TODO",
        IND: "TODO"
    },
    gatewayPin: {
        EN: "Gateway pin",
        FR: "PIN code du modem",
        SPN: "Pasador de puerta de enlace",
        DE: "Gateway-PIN",
        IT: "Pin Gateway",
        DA: "Gateway-pin",
        AR: "بوابة PIN",
        PT: "pin de gateway",
        RO: "TODO",
        IND: "TODO"
    },
    wpsInstruction4: {
        EN: "1. If your client device asks for the Gateway's PIN number, enter the value below.",
        FR: "1. Si votre périphérique client demande le code PIN du modem, entrez la valeur ci-dessous.",
        SPN: "1. Si el dispositivo cliente pide el número PIN de la puerta de enlace, introduzca el valor por debajo de su dispositivo cliente.",
        DE: "1. Wenn Ihr Client-Gerät zur Eingabe der Gateway-PIN auffordert, geben Sie den nachstehenden Wert ein.",
        IT: "Se il dispositivo client richiede il numero PIN del gateway, immettere il valore al di sotto del dispositivo client.",
        DA: "1. Hvis din klientenhed anmoder om gatewayens pinnummer, skal du indtaste værdien herunder.",
        AR: "اذا طلب جهاز العميل الخاص بك الحصول على رقم بوابة PIN قم بادخال قيمة أقل في جهاز العميل الخاص بك ",
        PT: "1. se o dispositivo cliente pedir o pin do gateway, escreva o seguinte.",
        RO: "TODO",
        IND: "TODO"
    },
    wpsInstruction5: {
        EN: "Click on button below to generate Pin Code",
        FR: "Cliquez sur le bouton ci-dessous pour générer le code PIN",
        SPN: "Haga clic en el botón de abajo para crear el código del Pin",
        DE: "Klicken Sie auf die Schaltfläche unten, um einen neuen PIN-Code zu generieren",
        IT: "Clicca sul pulsante qui sotto per generare un codice Pin",
        DA: "Klik på knappen herunder for at generere en pinkode",
        AR: "انقر على الزر أدناه لتوليد الرقم السري ",
        PT: "pressione o botao seguinte para gerar um codigo de pin",
        RO: "TODO",
        IND: "TODO"
    },
    pairing: {
        EN: "Pairing",
        FR: "Association",
        SPN: "Aparejando",
        DE: "Koppeln",
        IT: "Appaiamento",
        DA: "Parring",
        AR: "اقتران",
        PT: "emparelhamento",
        RO: "TODO",
        IND: "TODO"
    },
    pinCode: {
        EN: "Pin Code:",
        FR: "Code PIN:",
        SPN: "Código pin:",
        DE: "PIN-Code:",
        IT: "Codice Pin:",
        DA: "Pinkode:",
        AR: " :الرقم السري ",
        PT: "codigo pin:",
        RO: "TODO",
        IND: "TODO"
    },
    devicePin: {
        EN: "Device pin",
        FR: "Code PIN du périphérique",
        SPN: "Pin del dispositivo",
        DE: "PIN-Code des WLAN-Geräts",
        IT: "PIN del dispositivo",
        DA: "Enhedspin",
        AR: "جهاز PIN",
        PT: "pin do dispositivo:",
        RO: "TODO",
        IND: "TODO"
    },
    wpsInstruction6: {
        EN: "Enter the client PIN Code and click 'Register'.",
        FR: "Entrez le code PIN client et cliquez sur 'Enregistrer'.",
        SPN: "Introduzca el código PIN del cliente y haga clic en 'Registrarse'.",
        DE: "Geben Sie den PIN-Code des WLAN-Geräts ein und klicken Sie auf die Schaltfläche 'Registrieren'.",
        IT: "Inserisci il codice PIN client e clicca su 'Registrati'.",
        DA: "Indtast pinkoden for klienten, og klik på 'Registrer'.",
        AR: "ادخل الرقم السري للعميل وانقر على تسجيل ",
        PT: "escreva o pin do cliente e pressione 'register''",
        RO: "TODO",
        IND: "TODO"
    },
    wpsInstruction7: {
        EN: "Activate WPS on the Wireless client within 2 minutes after clicking 'Register'.",
        FR: "Activer la fonction WPS sur le client sans fil dans les 2 minutes après avoir cliqué sur 'Enregistrer'.",
        SPN: "Activar WPS en el cliente inalámbrico dentro de los 2 minutos después de hacer clic en 'Registrarse'.",
        DE: "Aktivieren Sie WPS auf Ihrem WLAN-Gerät innerhalb von zwei Minuten, nachdem Sie auf die Schaltfläche 'Registieren' geklickt haben.",
        IT: "Attiva WPS sul client wireless entro 2 minuti dopo aver cliccato 'Registrati'.",
        DA: "Aktiver WPS på den trådløse klient inden for 2 minutter efter, at du har klikket på 'Registrer'.",
        AR: "تفعيل WPS على العميل اللاسلكي في غضون 2 دقيقة بعد الضغط على 'التسجيل'.",
        PT: "activar WPS no cliente wireless dentro dos 2 minutos depois de pressionar 'register'.'",
        RO: "TODO",
        IND: "TODO"
    },
    wpsTip1: {
        EN: "Click here to enable or disable WPS configuration.",
        FR: "Cliquez ici pour activer ou désactiver la configuration WPS.",
        SPN: "Haga clic aquí para activar o desactivar la configuración WPS.",
        DE: "Klicken Sie hier, um die Einrichtung einer WLAN-Verbindung per WPS-Verfahren (Wi-Fi Protected Setup) ein- bzw. auszuschalten.",
        IT: "Clicca qui per attivare o disattivare la configurazione WPS.",
        DA: "Klik her for at aktivere eller deaktivere WPS-konfigurationen.",
        AR: "انقر هنا لتمكين أو تعطيل تكوين WPS.",
        PT: "pressione aquí para habilitar ou desabilitar a configuraçao de WPS",
        RO: "TODO",
        IND: "TODO"
    },
    wpsTip2: {
        EN: "Here you can connect your device using the Wi-Fi Protected Setup button.",
        FR: "TODO",
        SPN: "Aqui puede conectar su dispositivo usando WPS (WiFi Protected Setup Button)",
        DE: "Zur Verbindung Ihres Endgerätes mittels WPS-Taster.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti conecta dispozitivul dvs. la reteaua Wi-Fi folosind butonul WPS (retea Wi-Fi securizata).",
        IND: "TODO"
    },
    wpsTip3: {
        EN: "Here you can connect your device using PIN Code generated.",
        FR: "TODO",
        SPN: "Aqui puede conectar su dispositivo usando un codigo PIN generado",
        DE: "Zur Verbindung Ihres Endgerätes mittels WPS-PIN-Code.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti conecta dispozitivul dvs. folosind un cod PIN generat.",
        IND: "TODO"
    },
    wpsTip4: {
        EN: "Here you can connect your device registering the client PIN Code.",
        FR: "TODO",
        SPN: "Aqui puede conectar su dispositivo registrando el codigo Pin del cliente",
        DE: "Verbindung Ihres Endgerätes durch Eingabe des von diesem erzeugten PIN-Codes.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti conecta dispozitivul dvs. prin inregistrarea codului PIN al clientului.",
        IND: "TODO"
    },
    wpsTip5: {
        EN: "Here you can select the modes of WPS.",
        FR: "TODO",
        SPN: "Aqui puede seleccionar los modos de WPS",
        DE: "Hier wählen Sie die gewünschte WPS-Verbindungmethode aus.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wpsRegister: {
        EN: "Register",
        FR: "Enregistrer",
        SPN: "Registrar",
        DE: "Registrieren",
        IT: "Registrati",
        DA: "Registrer",
        AR: "تسجيل ",
        PT: "registro",
        RO: "TODO",
        IND: "TODO"
    },
    wpsGenerate: {
        EN: "Generate New PIN Number",
        FR: "Générer un nouveau code PIN",
        SPN: "Generar nuevo número PIN",
        DE: "Neuen PIN-Code generieren",
        IT: "Genera nuovo PIN",
        DA: "Generer nyt pinnummer",
        AR: "توليد رقم PIN جديد",
        PT: "gerar um novo numero de PIN",
        RO: "TODO",
        IND: "TODO"
    },
    wpsProtectedSetup: {
        EN: "WPS (Wi-Fi Protected Setup)",
        FR: "WPS (Wi-Fi Protected Setup)",
        SPN: "WPS (Wi-Fi Protected Setup)",
        DE: "WPS (Wi-Fi Protected Setup)",
        IT: "WPS (Wi-Fi Protected Setup)",
        DA: "Wi-Fi beskyttet opsætning (WPS)",
        AR: "إعداد واي فاي المحمي ",
        PT: "WPS (Wi-Fi Protected Setup)",
        RO: "TODO",
        IND: "TODO"
    },
    protectedSetupWps: {
        EN: "Wi-Fi Protected Setup",
        FR: "TODO",
        SPN: "Wi-Fi Protected Setup",
        DE: "Wi-Fi Protected Setup (WPS) ",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Setari Wi-Fi protejate",
        IND: "TODO"
    },
    chooseFile: {
        EN: "Choose File",
        FR: "Choisir le Fichier",
        SPN: "Elija el archivo",
        DE: "Datei auswählen",
        IT: "Scegli il File",
        DA: "Vælg fil",
        AR: "اختر ملف ",
        PT: "escolha ficheiro",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip1: {
        EN: "Here you choose which firewall security level you want to set up.",
        FR: "Ici, vous choisissez le niveau de sécurité du pare-feu.",
        SPN: "Aquí elegimos qué nivel de seguridad del cortafuegos que desea configurar.",
        DE: "Hier wählen Sie die gewünschte Sicherheitsstufe für die eingebaute Firewall.",
        IT: "Qui scegli il livello di sicurezza del firewall che desideri impostare.",
        DA: "Her vælger du, hvilket niveau af firewallsikkerhed, du vil indstille",
        AR: "هنا ستختار مستوى جدار الحماية الذي تريد اعداده",
        PT: "aquí pode escolher que nivel de segurança de firewall quer configurar",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip2: {
        EN: "Choose here the service type.",
        FR: "Choisissez ici le type de service.",
        SPN: "Aquí se elige el tipo de servicio.",
        DE: "Wählen Sie hier den gewünschten Dienst aus.",
        IT: "Scegli qui il tipo di servizio.",
        DA: "Vælg typen af tjeneste her.",
        AR: "اختر نوع الخدمة هنا ",
        PT: "escolha aquí o tipo de serviço",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip3: {
        EN: "Here you choose the protocol type.",
        FR: "Ici, vous choisissez le type de protocole.",
        SPN: "Aquí se elige el tipo de protocolo.",
        DE: "Hier wählen Sie den Protokolltyp.",
        IT: "Qui scegli il tipo di protocollo.",
        DA: "Her vælger du protokoltypen.",
        AR: "اختر هنا نوع البروتوكول ",
        PT: "aquí pode escolher o tipo de protocolo",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip4: {
        EN: "Here you type local Ip.",
        FR: "Ici vous entrez l'IP locale.",
        SPN: "Aquí se escribe Ip local.",
        DE: "Hier geben Sie die lokale IP-Adresse ein.",
        IT: "Qui digiti l'IP locale.",
        DA: "Her indtaster du den lokale IP.",
        AR: "اكتب هنا IP المحلي ",
        PT: "aquí escreva o tipo de IP local",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip5: {
        EN: "Here you type local port.",
        FR: "Ici vous entrez le port local.",
        SPN: "Aquí se escribe el puerta local.",
        DE: "Hier geben Sie den lokale Port ein.",
        IT: "Qui digiti la porta locale.",
        DA: "Her indtaster du den lokale port.",
        AR: "اكتب هنا المنفذ المحلي ",
        PT: "aquí escreva o tipo de porta local",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip6: {
        EN: "Here you type remote Ip.",
        FR: "Ici vous entrez l'IP distante.",
        SPN: "Aquí se escribe IP remota.",
        DE: "Hier geben Sie die Remote IP-Adresse ein.",
        IT: "Qui digiti l'Ip remoto.",
        DA: "Her indtaster du den fjerne IP.",
        AR: "اكتب هنا IP عن بعد ",
        PT: "aquí escreva o tipo de IP remoto",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip7: {
        EN: "Here you type remote port.",
        FR: "Ici vous entrez le port distant.",
        SPN: "Aquí se escribe puerta remoto.",
        DE: "Hier geben Sie den Remote Port ein.",
        IT: "Qui digiti la porta remota.",
        DA: "Her indtaster du fjernporten.",
        AR: "اكتب هنا المنفذ البعيد ",
        PT: "aquí escreva o tipo de porta remota",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip8: {
        EN: "Here you choose which action will be set for this rule.",
        FR: "Ici, vous choisissez quelle action sera définie pour cette règle.",
        SPN: "Aquí elegimos qué acción se establece para esta regla.",
        DE: "Hier wählen Sie aus, welche Aktion für diese Regel angewendet werden soll.",
        IT: "Qui scegli l'azione da impostare per questa regola.",
        DA: "Her vælger du, hvilken handling, der skal indstilles for denne regel.",
        AR: "هنا ستختار أي عمل سيتم اتخاذه بخصوص هذه القاعدة ",
        PT: "aquí pode escolher que acçao vai ser escolhida para esta regra",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip9: {
        EN: "You can click in 'Clear' to reset all form values.",
        FR: "Vous pouvez cliquer sur 'Effacer tout' pour réinitialiser toutes les valeurs du formulaire.",
        SPN: "Puede hacer clic en 'Borrar' para restablecer todos los valores del formulario.",
        DE: "Klicken Sie auf die Schaltfläche 'Löschen', um alle Werte zu entfernen.",
        IT: "Puoi cliccare su 'Cancella' per azzerare tutti i valori del form.",
        DA: "Du kan klikke på 'Ryd' for at nulstille alle formularens værdier.",
        AR: "يمكنك النقر فوق 'مسح' لإعادة تعيين كافة قيم النموذج ",
        PT: "aquí pode pressionar 'clear' para apagar todas as formas de valor'",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip10: {
        EN: "You can click in 'Add' to add this rule to your list. Remember that this rule will be enabled only when you will click in 'Apply' in the bottom of the page.",
        FR: "Vous pouvez cliquer sur 'Ajouter' pour ajouter cette règle à votre liste. Rappelez-vous que cette règle ne sera activé que lorsque vous cliquerez sur 'Appliquer' en bas de la page.",
        SPN: "Puede hacer clic en 'Añadir' para añadir esta regla a su lista. Recuerde que esta regla se agregará sólo cuando haga clic en 'Aplicar' en la parte inferior de la página.",
        DE: "Klicken Sie auf die Schaltfläche 'Hinzufügen', um die Regel hinzuzufügen. Hinweis: Sie müssen danach noch auf die Schaltfläche 'Anwenden' klicken, um diese Regel zu aktivieren.",
        IT: "Puoi cliccare su 'Aggiungi' per aggiungere questa regola al tuo elenco. Ricorda che questa regola sarà attivata solo quando cliccherai su 'Applica' in fondo alla pagina.",
        DA: "Du kan klikke på 'Tilføj' for at tilføje denne regel til din liste. Husk, at denne regel først aktiveres, når du klikker på 'Anvend' i bunden af siden.",
        AR: "يمكنك النقر فوق 'إضافة' لإضافة هذه القاعدة على قائمتك. تذكر أنه سيتم تمكين هذه القاعدة فقط عند النقر على 'تطبيق' في أسفل الصفحة.",
        PT: "pode pressionar 'add' para adicionar uma regra á sua lista. Lembre-se que esta regra será activada apenas quando pressionar o botao 'apply' no fundo da pagina.'",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip11: {
        EN: "Actions in this list will be saved after clicking 'Apply' at bottom of page.",
        FR: "Les actions de cette liste seront enregistrées après l'appui sur le bouton 'Appliquer' au bas de la page.",
        SPN: "Todas las acciones en esta lista sólo se guardarán cuando haga clic en 'Aplicar' en la parte inferior de la página.",
        DE: "Änderungen an diesen Werten werden erst aktiv, wenn Sie auf die Schaltfläche 'Anwenden' klicken.",
        IT: "Le azioni in questo elenco verranno salvate cliccando su 'Applica' in fondo alla pagina.",
        DA: "Handlingen i denne liste vil først blive gemt, når du klikker på Anvend i bunden af siden.",
        AR: "سيتم حفظ الإجراءات في هذه القائمة بعد الضغط على 'تطبيق' في أسفل الصفحة.",
        PT: "as acçoes desta lista serao guardadas depois de pressionar 'apply' no fundo da pagina'",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip12: {
        EN: "Click here to enable or disable this rule.",
        FR: "Cliquez ici pour activer ou désactiver cette règle.",
        SPN: "Haga clic aquí para activar o desactivar esta regla.",
        DE: "Klicken Sie hier, um die Regel zu aktivieren bzw. deaktivieren.",
        IT: "Clicca qui per attivare o disattivare questa regola.",
        DA: "Klik her for at aktivere eller deaktivere denne regel.",
        AR: "انقر هنا لتمكين أو تعطيل هذه القاعدة.",
        PT: "pressione aquí para habilitar e desabilitar esta regra",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip13: {
        EN: "Click here to remove this rule. A confirmation box will appear to confirm the exclusion.",
        FR: "Cliquez ici pour supprimer cette règle. Une boîte de confirmation s`'affichera.",
        SPN: "Haga clic aquí para eliminar esta regla. Un cuadro de confirmación se mostrará a confirmar la exclusión.",
        DE: "Klicken Sie hier, um die Regel zu entfernen. Sie werden in einem separaten Fenster aufgefordert, diesen Schritt zu bestätigen.",
        IT: "Clicca qui per rimuovere questa regola. Una finestra di conferma apparirà per confermare l'esclusione.",
        DA: "Klik her for at fjerne denne regel. En bekræftelsesboks vil blive vist for at bekræfte sletningen.",
        AR: "انقر هنا لإزالة هذه القاعدة. سوف يظهر مربع التأكيد لتأكيد الاستبعاد",
        PT: "pressione aquí para remover esta regra. Uma caixa de confirmaçao aparecerá para confirmar a exclusao",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip14: {
        EN: "Click here to edit this rule. This rule parameters will be set in form above.",
        FR: "Cliquez ici pour modifier cette règle. Les paramètres de cette règle apparaitront dans le formulaire ci-dessous.",
        SPN: "Haga clic aquí para editar esta regla. Estos valores de normas se establecerán en formulario de arriba.",
        DE: "Klicken Sie hier, um die Regel zu ändern. Die Parameter dieser Regel werden in den obigen Feldern vorgenommen.",
        IT: "Clicca qui per modificare questa regola. Questi parametri regola verrà impostato in forma di cui sopra.",
        DA: "Klik her for at redigere denne regel. Denne regels parametre vil blive indstillet i formularen herover.",
        AR: "انقر هنا لتعديل هذه القاعدة. سيتم تعيين معلمات القاعدة في النموذج أعلاه.",
        PT: "pressione aquí para editar esta regra. Os parametros desta regra serao alterados desta forma",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip15: {
        EN: "Click on 'Clear' to reset all form values.",
        FR: "Cliquez sur 'Effacer tout' pour réinitialiser toutes les valeurs du formulaire.",
        SPN: "Puede hacer clic en 'Borrar' para restablecer todos los valores del formulario.",
        DE: "Klicken Sie auf die Schaltfläche 'Löschen', um alle Werte zu entfernen.",
        IT: "Clicca su 'Cancella' per azzerare tutti i valori del form.",
        DA: "Klik på 'Ryd' for at nulstille alle formularens værdier.",
        AR: "انقر على 'مسح' لإعادة تعيين كافة قيم النموذج",
        PT: "pressione 'clear' para fazer reset a todos os valores'",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip16: {
        EN: "You can click in 'Update' to add this rule to your list. Remember that this rule will be enabled only when you click in 'Apply' in the bottom of the page.",
        FR: "Vous pouvez cliquer sur 'Mise à jour' pour ajouter cette règle à votre liste. Rappelez-vous que cette règle ne sera activé qu'après l'appui sur le bouton 'Appliquer' en bas de la page.",
        SPN: "Puede hacer clic en 'Actualizar' para añadir esta regla a su lista. Recuerde que esta regla se agregará sólo cuando haga clic en 'Aplicar' en la parte inferior de la página.",
        DE: "Klicken Sie auf die Schaltfläche 'Aktualisieren', um die Änderungen der Regel zu speichern. Hinweis: Sie müssen danach noch auf die Schaltfläche 'Anwenden' klicken, um diese Regel zu aktivieren.",
        IT: "Puoi cliccare su 'Aggiorna' per aggiungere questa regola al tuo elenco. Ricorda che questa regola sarà attivata solo quando cliccherai su 'Applica' in fondo alla pagina.",
        DA: "Du kan klikke på 'Opdater' for at tilføje denne regel til din liste. Husk, at denne regel først aktiveres, når du klikker på 'Anvend' i bunden af siden.",
        AR: "يمكنك النقر على 'تحديث' لإضافة هذه القاعدة على قائمتك. تذكر أنه سيتم تمكين هذه القاعدة فقط عند النقر على 'تطبيق' في أسفل الصفحة.",
        PT: "pode pressionar 'update' para adicionar esta regra á sua lista. Lembre-se que esta regra será activada apenas quando pressionar 'apply' no fundo da pagina.'",
        RO: "TODO",
        IND: "TODO"
    },
    firewallTip17: {
        EN: "Click here to see firewall security logs.",
        FR: "Cliquez ici pour voir les logs du firewall.",
        SPN: "Click para ver los logs de seguridad del firewall",
        DE: "Klicken Sie hier, um die Log-Einträge der Firewall einzusehen.",
        IT: "Seleziona qui per vedere i log del firewall",
        DA: "Klik her, for at se sikkerhedslog for firewall.",
        AR: "TODO",
        PT: "pressione aquí para ver os logs de segurança do firewall",
        RO: "Apasati aici pentru a vedea jurnalul de securitate firewall.",
        IND: "TODO"
    },
    firewallTip18: {
        EN: "Click here to apply changes in rules order.",
        FR: "Cliquez ici pour appliquer les changements sur l'ordre des règles.",
        SPN: "Click para aplicar cambios en el orden de las reglas",
        DE: "Klicken Sie hier, um die Regeländerungen zu übernehmen.",
        IT: "Seleziona qui per applicare i cambiamenti nell'ordine delle regole",
        DA: "Klik her, for at udføre ændringer i rækkefølgen af reglerne.",
        AR: "TODO",
        PT: "pressione aquí para aplicar as mudanças na ordem das regras",
        RO: "Apasati aici pentru a aplica schimbarea ordinii regulilor.",
        IND: "TODO"
    },
    firewallTip19: {
        EN: "Click here to cancel changes in rules order.",
        FR: "Cliquez ici pour annuler les changements sur l'ordre des règles.",
        SPN: "Click para cancelar cambios en el orden de las reglas",
        DE: "Klicken Sie hier, um die Änderungen an der Regel zu widerrufen.",
        IT: "Seleziona qui per cancellare i cambiamenti nell'ordine delle regole",
        DA: "Klik her, for at afbryde ændringerne i rækkefølgen af reglerne.",
        AR: "TODO",
        PT: "pressione aquí para cancelar as mudanças na ordem das regras",
        RO: "Apasati aici pentru aanula schimbarea ordinii regulilor.",
        IND: "TODO"
    },
    firewallTip20: {
        EN: "You can drag the rules up and down to change the order.",
        FR: "Vous pouvez déplacer les règles vers le haut ou vers le bas pour en changer l'ordre.",
        SPN: "Puede arrastrar las reglas arriba y abajo para cambiar el orden",
        DE: "Sie können Regeln entsprechend der gewünschten Reihenfolge, in der Sie zur Anwendung kommen sollen, anordnen. Klicken und ziehen Sie die Regel hierzu nach oben oder unten.",
        IT: "Puoi spostare le regole sopra e sotto per cambiarne l'ordine",
        DA: "Du kan trække reglerne op og ned for at ændre rækkefølgen.",
        AR: "TODO",
        PT: "pode arrastar as regras para cima e para baixo para mudar a ordem.",
        RO: "Puteti muta regula in sus si in jos pentru a schimba ordinea.",
        IND: "TODO"
    },
    firewallTip99: {
        EN: "Here you set custom level name.",
        FR: "Ici vous définissez personnalisée nom de niveau.",
        SPN: "Here you set custom level name.",
        DE: "Hier können Sie benutzerdefinierte Ebenennamen festlegen.",
        IT: "Qui puoi impostare il nome di livello personalizzato.",
        DA: "Her angiver du navnet for det tilpassede niveau.",
        AR: "هنا يمكنك تعيين اسم مستوى مخصص.",
        PT: "aquí pode alterar o nome do nivel",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStats: {
        EN: "Stats",
        FR: "Stats",
        SPN: "Stats",
        DE: "Statistiken",
        IT: "Statistiche",
        DA: "Statistik",
        AR: "احصائيات",
        PT: "estatisticas",
        RO: "TODO",
        IND: "TODO"
    },
    statusWifi: {
        EN: "Wi-Fi Stats",
        FR: "Statistiques Wi-Fi",
        SPN: "Estadísticas Wi-Fi",
        DE: "WLAN-Status",
        IT: "Statistiche Wi-Fi",
        DA: "Wi-Fi statistik",
        AR: "احصائيات واي فاي",
        PT: "estatisticas de Wi-Fi",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStatsTip0: {
        EN: "Here you can see the current status.",
        FR: "Ici, vous pouvez voir le stat actuelle.",
        SPN: "Aquí puede ver la estadística actual.",
        DE: "Hier sehen Sie den aktuellen Status.",
        IT: "Qui puoi vedere lo stato attuale.",
        DA: "Her kan du se den aktuelle status.",
        AR: "هنا يمكنك ان ترى الوضع الحالي.",
        PT: "aquí pode ver o estado actual",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStatsTip1: {
        EN: "Here you can see the current Link Speed.",
        FR: "Ici vous pouvez voir la vitesse actuelle Link.",
        SPN: "Aquí puedes ver la corriente Speed Link.",
        DE: "Hier sehen Sie die aktuelle Verbindungsgeschwindigkeit.",
        IT: "Qui puoi vedere la velocità di collegamento attuale.",
        DA: "Her kan du se den aktuelle forbindelseshastighed.",
        AR: "هنا يمكنك ان ترى سرعة الارتباط الحالية.",
        PT: "aquí pode ver a velocidade actual do link",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStatsTip2: {
        EN: "Here you can see the packets sent and received.",
        FR: "Ici vous pouvez voir les paquets envoyés et reçus.",
        SPN: "Aquí puedes ver los paquetes enviados y recibidos.",
        DE: "Hier sehen Sie die versandten und empfangenen Pakete.",
        IT: "Qui puoi vedere i pacchetti inviati e ricevuti.",
        DA: "Her kan du se de sendte og modtagne pakker.",
        AR: "هنا يمكنك ان ترى الحزم المرسلة والمستلمة.",
        PT: "aquí pode ver os paquetes enviados e recebidos",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStatsTip3: {
        EN: "Here you can see the bytes sent and received.",
        FR: "Ici vous pouvez voir les octets envoyés et reçus.",
        SPN: "Aquí puedes ver los bytes enviados y recibidos.",
        DE: "Hier sehen Sie die versandte und empfangene Byte-Menge.",
        IT: "Qui puoi vedere i byte inviati e ricevuti.",
        DA: "Her kan du se de sendte og modtagne bytes.",
        AR: "هنا يمكنك ان ترى حجم البايتات المرسلة والمستلمة.",
        PT: "aquí pode ver os bytes enviados e recebidos",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStatsTip4: {
        EN: "Here you can see the errors in packets sent and received.",
        FR: "Ici vous pouvez voir les erreurs dans les paquets envoyés et reçus.",
        SPN: "Aquí puedes ver los errores en los paquetes enviados y recibidos.",
        DE: "Hier sehen Sie die Fehler in den versandten und empfangenen Paketen.",
        IT: "Qui puoi vedere gli errori nei pacchetti inviati e ricevuti.",
        DA: "Her kan du se fejl i de sendte og modtagne pakker.",
        AR: "هنا يمكنك ان ترى الأخطاء في الحزم المرسلة والمستلمة",
        PT: "aquí pode ver os erros enviados e recebidos",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStatsTip5: {
        EN: "Here you can see the discarded packets sent and received.",
        FR: "Ici vous pouvez voir les paquets rejetés envoyés et reçus.",
        SPN: "Aquí puedes ver los paquetes descartados enviados y recibidos.",
        DE: "Hier sehen Sie die versandten und empfangenen abgelehnten Pakete.",
        IT: "Qui puoi vedere i pacchetti scartati inviati e ricevuti.",
        DA: "Her kan du se de afviste sendte og modtagne pakker.",
        AR: "هنا يمكنك ان ترى الحزم المهملة المرسلة والمستلمة ",
        PT: "aquí pode ver os paquetes descartados enviados e recebidos",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStatsTip6: {
        EN: "Here you can see the unicast packets sent and received.",
        FR: "Ici vous pouvez voir les paquets unicast envoyés et reçus.",
        SPN: "Aquí puedes ver los paquetes unicast enviados y recibidos.",
        DE: "Hier sehen Sie die versandten und empfangenen Unicast-Pakete.",
        IT: "Qui puoi vedere i pacchetti unicast inviati e ricevuti.",
        DA: "Her kan du se de sendte og modtagne unicast-pakker.",
        AR: "هنا يمكنك ان ترى الحزم أحادية الإرسال المرسلة والمستلمة ",
        PT: "aquí pode ver os paquetes unicast enviados e recebidos",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStatsTip7: {
        EN: "Here you can see the multicast packets sent and received.",
        FR: "Ici vous pouvez voir les paquets multicast envoyés et reçus.",
        SPN: "Aquí puedes ver los paquetes de multidifusión enviados y recibidos.",
        DE: "Hier sehen Sie die versandten und empfangenen Multicast-Pakete.",
        IT: "Qui puoi vedere i pacchetti multicast inviati e ricevuti.",
        DA: "Her kan du se de sendte og modtagne multicast-pakker.",
        AR: "هنا يمكنك ان ترى حزم الإرسال المتعدد المرسلة والمستلمة",
        PT: "aquí pode ver os paquetes multicast enviados e recebidos",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStatsTip8: {
        EN: "Here you can see the broadcast packets sent and received.",
        FR: "Ici vous pouvez voir les paquets de diffusion envoyés et reçus.",
        SPN: "Aquí puedes ver los paquetes de difusión enviados y recibidos.",
        DE: "Hier sehen Sie die versandten und empfangenen Sendepakete.",
        IT: "Qui puoi vedere i pacchetti broadcast inviati e ricevuti.",
        DA: "Her kan du se de sendte og modtagne broadcast-pakker.",
        AR: "هنا يمكنك ان ترى حزم البث المرسلة والمستلمة",
        PT: "aquí pode ver os paquetes broadcast enviados e recebidos",
        RO: "TODO",
        IND: "TODO"
    },
    wifi24advancedTip1: {
        EN: "Select Wi-Fi operating mode.",
        FR: "Sélectionnez le mode de fonctionnement du Wi-Fi.",
        SPN: "Seleccione el modo de funcionamiento inalámbrico.",
        DE: "Wählen Sie die Art des WLAN.",
        IT: "Seleziona la modalità di funzionamento Wi-Fi.",
        DA: "Indstil Wi-Fi driftstilstand.",
        AR: "تحديد وضع التشغيل واي فاي",
        PT: "Seleccione o modo de operaçao de Wi-Fi",
        RO: "TODO",
        IND: "TODO"
    },
    wifi24advancedTip2: {
        EN: "Select country.",
        FR: "Sélectionnez le pays.",
        SPN: "Seleccione el país.",
        DE: "Land auswählen.",
        IT: "Seleziona il paese.",
        DA: "Vælg land.",
        AR: "اختر البلد",
        PT: "Seleccione o pais",
        RO: "TODO",
        IND: "TODO"
    },
    wifi24advancedTip3: {
        EN: "Select bandwidth.",
        FR: "Sélectionner la largeur de bande.",
        SPN: "Seleccione el ancho de banda.",
        DE: "Funkkanalbreite auswählen.",
        IT: "Seleziona la larghezza di banda.",
        DA: "Vælg båndbredde.",
        AR: "حدد عرض النطاق الترددي.",
        PT: "Seleccione a banda",
        RO: "TODO",
        IND: "TODO"
    },
    wifi24advancedTip4: {
        EN: "Select Extension channel.",
        FR: "Sélectionner le canal étendu.",
        SPN: "Seleccione la potencia transmitida.",
        DE: "Ausweich-Funkkanal auswählen.",
        IT: "Selezionare il canale di estensione.",
        DA: "Vælg udvidelseskanal.",
        AR: "اختر قناة التمديد.",
        PT: "Seleccione o canal de extensao",
        RO: "TODO",
        IND: "TODO"
    },
    wifi24advancedTip5: {
        EN: "Select transmit power",
        FR: "Choisir la puissance d'émission.",
        SPN: "Seleccione la potencia transmitida.",
        DE: "Sendeleistung auswählen.",
        IT: "Seleziona la potenza di trasmissione.",
        DA: "Vælg overførselsstrøm.",
        AR: "اختر نقل الطاقة.",
        PT: "Seleccione a potencia de transmissao",
        RO: "TODO",
        IND: "TODO"
    },
    wifi24advancedTip6: {
        EN: "Shows maximum amounts of connected clients.",
        FR: "Affiche le nombre maximal autorisé de clients connectés.",
        SPN: "Muestra las cantidades máximas de los clientes conectados.",
        DE: "Zeigt die maximale Anzahl an verbundenen WLAN-Geräten.",
        IT: "Mostra il numero massimo di client connessi.",
        DA: "Vælg det maksimale antal forbundne klienter.",
        AR: "أظهر الحد الأقصى لعدد العملاء المتصلين.",
        PT: "mostra a quantidade maxima de clientes ligados",
        RO: "TODO",
        IND: "TODO"
    },
    wifi24advancedTip7: {
        EN: "Enable or Disable WMM",
        FR: "Activer ou désactiver WMM.",
        SPN: "Activar o desactivar WMM.",
        DE: "WMM ein- bzw. ausschalten.",
        IT: "Attiva o disattiva WMM.",
        DA: "Aktivér eller deaktivér WMM.",
        AR: "تمكين أو تعطيل WMM.",
        PT: "habilitar e desabilitar WMM",
        RO: "TODO",
        IND: "TODO"
    },
    wifi24advancedTip8: {
        EN: "Enable or Disable NO Acknowledgement",
        FR: "Activer ou désactiver SANS Accusé.",
        SPN: "Activar o desactivar NO Reconocimiento.",
        DE: "NO Acknwoledgement ein- bzw. ausschalten.",
        IT: "Attiva o disattiva NO Riconoscimento.",
        DA: "Aktivér elle deaktivér INGEN bekræftelse.",
        AR: "تمكين أو تعطيل NO إقرار.",
        PT: "habilitar e desabilitar NO Acknowledgement",
        RO: "TODO",
        IND: "TODO"
    },
    wifi24advancedTip9: {
        EN: "Enable or Disable APSD.",
        FR: "Activer ou désactiver APSD.",
        SPN: "Activar o desactivar APSD.",
        DE: "APSD ein- bzw. ausschalten",
        IT: "Attiva o disattiva APSD.",
        DA: "Aktivér eller deaktivér APSD.",
        AR: "تمكين أو تعطيل APSD.",
        PT: "habilitar e desabilitar APSd",
        RO: "TODO",
        IND: "TODO"
    },
    wifi24advancedTip10: {
        EN: "Cancel changes and return to home page.",
        FR: "Annuler les modifications et retourner à la page d'accueil.",
        SPN: "Cancelar los cambios y redirigir a casa.",
        DE: "Änderungen verwerfen und zurück zur Startseite.",
        IT: "Annulla le modifiche e torna alla home page.",
        DA: "Annullér ændringerne, og returner til 'Hjem'.",
        AR: "إلغاء التغييرات والعودة إلى الصفحة الرئيسية.",
        PT: "cancelar mudanças e voltar á pagina inicial",
        RO: "TODO",
        IND: "TODO"
    },
    wifi24advancedTip11: {
        EN: "Save settings changes.",
        FR: "Enregistrer les modifications.",
        SPN: "Guarde los cambios de configuración.",
        DE: "Änderungen speichern.",
        IT: "Salva le modifiche alle impostazioni.",
        DA: "Gem indstillingsændringerne.",
        AR: "حفظ التغييرات والإعدادات.",
        PT: "guardar alteraçoes",
        RO: "TODO",
        IND: "TODO"
    },
    wifiScanTip0: {
        EN: "Here you can see the number of Wi-Fi networks per channel.",
        FR: "TODO",
        SPN: "Aqui puede ver el numero de redes WiFi por canal",
        DE: "Anzeige der drahtlosen Netze (WLAN) pro Funkkanal",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti vedea numarul de retele Wi-Fi pe fiecare canal.",
        IND: "TODO"
    },
    statsUpDownWifi: {
        EN: "Stats:",
        FR: "Stats:",
        SPN: "Stats:",
        DE: "Statistiken:",
        IT: "Statistiche:",
        DA: "Statistik:",
        AR: "إحصائيات:",
        PT: "estatisticas:",
        RO: "TODO",
        IND: "TODO"
    },
    statsTip1: {
        EN: "Here you can see Wi-Fi Stats.",
        FR: "Ici vous pouvez voir le statut du Wi-Fi.",
        SPN: "Aquí puedes ver las estadísticas Wi-Fi.",
        DE: "Hier wird der WLAN-Status angezeigt.",
        IT: "Qui puoi visualizzare le statistiche Wi-Fi.",
        DA: "Her kan du se Wi-Fi statistik.",
        AR: "هنا يمكنك ان ترى احصائيات واي فاي.",
        PT: "aquí pode consultar as estatisticas de Wi-Fi",
        RO: "TODO",
        IND: "TODO"
    },
    country: {
        EN: "Country Selection",
        FR: "Sélection du Pays ",
        SPN: "Selección del país ",
        DE: "Land",
        IT: "Selezione Paese",
        DA: "Valg af land",
        AR: "اختيار البلد ",
        PT: "Seleçao de pais",
        RO: "TODO",
        IND: "TODO"
    },
    region: {
        EN: "Region",
        FR: "TODO",
        SPN: "Region",
        DE: "Region",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "regiao",
        RO: "Regiune",
        IND: "TODO"
    },
    current: {
        EN: "Current:",
        FR: "TODO",
        SPN: "Actual",
        DE: "Aktuell:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Actual:",
        RO: "Curent:",
        IND: "TODO"
    },
    currentChannel: {
        EN: "Current Channel",
        FR: "Canal actuel",
        SPN: "Canal actual",
        DE: "Aktueller kanal",
        IT: "Canale corrente",
        DA: "Aktuelle kanal",
        AR: "القناة الحالية",
        PT: "Canal actual",
        RO: "Canal curent",
        IND: "TODO"
    },
    channelWidth: {
        EN: "Channel Width",
        FR: "TODO",
        SPN: "Anchura de canal",
        DE: "Bandbreite Funkkanal",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "largura de canal",
        RO: "Banda canal",
        IND: "TODO"
    },
    wifiNetwork: {
        EN: "Wi-Fi Network",
        FR: "TODO",
        SPN: "Red WiFi",
        DE: "WLAN",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Wi-Fi network",
        RO: "Retea WiFi",
        IND: "TODO"
    },
    wifiWmm: {
        EN: "WMM - Wi-Fi Multimedia",
        FR: "WMM - Wi-Fi Multimedia",
        SPN: "WMM - Wi-Fi Multimedia",
        DE: "WMM - WLAN-Multimedia",
        IT: "WMM - Wi-Fi Multimedia",
        DA: "WMM - Wi-Fi multimedie",
        AR: "مواصفة واي-فاي ملتيميديا - WMM",
        PT: "WMM - Wi-Fi multimedia",
        RO: "TODO",
        IND: "TODO"
    },
    wifiMode: {
        EN: "Wireless Mode",
        FR: "Mode Wi-Fi",
        SPN: "Modo inalámbrico",
        DE: "WLAN-Modus",
        IT: "Modalità wireless",
        DA: "Trådløs tilstand",
        AR: "وضع اللاسلكي",
        PT: "modo wireless",
        RO: "TODO",
        IND: "TODO"
    },
    bandWidth: {
        EN: "Bandwidth",
        FR: "Débit",
        SPN: "Bandwidth",
        DE: "Funkkanalbreite",
        IT: "Larghezza di banda",
        DA: "Båndbredde",
        AR: "عرض النطاق الترددي",
        PT: "largura de banda",
        RO: "TODO",
        IND: "TODO"
    },
    extensionChannel: {
        EN: "Extension Channel",
        FR: "Canal étendu",
        SPN: "Extension Channel",
        DE: "Ausweich-Funkkanal",
        IT: "Canale di estensione",
        DA: "Extension Channel",
        AR: "قناة التمديد",
        PT: "extensao de canal",
        RO: "TODO",
        IND: "TODO"
    },
    transmitPower: {
        EN: "Transmit Power",
        FR: "Puissance d'émiss.",
        SPN: "Transmit Power",
        DE: "Sendeleistung",
        IT: "Trasmissione di potenza",
        DA: "Sendeeffekt",
        AR: "نقل الطاقة",
        PT: "potencia de transmissao",
        RO: "TODO",
        IND: "TODO"
    },
    maxClients: {
        EN: "Global Max Clients ",
        FR: "Nb max clients ",
        SPN: "Global Max Clients ",
        DE: "Maximal erlaubte WLAN-Geräte",
        IT: "Max. client globali",
        DA: "Global maks. Antal klienter ",
        AR: "عملاء ماكس العالميين ",
        PT: "clientes maximos globais",
        RO: "TODO",
        IND: "TODO"
    },
    advancedConfig: {
        EN: "Advanced Configuration",
        FR: "Configuration Avancée",
        SPN: "Configuración Avanzada ",
        DE: "Erweiterte Einstellungen",
        IT: "Configurazione avanzata",
        DA: "Avanceret konfiguration",
        AR: "تكوين متقدم",
        PT: "configuraçao avançada",
        RO: "TODO",
        IND: "TODO"
    },
    acPcInternetAcessControlPlanning: {
        EN: "Internet access control planning",
        FR: "Horaires d'accès à Internet",
        SPN: "Planificación del control de acceso a Internet",
        DE: "Einrichtung der Kindersicherung",
        IT: "Pianificazione controllo accesso Internet",
        DA: "Planlægning af styring af internetadgang",
        AR: "تخطيط التحكم بالوصول إلى الإنترنت",
        PT: "plano de controlo de acesso á internet",
        RO: "TODO",
        IND: "TODO"
    },
    acPcCtrlKey: {
        EN: "Use Ctrl key (or Cmd on Mac) to select more than one device",
        FR: "Utiliser la touche Ctrl pour sélectionner plus d'un appareil",
        SPN: "Utilice la tecla Ctrl para seleccionar más de un dispositivo",
        DE: "Verwenden Sie die Strg-Taste, um mehr als ein Gerät auszuwählen",
        IT: "Utilizza il tasto Ctrl per selezionare più di un dispositivo",
        DA: "Brug Ctrl-tasten til at vælge flere enheder end én",
        AR: "استخدم مفتاح Ctrl لتحديد أكثر من جهاز واحد.",
        PT: "use Ctrl para seleccionar mais de um dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    privateUrlFiltering: {
        EN: "URL Filter",
        FR: "Filtrage d'URl",
        SPN: "Filtro URl",
        DE: "Privater Adressfilter",
        IT: "Filtro URl",
        DA: "URL-filter",
        AR: "خاصية فلترة URl",
        PT: "filtro URl",
        RO: "TODO",
        IND: "TODO"
    },
    acPcSelect: {
        EN: "Select",
        FR: "Sélectionner",
        SPN: "Seleccionar",
        DE: "Auswählen",
        IT: "Seleziona",
        DA: "Vælg",
        AR: "اختيار ",
        PT: "Seleccione",
        RO: "TODO",
        IND: "TODO"
    },
    acPcAllDevices: {
        EN: "All devices",
        FR: "Tous les périphériques",
        SPN: "Todos los dispositivos",
        DE: "Alle Geräte",
        IT: "Tutti i dispositivi",
        DA: "Alle enheder",
        AR: "جميع الأجهزة",
        PT: "todos os dispositivos",
        RO: "TODO",
        IND: "TODO"
    },
    acPcWeekTimeSlots: {
        EN: "Week Time Slots",
        FR: "Semaine",
        SPN: "Semana Tiempo Slots",
        DE: "Wochentage",
        IT: "Fascia oraria settimanale",
        DA: "Uge tidsintervaller",
        AR: "خيارات أيام الاسبوع ",
        PT: "Slots de tempo semanais",
        RO: "TODO",
        IND: "TODO"
    },
    acPcAllowed: {
        EN: "Allowed",
        FR: "Autorisé",
        SPN: "Permitido",
        DE: "Erlauben",
        IT: "Consentito",
        DA: "Tilladt",
        AR: "مسموح ",
        PT: "autorizado",
        RO: "TODO",
        IND: "TODO"
    },
    acPcDenied: {
        EN: "Denied",
        FR: "Bloqué",
        SPN: "Denegado",
        DE: "Blockieren",
        IT: "Negato",
        DA: "Afvist",
        AR: "مرفوض ",
        PT: "denegado",
        RO: "TODO",
        IND: "TODO"
    },
    acPcMixed: {
        EN: "Mixed",
        FR: "Mixte",
        SPN: "Mezclado",
        DE: "Gemischt",
        IT: "Misto",
        DA: "Blandet",
        AR: "مختلط",
        PT: "misturado",
        RO: "TODO",
        IND: "TODO"
    },
    acPcDenyAll: {
        EN: "Deny all",
        FR: "Bloquer tout",
        SPN: "Denegar todo",
        DE: "Alle blockieren",
        IT: "Nega tutto",
        DA: "Afvis alle",
        AR: "رفض الجميع ",
        PT: "denegar tudo",
        RO: "TODO",
        IND: "TODO"
    },
    acPcSunday: {
        EN: "Sunday",
        FR: "Dimanche",
        SPN: "Domingo",
        DE: "Sonntag",
        IT: "Domenica",
        DA: "Søndag",
        AR: "الأحد",
        PT: "domingo",
        RO: "TODO",
        IND: "TODO"
    },
    acPcMonday: {
        EN: "Monday",
        FR: "Lundi",
        SPN: "Lunes",
        DE: "Montag",
        IT: "Lunedi",
        DA: "Mandag",
        AR: "الاثنين",
        PT: "Segunda-feira",
        RO: "TODO",
        IND: "TODO"
    },
    acPcTuesday: {
        EN: "Tuesday",
        FR: "Mardi",
        SPN: "Martes",
        DE: "Dienstag",
        IT: "Martedì",
        DA: "Tirsdag",
        AR: "الثلاثاء",
        PT: "terça-feira",
        RO: "TODO",
        IND: "TODO"
    },
    acPcWednesday: {
        EN: "Wednesday",
        FR: "Mercredi",
        SPN: "Miércoles",
        DE: "Mittwoch",
        IT: "Mercoledì",
        DA: "Onsdag",
        AR: "الأربعاء",
        PT: "quarta-feira",
        RO: "TODO",
        IND: "TODO"
    },
    acPcThursday: {
        EN: "Thursday",
        FR: "Jeudi",
        SPN: "Jueves",
        DE: "Donnerstag",
        IT: "Giovedì",
        DA: "Torsdag",
        AR: "الخميس",
        PT: "quinta-feira",
        RO: "TODO",
        IND: "TODO"
    },
    acPcFriday: {
        EN: "Friday",
        FR: "Vendredi",
        SPN: "Viernes",
        DE: "Freitag",
        IT: "Venerdì",
        DA: "Fredag",
        AR: "الجمعة",
        PT: "Sexta-feira",
        RO: "TODO",
        IND: "TODO"
    },
    acPcSaturday: {
        EN: "Saturday",
        FR: "Samedi",
        SPN: "Sábado",
        DE: "Samstag",
        IT: "Sabato",
        DA: "Lørdag",
        AR: "السبت ",
        PT: "Sabado",
        RO: "TODO",
        IND: "TODO"
    },
    acPcWebSiteFilter: {
        EN: "Categories",
        FR: "Catégories",
        SPN: "Categorías",
        DE: "Kategorien",
        IT: "Categorie",
        DA: "Kategorier",
        AR: "الفئات",
        PT: "categorias",
        RO: "TODO",
        IND: "TODO"
    },
    acPcWebSiteFilterExplained: {
        EN: "The feature below allows to block access to some categories of Internet pages. You can apply a different configuration for each host.",
        FR: "La fonctionnalité ci-dessous permet de bloquer l'accès a certaines catégories de sites Internet. Vous pouvez appliquer une configuration différente pour chaque hôte.",
        SPN: "La siguiente función permite bloquear el acceso a algunas categorías de las páginas de Internet. Puede solicitar una configuración diferente para cada host.",
        DE: "Die folgende Funktion ermöglicht, den Zugriff auf bestimmte Kategorien von Internetseiten zu blockieren. Sie können für jeden Host eine andere Konfiguration anwenden.",
        IT: "La funzione di seguito consente di bloccare l'accesso ad alcune categorie di pagine Internet. È possibile applicare una configurazione diversa per ogni host.",
        DA: "Funktionen herunder giver mulighed for at blokere adgang til visse kategorier af internetsider. Du kan anvende en forskellig konfigurering for hver host.",
        AR: "تتيح الميزة أدناه منعَ الدخول إلى بعض فئات صفحات الإنترنت. يمكنك تطبيق تكوين مختلف لكل مضيف.",
        PT: "esta caracteristica permite bloquear o acesso a algumas categorias de paginas web. Pode aplicar diferentes configuraçoes para cada host.",
        RO: "TODO",
        IND: "TODO"
    },
    acPcWebSiteFilterExplainedOfeo: {
        EN: "The feature below allows to block access to some categories of Internet pages. You can apply a different configuration for each host.",
        FR: "La fonctionnalité ci-dessous permet de bloquer l'accès a certaines catégories de sites Internet. Vous pouvez appliquer une configuration différente pour chaque hôte.",
        SPN: "La siguiente función permite bloquear el acceso a algunas categorías de las páginas de Internet. Puede solicitar una configuración diferente para cada host.",
        DE: "Die folgende Funktion ermöglicht, den Zugriff auf bestimmte Kategorien von Internetseiten zu blockieren. Sie können für jeden Host eine andere Konfiguration anwenden.",
        IT: "La funzione di seguito consente di bloccare l'accesso ad alcune categorie di pagine Internet. È possibile applicare una configurazione diversa per ogni host.",
        DA: "Funktionen herunder giver mulighed for at blokere adgang til visse kategorier af internetsider. Du kan anvende en forskellig konfigurering for hver host.",
        AR: "تتيح الميزة أدناه منعَ الدخول إلى بعض فئات صفحات الإنترنت. يمكنك تطبيق تكوين مختلف لكل مضيف.",
        PT: "esta caracteristica permite bloquear o acesso a algumas categorias de paginas web. Pode aplicar diferentes configuraçoes para cada host.",
        RO: "TODO",
        IND: "TODO"
    },
    acPcResetAllDay: {
        EN: "Reset a full day",
        FR: "Réinitialiser une journée complète",
        SPN: "Resetear todo el dia",
        DE: "Einen kompletten Tag zurücksetzen",
        IT: "Azzerare una giornata completa",
        DA: "Nulstil en hel dag",
        AR: "TODO",
        PT: "reset o dia inteiro",
        RO: "Reseteaza o zi intreaga",
        IND: "TODO"
    },
    scheduleTip: {
        EN: "Click and drag on schedule bars below to select desired time.",
        FR: "Cliquez et maintenez sur les barres ci-dessous pour sélectionner les heures désirées.",
        SPN: "Click y arrastrar en las barras temporales para seleccionar el tiempo deseado",
        DE: "Klicken und ziehen Sie die Balken unten, um die gewünschte Zeit einzustellen.",
        IT: "Premere e mantenere sulle barre qui sotto per selezionare le ore desiderate",
        DA: "Klik og træk i planlægningsbjælken nedenfor, for at vælge den ønskede tid.",
        AR: "TODO",
        PT: "pressione e arrastre no calendario para escolher a hora desejada",
        RO: "Apasati si trageti de barele de program de mai jos pentru a selecta ora dorita.",
        IND: "TODO"
    },
    acPcAddress: {
        EN: "Add Address",
        FR: "Ajouter une adresse",
        SPN: "Añadir dirección",
        DE: "Webseite hinzufügen",
        IT: "Aggiungi Indirizzo",
        DA: "Tilføj adresse",
        AR: "إضافة عنوان",
        PT: "adicione endereço",
        RO: "TODO",
        IND: "TODO"
    },
    acPcEnable: {
        EN: "Enable",
        FR: "Activer",
        SPN: "Permitir",
        DE: "Aktivieren",
        IT: "Consenti",
        DA: "Aktivér",
        AR: "تمكين",
        PT: "habilitar",
        RO: "TODO",
        IND: "TODO"
    },
    acPcInternetLink: {
        EN: "Internet Link",
        FR: "Lien Internet",
        SPN: "Internet Enlace",
        DE: "Internet-Link",
        IT: "Collegamento Internet",
        DA: "Internetlink",
        AR: "وصلة الإنترنت",
        PT: "link internet",
        RO: "TODO",
        IND: "TODO"
    },
    acPcOptions: {
        EN: "Options",
        FR: "Options",
        SPN: "Opciones",
        DE: "Optionen",
        IT: "Opzioni",
        DA: "Valgmuligheder",
        AR: "خيارات",
        PT: "opçoes",
        RO: "TODO",
        IND: "TODO"
    },
    acPcTip1: {
        EN: "Here you can select a device to allow or deny the access.",
        FR: "Ici vous pouvez sélectionner un périphérique pour autoriser ou refuser l'accès.",
        SPN: "Aquí puede seleccionar el dispositivo para permitir o denegar el acceso.",
        DE: "Hier können Sie festlegen, ob der Internetzugang für dieses Gerät möglich ist oder blockiert werden soll.",
        IT: "Qui puoi selezionare un dispositivo per consentire o negare l'accesso.",
        DA: "Her kan du vælge en enhed, som du vil tillade eller afvise adgang for.",
        AR: "هنا يمكنك تحديد الجهاز للسماح أو رفض الوصول.",
        PT: "aquí pode seleccionar um dispositivo para autorizar ou negar acesso",
        RO: "TODO",
        IND: "TODO"
    },
    acPcTip2: {
        EN: "You can deny access to a device for all week time slots.",
        FR: "Vous pouvez refuser l'accès à un dispositif pour l'intégralité du temps.",
        SPN: "Usted puede negar el acceso a un dispositivo para todos los intervalos de tiempo de la semana.",
        DE: "Sie können einem Gerät den Zugang zu den vorher festgelegten Zeiten verweigern.",
        IT: "Si puoi negare l'accesso a un dispositivo per tutte le fasce orarie settimanali.",
        DA: "Du kan afvise adgang til en enhed for alle uge tidsintervaller.",
        AR: "يمكنك منع الوصول إلى أي جهاز في جميع خيارات أيام الأسبوع.",
        PT: "pode negar acesso a um dispositivo entre espaços de tempo durante uma semana",
        RO: "TODO",
        IND: "TODO"
    },
    acPcTip3: {
        EN: "You can allow access to a device for all week time slots.",
        FR: "Vous pouvez autoriser l'accès à un dispositif pour l'intégralité du temps.",
        SPN: "Usted puede permitir el acceso a un dispositivo para todos los intervalos de tiempo de la semana.",
        DE: "Sie können einem Gerät den Zugang zu den vorher festgelegten Zeiten erlauben.",
        IT: "È possibile consentire l'accesso a un dispositivo per tutte le fasce orarie settimanali.",
        DA: "Du kan tillade adgang til en enhed for alle uge tidsintervaller.",
        AR: "يمكنك السماح بالوصول إلى أي جهاز في جميع خيارات أيام الاسبوع .",
        PT: "pode autorizar acesso a um dispositivo entre espaços de tempo durante uma semana",
        RO: "TODO",
        IND: "TODO"
    },
    acPcTip4: {
        EN: "Here you can deny or allow access to a device for a specific day.",
        FR: "Ici vous pouvez refuser ou autoriser l'accès à un dispositif pour un jour spécifique.",
        SPN: "Aquí podrá denegar o permitir el acceso a un dispositivo para un día específico.",
        DE: "Hier können Sie festlegen, ob der Internetzugang für dieses Gerät an einem bestimmten Wochentag blockiert werden soll.",
        IT: "Qui puoi negare o consentire l'accesso a un dispositivo per un giorno specifico.",
        DA: "Her kan du afvise eller tillade adgang til en enhed på en specifik dag.",
        AR: "هنا يمكنك أن منع أو السماح بالوصول إلى الجهاز في يوم واحد محدد.",
        PT: "aquí pode autorizar ou negar acesso a um dispositivo para um dia especifico",
        RO: "TODO",
        IND: "TODO"
    },
    acPcTip5: {
        EN: "Here you can add a new address.",
        FR: "Ici vous pouvez ajouter une nouvelle adresse.",
        SPN: "Aquí usted puede agregar otra dirección",
        DE: "Hier können Sie eine Webseite hinzufügen.",
        IT: "Qui puoi  aggiungere un nuovo indirizzo.",
        DA: "Her kan du tilføje en ny adresse.",
        AR: "هنا يمكنك إضافة عنوان آخر.",
        PT: "aquí pode adecionar um novo endereço",
        RO: "TODO",
        IND: "TODO"
    },
    acPcTip6: {
        EN: "Here you can control the site access.",
        FR: "Ici vous pouvez contrôler l'accès au site.",
        SPN: "Aquí usted puede controlar el acceso al sitio.",
        DE: "Hier können Sie den Zugang zur Webseite enrichten.",
        IT: "Qui puoi controllare l'accesso al sito.",
        DA: "Her kan du kontrollere adgang til siden.",
        AR: "هنا يمكنك التحكم في الوصول إلى موقع.",
        PT: "aquí pode controlar o acesso ao site",
        RO: "TODO",
        IND: "TODO"
    },
    acPcTip99: {
        EN: "Here you pick the desired profile control.",
        FR: "Ici, vous sélectionnez le profil souhaité.",
        SPN: "Aquí tienes que elegir el perfil de control deseado.",
        DE: "Hier wählen Sie das gewünschte Sicherheitsprofil.",
        IT: "Qui scegli il controllo del profilo desiderato.",
        DA: "Her vælger du den ønskede profilkontrol.",
        AR: "هنا يمكنك اختيار مقدار التحكم المطلوب بالبروفايل ",
        PT: "aquí pode escolher o perfil de controlo desejado",
        RO: "TODO",
        IND: "TODO"
    },
    pcTip970: {
        EN: "Here you can add a specific profile for each device.",
        FR: "Ici vous pouvez ajouter un profil spécifique pour chaque périphérique.",
        SPN: "Aquí puedes añadir un perfil específico para cada dispositivo.",
        DE: "Hier könne Sie ein bestimmtes Sicherheitsprofil für jedes Gerät festlegen.",
        IT: "Qui puoi aggiungere un profilo specifico per ogni dispositivo.",
        DA: "Her kan du vælge en specifik profil for hver enhed.",
        AR: "هنا يمكنك إضافة ملف تعريف محدد لكل جهاز",
        PT: "aquí pode adicionar um profile especifico para cada dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    pcTip971: {
        EN: "Click here to edit the Profile for this device.",
        FR: "Cliquez ici pour modifier le profil de ce périphérique.",
        SPN: "Haga clic aquí para editar el perfil de este dispositivo.",
        DE: "Klicken Sie hier, um das Sicherheitprofil für das Gerät zu ändern.",
        IT: "Clicca qui per modificare il profilo di questo dispositivo.",
        DA: "Klik her for at redigere profilen for denne enhed.",
        AR: "انقر هنا لتحرير الملف الشخصي لهذا الجهاز",
        PT: "pressione aquí para editar um perfil para este dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    pcTip972: {
        EN: "Click here to set a new Profile for this device.",
        FR: "Cliquez ici pour créer un nouveau profil pour ce périphérique.",
        SPN: "Haga clic aquí para crear un nuevo perfil para este dispositivo.",
        DE: "Hier können Sie ein neues Sicherheitsprofil für das Gerät einstellen.",
        IT: "Clicca qui per impostare un nuovo profilo per questo dispositivo.",
        DA: "Klik her for at indstille en ny profil for denne enhed.",
        AR: "انقر هنا لوضع الملف الجديد في هذا الجهاز",
        PT: "pressione aquí para criar um perfil novo para este dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    pcTip973: {
        EN: "Click here to remove the device from this list.",
        FR: "Cliquez ici pour supprimer le périphérique de la liste.",
        SPN: "Haga clic aquí para eliminar el dispositivo de la lista.",
        DE: "Klicken Sie hier, um das Gerät aus der Liste zu entfernen.",
        IT: "Clicca qui per rimuovere il dispositivo da questo elenco.",
        DA: "Klik her for at fjerne enheden fra denne liste.",
        AR: "انقر هنا لإزالة الجهاز من هذه القائمة",
        PT: "pressione aquí para remover o dispositivo desta lista",
        RO: "TODO",
        IND: "TODO"
    },
    pcTip974: {
        EN: "Here you can select a device that will be added in this list.",
        FR: "Ici vous pouvez choisir un périphérique qui sera ajouté à cette liste.",
        SPN: "Aquí se puede elegir un dispositivo que se incluye en esta lista.",
        DE: "Hier können Sie ein Gerät auswählen, dass in die Liste mit aufgenommen werden soll.",
        IT: "Qui puoi selezionare un dispositivo che verrà aggiunto in questo elenco.",
        DA: "Her kan du vælge en enhed, som vil blive tilføjet på denne liste.",
        AR: "هنا يمكنك اختيار الجهاز الذي سيتم ادراجه في هذه القائمة",
        PT: "aquí pode seleccionar um dispositivo que será adicionado a esta lista",
        RO: "TODO",
        IND: "TODO"
    },
    pcTip975: {
        EN: "Here you can choose the profile for the specified device.",
        FR: "Ici vous pouvez choisir le profil du périphérique spécifié.",
        SPN: "Aquí se puede elegir el perfil para el dispositivo especificado.",
        DE: "Hier können Sie das Sicherheitsprofil für das Gerät auswählen.",
        IT: "Qui puoi scegliere il profilo per il dispositivo specificato.",
        DA: "Her kan du vælge profilen for den specificerede enhed.",
        AR: "هنا يمكنك اختيار التشكيل الجانبي للجهاز المحدد",
        PT: "aquí pode escolher o perfil para o dispositivo especifico",
        RO: "TODO",
        IND: "TODO"
    },
    pcTip976: {
        EN: "Click here to add a new setting in this list.",
        FR: "Cliquez ici pour ajouter un nouveau paramètre dans cette liste.",
        SPN: "Haga clic aquí para añadir un nuevo ajuste en esta lista.",
        DE: "Klicken Sie hier, um neue Einstellungen in der Liste vorzunehmen.",
        IT: "Clicca qui per aggiungere una nuova impostazione in questo elenco.",
        DA: "Klik her for at tilføje en ny indstilling på denne liste.",
        AR: "انقر هنا لإضافة الإعداد الجديد في هذه القائمة",
        PT: "pressione aquí para adicionar um parametro a esta lista",
        RO: "TODO",
        IND: "TODO"
    },
    pleaseWaitLoading: {
        EN: "Please Wait...",
        FR: "Attendez s'il vous plaît",
        SPN: "Espere por favor...",
        DE: "Bitte warten.",
        IT: "Attendere prego...",
        DA: "Vent venligst ... indlæser data",
        AR: "يرجى الانتظار",
        PT: "por favor aguarde...",
        RO: "TODO",
        IND: "TODO"
    },
    pcActive: {
        EN: "Active Service",
        FR: "Service Actif",
        SPN: "Servicio Activo",
        DE: "Aktiver Dienst",
        IT: "Servizio attivo",
        DA: "Aktiv tjeneste",
        AR: "خدمة نشطة",
        PT: "Serviço activo",
        RO: "TODO",
        IND: "TODO"
    },
    pcInactive: {
        EN: "Inactive",
        FR: "Inactif",
        SPN: "Inactivo",
        DE: "Inaktiv",
        IT: "Inattivo",
        DA: "Inaktiv",
        AR: "غير فعال",
        PT: "inactivo",
        RO: "TODO",
        IND: "TODO"
    },
    defaultGatewayAddressIpv6: {
        EN: "Default Gateway IPv6 Address",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    dnsServerAddressIpv6: {
        EN: "DNS server IPv6 Address",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    pcList: {
        EN: "List of services",
        FR: "Liste des services",
        SPN: "Lista de servicios",
        DE: "Übersicht der Dienste",
        IT: "Elenco dei servizi",
        DA: "Liste over tjenester",
        AR: "قائمة الخدمات",
        PT: "lista de serviços",
        RO: "TODO",
        IND: "TODO"
    },
    pcEnable: {
        EN: "Enable",
        FR: "Autoriser",
        SPN: "Habilitar",
        DE: "Erlauben",
        IT: "Consenti",
        DA: "Aktivér",
        AR: "تمكين",
        PT: "habilitar",
        RO: "TODO",
        IND: "TODO"
    },
    pcProtocol: {
        EN: "Protocol Type",
        FR: "Type de Protocole",
        SPN: "Tipo de Protocolo",
        DE: "Protokoll-Typ",
        IT: "Tipo di protocollo",
        DA: "Protokoltype",
        AR: "نوع البروتوكول",
        PT: "tipo de protocolo",
        RO: "TODO",
        IND: "TODO"
    },
    pcIp: {
        EN: "Server IP",
        FR: "IP du Serveur",
        SPN: "Servidor IP",
        DE: "IP-Adresse Server",
        IT: "Server IP",
        DA: "Server-IP",
        AR: "خادم IP",
        PT: "Servidor IP",
        RO: "TODO",
        IND: "TODO"
    },
    pcPort: {
        EN: "Server Port",
        FR: "Port du Serveur",
        SPN: "Puerto del Servidor",
        DE: "Server-Port",
        IT: "Porta server",
        DA: "Serverport",
        AR: "بورت الخادم",
        PT: "porta de servidor",
        RO: "TODO",
        IND: "TODO"
    },
    pcProfiles: {
        EN: "Profiles",
        FR: "Profils",
        SPN: "Perfiles",
        DE: "Profil",
        IT: "Profili",
        DA: "Profiler",
        AR: "ملفات شخصية ",
        PT: "perfiles",
        RO: "TODO",
        IND: "TODO"
    },
    pcDefault: {
        EN: "Default Profile",
        FR: "Profil par Défaut",
        SPN: "Perfil Predeterminado",
        DE: "Standard-Sicherheitsprofil",
        IT: "Profilo predefinito",
        DA: "Standardprofil",
        AR: "الملف الشخصي الافتراضي",
        PT: "perfil por defeito",
        RO: "TODO",
        IND: "TODO"
    },
    pcSpecial: {
        EN: "Special Profiles",
        FR: "Profils Spéciaux",
        SPN: "Perfiles Especiales",
        DE: "Spezielles Sicherheitsprofil",
        IT: "Profili speciali",
        DA: "Specialprofiler",
        AR: "بروفايلات خاصة ",
        PT: "perfiles especiais",
        RO: "TODO",
        IND: "TODO"
    },
    pcName: {
        EN: "Profile Name",
        FR: "Nom du Profil",
        SPN: "Perfil Nombre",
        DE: "Sicherheitsprofil",
        IT: "Nome Del Profilo",
        DA: "Profilnavn",
        AR: "اسم البروفايل ",
        PT: "nome de perfil",
        RO: "TODO",
        IND: "TODO"
    },
    pcRest1: {
        EN: "Restricts",
        FR: "Restreint",
        SPN: "Restringe",
        DE: "Verboten",
        IT: "Limita",
        DA: "Begrænsninger",
        AR: "قيود ",
        PT: "restricçoes",
        RO: "TODO",
        IND: "TODO"
    },
    Pornography: {
        EN: "Pornography",
        FR: "Pornographie",
        SPN: "Pornografía",
        DE: "Pornografie",
        IT: "Pornografia",
        DA: "Pornografi",
        AR: "مواقع إباحية",
        PT: "pornografia",
        RO: "TODO",
        IND: "TODO"
    },
    Gambling: {
        EN: "Gambling",
        FR: "Jeux d'argent",
        SPN: "Juegos de azar",
        DE: "Glücksspiel",
        IT: "Gioco d'azzardo",
        DA: "Gambling",
        AR: "مواقع ألعاب قمار",
        PT: "jogos de sorte",
        RO: "TODO",
        IND: "TODO"
    },
    Gaming: {
        EN: "Gaming",
        FR: "Jeux videos",
        SPN: "Gaming",
        DE: "Spiele",
        IT: "Giochi",
        DA: "Gaming",
        AR: "ألعاب",
        PT: "jogos",
        RO: "TODO",
        IND: "TODO"
    },
    socialMedia: {
        EN: "Social Media",
        FR: "Réseaux Sociaux",
        SPN: "Social Media",
        DE: "Soziale Netze",
        IT: "Social Media",
        DA: "Sociale medier",
        AR: "وسائل الاعلام الاجتماعية",
        PT: "redes sociais",
        RO: "TODO",
        IND: "TODO"
    },
    News: {
        EN: "News",
        FR: "Actualité",
        SPN: "Noticias",
        DE: "Nachrichten",
        IT: "Notizie",
        DA: "Nyheder",
        AR: "أخبار",
        PT: "noticias",
        RO: "TODO",
        IND: "TODO"
    },
    OnlineShop: {
        EN: "Online Shop",
        FR: "Boutiques en ligne",
        SPN: "Tienda Online",
        DE: "Online-Shopping",
        IT: "Negozio Online",
        DA: "Online shopping",
        AR: "التسوق عبر الإنترنت",
        PT: "online shop",
        RO: "TODO",
        IND: "TODO"
    },
    Medical: {
        EN: "Medical",
        FR: "Médical",
        SPN: "Médico",
        DE: "Medizin",
        IT: "Contenuti medici",
        DA: "Medicinsk indhold",
        AR: "طبي",
        PT: "medico",
        RO: "TODO",
        IND: "TODO"
    },
    Terrorism: {
        EN: "Terrorism",
        FR: "Terrorisme",
        SPN: "Terrorismo",
        DE: "Terrorismus",
        IT: "Terrorismo",
        DA: "Terrorisme",
        AR: "إرهاب",
        PT: "terrorismo",
        RO: "TODO",
        IND: "TODO"
    },
    pcTip1: {
        EN: "Configure the service that will be used for discovering the categories.",
        FR: "Configurez le service qui sera utilisé pour renseigner les catégories.",
        SPN: "Configure el servicio que se usará para el descubrimiento de las categorías.",
        DE: "Wählen Sie den Dienst aus, der zur Kategorisierung herangezogen werden soll.",
        IT: "Configura il servizio che verrà utilizzato per scoprire le categorie.",
        DA: "Konfigurer den tjeneste, som skal bruges til at registrere kategorierne.",
        AR: "تكوين الخدمة التي سيتم استخدامها لاكتشاف الفئات.",
        PT: "configure o serviço que será usado para descobrir as categorias",
        RO: "TODO",
        IND: "TODO"
    },
    pcTip2: {
        EN: "List of available services.",
        FR: "Liste des services disponibles.",
        SPN: "Lista de los servicios disponibles.",
        DE: "Liste der verfügbaren Dienste.",
        IT: "Elenco dei servizi disponibili.",
        DA: "Liste over tilgængelige tjenester.",
        AR: "لائحة الخدمات المتوفرة ",
        PT: "lista dos serviços disponiveis",
        RO: "TODO",
        IND: "TODO"
    },
    pcTip3: {
        EN: "Configure the default profile.",
        FR: "Configurer le profil par défaut.",
        SPN: "Configurar el perfil predeterminado.",
        DE: "Standard-Sicherheitsprofil konfigurieren.",
        IT: "Configura il profilo predefinito.",
        DA: "Konfigurer standardprofilen.",
        AR: "تكوين ملف التعريف الافتراضي.",
        PT: "configure o perfil por defeito",
        RO: "TODO",
        IND: "TODO"
    },
    invalidServiceName: {
        EN: "Invalid service name",
        FR: "Nom de service non valide",
        SPN: "Nombre de servicio no válido",
        DE: "Ungültiger Dienst",
        IT: "Nome del servizio non valido",
        DA: "Ugyldigt tjenestenavn",
        AR: "اسم الخدمة غير صالح",
        PT: "nome de serviço invalido",
        RO: "TODO",
        IND: "TODO"
    },
    serviceNameTriggering: {
        EN: "Service Name",
        FR: "Nom du Service",
        SPN: "Nombre del Servicio",
        DE: "Dienst",
        IT: "Nome del servizio",
        DA: "Tjenestenavn",
        AR: "اسم الخدمة",
        PT: "nome de serviço",
        RO: "TODO",
        IND: "TODO"
    },
    portTriggering: {
        EN: "Port Triggering",
        FR: "Port Triggering",
        SPN: "Triggering de Puerta",
        DE: "Port Trigger",
        IT: "Attivazione porta",
        DA: "Port trigger",
        AR: "تشغيل المنفذ",
        PT: "activaçao de portas",
        RO: "TODO",
        IND: "TODO"
    },
    triggerProtocol: {
        EN: "Trigger Protocol",
        FR: "Protocole de Triggering",
        SPN: "Protocolo Trigger",
        DE: "Protokoll Trigger",
        IT: "Attivazione protocollo",
        DA: "Trigger protokol",
        AR: "بروتوكول الاطلاق",
        PT: "activaçao de protocolo",
        RO: "TODO",
        IND: "TODO"
    },
    triggerFromPort: {
        EN: "Trigger from port",
        FR: "Port déclencheur initial",
        SPN: "Trigger Desde el Puerta",
        DE: "Trigger von Port",
        IT: "Attivazione dalla porta",
        DA: "Trigger fra port",
        AR: "اطلاق من البورت ",
        PT: "activaçao desde porta",
        RO: "TODO",
        IND: "TODO"
    },
    triggerToPort: {
        EN: "Trigger to port",
        FR: "Port déclencheur final",
        SPN: "Trigger a la Puerta",
        DE: "Trigger bis Port",
        IT: "Attivazione verso la porta",
        DA: "Trigger til port",
        AR: "اطلاق إلى البورت ",
        PT: "activaçao para porta",
        RO: "TODO",
        IND: "TODO"
    },
    openProtocol: {
        EN: "Open Protocol",
        FR: "Protocole ouvert",
        SPN: "Protocolo Open",
        DE: "Protokoll",
        IT: "Protocollo aperto",
        DA: "Åbn protokol",
        AR: "فتح بروتوكول",
        PT: "abrir protocolo",
        RO: "TODO",
        IND: "TODO"
    },
    openFromPort: {
        EN: "Open from port",
        FR: "Ouvrir depuis port",
        SPN: "Open Desde el Puerta",
        DE: "Port von",
        IT: "Aperto da porta",
        DA: "Åbn fra port",
        AR: "فتح من بورت",
        PT: "abrir desde porta",
        RO: "TODO",
        IND: "TODO"
    },
    openToPort: {
        EN: "Open to port",
        FR: "Ouvrir jusqu'au port",
        SPN: "Open a la Puerta",
        DE: "Port bis",
        IT: "Aperto verso la porta",
        DA: "Åbn til port",
        AR: "فتح إلى بورت",
        PT: "abrir para porta",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip1: {
        EN: "Here you name the port triggering rule.",
        FR: "Ici, vous nommez la règle de port triggering.",
        SPN: "Aquí un nombre a la regla de la port triggering.",
        DE: "Hier wählen Sie den Namen für die Port Trigger Regel.",
        IT: "Qui nomini la regola di attivazione della porta.",
        DA: "Her kan du navngive reglen for portudløsning.",
        AR: "تسمية قاعدة الاطلاق هنا ",
        PT: "aquí escreva a regra de activaçao de portas",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip2: {
        EN: "Here you pick the Trigger protocol.",
        FR: "Ici vous choisissez le protocole pour le déclenchement.",
        SPN: "Aquí tienes que elegir el protocolo de trigger.",
        DE: "Hier wählen Sie das Trigger Protokoll.",
        IT: "Qui scegli il protocollo di attivazione.",
        DA: "Her kan du vælge trigger protokollen.",
        AR: "هنا يمكنك اختيار بروتوكول الاطلاق ",
        PT: "aquí escolha a activaçao de protocolo ",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip3: {
        EN: "Here you set the start port for Trigger.",
        FR: "Ici vous définissez le port initial pour le déclenchement.",
        SPN: "Aquí se ajusta el puerta de inicio para trigger.",
        DE: "Hier setzen Sie den Start Port für den Trigger.",
        IT: "Qui imposti la porta di partenza per l'attivazione.",
        DA: "Her kan du vælge startporten for trigger.",
        AR: "هنا يمكنك تعيين منفذ بداية الاطلاق ",
        PT: "aquí edite o arranque da activaçao da porta",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip4: {
        EN: "Here you set the end port for Trigger.",
        FR: "Ici vous définissez le port final pour le déclenchement.",
        SPN: "Aquí se ajusta el puerta final de trigger.",
        DE: "Hier setzen Sie den End Port für den Trigger.",
        IT: "Qui imposti la porta di fine per l'attivazione.",
        DA: "Her kan du vælge slutporten for trigger.",
        AR: "هنا يمكنك تعيين منفذ نهاية الاطلاق",
        PT: "aquí edite o fim da activaçao para porta",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip5: {
        EN: "Here you pick the Open protocol.",
        FR: "Ici vous choisissez le protocole à ouvrir.",
        SPN: "Aquí tienes que elegir el protocolo open.",
        DE: "Hier wählen Sie das Protokoll.",
        IT: "Qui scegli il protocollo aperto.",
        DA: "Her kan du vælge protokollen for 'Åbn'",
        AR: "هنا يمكنك اختيار البروتوكول مفتوحا",
        PT: "aquí escolha o protocolo aberto",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip6: {
        EN: "Here you set the start port to be opened.",
        FR: "Ici vous définissez le port initial à ouvrir.",
        SPN: "Aquí se ajusta el puerto de inicio para open.",
        DE: "Hier setzen Sie den Start Port.",
        IT: "Qui imposti la porta di partenza per Open.",
        DA: "Her kan du vælge startporten for 'Åbn'.",
        AR: "هنا يمكنك تعيين منفذ البدء من أجل الفتح ",
        PT: "aquí edite o arranque da porta para ser aberta",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip7: {
        EN: "Here you set the end port to be opened",
        FR: "Ici vous définissez le port final à ouvrir",
        SPN: "Aquí se ajusta el puerta final para open",
        DE: "Hier setzen Sie den End Port ",
        IT: "Qui imposti la porta di fine per Open",
        DA: "Her kan du vælge slutporten for 'Åbn'",
        AR: "هنا يمكنك تعيين منفذ النهاية من أجل الفتح",
        PT: "aquí edite o fim da porta para ser aberta",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip8: {
        EN: "Here you clear Port Triggering form",
        FR: "Ici vous effacez les champs du port triggering",
        SPN: "Aquí clara form de port triggering",
        DE: "Hier löschen Sie die Liste der Port Trigger",
        IT: "Qui cancelli il modulo di attivazione della porta",
        DA: "Her kan du rydde formularen for trigger af port",
        AR: "هنا يمكنك تصفية نموذج اطلاق البورت",
        PT: "aquí apague a activaçao de portas",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip9: {
        EN: "Here you cancel rule edition",
        FR: "Ici vous annulez l'édition de la règle",
        SPN: "Aquí usted cancela edición regla",
        DE: "Hier brechen Sie die Änderung der Regel ab.",
        IT: "Qui annulli la modifica della regola",
        DA: "Her kan du annullere regeludgaven",
        AR: "هنا يمكنك الغاء نسخة القاعدة ",
        PT: "aquí cancela a ediçao da regra",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip10: {
        EN: "Here you add the new port triggering to the rules table, by now your new settings are not in use by the system",
        FR: "Ici vous ajoutez les nouvelles règles du port triggering à la table, les nouveaux paramètres ne sont pas encore utilisés par le système",
        SPN: "Aquí se agrega la nueva port triggering en la tabla de reglas, por ahora los nuevos ajustes no están en uso por el sistema",
        DE: "Hinzufügen eines Trigger-Ports zur Regel-Tabelle. (Die Regeln werden derzeit nicht angewendet)",
        IT: "Qui aggiungi la nuova porta di attivazione alla tabella delle regole, le nuove impostazioni non sono più in uso da parte del sistema",
        DA: "Her tilføjer du den nye port trigger til regeltabellen, pt. er dine nye indstillinger ikke i anvendelse i systemet",
        AR: "هنا قمت بإضافة اطلاق البورت الجديد في قائمة القواعد، وبدءا من الآن فإن الإعدادات الجديدة الخاصة بك ليست قيد الاستخدام من قبل النظام",
        PT: "aquí adicione uma nova regra de activaçao de portas á tabela, por agora as suas configuraçoes nao estao em uso pelo sistema",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip11: {
        EN: "Here you add the edited port triggering to the rules table, by now your new settings are not in use by the system",
        FR: "Ici vous ajoutez la règle modifiée du port triggering à la table, les nouveaux paramètres ne sont pas encore utilisés par le système",
        SPN: "Aquí se agrega el port triggering editado para la tabla de reglas, por ahora los nuevos ajustes no están en uso por el sistema",
        DE: "Bearbeiten eines Trigger-Ports in der Regel-Tabelle. (Die Regeln werden derzeit nicht angewendet)",
        IT: "Qui aggiungi la porta di attivazione modificata alla tabella delle regole, le nuove impostazioni non sono più in uso da parte del sistema",
        DA: "Her tilføjer du den redigerede port trigger til regeltabellen, pt. er dine nye indstillinger ikke i anvendelse i systemet",
        AR: "هنا قمت بإضافة اطلاق البورت المحرر في قائمة القواعد، وبدءا من الآن فإن الإعدادات الجديدة الخاصة بك ليست قيد الاستخدام من قبل النظام",
        PT: "aquí adicione uma regra editada de activaçao de portas á tabela, por agora as suas configuraçoes nao estao em uso pelo sistema",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip12: {
        EN: "Here is the Port Triggering rules table",
        FR: "Voici la table des règles du port triggering",
        SPN: "Aquí está la tabla de reglas de port triggering",
        DE: "Hier ist die Übersicht der Regeln zum Port-Triggering",
        IT: "Ecco la tabella delle regole dell'attivazione della porta",
        DA: "Her er tabellen for regler til trigger af port.",
        AR: "هنا جدول قواعد اطلاق البورت ",
        PT: "aquí tem a tabela de regras de activaçao de portas",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip13: {
        EN: "Here you enable or disable the rule, by now your new settings are not in use by the system",
        FR: "Ici vous activez ou désactivez la règle, les nouveaux paramètres ne sont pas encore utilisés par le système",
        SPN: "Aquí se puede activar o desactivar la regla, por ahora los nuevos ajustes no están en uso por el sistema",
        DE: "Hier können Sie die Regel aktivieren oder deaktivieren. Derzeit werden Ihre neuen Einstellungen vom System noch nicht verwendet",
        IT: "Qui attivi o disattivi la regola, le nuove impostazioni non sono più in uso da parte del sistema",
        DA: "Her aktiverer eller deaktiverer du reglen, pt. er dine nye indstillinger ikke i anvendelse i systemet",
        AR: "بإمكانك هنا تمكين أو تعطيل القاعدة، بدءا من الآن فإن الإعدادات الجديدة الخاصة بك ليست قيد الاستخدام من قبل النظام",
        PT: "aquí pode habilitar ou desabilitar a regra, por agora as suas novas configuraçoes nao estao em uso pelo sistema",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip14: {
        EN: "Here you remove the rule, by now your new settings are not in use by the system",
        FR: "Ici vous supprimez la règle, les nouveaux paramètres ne sont pas encore utilisés par le système",
        SPN: "Aquí se quita la regla, por ahora los nuevos ajustes no están en uso por el sistema",
        DE: "Hier können Sie die Regel entfernen. Derzeit werden Ihre neuen Einstellungen vom System noch nicht verwendet",
        IT: "Qui rimuovi la regola, le nuove impostazioni non sono più in uso da parte del sistema",
        DA: "Her fjerner du reglen, pt. er er dine nye indstillinger ikke i anvendelse i systemet",
        AR: "هنا قمت بإزالة القاعدة، الآن الإعدادات الجديدة الخاصة بك ليست قيد الاستخدام من قبل النظام",
        PT: "aquí pode remover a regra, por agora as suas novas definiçoes nao estao em uso pelo sistema.",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip15: {
        EN: "Here you edit the rule, by now your new settings are not in use by the system",
        FR: "Ici, vous modifier la règle, les nouveaux paramètres ne sont pas encore utilisés par le système",
        SPN: "Aquí puede editar la regla, por ahora los nuevos ajustes no están en uso por el sistema",
        DE: "Hier können Sie die Regel bearbeiten. Derzeit werden Ihre neuen Einstellungen vom System noch nicht verwendet",
        IT: "Qui puoi modificare la regola, le nuove impostazioni non sono più in uso da parte del sistema",
        DA: "Her redigerer du reglen, pt. er dine nye indstillinger ikke i anvendelse i systemet",
        AR: "هنا قمت بتحرير القاعدة، الآن الإعدادات الجديدة الخاصة بك ليست قيد الاستخدام من قبل النظام",
        PT: "aquí pode editar a regra, por agora as suas novas definiçoes nao estao em uso pelo sistema.",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip16: {
        EN: "Here you cancel all modifications that you have made, the system will keep using old settings",
        FR: "Ici, vous annulez toutes les modifications que vous avez effectué, le système continuera à utiliser les anciens paramètres",
        SPN: "Aquí usted cancela todas las modificaciones que haya realizado, el sistema mantendrá el uso de los ajustes antiguos",
        DE: "Damit verwerfen Sie alle Änderungen, die Sie gemacht haben. Das System wird die alten Einstellungen beibehalten",
        IT: "Qui annulli tutte le modifiche effettuate, il sistema continuerà a utilizzare le vecchie impostazioni",
        DA: "Her annullerer du alle modifikationer, som du har foretaget, og systemet vil fortsat anvende de gamle indstillinger",
        AR: "قمت هنا بإلغاء جميع التعديلات التي قمت بها، سيقوم النظام بالاستمرار في استخدام الإعدادات القديمة",
        PT: "aquí pode cancelar todas as modificaçoes que fez, o sistema continuara usando os paramentros anteriores",
        RO: "TODO",
        IND: "TODO"
    },
    triggerTip17: {
        EN: "Here you apply all modifications to the system",
        FR: "Ici vous appliquez toutes les modifications au système",
        SPN: "Aquí se aplica todas las modificaciones al sistema",
        DE: "Hiermit werden alle Änderungen angewendet.",
        IT: "Qui applichi tutte le modifiche al sistema",
        DA: "Her anvender du alle modifikationer i systemet",
        AR: "هنا يمكنك تطبيق جميع التعديلات على النظام",
        PT: "aquí pode aplicar todas as alteraçoes ao sistema",
        RO: "TODO",
        IND: "TODO"
    },
    noLinesEnabled: {
        EN: "There are no enabled lines",
        FR: "Il n'y a pas de lignes activées",
        SPN: "No hay líneas habilitadas",
        DE: "Keine Einträge aktiviert",
        IT: "Non ci sono linee abilitate",
        DA: "Der er ingen aktiverede linjer",
        AR: "ليس هناك خطوط مفعلة",
        PT: "nao existem linhas habilitadas",
        RO: "TODO",
        IND: "TODO"
    },
    noLinesRegistered: {
        EN: "There are no registered lines",
        FR: "Aucune ligne enregistrée",
        SPN: "No hay lineas registradas",
        DE: "Keine konfigurierte Leitung verfügbar",
        IT: "Nessuna linea registrata",
        DA: "Der er ikke nogen registrerede linjer",
        AR: "TODO",
        PT: "nao existem linhas registradas",
        RO: "Nu exista linii inregistrate",
        IND: "TODO"
    },
    internetConnectivityOn: {
        EN: "Internet: Connected",
        FR: "Internet: Connecté",
        SPN: "Internet: Conectado",
        DE: "Internet: Verbunden",
        IT: "Internet: connesso",
        DA: "Internet: Tilsluttet",
        AR: "الإنترنت: متصل",
        PT: "internet: ligada",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityOff: {
        EN: "Internet: Not Connected",
        FR: "Internet: Non Connecté",
        SPN: "Internet: No Conectado",
        DE: "Internet: Nicht verbunden",
        IT: "Internet: non connesso",
        DA: "Internet: Ikke tilsluttet",
        AR: "الإنترنت: غير متصل ",
        PT: "internet: desligada",
        RO: "TODO",
        IND: "TODO"
    },
    invalidValue: {
        EN: "Invalid value",
        FR: "valeur invalide",
        SPN: "Valor no válido",
        DE: "Ungültiger Wert",
        IT: "Valore non valido",
        DA: "Ugyldig værdi",
        AR: "قيمة غير صالحة",
        PT: "valor invalido",
        RO: "TODO",
        IND: "TODO"
    },
    restoreDHCP: {
        EN: "Restore DHCP settings?",
        FR: "Restaurer les paramètres DHCP?",
        SPN: "Restaurar la configuración de DHCP?",
        DE: "DHCP-Werte wiederherstellen?",
        IT: "Ripristina impostazioni DHCP?",
        DA: "Gendan DHCP-indstillinger?",
        AR: "استعادة إعدادات DHCP؟",
        PT: "restaurar parametros de DHCP",
        RO: "TODO",
        IND: "TODO"
    },
    questionRestoreDHCP: {
        EN: "Do you really want to restore default DHCP settings?",
        FR: "Etes-vous sûr de vouloir restaurer les paramètres DHCP par défaut?",
        SPN: "¿Realmente desea restaurar la configuración DHCP por defecto?",
        DE: "Wollen Sie wirklich die Standardwerte für DHCP wiederherstellen?",
        IT: "Vuoi davvero ripristinare le impostazioni DHCP predefinite?",
        DA: "Er du sikker på, at du vil gendanne DHCP-indstillingerne?",
        AR: "هل تريد حقا استعادة الإعدادات الافتراضية DHCP؟",
        PT: "tem a certeza que quer restaurar os paramentros DHCP aos valores de fabrica?",
        RO: "TODO",
        IND: "TODO"
    },
    ledTip1: {
        EN: "Click here to turn on and off the LEDs on your gateway.",
        FR: "Cliquer ici pour allumer et éteindre les indicateurs lumineux de votre modem.",
        SPN: "Click para encender y apagar los LEDs de su gateway",
        DE: "Hier klicken, um die LEDs ein-/ bzw. auszuschalten.",
        IT: "Seleziona qui per spegnere e accendere i LED del tuo modem",
        DA: "Klik her, for at tænde og slukke LED´erne på din gateway.",
        AR: "TODO",
        PT: "pressione aquí para activar ou desactivar os LEDs do seu gateway",
        RO: "Apasati aici pentru a porni si pentru a inchide LED-urile routerului.",
        IND: "TODO"
    },
    vDnoCallHistory: {
        EN: "There is no call history.",
        FR: "Auncun appel",
        SPN: "No hay historial de llamadas.",
        DE: "Es gibt keine Anrufliste.",
        IT: "Non vi è alcuna cronologia delle chiamate.",
        DA: "Der er ingen opkaldshistorik.",
        AR: "لا يوجد تاريخ اتصال",
        PT: "nao existe historial de chamadas",
        RO: "TODO",
        IND: "TODO"
    },
    vDTitle: {
        EN: "Voice Device",
        FR: "Téléphone",
        SPN: "Dispositivo de Voz",
        DE: "Telefon",
        IT: "Dispositivo voce",
        DA: "Telefonienhed",
        AR: "جهاز الصوت",
        PT: "dispositivo de voz",
        RO: "TODO",
        IND: "TODO"
    },
    vDTelephone: {
        EN: "Telephone",
        FR: "Téléphone",
        SPN: "Teléfono",
        DE: "Telefon",
        IT: "Telefono",
        DA: "Telefon",
        AR: "هاتف",
        PT: "telefone",
        RO: "TODO",
        IND: "TODO"
    },
    vDNumber: {
        EN: "Number",
        FR: "Numéro",
        SPN: "Número",
        DE: "Nummer",
        IT: "Numero",
        DA: "Nummer",
        AR: "رقم ",
        PT: "numero",
        RO: "TODO",
        IND: "TODO"
    },
    vDRegStatus: {
        EN: "Registration Status",
        FR: "Statut de l'enregistrement",
        SPN: "El estado del Registro",
        DE: "Registrierungsstatus",
        IT: "Stato di registrazione",
        DA: "Registreringsstatus",
        AR: "حالة التسجيل",
        PT: "estado de registro",
        RO: "TODO",
        IND: "TODO"
    },
    vDTests: {
        EN: "Tests",
        FR: "Tests",
        SPN: "Pruebas",
        DE: "Tests",
        IT: "Test",
        DA: "Tests",
        AR: "اختبارات",
        PT: "testes",
        RO: "TODO",
        IND: "TODO"
    },
    vDRingTest: {
        EN: "Ring Test",
        FR: "Test de sonnerie",
        SPN: "Ring Test",
        DE: "Testanruf",
        IT: "Test chiamata",
        DA: "Ringetonetest",
        AR: "اختبار الرنين",
        PT: "teste de toque",
        RO: "TODO",
        IND: "TODO"
    },
    vDCallHist: {
        EN: "Call History",
        FR: "Historique des appels",
        SPN: "Historial de llamadas",
        DE: "Anrufliste",
        IT: "Cronologia delle chiamate",
        DA: "Opkaldshistorik",
        AR: "سجل المكالمات",
        PT: "historico de chamadas",
        RO: "TODO",
        IND: "TODO"
    },
    vDType: {
        EN: "Type",
        FR: "Type",
        SPN: "Tipo",
        DE: "Typ",
        IT: "Tipo",
        DA: "Type",
        AR: "النوع",
        PT: "tipo",
        RO: "TODO",
        IND: "TODO"
    },
    vDDate: {
        EN: "Date",
        FR: "Date",
        SPN: "Fecha",
        DE: "Datum",
        IT: "Data",
        DA: "Dato",
        AR: "التاريخ",
        PT: "data",
        RO: "TODO",
        IND: "TODO"
    },
    vDHour: {
        EN: "Hour",
        FR: "Heure",
        SPN: "Hora",
        DE: "Stunde",
        IT: "Ora",
        DA: "Tidspunkt",
        AR: "الساعة",
        PT: "hora",
        RO: "TODO",
        IND: "TODO"
    },
    vDDuration: {
        EN: "Duration",
        FR: "Durée",
        SPN: "Duración",
        DE: "Dauer",
        IT: "Durata",
        DA: "Varighed",
        AR: "المدة",
        PT: "duraçao",
        RO: "TODO",
        IND: "TODO"
    },
    vDLine: {
        EN: "Line",
        FR: "Ligne",
        SPN: "Línea",
        DE: "Telefonanschluss",
        IT: "Linea",
        DA: "Linje",
        AR: "الخط",
        PT: "linha",
        RO: "TODO",
        IND: "TODO"
    },
    vDLineNumber: {
        EN: "Line",
        FR: "Ligne",
        SPN: "Línea",
        DE: "Telefonanschluss",
        IT: "Linea",
        DA: "Linje",
        AR: "الخط",
        PT: "linha",
        RO: "TODO",
        IND: "TODO"
    },
    vDRefresh: {
        EN: "Refresh",
        FR: "Actualiser",
        SPN: "Actualizar",
        DE: "Aktualisieren",
        IT: "Aggiorna",
        DA: "Opdater",
        AR: "التحديث",
        PT: "refrescar",
        RO: "TODO",
        IND: "TODO"
    },
    vDTip1: {
        EN: "Selected voice device number.",
        FR: "Numéro du périphérique sélectionné.",
        SPN: "Seleccionado número de dispositivo de voz.",
        DE: "Nummer des ausgewählten Telefons",
        IT: "Il numero dispositivo vocale selezionato.",
        DA: "Valgt telefonienheds nummer.",
        AR: "اختيار رقم الجهاز الصوتي.",
        PT: "Seleccionar numero de dispositivo de voz",
        RO: "TODO",
        IND: "TODO"
    },
    vDTip2: {
        EN: "Selected voice device status.",
        FR: "Etat du périphérique sélectionné.",
        SPN: "Seleccionado el estado del dispositivo de voz.",
        DE: "Status des ausgewählten Telefons",
        IT: "Stato del dispositivo vocale selezionato.",
        DA: "Valgt telefonienheds status.",
        AR: "اختيار حالة الجهاز الصوتي.",
        PT: "Seleccionar estado de dispositivo de voz",
        RO: "TODO",
        IND: "TODO"
    },
    vDTip3: {
        EN: "Test the phone ring.",
        FR: "Tester la sonnerie du téléphone.",
        SPN: "Pruebe el timbre del teléfono.",
        DE: "Telefon testen.",
        IT: "Verifica che il telefono squilli.",
        DA: "Test telefonens ringetone.",
        AR: "اختبار رنين الهاتف.",
        PT: "teste o toque de telefone",
        RO: "TODO",
        IND: "TODO"
    },
    vDTip4: {
        EN: "Calls history for the selected device.",
        FR: "Historique des appels de l'appareil sélectionné.",
        SPN: "Historia de las llamadas realizadas a la voz del dispositivo seleccionado.",
        DE: "Anrufliste des ausgewählten Telefons.",
        IT: "Cronologia delle chiamate del dispositivo selezionato.",
        DA: "Opkaldshistorik for den udvalgte enhed.",
        AR: "التاريخ المكالمات للجهاز المحدد.",
        PT: "historial de chamadas do dispositivo seleccionado",
        RO: "TODO",
        IND: "TODO"
    },
    vDTip5: {
        EN: "Refresh call history.",
        FR: "Actualiser l'historique.",
        SPN: "Actualizar el historial de llamadas.",
        DE: "Anrufliste aktualisieren",
        IT: "Aggiorna cronologia delle chiamate.",
        DA: "Opdater opkaldshistorik.",
        AR: "تحديث تاريخ المكالمة.",
        PT: "refrescar o historial de chamadas",
        RO: "TODO",
        IND: "TODO"
    },
    address: {
        EN: "Address",
        FR: "Adresse",
        SPN: "Dirección",
        DE: "Addresse",
        IT: "Indirizzo",
        DA: "Adresse",
        AR: "عنوان",
        PT: "endereço",
        RO: "TODO",
        IND: "TODO"
    },
    restoreSipTitle: {
        EN: "Restore SIP settings?",
        FR: "Restaurer les paramètres SIP?",
        SPN: "Restaurar Configuraciones SIP?",
        DE: "Einstellungen für Internettelefonie wiederherstellen?",
        IT: "Ripristinare le impostazioni SIP?",
        DA: "Gendan SIP-indstillinger?",
        AR: "استعادة ضبط SIP؟",
        PT: "restaurar parametros de SIP",
        RO: "TODO",
        IND: "TODO"
    },
    restoreSipMsg: {
        EN: "The settings will be saved after you click on 'Apply' button",
        FR: "Les paramètres sont enregistrés lorsque vous cliquez sur le bouton 'Appliquer'",
        SPN: "Los ajustes se guardarán después de hacer clic en el botón 'Aplicar'?",
        DE: "Die Einstellungen werden übernommen, nachdem Sie auf die Schaltfläche 'Annehmen' klicken.",
        IT: "Le impostazioni verranno salvate cliccando sul pulsante 'Applica'",
        DA: "Disse indstillinger vil blive gemt, når du klikker på knappen 'Anvend'",
        AR: "سيتم حفظ الإعدادات بعد النقر على الزر 'تطبيق'",
        PT: "os paramentros serao guardados quando pressionar o botao 'apply''",
        RO: "TODO",
        IND: "TODO"
    },
    voiceSettings: {
        EN: "Voice Settings",
        FR: "Paramètres de la Voix",
        SPN: "Ajustes de Voz",
        DE: "Telefonieeinstellungen",
        IT: "Impostazioni voce",
        DA: "Telefoni indstillinger",
        AR: "إعدادات الصوت",
        PT: "parametros de voz",
        RO: "TODO",
        IND: "TODO"
    },
    sipConfiguration: {
        EN: "Sip Configuration",
        FR: "Configuration SIP",
        SPN: "Configuración del SIP",
        DE: "Internettelefonie einrichten",
        IT: "Configurazione Sip",
        DA: "SIP-indstilling",
        AR: "تكوين رزمة احادية التراصف ",
        PT: "configuraçao SIP",
        RO: "TODO",
        IND: "TODO"
    },
    enterSipParameters: {
        EN: "Enter the SIP parameters, click 'Apply' to save.",
        FR: "Entrez les paramètres SIP, cliquez sur 'Appliquer' pour enregistrer.",
        SPN: "Introduzca los parámetros SIP, haga clic en 'Aplicar' para guardar los parámetros.",
        DE: "Geben Sie die Anmeldedaten für die neue Internetrufnummer ein. Zum Speichern klicken Sie anschließend auf 'Annehmen'.",
        IT: "Immetti i parametri SIP, clicca su 'Applica' per salvare.",
        DA: "Indtast SIP-parametrene, og klik på 'Anvend' for at gemme.",
        AR: "أدخل معلمات  رزمة احادية التراصف، انقر فوق 'تطبيق' لحفظ المعلمات.",
        PT: "inserir parametros de SIP, pressione 'apply' para guardar'",
        RO: "TODO",
        IND: "TODO"
    },
    localSelection: {
        EN: "Local Selection",
        FR: "Sélection du pays",
        SPN: "Selección Local",
        DE: "Standort",
        IT: "Selezione locale",
        DA: "Stedvalg",
        AR: "اختيار المحلي",
        PT: "Seleçao de local",
        RO: "TODO",
        IND: "TODO"
    },
    frFrance: {
        EN: "FRA - France",
        FR: "FRA - France",
        SPN: "FRA - Francia",
        DE: "FRA - Frankreich",
        IT: "FRA - Francia",
        DA: "FRA - Frankrig",
        AR: "فرنسا ",
        PT: "FRA - França",
        RO: "TODO",
        IND: "TODO"
    },
    brBrazil: {
        EN: "BRA - Brazil",
        FR: "BRA - Brésil",
        SPN: "BRA - Brasil",
        DE: "BRA - Brasilien",
        IT: "BRA - Brasile",
        DA: "BRA - Brasilien",
        AR: "البرازيل ",
        PT: "BRA - Brasil",
        RO: "TODO",
        IND: "TODO"
    },
    beBelgium: {
        EN: "BEL - Belgium",
        FR: "BEL - Belgique",
        SPN: "BEL - Bélgica",
        DE: "BEL - Belgien",
        IT: "BEL - Belgio",
        DA: "BEL - Belgien",
        AR: "بلجيكا ",
        PT: "BEL - Belgica",
        RO: "TODO",
        IND: "TODO"
    },
    dkDenmark: {
        EN: "DNK - Denmark",
        FR: "DNK - Danemark",
        SPN: "DNK - Dinamarca",
        DE: "DNK - Dänemark",
        IT: "DNK - Danimarca",
        DA: "DNK - Danmark",
        AR: "الدنمارك ",
        PT: "DNK - Dinamarca",
        RO: "TODO",
        IND: "TODO"
    },
    voipDialpan: {
        EN: "VoIP Dialplan Setting",
        FR: "VoIP Dialplan",
        SPN: "VoIP Dialplan Ajuste",
        DE: "Wählregeln für Internettelefonie",
        IT: "Impostazioni VoIP Dialplan",
        DA: "VoIP dialplan-indstilling",
        AR: "الصوت عبر بروتوكول الإنترنت إعداد خطة الطلب",
        PT: "parametros de VoIP Dialplan",
        RO: "TODO",
        IND: "TODO"
    },
    proxyServer: {
        EN: "Proxy Server",
        FR: "Serveur Proxy",
        SPN: "Servidor Proxy",
        DE: "Proxy Server",
        IT: "Server Proxy",
        DA: "Proxy Server",
        AR: "ملقم وكيل",
        PT: "Proxy Server",
        RO: "TODO",
        IND: "TODO"
    },
    registrarServer: {
        EN: "Registrar Server",
        FR: "Serveur Registrar",
        SPN: "Servidor Registrar",
        DE: "Registrar",
        IT: "Server di registrazione",
        DA: "Registrar Server",
        AR: "خادم المسجل",
        PT: "Registrar Server",
        RO: "TODO",
        IND: "TODO"
    },
    userAgentDomain: {
        EN: "User Agent Domain",
        FR: "User Agent Domain",
        SPN: "Agent Usuario de Dominio",
        DE: "User Agent Domain",
        IT: "Dominio User agent",
        DA: "User Agent Domain",
        AR: "مجال وكيل المستخدم ",
        PT: "dominio de agente",
        RO: "TODO",
        IND: "TODO"
    },
    outboundProxy: {
        EN: "Outbound Proxy",
        FR: "Proxy Outbound",
        SPN: "Outbound Proxy",
        DE: "Outbound Proxy",
        IT: "Proxy in uscita",
        DA: "Udgående proxy",
        AR: "البروكسي الصادر",
        PT: "proxy outbound",
        RO: "TODO",
        IND: "TODO"
    },
    serverRegister: {
        EN: "Server Register",
        FR: "",
        SPN: "",
        DE: "",
        IT: " uscita",
        DA: "",
        AR: "",
        PT: "registrar server",
        RO: "TODO",
        IND: "TODO"
    },
    outboundInternal: {
        EN: "Outbound Proxy Internal",
        FR: "Proxy Interne Outbound",
        SPN: "Outbound Proxy Interno",
        DE: "Outbound Proxy Internal",
        IT: "Proxy in uscita interno",
        DA: "Udgående proxy, intern",
        AR: "البروكسي الصادر الداخلي ",
        PT: "proxy interno de outbound",
        RO: "TODO",
        IND: "TODO"
    },
    sipAccount: {
        EN: "SIP Account",
        FR: "Compte SIP",
        SPN: "Cuenta SIP",
        DE: "Internetrufnummer",
        IT: "Account SIP",
        DA: "SIP-konto",
        AR: "حساب  رزمة احادية التراصف",
        PT: "conta SIP",
        RO: "TODO",
        IND: "TODO"
    },
    accountEnabled: {
        EN: "Account Enabled",
        FR: "Compte Activé",
        SPN: "Cuenta Activada",
        DE: "Account Aktiviert",
        IT: "Account abilitato",
        DA: "Konto aktiveret",
        AR: "حساب مفعل ",
        PT: "conta habilitada",
        RO: "TODO",
        IND: "TODO"
    },
    directoryNumber: {
        EN: "Directory Number",
        FR: "Numéro de téléphone",
        SPN: "Número de Directorio",
        DE: "Rufnummer",
        IT: "Numero Directory",
        DA: "Oversigtsnummer",
        AR: "رقم الدليل",
        PT: "numero de directorio",
        RO: "TODO",
        IND: "TODO"
    },
    authName: {
        EN: "Authentication Name",
        FR: "Nom d'authentification",
        SPN: "Nombre de Autenticación",
        DE: "Benutzername",
        IT: "Nome di autenticazione",
        DA: "Godkendelsesnavn",
        AR: "اسم المصادقة",
        PT: "nome de autenticaçao",
        RO: "TODO",
        IND: "TODO"
    },
    preferredTime: {
        EN: "Preferred Period",
        FR: "Période Préférée",
        SPN: "Período Preferente",
        DE: "Zeiteinstellung",
        IT: "Periodo preferito",
        DA: "Foretrukken periode",
        AR: "الفترة المفضلة",
        PT: "periodo preferido",
        RO: "TODO",
        IND: "TODO"
    },
    preferredCodec1: {
        EN: "Preferred CODEC 1",
        FR: "CODEC 1 Préféré",
        SPN: "CODEC 1 Preferido",
        DE: "erster Codec",
        IT: "CODEC 1 preferito",
        DA: "Foretrukken CODEC 1",
        AR: "CODEC 1 المفضلة ",
        PT: "CODEC 1 preferido",
        RO: "TODO",
        IND: "TODO"
    },
    preferredCodec2: {
        EN: "Preferred CODEC 2",
        FR: "CODEC 2 Préféré",
        SPN: "CODEC 2 Preferido",
        DE: "zweiter Codec",
        IT: "CODEC 2 preferito",
        DA: "Foretrukken CODEC 2",
        AR: "CODEC 2 المفضلة ",
        PT: "CODEC 2 preferido",
        RO: "TODO",
        IND: "TODO"
    },
    preferredCodec3: {
        EN: "Preferred CODEC 3",
        FR: "CODEC 3 Préféré",
        SPN: "CODEC 3 Preferido",
        DE: "Dritter Codec",
        IT: "CODEC 3 preferito",
        DA: "Foretrukken CODEC 3",
        AR: "CODEC 3المفضلة ",
        PT: "CODEC 3 preferido",
        RO: "TODO",
        IND: "TODO"
    },
    noPermission: {
        EN: "Not enough permissions",
        FR: "Permissions insuffisantes",
        SPN: "No hay suficientes permisos",
        DE: "Unzureichende Benutzerrechte",
        IT: "Non abbastanza permessi",
        DA: "Utilstrækkelige tilladelser",
        AR: "أذونات غير كافية",
        PT: "permisoes nao suficientes",
        RO: "TODO",
        IND: "TODO"
    },
    restoreSipSettings: {
        EN: "Restore Default Settings",
        FR: "Restaurer les Paramètres par Défaut",
        SPN: "Restablecer Ajustes Predeterminados",
        DE: "Auf Standartwerte zurücksetzen",
        IT: "Ripristina le impostazioni predefinite",
        DA: "Gendan standardindstillinger",
        AR: "استعادة الإعدادات الافتراضية",
        PT: "restaurar valores por defeito",
        RO: "TODO",
        IND: "TODO"
    },
    sipLines: {
        EN: "Lines",
        FR: "Lignes",
        SPN: "Líneas",
        DE: "Leitungen",
        IT: "Linee",
        DA: "Linjer",
        AR: "خطوط",
        PT: "linhas",
        RO: "TODO",
        IND: "TODO"
    },
    sipProfilesDescription: {
        EN: "Enter the parameters, click on 'Apply' to save.",
        FR: "Entrez les paramètres, cliquez sur 'Appliquer' pour sauver.",
        SPN: "Introduzca los parámetros, haga clic en 'Aplicar' para guardar los parámetros.",
        DE: "Geben Sie die Parameter ein und klicken Sie auf  Übernehmen , um die Parameter zu speichern.",
        IT: "Inserisci i parametri, clicca su 'Applica' per salvare i parametri.'",
        DA: "Indtast parametrene, og klik på 'Anvend' for at gemme.",
        AR: "أدخل المعلمات، انقر فوق 'تطبيق' لحفظ المعلمات.",
        PT: "adicione parametros, pressione 'apply' para guardar'",
        RO: "TODO",
        IND: "TODO"
    },
    sipAdvancedSetttings: {
        EN: "Advanced settings",
        FR: "Paramètres avancés",
        SPN: "Configuraciónes avanzada",
        DE: "Erweiterte Einstellungen",
        IT: "Impostazioni avanzate",
        DA: "Avancerede indstillinger",
        AR: "الإعدادات المتقدمة",
        PT: "parametros avançados",
        RO: "TODO",
        IND: "TODO"
    },
    sipT38: {
        EN: "Enable T38 Support",
        FR: "Activer Support T38",
        SPN: "Habilitar el soporte T38",
        DE: "T38 - Unterstützung aktivieren",
        IT: "Abilita Supporto T38",
        DA: "Aktiver T38 support",
        AR: "تمكين دعم T 38",
        PT: "habilitar suporte T38",
        RO: "TODO",
        IND: "TODO"
    },
    sipEndpoints: {
        EN: "Endpoints",
        FR: "Points de terminaison",
        SPN: "Extremos",
        DE: "Anschlussstellen",
        IT: "Endpoint",
        DA: "Slutpunkter",
        AR: "نقطة طرفية",
        PT: "extremos",
        RO: "TODO",
        IND: "TODO"
    },
    FlashHookEnable: {
        EN: "Flash Hook Enable",
        FR: "Activer voyant décroché",
        SPN: "Flash Hook Enable",
        DE: "Rückfragefunktion aktivieren",
        IT: "Abilita Flash Hook",
        DA: "Aktiver ny Flash Hook",
        AR: "تفعيل فلاش هوك ",
        PT: "habilitar Flash Hook",
        RO: "TODO",
        IND: "TODO"
    },
    sipRegistrationExpireTimeout: {
        EN: "Registration Expire Timeout",
        FR: "Registration Expire Timeout",
        SPN: "Registro Expirar Tiempo de espera",
        DE: "Timeout für die Registrierung",
        IT: "Registrazione Expire Timeout",
        DA: "Timeout for udløb af registrering",
        AR: "انتهاء مهلة التسجيل ",
        PT: "tempo de registro expirado",
        RO: "TODO",
        IND: "TODO"
    },
    sipRegistrationRetryInterval: {
        EN: "Registration Retry Interval",
        FR: "Registration Retry Interval",
        SPN: "Registro Intervalo de reintento",
        DE: "Wiederholungsintervall für Registrierung",
        IT: "Registrazione intervallo tra i tentativi",
        DA: "Interval for registrerings forsøg",
        AR: "تسجيل إعادة المحاولة ",
        PT: "intervalo de tentativa de registro ",
        RO: "TODO",
        IND: "TODO"
    },
    sipCallWaiting: {
        EN: "Call Waiting",
        FR: "Appel en attente",
        SPN: "Llamada en Espera",
        DE: "Anruf in Warteschleife",
        IT: "Chiamata in attesa",
        DA: "Opkald venter",
        AR: "انتظار المكالمات",
        PT: "chamada em espera",
        RO: "TODO",
        IND: "TODO"
    },
    sipCallForwardingNumber: {
        EN: "Call Forwarding Number",
        FR: "Numéro de renvoi",
        SPN: "Número de desvío",
        DE: "Nummer für Anrufweiterleitung",
        IT: "Chiama numero di inoltro",
        DA: "Nummer til viderestilling af opkald",
        AR: "عدد المكالمات المحولة ",
        PT: "numero de chamada encaminhada",
        RO: "TODO",
        IND: "TODO"
    },
    sipCallForwardUnconditionally: {
        EN: "Forward immediately",
        FR: "Renvoi immédiat",
        SPN: "Reenviar incondicionalmente",
        DE: "Sofortige Weiterleitung",
        IT: "Inoltra sempre",
        DA: "Viderestil uden undtagelse",
        AR: "تحويل المكالمة دون قيد أو شرط",
        PT: "encaminhar imediatamente",
        RO: "TODO",
        IND: "TODO"
    },
    SipForwardOnBusy: {
        EN: "Forward 'On Busy'",
        FR: "Renvoi 'sur occupé'",
        SPN: "Reenviar 'por ocupación'",
        DE: "Weiterleitung wenn besetzt",
        IT: "Inoltra 'su occupato'",
        DA: "Viderestil ved 'Optaget'",
        AR: "تحويل المكالمة في حال 'الخط مشغول'",
        PT: "encaminhar quando ocupado",
        RO: "TODO",
        IND: "TODO"
    },
    SipForwardOnNoAnswer: {
        EN: "Forward 'On Answer'",
        FR: "Renvoi 'sur réponse'",
        SPN: "Adelante 'En respuesta'",
        DE: "Weiterleitung bei Antwort",
        IT: "Inoltra 'alla risposta'",
        DA: "Viderestil ved 'Besvarelse'",
        AR: "تحويل المكالمة في حال 'عند الرد'",
        PT: "encaminhar na chamada",
        RO: "TODO",
        IND: "TODO"
    },
    sipAnonymousCallBlocking: {
        EN: "Anonymous call blocking",
        FR: "Blocage des appels anonymes",
        SPN: "Anonymous bloqueo de llamadas",
        DE: "Blockieren anonymer Anrufe",
        IT: "Blocco chiamata anonima",
        DA: "Blokering af anonyme opkald",
        AR: "حجب المكالمات من متصل مجهول ",
        PT: "bloquear chamadas anonimas",
        RO: "TODO",
        IND: "TODO"
    },
    sipAnonymousCalling: {
        EN: "Anonymous calling",
        FR: "Appel anonyme",
        SPN: "Llamada anónima",
        DE: "Anonym anrufen",
        IT: "Chiamata anonima",
        DA: "Anonyme opkald",
        AR: "متصل مجهول ",
        PT: "chamadas anonimas",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip1: {
        EN: "Here you can access the configuration page of profiles and active lines.",
        FR: "Ici vous pouvez accéder à la page de configuration des profils et des lignes actives.",
        SPN: "Aquí puedes acceder a la página de configuración de perfiles y líneas activas.",
        DE: "Hier können Sie auf die Konfiguration der Telefonieeinstellungen zugreifen",
        IT: "Qui puoi accedere alla pagina di configurazione dei profili e delle linee attive.",
        DA: "Her kan du få adgang til konfigurationssiden for profiler og aktive linjer.",
        AR: "هنا يمكنك الوصول إلى صفحة تكوين البروفايلات والخطوط النشطة.",
        PT: "aquí pode aceder á pagina de configuraçao dos perfis e linhas activas",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip2: {
        EN: "Here you can enable or disable voice service usage.",
        FR: "Ici vous pouvez activer ou désactiver l'utilisation du service voix.",
        SPN: "Aquí puede activar o desactivar el uso del servicio de voz.",
        DE: "Hier können Sie die Nutzung der Telefonie ein- bzw. ausschalten",
        IT: "Qui puoi attivare o disattivare l'utilizzo del servizio voce.",
        DA: "Her kan du aktivere og deaktivere anvendelsen af tjenesten.",
        AR: "هنا يمكنك تمكين أو تعطيل استخدام الخدمة الصوتية.",
        PT: "aquí pode activar ou desactivar o uso do serviço de voz",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip3: {
        EN: "Here you can select country location.",
        FR: "Ici, vous pouvez sélectionner le pays.",
        SPN: "Aquí puede seleccionar la ubicación del país.",
        DE: "Hier können Sie Ihren Standort wählen",
        IT: "Qui puoi selezionare l'ubicazione del paese.",
        DA: "Her kan du vælge landebeliggenheden.",
        AR: "هنا يمكنك تحديد موقع البلد.",
        PT: "aquí pode seleccionar o pais",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip4: {
        EN: "Here you can set VoIP dialplan setting.",
        FR: "Ici vous pouvez définir la configuration du dialplan VoIP.",
        SPN: "Aquí puede configurar dialplan VoIP.",
        DE: "Hier können Sie die Wählregeln für die Internetttelfonie einrichten.",
        IT: "Qui puoi impostare l'impostazione dialplan VoIP.",
        DA: "Her kan du angive indstillingerne for VoIP dialplan.",
        AR: "هنا يمكنك تعيين إعداد dialplan عبر بروتوكول الإنترنت.",
        PT: "aquí pode definir os parametros de VoIP Dialplan",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip5: {
        EN: "Here you can set registrar server address.",
        FR: "Ici vous pouvez configurer l'adresse du serveur registrar.",
        SPN: "Aquí se puede establecer la dirección del servidor registrar.",
        DE: "Hier können Sie die Serveradresse für die Internettelefonie festlegen (Registrar)",
        IT: "Qui puoi impostare l'indirizzo del server di registrazione.",
        DA: "Her kan du angive registratar serveradressen.",
        AR: "هنا يمكنك تعيين عنوان الخادم.",
        PT: "aquí pode definir os endereços de registro de servidor",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip6: {
        EN: "Here you can set registrar server port.",
        FR: "Ici, vous pouvez définir le port du serveur registrar.",
        SPN: "Aquí se puede establecer la puerta del servidor registrar.",
        DE: "Hier legen Sie den verwendeten Port für den Registrar fest.",
        IT: "Qui puoi impostare la porta del server di registrazione.",
        DA: "Her kan du angive registratrar serverporten.",
        AR: "هنا يمكنك تعيين منفذ خادم.",
        PT: "aquí pode definir as portas de registro do servidor",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip7: {
        EN: "Here you can set register server address.",
        FR: "Ici vous pouvez définir l'adresse du serveur d'enregistrement.",
        SPN: "Aquí puede definir el registro de direcciones del servidor.",
        DE: "Hier könnne Sie die Adresse für den Registrar einstellen.",
        IT: "Qui puoi impostare l'indirizzo del registro del server.",
        DA: "Her kan du angive registreringsserveradressen.",
        AR: "هنا يمكنك تعيين تسجيل عنوان الخادم.",
        PT: "aquí pode definir o endereço de registro do servidor",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip8: {
        EN: "Here you can set register server port.",
        FR: "Ici vous pouvez définir le port du serveur d'enregistrement.",
        SPN: "Aquí puede definir el registro de puerto del servidor.",
        DE: "Hier könnne Sie den verwendeten Port für den Registrar einstellen.",
        IT: "Qui puoi impostare la porta del registro del server.",
        DA: "Her kan du angive registreringsserverporten.",
        AR: "هنا يمكنك تعيين تسجيل منفذ الخادم.",
        PT: "aquí pode definir as portas de registro do servidor",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip9: {
        EN: "Here you can set user agent domain server address.",
        FR: "Ici vous pouvez configurer l'adresse du serveur user agent domain.",
        SPN: "Aquí se puede establecer la dirección del servidor user agent domain.",
        DE: "Adresseinstellung des User-Agent Domainservers",
        IT: "Qui puoi impostare l'indirizzo del dominio dello user agent.",
        DA: "Her kan du angive 'user agent domain server' adresse.",
        AR: "هنا يمكنك تعيين وكيل المستخدم وعنوان ملقم المجال.",
        PT: "aquí pode definir o endereço de de dominio do agente do servidor",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip10: {
        EN: "Here you can set user agent domain server port.",
        FR: "Ici, vous pouvez définir le port du serveur user agent domain.",
        SPN: "Aquí se puede establecer la puerta del servidor user agent domain.",
        DE: "Porteinstellung des User-Agent-Domainservers",
        IT: "Qui puoi impostare la porta del server dominio dello user agent.",
        DA: "Her kan du angive 'user agent domain server' port.",
        AR: "هنا يمكنك تعيين وكيل المستخدم وبورت ملقم المجال.",
        PT: "aquí pode definir a porta de dominio do agente do servidor",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip11: {
        EN: "Here you can set outbound proxy server address.",
        FR: "Ici vous pouvez configurer l'adresse du serveur proxy outbound.",
        SPN: "Aquí se puede establecer la dirección del servidor outbound proxy.",
        DE: "Einstellung der Adresse für den Outbound-Proxy",
        IT: "Qui puoi impostare l'indirizzo del server proxy in uscita.",
        DA: "Her kan du angive den udgående proxy server adresse.",
        AR: "هنا يمكنك تعيين عنوان الملقم الوكيل الصادر.",
        PT: "aquí pode definir o endereço de outbound do servidor de proxy",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip12: {
        EN: "Here you can set outbound proxy server port.",
        FR: "Ici, vous pouvez définir le port du serveur proxy outbound.",
        SPN: "Aquí se puede establecer la puerta del servidor outbound proxy.",
        DE: "Einstellung des Ports für den Outbound-Proxy",
        IT: "Qui puoi impostare la porta server proxy in uscita.",
        DA: "Her kan du angive den udgående proxy server port.",
        AR: "هنا يمكنك تعيين بورت الملقم الوكيل  الصادر ",
        PT: "aquí pode definir a porta de outbound do servidor de proxy",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip13: {
        EN: "Here you can set outbound proxy internal server address.",
        FR: "Ici vous pouvez configurer l'adresse du serveur proxy outbound interne.",
        SPN: "Aquí se puede establecer la dirección del servidor outbound proxy interno.",
        DE: "Adresseinstellung des internen Proxyservers",
        IT: "Qui puoi impostare l'indirizzo server proxy in uscita interno.",
        DA: "Her kan du angive den udgående proxy adresse for den interne server.",
        AR: "هنا يمكنك تعيين عنوان البروكسي الداخلي.",
        PT: "aquí pode definir o endereço de outbound do servidor interno de proxy",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip14: {
        EN: "Here you can enable or disable T38 support.",
        FR: "Ici vous pouvez activer ou désactiver le support T38.",
        SPN: "Aquí puede activar o desactivar el soporte T38.",
        DE: "Hier können Sie die Unterstützung für das Übertragungsprotokoll T38 ein- bzw. ausschalten.",
        IT: "Qui puoi attivare o disattivare il supporto T38.",
        DA: "Her kan du aktivere eller deaktivere T38 support.",
        AR: "هنا يمكنك تمكين أو تعطيل دعم T38.",
        PT: "aquí pode habilitar ou desabilitar o suporte T38",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip15: {
        EN: "Here you can set registration expire timeout.",
        FR: "Ici vous pouvez définir le registration expire timeout.",
        SPN: "Aquí se puede establecer el registro caduca el tiempo de espera.",
        DE: "Hier können Sie den Zeitraum für die Gültigkeit Ihrer Anmeldedaten festlegen.",
        IT: "Qui puoi impostare la scadenza della registrazione.",
        DA: "Her kan du angive timeout for udløb af registrering.",
        AR: "هنا يمكنك تعيين تسجيل انهاء المهلة.",
        PT: "aquí pode definir a expiraçao em tempo do registro",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip16: {
        EN: "Here you can set registration retry interval.",
        FR: "Ici vous pouvez définir le registration retry interval.",
        SPN: "Aquí se puede establecer el intervalo de reintento de registro.",
        DE: "Hier können Sie die Anzahl an Wiederversuchen zur Registrierung festlegen.",
        IT: "Qui puoi impostare la registrazione dell'intervallo dei tentativi.",
        DA: "Her kan du angive intervallet for registreringsgenforsøg.",
        AR: "هنا يمكنك تعيين الفاصل الزمني لإعادة محاولة التسجيل.",
        PT: "aquí pode definir o intervalo de tentativa de registro",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip17: {
        EN: "Here you can restore default SIP settings.",
        FR: "Ici vous pouvez restaurer les paramètres SIP par défaut.",
        SPN: "Aquí usted puede restaurar la configuración por defecto de SIP.",
        DE: "Hier können Sie die Standartwerte für die Internettelefonie wiederherstellen.",
        IT: "Qui puoi ripristinare le impostazioni predefinite SIP.",
        DA: "Her kan du gendanne standardindstillingerne for SIP.",
        AR: "هنا يمكنك استعادة إعدادات رزمة احادية التراصف الافتراضية ",
        PT: "aquí pode restaurar os parametros de SIP por defeito",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip18: {
        EN: "Here you save the settings made in this page.",
        FR: "Ici vous enregistrez les changements effectués dans cette page.",
        SPN: "Aquí se guardan los ajustes realizados en esta página.",
        DE: "Hiermit speichern Sie die auf dieser Seite gemachten Änderungen.",
        IT: "Qui salvi le impostazioni effettuate in questa pagina.",
        DA: "Her kan du gemme de indstillinger, som er foretaget på denne side.",
        AR: "هنا قمت بحفظ الإعدادات التي تم إجراؤها في هذه الصفحة.",
        PT: "aquí pode guardar os paramentros alterados nesta pagina",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip19: {
        EN: "Here you cancel all modifications that you have made in this page, you also will be redirected to the main page.",
        FR: "Ici, vous annulez toutes les modifications que vous avez apportées à cette page, vous serez ensuite redirigé vers la page principale.",
        SPN: "Aquí usted cancela todas las modificaciones que ha realizado en esta página, también va a ser redirigido a la página principal.",
        DE: "Hiermit brechen Sie die Eingabe ab und gelangen direkt zurück auf die Startseite.",
        IT: "Qui annulli tutte le modifiche che sono state apportate in questa pagina e sarai reindirizzato alla pagina principale.",
        DA: "Her kan du annullere alle de modificeringer, som du har foretaget på denne side, og du vil også blive omdirigeret til hovedsiden.",
        AR: "هنا قمت بإلغاء جميع التعديلات التي قمت بها في هذه الصفحة، سيتم توجيهك إلى الصفحة الرئيسية.",
        PT: "aquí pode cancelar todas as modificaçoes que fez nesta pagina, sera enviado á pagina de inicio.",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip20: {
        EN: "Here you can enable or disable the line.",
        FR: "Ici vous pouvez activer ou désactiver la ligne.",
        SPN: "Aquí puede activar o desactivar la línea.",
        DE: "Hier aktivieren oder deaktivieren Sie die Telefonleitung",
        IT: "Qui puoi attivare o disattivare la linea.",
        DA: "Her kan du aktivere eller deaktivere linjen.",
        AR: "هنا يمكنك تمكين أو تعطيل الخط.",
        PT: "aquí pode habilitar ou desabilitar a linha",
        RO: "TODO",
        IND: "TODO"
    },
    sipTipMailbox: {
        EN: "You can choose a different mailbox configuration for this line.",
        FR: "TODO",
        SPN: "Puede escoger una configuracion de contestador diferente para esta linea",
        DE: "Für diese Leitung können Sie verschiedene Anrufbeantwortereinstellungen vornehmen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti alege o configuratie de cutie postala diferita pentru aceasta linie.",
        IND: "TODO"
    },
    sipTip21: {
        EN: "Here you can set SIP authentication name.",
        FR: "Ici vous pouvez définir le nom d'authentification SIP.",
        SPN: "Aquí se puede establecer SIP nombre de autenticación.",
        DE: "Hier geben Sie den Benutzernamen für die Internettelefonie ein.",
        IT: "Qui puoi impostare il nome di autenticazione SIP.",
        DA: "Her kan du angive godkendelsesnavnet for SIP.",
        AR: "هنا يمكنك تعيين اسم مصادقة رزمة احادية التراصف",
        PT: "aquí pode editar o nome de autenticaçao SIP",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip22: {
        EN: "Here you can set SIP password.",
        FR: "Ici vous pouvez définir un mot de passe SIP.",
        SPN: "Aquí se puede establecer SIP contraseña.",
        DE: "Hier geben Sie das Kennwort für die Internettelefonie ein.",
        IT: "Qui puoi impostare una password SIP.",
        DA: "Her kan du angive adgangskoden for SIP.",
        AR: "هنا يمكنك تعيين كلمة المرور  الخاصة برزمة احادية التراصف",
        PT: "aquí pode editar a password de SIP",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip23: {
        EN: "Here you can select preferred period.",
        FR: "Ici vous pouvez sélectionner la période préférée.",
        SPN: "Aquí puede seleccionar periodo preferido.",
        DE: "Registierungs-Intervall",
        IT: "Qui puoi selezionare un periodo preferito.",
        DA: "Her kan du vælge den foretrukne periode.",
        AR: "هنا يمكنك تحديد الفترة المفضلة.",
        PT: "aquí pode seleccionar o periodo preferido",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip24: {
        EN: "Here you can select preferred CODEC 1.",
        FR: "Ici vous pouvez sélectionner le CODEC préféré 1.",
        SPN: "Aquí puede seleccionar preferido CODEC 1.",
        DE: "Erster Codec",
        IT: "Qui puoi selezionare il CODEC preferito 1.",
        DA: "Her kan du vælge den foretrukne CODEC 1.",
        AR: "هنا يمكنك تحديد CODEC 1 المفضلة ",
        PT: "aquí pode seleccionar o CODEC 1 preferido",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip25: {
        EN: "Here you can select preferred CODEC 2.",
        FR: "Ici vous pouvez sélectionner le CODEC préféré 2.",
        SPN: "Aquí puede seleccionar preferido CODEC 2.",
        DE: "Zweiter Codec",
        IT: "Qui puoi selezionare il CODEC preferito 2.",
        DA: "Her kan du vælge den foretrukne CODEC 2.",
        AR: "هنا يمكنك تحديد CODEC 2 المفضلة ",
        PT: "aquí pode seleccionar o CODEC 2 preferido",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip26: {
        EN: "Here you can select preferred CODEC 3.",
        FR: "Ici vous pouvez sélectionner le CODEC préféré 3.",
        SPN: "Aquí puede seleccionar preferido CODEC 3.",
        DE: "Dritter Codec",
        IT: "Qui puoi selezionare il CODEC preferito 3.",
        DA: "Her kan du vælge den foretrukne CODEC 3.",
        AR: "هنا يمكنك تحديد CODEC 3 المفضلة ",
        PT: "aquí pode seleccionar o CODEC 3 preferido",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip27: {
        EN: "Here you can enable or disable call waiting option.",
        FR: "Ici vous pouvez activer ou désactiver l'option de mise en attente d'appels.",
        SPN: "Aquí puede activar o desactivar la llamada en espera.",
        DE: "Hier könne Sie die Funktion 'Anklopfen' ein- bzw. ausschalten.",
        IT: "Qui puoi attivare o disattivare l'opzione chiamata in attesa.",
        DA: "Her kan du aktivere og deaktivere muligheden for ventende opkald.",
        AR: "هنا يمكنك تمكين أو تعطيل خاصية انتظار المكالمات.",
        PT: "aquí pode activar ou desactivar a opçao de chamada em espera",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip28: {
        EN: "Here you can set SIP call forwarding number.",
        FR: "Ici vous pouvez définir le numéro de renvoi SIP.",
        SPN: "Aquí se pueden establecer llamadas SIP forwarding número.",
        DE: "Hier legen Sie die Internettelefonnummer für die Anrufweiterleitung fest.",
        IT: "Qui puoi impostare il numero di inoltro di chiamata SIP.",
        DA: "Her kan du angive viderestillingsnummeret for SIP-opkald.",
        AR: "هنا يمكنك تعيين رقم تحويل رزمة احادية التراصف",
        PT: "aquí pode editar o numero de reencaminhamento de chamada",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip29: {
        EN: "Here you can enable or disable the immediate forward.",
        FR: "Ici vous pouvez activer ou désactiver le renvoi immédiat.",
        SPN: "Aquí puede activar o desactivar forward incondicionalmente.",
        DE: "Hier können Sie die Funktion 'Anrufweiterleitung' ein- bzw. ausschalten.",
        IT: "Qui puoi attivare o disattivare l'inoltro incondizionato.",
        DA: "Her kan du aktivere eller deaktivere den ubetingede viderestilling.",
        AR: "هنا يمكنك تمكين أو تعطيل تحويل المكالمات دون قيد أو شرط.",
        PT: "aquí pode activar ou desactivar o encaminhamento imediato",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip30: {
        EN: "Here you can enable or disable forward 'on busy'.",
        FR: "Ici vous pouvez activer ou désactiver le renvoi 'sur ligne occupée'.",
        SPN: "Aquí puede activar o desactivar forward 'ocupado'.",
        DE: "Hier können Sie die Funktion 'Weiterleiten bei besetzt' ein- bzw. ausschalten.",
        IT: "Qui puoi attivare o disattivare l'inoltro su 'occupato'.",
        DA: "Her kan du aktivere eller deaktivere viderestilling ved 'Optaget'.",
        AR: "هنا يمكنك تمكين أو تعطيل تحويل المكالمات في حالة 'الخط مشغول'.",
        PT: "aquí pode habilitar ou desabilitar o encaminhamento 'ocupado''",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip31: {
        EN: "Here you can enable or disable forward 'on no answer'.",
        FR: "Ici vous pouvez activer ou désactiver le renvoi 'sur non répondu'.",
        SPN: "Aquí puede activar o desactivar forward 'si no hay respuesta'.",
        DE: "Hier können Sie die Funktion 'Weiterleiten wenn keine Antwort' ein- bzw. ausschalten.",
        IT: "Qui puoi attivare o disattivare l'inoltro su 'nessuna risposta'.",
        DA: "Her kan du aktivere eller deaktivere viderestilling ved 'Intet svar'.",
        AR: "هنا يمكنك تمكين أو تعطيل تحويل المكالمات في حال 'عند الرد'",
        PT: "aquí pode activar ou desactivar o encaminhamento 'sem resposta''",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip32: {
        EN: "Here you can enable or disable MWI.",
        FR: "Ici vous pouvez activer ou désactiver MWI.",
        SPN: "Aquí puede activar o desactivar MWI.",
        DE: "Hier können Sie MWI aktivieren oder deaktivieren.",
        IT: "Qui puoi attivare o disattivare MWI.",
        DA: "Her kan du aktivere eller deaktivere MWI.",
        AR: "هنا يمكنك تمكين أو تعطيل MWI",
        PT: "aquí pode habilitar ou desabilitar MWI",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip33: {
        EN: "Here you can enable or disable anonymous call blocking.",
        FR: "Ici vous pouvez activer ou désactiver le blocage des appels anonymes.",
        SPN: "Aquí puede activar o desactivar el bloqueo de llamadas anónimas.",
        DE: "Hier können Sie festlegen, ob Anrufer mit unterdrückter Rufnummer automatisch abgewiesen werden.",
        IT: "Qui puoi attivare o disattivare il blocco delle chiamate anonime.",
        DA: "Her kan du aktivere eller deaktivere blokering af anonyme opkald.",
        AR: "هنا يمكنك تمكين أو تعطيل حجب المكالمة من متصلين مجهولين ",
        PT: "aquí pode habilitar ou desabilitar o bloqueio de chamadas anonimas",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip34: {
        EN: "Here you can enable or disable anonymous calling.",
        FR: "Ici vous pouvez activer ou désactiver l'appel anonyme.",
        SPN: "Aquí puede activar o desactivar llamada anónima.",
        DE: "Hier legen Sie fest, ob Ihre eigene Rufnummer bei ausgehenden Anrufen unterdrückt wird.",
        IT: "Qui puoi attivare o disattivare la chiamata anonima.",
        DA: "Her kan du aktivere eller deaktivere anonyme opkald.",
        AR: "هنا يمكنك تمكين أو تعطيل الاتصال من متصلين مجهولين.",
        PT: "aquí pode habilitar ou desabilitar chamadas anonimas",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip35: {
        EN: "Here you can enable or disable the Do No Disturb option.",
        FR: "Ici vous pouvez activer ou désactiver l'option Ne Pas Déranger.",
        SPN: "Aquí puede activar o desactivar DND.",
        DE: "Hier können Sie die Funktion 'Nicht stören' ein- bzw. ausschalten. Wenn Sie diese Funktion aktivieren, werden keine Anrufe zu Ihren Telefonen durchgeleitet.",
        IT: "Qui puoi attivare o disattivare l'opzione Non disturbare.",
        DA: "Her kan du aktivere eller deaktivere valgmuligheden 'Vil ikke forstyrres'.",
        AR: "هنا يمكنك تمكين أو تعطيل DND",
        PT: "aquí pode habilitar ou desabilitar a opçao nao incomodar",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip36: {
        EN: "Here you save the settings made in this page.",
        FR: "Ici vous enregistrez les changements effectués dans cette page.",
        SPN: "Aquí se guardan los ajustes realizados en esta página.",
        DE: "Hiermit speichern Sie die auf dieser Seite gemachten Änderungen.",
        IT: "Qui salvi le impostazioni effettuate in questa pagina.",
        DA: "Her kan du gemme de indstillinger, som er foretaget på denne side.",
        AR: "هنا قمت بحفظ الإعدادات التي تم إجراؤها في هذه الصفحة.",
        PT: "aquí pode guardar os parametros alterados nesta pagina",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip37: {
        EN: "Here you cancel all modifications that you have made in this page, you also will be redirected to the main page.",
        FR: "Ici, vous annulez toutes les modifications que vous avez apporté à cette page, vous serez ensuite redirigé vers la page principale.",
        SPN: "Aquí usted cancela todas las modificaciones que ha realizado en esta página, también va a ser redirigido a la página principal.",
        DE: "Hiermit brechen Sie die Eingabe ab und gelangen direkt zurück auf die Startseite.",
        IT: "Qui annulli tutte le modifiche che sono state apportate in questa pagina e sarai reindirizzato alla pagina principale.",
        DA: "Her kan du annullere alle de modificeringer, som du har foretaget på denne side, og du vil også blive omdirigeret til hovedsiden.",
        AR: "قمت بإلغاء جميع التعديلات التي قمت بها في هذه الصفحة، سيتم توجيهك إلى الصفحة الرئيسية.",
        PT: "aquí pode cancelar as modificaçoes que fez nest pagina, sera encaminhado á pagina inicial.",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip39: {
        EN: "Here you can switch to DTMF in-band mode.",
        FR: "Ici vous pouvez sélectionner le mode DTMF in-band.",
        SPN: "Aquí puede cambiar DTMF en banda.",
        DE: "Hier können Sie das DTMF-Band wechseln.",
        IT: "Qui puoi passare a DTMF in banda.",
        DA: "Her kan du skifte til DTMF in-band-tilstand.",
        AR: "هنا يمكنك التبديل DTMF في الحزمة.",
        PT: "aquí pode mudar para DTMF em modo in-band",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip40: {
        EN: "You can manage Flash Hook (recall) here.",
        FR: "Vous pouvez gérer Flash Hook (recall) ici.",
        SPN: "Puede administrar Flash Hook (recall) aquí.",
        DE: "Hier können Sie die Rückfrage (Rückruf) verwalten.",
        IT: "Qui puoi gestire Flash Hook (recall).",
        DA: "Du kan administrere Flash Hook (genopkald) her.",
        AR: "يمكنك إدارة فلاش هوك (إعادة اتصال) هنا.",
        PT: "pode controlar o flash hook (rechamada) aquí.",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip41: {
        EN: "Here you can access the configuration page of EndPoints.",
        FR: "Ici vous pouvez accéder à la page de configuration des terminaux.",
        SPN: "Aquí puedes acceder a la página de configuración de puntos finales.",
        DE: "Hier können Sie auf die Konfigurationsseite von EndPoints zugreifen.",
        IT: "Qui puoi accedere alla pagina di configurazione degli EndPoints.",
        DA: "Her kan du få adgang til konfigurationssiden for slutpunkter.",
        AR: "هنا يمكنك الوصول إلى صفحة تكوين النهاية.",
        PT: "aquí pode aceder á pagina de configuraçao de endpoints",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip42: {
        EN: "Here you can set directory number of line.",
        FR: "Ici vous pouvez définir le numéro de téléphone de la ligne.",
        SPN: "Aquí se puede establecer el número de directorio de la línea.",
        DE: "Hier können Sie die Verzeichnisnummer der Leitung einstellen.",
        IT: "Qui puoi impostare il numero di directory di linea.",
        DA: "Her kan du indstille linjens oversigtsnummer.",
        AR: "هنا يمكنك تعيين رقم الدليل من الخط.",
        PT: "aquí pode alterar a linha de numero de directorio",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip43: {
        EN: "Here you can see the status of the line.",
        FR: "Ici vous pouvez voir l'état de la ligne.",
        SPN: "Aquí puedes ver el estado de la línea.",
        DE: "Hier sehen Sie den Status der Leitung.",
        IT: "Qui puoi vedere lo stato della linea.",
        DA: "Her kan du se status for linjen.",
        AR: "هنا يمكنك معرفة حالة الخط.",
        PT: "aquí pode ver o estado da linha",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip44: {
        EN: "Here you can see the status reason of the line.",
        FR: "Ici vous pouvez voir la cause de l'état de la ligne.",
        SPN: "Aquí se puede ver la razón para el estado de la línea.",
        DE: "Hier sehen Sie den Status Grund der Linie zu sehen.",
        IT: "Qui potete vedere il motivo stato della linea.",
        DA: "Her kan du se statusårsag for linjen.",
        AR: "هنا يمكنك رؤية سبب حالة الخط.",
        PT: "aquí pode ver o estado de razao da linha",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip45: {
        EN: "Here you can see the call status.",
        FR: "Ici vous pouvez voir l'état de l'appel.",
        SPN: "Aquí puedes ver el estado de la llamada.",
        DE: "Hier sehen Sie den Anrufstatus.",
        IT: "Qui puoi vedere lo stato della chiamata.",
        DA: "Her kan du se opkaldsstatus.",
        AR: "هنا يمكنك معرفة حالة المكالمة.",
        PT: "aquí pode ver o estado da chamada",
        RO: "TODO",
        IND: "TODO"
    },
    sipTip46: {
        EN: "Here you can set URI.",
        FR: "Entrez l'addresse URI ici",
        SPN: "Aqui puede ajustar URI",
        DE: "Hier können Sie die URI (Uniform Resource Identifier) festlegen.",
        IT: "Inserire l'indirizzo URI",
        DA: "Her kan du indstille URI.",
        AR: "TODO",
        PT: "aquipode alterar o URI",
        RO: "Aici puteti introduce adresa URL.",
        IND: "TODO"
    },
    callSettings: {
        EN: "Call Settings",
        FR: "Réglage des appels",
        SPN: "Ajustes de llamada",
        DE: "Anrufeinstellungen",
        IT: "Impostazioni chiamata",
        DA: "Opkaldsindstillinger",
        AR: "إعدادات الاتصال",
        PT: "ajustes de chamada",
        RO: "TODO",
        IND: "TODO"
    },
    callBlocking: {
        EN: "Call Blocking",
        FR: "Blocage des appels",
        SPN: "Bloqueo de llamada",
        DE: "Anrufblockierung",
        IT: "Blocco chiamate",
        DA: "Opkaldsblokering",
        AR: "حجب الاتصال",
        PT: "bloqueio de chamada",
        RO: "TODO",
        IND: "TODO"
    },
    cbNoRules: {
        EN: "No rules added",
        FR: "Aucune règle ajoutée",
        SPN: "No hay reglas añadidas",
        DE: "Keine Regeln hinzugefügt",
        IT: "Nessuna regola aggiunta",
        DA: "Ingen regler tilføjet",
        AR: "لم تتم إضافة قواعد",
        PT: "Sem regras adicionadas",
        RO: "TODO",
        IND: "TODO"
    },
    cbDoNotDisturb: {
        EN: "Do not disturb",
        FR: "Ne pas déranger",
        SPN: "No molestar",
        DE: "Bitte nicht stören",
        IT: "Non disturbare",
        DA: "Vil ikke forstyrres",
        AR: "يرجى عدم الإزعاج",
        PT: "nao incomodar",
        RO: "TODO",
        IND: "TODO"
    },
    cbCriteria: {
        EN: "Criteria",
        FR: "Critères",
        SPN: "Criterios",
        DE: "Kriterien",
        IT: "Criteri",
        DA: "Kriterier",
        AR: "المعايير",
        PT: "criterio",
        RO: "TODO",
        IND: "TODO"
    },
    cbTypeOfCall: {
        EN: "Type of call",
        FR: "Type d'appel",
        SPN: "Tipo de llamada",
        DE: "Art des Anrufs",
        IT: "Tipo di chiamata",
        DA: "Opkaldstype",
        AR: "نوع الاتصال",
        PT: "tipo de chamada",
        RO: "TODO",
        IND: "TODO"
    },
    cbHiddenIngoing: {
        EN: "Block all hidden ingoing calls",
        FR: "Bloquer tous les appels entrants cachés",
        SPN: "Bloquear todas las llamadas entrantes ocultas",
        DE: "Blockieren aller versteckten eingehenden Anrufe",
        IT: "Blocca tutte le chiamate nascoste in arrivo",
        DA: "Bloker alle skjulte indgående opkald",
        AR: "حجب كل المكالمات الواردة",
        PT: "bloquear todas as chamadas ocultas",
        RO: "TODO",
        IND: "TODO"
    },
    cbDummyBlockAll: {
        EN: "Block all <incoming/outgoing> calls whose number is",
        FR: "Bloquer tous les appels <entrants/sortants> dont le numero est",
        SPN: "Bloquear todas las llamadas <entrantes/salientes> cuyo n£mero es",
        DE: "Blockierung <eingehender/ausgehender> Anrufe mit folgender Rufnummer",
        IT: "Bloccare tutte le chiamate <entranti/uscenti> il cui numero è",
        DA: "Blokér alt <indkommende/udgående> opkald med nummer",
        AR: "TODO",
        PT: "bloquear todas <incoming/outgoing> chamadas do numero",
        RO: "Blocati toate apelurile de intrare si iesire ale caror numere sunt",
        IND: "TODO"
    },
    cbBlockAll: {
        EN: "Block all",
        FR: "Bloquer tous les appels",
        SPN: "Bloquear todas las llamadas",
        DE: "Blockierung",
        IT: "Bloccare tutte le chiamate",
        DA: "Blokér alt",
        AR: "TODO",
        PT: "bloquear todas",
        RO: "Blocati tot",
        IND: "TODO"
    },
    cbIncoming: {
        EN: "incoming",
        FR: "entrants",
        SPN: "entrantes",
        DE: "eingehender",
        IT: "entranti",
        DA: "Indgående",
        AR: "وارد",
        PT: "chamadas entrada",
        RO: "TODO",
        IND: "TODO"
    },
    cbOutgoing: {
        EN: "outgoing",
        FR: "Sortants",
        SPN: "Salientes",
        DE: "ausgehender",
        IT: "uscenti",
        DA: "Udgående",
        AR: "صادر",
        PT: "chamadas saida",
        RO: "TODO",
        IND: "TODO"
    },
    cbCalls: {
        EN: "calls",
        FR: "appels",
        SPN: "llamadas",
        DE: "Anrufe",
        IT: "Chiamate",
        DA: "opkald",
        AR: "مكالمات/اتصالات",
        PT: "chamadas",
        RO: "TODO",
        IND: "TODO"
    },
    cbFixedNumber: {
        EN: "whose number is",
        FR: "dont le numéro est",
        SPN: "cuyo número es",
        DE: "mit folgender Rufnummer",
        IT: "il cui numero è",
        DA: "hvis nummer, det er",
        AR: "الذي رقمه",
        PT: "que o numero é",
        RO: "TODO",
        IND: "TODO"
    },
    cbBeginsWith: {
        EN: "whose number begins by",
        FR: "dont le numéro commence par",
        SPN: "cuyo número empieza por",
        DE: "dessen Nummer beginnt mit",
        IT: "il cui numero inizia con",
        DA: "hvis nummer, som starter med",
        AR: "الذي يبدأ رقمه بـ",
        PT: "que o numero começa por",
        RO: "TODO",
        IND: "TODO"
    },
    cbNoCalls: {
        EN: "i do not want to receive any calls on this line.",
        FR: "Je ne veux pas recevoir d'appel sur cette ligne",
        SPN: "No quiero recibir ninguna llamada en esta línea.",
        DE: "Ich möchte auf dieser Leitung keine Gespräche erhalten.",
        IT: "non voglio più ricevere chiamate su questa linea.",
        DA: "jeg vil ikke modtage opkald på denne linje.",
        AR: "لا أريد أن أستقبلَ أيَ مكالمات على هذا الخط.",
        PT: "nao quero receber nenhuma chamda desta linha",
        RO: "TODO",
        IND: "TODO"
    },
    cbEnterNumber: {
        EN: "Enter number",
        FR: "Saisir le numéro",
        SPN: "Introducir un número",
        DE: "Nummer eingeben",
        IT: "Inserire il numero",
        DA: "Angiv nummer",
        AR: "أدخِل الرقم",
        PT: "inserir numero",
        RO: "TODO",
        IND: "TODO"
    },
    cbHelpTip1: {
        EN: "You can block anonymous calls",
        FR: "Vous pouvez bloquer les appels anonymes",
        SPN: "Puede bloquear las llamadas anónimas",
        DE: "Sie können anonyme Anrufe blockieren",
        IT: "Puoi bloccare le chiamate anonime",
        DA: "Du kan blokere anonyme opkald",
        AR: "يمكنك حجب أي مكالمات غير معروفة المصدر",
        PT: "pode bloquear chamadas anonimas",
        RO: "TODO",
        IND: "TODO"
    },
    cbHelpTip2: {
        EN: "You can check active rules here",
        FR: "Vous pouvez consulter les règles actives ici",
        SPN: "Puede comprobar las reglas activas",
        DE: "Sie können hier aktive Regeln überprüfen",
        IT: "Puoi controllare le regole attive qui",
        DA: "Du kan tjekke de aktive regler her",
        AR: "يمكنك هنا رؤية القواعد المفعَّلة",
        PT: "pode verificar as regras activas aquí",
        RO: "TODO",
        IND: "TODO"
    },
    cbHelpTip3: {
        EN: "Select the type of call",
        FR: "Sélectionner le type d'appel",
        SPN: "Seleccione el tipo de llamada",
        DE: "Wählen Sie die Art des Anrufs",
        IT: "Seleziona il tipo di chiamata",
        DA: "Vælg opkaldstypen",
        AR: "حدد نوعَ الاتصال",
        PT: "Seleccione o tipo de chamada",
        RO: "TODO",
        IND: "TODO"
    },
    cbHelpTip4: {
        EN: "Select rule criteria",
        FR: "Sélectionner les critères de règle",
        SPN: "Seleccione los criterios de reglas",
        DE: "Regelkriterien auswählen",
        IT: "Seleziona i criteri della regola",
        DA: "Vælg regelkriterier",
        AR: "حدد معايير القاعدة",
        PT: "Seleccione a criteria da regra",
        RO: "TODO",
        IND: "TODO"
    },
    cbHelpTip5: {
        EN: "Insert a telephone number to match the rule",
        FR: "Insérer un numéro de téléphone pour remplir les conditions de la règle",
        SPN: "Introduzca un número de teléfono para coincidir con la regla",
        DE: "Geben Sie eine Telefonnummer ein, für welche die Regel gelten soll",
        IT: "Inserisci un numero di telefono che corrisponda alla regola",
        DA: "Indsæt et telefonnummer til at passe til reglen",
        AR: "أدرِج رقمَ هاتف يوافق القاعدة",
        PT: "inserir o numero de telefone para coincidir a regra",
        RO: "TODO",
        IND: "TODO"
    },
    cbHelpTip6: {
        EN: "This will block all incoming calls",
        FR: "Ceci bloquera tous les appels entrants",
        SPN: "Esto bloqueara todas las llamadas entrantes",
        DE: "Alle eingehenden Anrufe werden blockiert",
        IT: "Questo blocca tutte le chiamate entranti",
        DA: "Dette blokerer alle indgående opkald",
        AR: "TODO",
        PT: "isto bloqueará todas as chamadas de entrada",
        RO: "Aceasta functie va bloca toate apelurile de intrare",
        IND: "TODO"
    },
    sipHelpTipTab: {
        EN: "You can navigate through other SIP configurations here",
        FR: "Ici vous pouvez naviguer entre d'autres configurations SIP",
        SPN: "Desde aquí puede navegar mediante otras configuraciones SIP",
        DE: "Sie können hier durch andere SIP-Konfigurationen navigieren",
        IT: "Puoi navigare attraverso altre configurazioni SIP qui",
        DA: "Du kan navigere gennem andre SIP-konfigurationer her",
        AR: "يمكنك هنا التنقل بين تكوينات SIP الأخرى",
        PT: "pode navegar aqtravez de outras configuraçoes de SIP aquí",
        RO: "TODO",
        IND: "TODO"
    },
    sambaDisabled: {
        EN: "File server is disabled.",
        FR: "Le serveur de fichiers est désactivé.",
        SPN: "Servidor Samba está desactivado.",
        DE: "Samba-Server ist ausgeschaltet.",
        IT: "File server disabilitato.",
        DA: "Filserveren er deaktiveret.",
        AR: "تم تعطيل خادم سامبا.",
        PT: "ficheiro de servidor esta desactivado",
        RO: "TODO",
        IND: "TODO"
    },
    passwordTip1: {
        EN: "Open networks do not have a password",
        FR: "Les réseaux ouverts n'ont pas de mot de passe",
        SPN: "Las redes abiertas no tienen una contraseña",
        DE: "Offene Netzwerke haben kein WLAN-Kennwort",
        IT: "Le reti aperte non hanno una password",
        DA: "Åbne netværk har ikke nogen adgangskode",
        AR: "الشبكات المفتوحة ليس لديها كلمة سر",
        PT: "redes abertas nao tem password",
        RO: "TODO",
        IND: "TODO"
    },
    passwordLengthWEP64: {
        EN: "WEP 64 mode requires a 5 or 10 characters",
        FR: "TODO",
        SPN: "Modo WEP 64 requiere entre 5 y 10 caracteres",
        DE: "WEP 64-Modus erfordert die Eingabe von 5-10 Zeichen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Modul WEP 64 necesita 5 sau 10 caractere",
        IND: "TODO"
    },
    passwordLengthWEP128: {
        EN: "WEP 128 mode requires a 13 or 26 characters",
        FR: "TODO",
        SPN: "Modo WEP 128 requiere entre 13 y 26 caracteres",
        DE: "WEP 128-Modus erfordert die Eingabe von 13-26 Zeichen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Modul WEP 128 necesita 13 sau 26 caractere",
        IND: "TODO"
    },
    passwordLengthWPA: {
        EN: "WPA requires a 8-63 characters",
        FR: "TODO",
        SPN: "WPA requiere entre 8 y 63 caracteres",
        DE: "WPA-Modus erfordert die Eingabe von 8-63 Zeichen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "WPA necesita o lungime de 8-63 caractere",
        IND: "TODO"
    },
    passwordMinLength: {
        EN: "Too short",
        FR: "TODO",
        SPN: "Demasiado corto",
        DE: "Zu kurz",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Prea scurt",
        IND: "TODO"
    },
    passwordMaxLength: {
        EN: "Too long",
        FR: "TODO",
        SPN: "Demasiado largo",
        DE: "Zu lang",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Prea lung",
        IND: "TODO"
    },
    passwordTip2: {
        EN: "WEP 64 mode requires a 5 or 10 character password. Only the following characters can be used: a-z, A-Z, 0-9 and + * % = - _ !",
        FR: "Le WEP 64 nécessite un mot de passse de 5 à 10 caractères. Seul les caractères suivants peuvent-être utilisés: a-z, A-Z, 0-9 and + * % & = - _ !",
        SPN: "Modo WEP 64 requiere entre 5 y 10 caracteres. Solo se pueden utilizar los siguientes caracteres: a-z",
        DE: "Die WLAN-Verschlüsselungsmethode WEP64 erfordert die Vergabe eines WLAN-Kennworts, dass zwischen 5 und 10 Zeichen lang sein muss. Nur die folgenden Zeichen können verwendet werden: a-z, A-Z, 0-9 und + * % = - _ !",
        IT: "WEP 64 necessita una chiave di cifratura tra 5 e 10 caratteri. Solamente i seguenti caratteri possono esser utilizzati: a-z, A-Z, 0-9 and + * % & = - _ ! $",
        DA: "WEP 64 tilstand kræver en adgangskode på 5 eller 10 tegn. Kun følgende tegn kan anvendes: a-z, A-Z, 0-9 og + * % = - _ !",
        AR: "TODO",
        PT: "modo WEP64 requer uma password de 5 ou 10 caracteres. Apenas os seguintes caracteres podem ser usados: a-z, A-Z, 0-9 and + * % = - _ !",
        RO: "Modul WEP 64 necesita o parola de 5 sau 10 caractere. Urmatoarele caractere pot fi folosite: a-z, A-Z, 0-9 and + * % = - _ !",
        IND: "TODO"
    },
    passwordTip3: {
        EN: "WEP 128 mode requires a 13 or 26 character password. Only the following characters can be used: a-z, A-Z, 0-9 and + * % = - _ !",
        FR: "Le WEP 128 nécessite un mot de passse de 13 à 26 caractères. Seul les caractères suivants peuvent-être utilisés: a-z, A-Z, 0-9 and + * % & = - _ !",
        SPN: "Modo WEP 128 requiere entre 13 y 26 caracteres. Solo se pueden utilizar los siguientes caracteres: a-z",
        DE: "Die WLAN-Verschlüsselungsmethode WEP128 erfordert die Vergabe eines WLAN-Kennworts, dass zwischen 13 und 26 Zeichen lang sein muss. Nur die folgenden Zeichen können verwendet werden: a-z, A-Z, 0-9 und + * % = - _ !",
        IT: "WEP 128 necessita una chiave di cifratura tra 13 e 26 caratteri. Solamente i seguenti caratteri possono esser utilizzati: a-z, A-Z, 0-9 and + * % & = - _ ! $",
        DA: "WEP 128 tilstand kræver en adgangskode på 13 eller 26 tegn. Kun følgende tegn kan anvendes: a-z, A-Z, 0-9 og + * % = - _ !",
        AR: "TODO",
        PT: "modo WEP128 requer uma password de 13 ou 26 caracteres. Apenas os seguintes caracteres podem ser usados: a-z, A-Z, 0-9 and + * % = - _ !",
        RO: "Modul WEP 128 necesita o parola de 13 sau 26 caractere. Urmatoarele caractere pot fi folosite: a-z, A-Z, 0-9 and + * % = - _ !",
        IND: "TODO"
    },
    passwordTip4: {
        EN: "WPA requires a 8-63 character password. Only the following characters can be used: a-z, A-Z, 0-9 and + * % = - _ !",
        FR: "Le WPA nécessite un mot de passse de 8 à 63 caractères. Seul les caractères suivants peuvent-être utilisés: a-z, A-Z, 0-9 and + * % & = - _ !",
        SPN: "Modo WPA requiere entre 8 y 63 caracteres. Solo se pueden utilizar los siguientes caracteres: a-z",
        DE: "Die WLAN-Verschlüsselungsmethode WPA erfordert die Vergabe eines WLAN-Kennworts, dass zwischen 8 und 63 Zeichen lang sein muss. Nur die folgenden Zeichen können verwendet werden: a-z, A-Z, 0-9 und + * % = - _ !",
        IT: "WPA necessita una chiave di cifratura tra 8 e 63 caratteri. Solamente i seguenti caratteri possono esser utilizzati: a-z, A-Z, 0-9 and + * % & = - _ ! $",
        DA: "WPA tilstand kræver en adgangskode på 8-63 tegn. Kun følgende tegn kan anvendes: a-z, A-Z, 0-9 og + * % = - _ !",
        AR: "TODO",
        PT: "modo WPA requer uma password de 8-63 caracteres. Apenas os seguintes caracteres podem ser usados: a-z, A-Z, 0-9 and + * % = - _ !",
        RO: "WPA necesita o parola de 8-63 caractere. Urmatoarele caractere pot fi folosite: a-z, A-Z, 0-9 and + * % = - _ !",
        IND: "TODO"
    },
    passwordTip5: {
        EN: "WPA2 requires a 8-63 character password. Only the following characters can be used: a-z, A-Z, 0-9 and + * % = - _ !",
        FR: "Le WPA2 nécessite un mot de passse de 8 à 63 caractères. Seul les caractères suivants peuvent-être utilisés: a-z, A-Z, 0-9 and + * % & = - _ !",
        SPN: "Modo WPA2 requiere entre 8 y 63 caracteres. Solo se pueden utilizar los siguientes caracteres: a-z",
        DE: "Die WLAN-Verschlüsselungsmethode WPA2 erfordert die Vergabe eines WLAN-Kennworts, dass zwischen 8 und 63 Zeichen lang sein muss. Nur die folgenden Zeichen können verwendet werden: a-z, A-Z, 0-9 und + * % = - _ !",
        IT: "WPA2 necessita una chiave di cifratura tra 8 e 63 caratteri. Solamente i seguenti caratteri possono esser utilizzati: a-z, A-Z, 0-9 and + * % & = - _ ! $",
        DA: "WPA2 tilstand kræver en adgangskode på 8-63 tegn. Kun følgende tegn kan anvendes: a-z, A-Z, 0-9 og + * % = - _ !",
        AR: "TODO",
        PT: "modo WPA2 requer uma password de 8-63 caracteres. Apenas os seguintes caracteres podem ser usados: a-z, A-Z, 0-9 and + * % = - _ !",
        RO: "WPA2 necesita o parola de 8-63 caractere. Urmatoarele caractere pot fi folosite: a-z, A-Z, 0-9 and + * % = - _ !",
        IND: "TODO"
    },
    passwordTip6: {
        EN: "WPA requires a 8-63 character password. Only the following characters can be used: a-z, A-Z, 0-9 and + * % = - _ !",
        FR: "Le WPA nécessite un mot de passse de 8 à 63 caractères. Seul les caractères suivants peuvent-être utilisés: a-z, A-Z, 0-9 and + * % & = - _ !",
        SPN: "Modo WPA requiere entre 8 y 63 caracteres. Solo se pueden utilizar los siguientes caracteres: a-z",
        DE: "Die WLAN-Verschlüsselungsmethode WPA erfordert die Vergabe eines WLAN-Kennworts, dass zwischen 8 und 63 Zeichen lang sein muss. Nur die folgenden Zeichen können verwendet werden: a-z, A-Z, 0-9 und + * % = - _ !",
        IT: "WPA necessita una chiave di cifratura tra 8 e 63 caratteri. Solamente i seguenti caratteri possono esser utilizzati: a-z, A-Z, 0-9 and + * % & = - _ ! $",
        DA: "WPA tilstand kræver en adgangskode på 8-63 tegn. Kun følgende tegn kan anvendes: a-z, A-Z, 0-9 og + * % = - _ !",
        AR: "TODO",
        PT: "Modo WPA requer uma password de 8-63 caracteres. Apenas os seguintes caracteres podem ser usados: a-z, A-Z, 0-9 and + * % = - _ !",
        RO: "WPA necesita o parola de 8-63 caractere. Urmatoarele caractere pot fi folosite: a-z, A-Z, 0-9 and + * % = - _ !",
        IND: "TODO"
    },
    addConnection: {
        EN: "Add Connection",
        FR: "Ajouter une Connexion",
        SPN: "Agregar conexión",
        DE: "Verbindung hinzufügen",
        IT: "Aggiungi connessione",
        DA: "Tilføj forbindelse",
        AR: "إضافة اتصال",
        PT: "adicionar ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    illegalCharactersWarning1: {
        EN: "The entered pre-shared key or passphrase contains not allowed character(s): ",
        FR: "TODO",
        SPN: "La clave compartida introducida contiene caracteres no permitidos",
        DE: "Der eingegebene WLAN-Schlüssel enthält nicht erlaubte Zeichen: ",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Cheia sau secventa introdusa contine caractere ce nu sunt permise:",
        IND: "TODO"
    },
    illegalCharactersWarning2: {
        EN: "WPA Pre-Shared Key should be between 8 and 63 ASCII characters or 64 hexadecimal digits.",
        FR: "TODO",
        SPN: "WPA Pre-Shared Key debe contener entre 8-63 caracteres ASCII o 64 HEX",
        DE: "Der WLAN-Schlüssel muss zwischen 8 und 63 ASCII-Zeichen (Dez 32 bis Dez 126 gemäß ASCII-Tabelle) oder 64 hexadezimale Zeichen enthalten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Cheia WPA introdusa trebuie fie intre 8 si 63 caractere ASCII sau 64 hexazecimale.",
        IND: "TODO"
    },
    wanConfiguration: {
        EN: "WAN Configuration",
        FR: "Configuration WAN",
        SPN: "Configuración WAN",
        DE: "WAN-Konfiguration",
        IT: "Configurazione WAN",
        DA: "WAN-konfiguration",
        AR: "تكوين WAN",
        PT: "configuraçao WAN",
        RO: "TODO",
        IND: "TODO"
    },
    modulationsSupported: {
        EN: "Modulations supported",
        FR: "Modulations prises en charge",
        SPN: "Modulaciones soportadas",
        DE: "Unterstützte Modulationen",
        IT: "Modulazione supportata",
        DA: "Modulationer understøttet",
        AR: "التحويرات مدعومة ",
        PT: "modulaçoes suportadas",
        RO: "TODO",
        IND: "TODO"
    },
    modulationUsed: {
        EN: "Modulation used",
        FR: "Modulation utilisée",
        SPN: "Modulación utilizada",
        DE: "Verwendete Modulationen",
        IT: "Modulazione utilizzata",
        DA: "Anvendt modulation",
        AR: "تم استخدام التعديل ",
        PT: "modulaçoes usadas",
        RO: "TODO",
        IND: "TODO"
    },
    mode: {
        EN: "Mode",
        FR: "Mode",
        SPN: "Modo",
        DE: "Zugangsart",
        IT: "Modalità",
        DA: "Tilstand",
        AR: "طريقة",
        PT: "modo",
        RO: "TODO",
        IND: "TODO"
    },
    vdslProfiles: {
        EN: "VDSL profiles",
        FR: "Profils VDSl",
        SPN: "Perfiles VDSl",
        DE: "VDSL-Profile",
        IT: "Profili VDSl",
        DA: "VDSL-profiler",
        AR: "بروفايلات  VDSl",
        PT: "perfiles VDSl",
        RO: "TODO",
        IND: "TODO"
    },
    downstreamDelay: {
        EN: "Downstream Delay (ms)",
        FR: "Retard Downstream (ms)",
        SPN: "Retraso Downstream (ms)",
        DE: "Downstream Delay (ms)",
        IT: "Ritardo Delay (ms)",
        DA: "Downstream Delay (ms)",
        AR: "تأخير التدفق التحتي (مللي ثانية)",
        PT: "atraso downstream (ms)",
        RO: "TODO",
        IND: "TODO"
    },
    upstreamDelay: {
        EN: "Upstream Delay (ms)",
        FR: "Retard Upstream (ms)",
        SPN: "Retraso Upstream (ms)",
        DE: "Upstream Delay (ms)",
        IT: "Upstream Delay (ms)",
        DA: "Upstream Delay (ms)",
        AR: "تأخير التدفق الفوقي (مللي ثانية)",
        PT: "atraso upstream (ms)",
        RO: "TODO",
        IND: "TODO"
    },
    invalidDelay: {
        EN: "Invalid delay",
        FR: "Retard invalide",
        SPN: "Retraso inválido",
        DE: "Invalid delay",
        IT: "Ritardo non valido",
        DA: "Invalid delay",
        AR: "تأخير غير صالح",
        PT: "atraso invalido",
        RO: "TODO",
        IND: "TODO"
    },
    bondingStatus: {
        EN: "Bonding Status",
        FR: "Statut de Bonding",
        SPN: "Estado de Bonding",
        DE: "Bonding Status",
        IT: "Stato Bonding",
        DA: "Bonding Status",
        AR: "حالة الترابط",
        PT: "estado bonding",
        RO: "TODO",
        IND: "TODO"
    },
    associatedLines: {
        EN: "Associated lines",
        FR: "Lignes associées",
        SPN: "Líneas asociadas",
        DE: "Leitungs-Zuordnung",
        IT: "Linee associate",
        DA: "Associerede linjer",
        AR: "خطوط مرتبطة ",
        PT: "linhas associadas",
        RO: "TODO",
        IND: "TODO"
    },
    selectL1: {
        EN: "Select L1",
        FR: "Sélectionnez L1",
        SPN: "Seleccione L1",
        DE: "Wählen Sie L1",
        IT: "Seleziona L1",
        DA: "Vælg L1",
        AR: "تحديد L1",
        PT: "Seleccione L1",
        RO: "TODO",
        IND: "TODO"
    },
    internetConnectivityTab: {
        EN: "Here you navigate through internet connectivity section.",
        FR: "Ici vous naviguez dans la section 'connexion Internet'.",
        SPN: "Aquí usted navega en la sección de conectividad a Internet.",
        DE: "Hier werden die Einstellungen zum Internetzungang verwaltet.",
        IT: "Qui navighi attraverso la sezione connettività internet.",
        DA: "Her kan du navigere gennem sektionen for forbindelser.",
        AR: "هنا يمكنك التنقل من خلال قسم الاتصال بشبكة الإنترنت.",
        PT: "aquí pode navegar atravez da secçao de conectividade a internet",
        RO: "TODO",
        IND: "TODO"
    },
    peakCellRate: {
        EN: "Peak Cell Rate:",
        FR: "Peak Cell Rate:",
        SPN: "Peak Cell Rate:",
        DE: "Peak Cell Rate:",
        IT: "Peak Cell Rate:",
        DA: "Peak Cell Rate:",
        AR: "الحد الاقصى لمعدل نقل الخلايا:",
        PT: "taxa peal cell",
        RO: "TODO",
        IND: "TODO"
    },
    maximumBurstSize: {
        EN: "Maximum Burst Size:",
        FR: "Taille maximale du burst:",
        SPN: "Tamaño máximo de burst:",
        DE: "Maximum Burst Size:",
        IT: "Dimensione massima Burst:",
        DA: "Maximum Burst Size:",
        AR: "الحد الأقصى لحجم النبضة:",
        PT: "tamanho maximo de burst",
        RO: "TODO",
        IND: "TODO"
    },
    sustainableCellRate: {
        EN: "Sustainable Cell Rate:",
        FR: "Sustainable Cell Rate:",
        SPN: "Sustainable Cell Rate:",
        DE: "Sustainable Cell Rate:",
        IT: "Sustainable Cell Rate:",
        DA: "Sustainable Cell Rate:",
        AR: "معدلات الخلية المستدامة:",
        PT: "taxa sustainable cell",
        RO: "TODO",
        IND: "TODO"
    },
    globalWANModeTip: {
        EN: "Here you can change the global wan mode",
        FR: "Ici vous pouvez changer le mode WAN global",
        SPN: "Aquí puede cambiar el modo WAN global",
        DE: "Hier können Sie den globalen WAN-Modus ändern",
        IT: "Qui puoi cambiare la modalità global wan",
        DA: "Her kan du ændre den globale WAN-tilstand",
        AR: "هنا يمكنك تغيير وضع WAN العالمي",
        PT: "aquí pode alterar o modo wan global",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTip1: {
        EN: "Click here to add a wan connection",
        FR: "Cliquez ici pour ajouter une connexion WAN",
        SPN: "Haz clic aquí para agregar una conexión WAN",
        DE: "Klicken Sie hier, um eine Internetverbindung hinzuzufügen",
        IT: "Clicca qui per aggiungere una connessione WAN",
        DA: "Klik her for at tilføje en WAN-forbindelse",
        AR: "انقر هنا لإضافة اتصال WAN",
        PT: "pressione aquí para adicionar uma ligaçao wan",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTipCancel: {
        EN: "Click here to cancel all operations made in this page, if you did not click on 'Apply' before, all changes will be lost",
        FR: "Cliquez ici pour annuler toutes les opérations effectuées dans cette page, si vous n'avez pas cliqué sur 'Appliquer' avant, toutes les modifications seront perdues",
        SPN: "Clic para cancelar todas las operaciones realizadas en esta página, si no hizo clic en 'Aplicar' antes, se perderán todos los cambios",
        DE: "Klicken Sie hier, um alle gemachten Änderungen zu verwerfen (insoweit Sie nicht schon einmal auf 'Annehmen' geklickt haben).",
        IT: "Clicca qui per cancellare tutte le operazioni effettuate in questa pagina, se non clicchi su 'Applica' prima, tutte le modifiche andranno perse",
        DA: "Klik her for at annullere alle handlinger, som er foretaget på denne side, og hvis du ikke klikkede på 'Anvend' før, går alle ændringer tabt",
        AR: "انقر هنا لإلغاء جميع العمليات الواردة في هذه الصفحة، إن لم تنقر على 'تطبيق' من قبل، ستفقد كل التغييرات",
        PT: "pressione aquí para cancelar todas as operaçoes feitas nesta pagina, se nao pressionou 'apply' anteriormente, as alteraçoes serao perdidas'",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTipApply: {
        EN: "Click here to save all modifications made in this page",
        FR: "Cliquez ici pour enregistrer les modifications apportées à cette page",
        SPN: "Haga clic aquí para guardar todos los cambios realizados en esta página",
        DE: "Klicken Sie hier, um die Änderungen zu speichern",
        IT: "Clicca qui per salvare tutte le modifiche apportate in questa pagina",
        DA: "Klik her for at gemme alle modifikationer, som er foretaget på denne side",
        AR: "انقر هنا لحفظ جميع التعديلات التي أدخلت في هذه الصفحة",
        PT: "pressione aquí para guardar as modificaçoes feitas nesta pagina",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTipDsl: {
        EN: "Here you enter DSL interfaces settings",
        FR: "Entrez ici les paramètres des interfaces DSl",
        SPN: "Aquí se introduce la configuración de las interfaces DSl",
        DE: "Hier geben Sie die Parameter zur Internetverbindung ein",
        IT: "Qui entri nelle impostazioni delle interfacce DSl",
        DA: "Her kan du angive indstillingerne for DSL-interfaces",
        AR: "هنا ستقوم بإدخال إعدادات واجهات DSl",
        PT: "adicione aquí os parametros de interface DSl",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTipPager: {
        EN: "Here you can navigate to the other pages",
        FR: "Ici vous pouvez accéder aux autres pages",
        SPN: "Aquí usted puede navegar a otras páginas",
        DE: "Hier können Sie zu den anderen Seiten navigieren",
        IT: "Qui puoi accedere alle altre pagine",
        DA: "Her kan du navigere til de andre sider",
        AR: "هنا يمكنك الانتقال إلى صفحات أخرى",
        PT: "aquí pode navegar para outras paginas",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTipPtm: {
        EN: "Here you can enable or disable PTM link",
        FR: "Activez ou désactivez ici le lien PTM",
        SPN: "Aquí puede activar o desactivar la conexión PTM",
        DE: "PTM-Link ein- bzw. ausschalten",
        IT: "Qui puoi attivare o disattivare il collegamento PTM",
        DA: "Her kan du aktivere eller deaktivere PTM-link",
        AR: "هنا يمكنك تمكين أو تعطيل الارتباط PTM",
        PT: "aquí pode habilitar ou desabilitar PTM link",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTipAtm: {
        EN: "Here you can edit an ATM link settings",
        FR: "Ici vous pouvez éditer les réglages du lien ATM",
        SPN: "Aquí se puede editar un enlace ATM",
        DE: "ATM-Link-Einstellungen ändern",
        IT: "Qui puoi modificare le impostazioni di collegamento ATM",
        DA: "Her kan du redigere indstillinger for et ATM-link",
        AR: "هنا يمكنك تحرير إعدادات الارتباط ATM",
        PT: "aquí pode editar os parametros de ATM link",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTipBonding: {
        EN: "Here you enter bonding settings",
        FR: "Ici, vous entrez les paramètres de bonding",
        SPN: "Aquí se introduce la configuración de bonding",
        DE: "Bonding-Einstellungen ändern",
        IT: "Qui entri nelle impostazioni bonding",
        DA: "Her kan du angive indstillingerne for bonding",
        AR: "هنا يمكنك إدخال إعدادات الربط",
        PT: "aquí pode adicionar os parametros de bonding",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTipEth: {
        EN: "Here you can check Wan Ethernet settings",
        FR: "Vérifiez ici les paramètres Ethernet WAN",
        SPN: "Aquí puede comprobar la configuración de WAN Ethernet",
        DE: "WAN-Ethernet Konfiguration prüfen",
        IT: "Qui puoi controllare le impostazioni Wan Ethernet",
        DA: "Her kan du tjekke indstillingerne for WAN-ethernet",
        AR: "هنا يمكنك التحقق من إعدادات وان إيثرنت",
        PT: "aquí pode consultar os parametros de rede wan",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTipSfp: {
        EN: "Here you can check Wan SFP settings",
        FR: "Vérifiez ici les paramètres SFP WAN",
        SPN: "Aquí puede comprobar la configuración de WAN SFP",
        DE: "Hier können Sie die WAN-SFP-Einstellungen überprüfen",
        IT: "Qui puoi verificare i parametri SFP WAN",
        DA: "Her kan du tjekke indstillingerne for WAN-SFP",
        AR: "هنا يمكنك التحقق من إعدادات وان SFP",
        PT: "aquí pode consultar os parametros SFP wan",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTipPPP: {
        EN: "Here you can configure the PPP interfaces",
        FR: "Ici vous pouvez configurer les interfaces PPP",
        SPN: "Aqui puedes configurar las interfaces PPP",
        DE: "PPP-Einstsellungen vornehmen",
        IT: "Qui puoi configurare le interfacce PPP",
        DA: "Her kan du konfigurere PPP-brugerfladerne",
        AR: "هنا يمكنك تكوين واجهات PPP",
        PT: "aquí pode configurar os interfaces PPP",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTipIP: {
        EN: "Here you can configure the IP interfaces",
        FR: "Ici vous pouvez configurer les interfaces IP",
        SPN: "Aqui puedes configurar las interfaces IP",
        DE: "IP-Schnittstellen konfigurieren",
        IT: "Qui puoi configurare le interfacce IP",
        DA: "Her kan du konfigurere IP-brugerfladerne",
        AR: "هنا يمكنك تكوين واجهات IP",
        PT: "aquí pode configurar os interfaces de IP",
        RO: "TODO",
        IND: "TODO"
    },
    notConnectedLnks: {
        EN: "No connections enabled. Click on add button to check.",
        FR: "Pas de connexions activées. Cliquez sur le bouton d'ajout pour vérifier.",
        SPN: "No hay conexiones habilitadas. Haga clic en el botón de añadir a comprobar los no activos.",
        DE: "Keine Verbindung aktiv. Klicken Sie auf die Schaltfläche, um eine der Verbindungen zu aktivieren.",
        IT: "Nessuna connessione abilitata. Clicca sul pulsante aggiungi per controllare.",
        DA: "Ingen forbindelser aktiveret. Klik på knappen 'Tilføj' for at tjekke.",
        AR: "لا يوجد اتصالات مفعلة. انقر على زر الإضافة للتحقق من الاتصالات غير النشطة.",
        PT: "Sem ligaçoes habilitadas. Pressione no botao de adicionar para verificar",
        RO: "TODO",
        IND: "TODO"
    },
    wanConfTipSelect: {
        EN: "Here you select the desired interface",
        FR: "Sélectionnez ici l'interface souhaitée",
        SPN: "Aquí se selecciona la interfaz deseada",
        DE: "Hier wählen Sie den gewünschten Anschluss aus",
        IT: "Qui puoi selezionare l'interfaccia desiderata",
        DA: "Her vælger du den ønskede brugerflade",
        AR: "هنا يمكنك تحديد الواجهة المطلوبة",
        PT: "aquí seleccione o interface desejado",
        RO: "TODO",
        IND: "TODO"
    },
    qosQueueSetup: {
        EN: "QoS Queue Setup",
        FR: "Configuration QoS Queue",
        SPN: "Configuración QoS Queue",
        DE: "Einstellungen zu QoS (Quality of Service / Priorisierungs-Kategorien)",
        IT: "Impostazione coda QoS",
        DA: "QoS Queue Setup",
        AR: "إعداد قائمة انتظار جودة الخدمة",
        PT: "QoS Queue Setup",
        RO: "TODO",
        IND: "TODO"
    },
    qosQueue: {
        EN: "QoS Queue",
        FR: "QoS Queue",
        SPN: "QoS Queue",
        DE: "QoS-Warteschlange",
        IT: "Coda QoS",
        DA: "QoS Queue",
        AR: "صَف جودة الخدمة",
        PT: "QoS Queue",
        RO: "TODO",
        IND: "TODO"
    },
    selectName: {
        EN: "Select Name",
        FR: "Sélectionnez le nom",
        SPN: "Seleccione Nombre",
        DE: "Name auswählen",
        IT: "Seleziona Nome",
        DA: "Vælg navn",
        AR: "حدد اسم",
        PT: "Seleccione nome",
        RO: "TODO",
        IND: "TODO"
    },
    addQueue: {
        EN: "Add Queue",
        FR: "Ajouter Queue",
        SPN: "Añadir Queue",
        DE: "Regel hinzufügen",
        IT: "Aggiungi coda",
        DA: "Add Queue",
        AR: "إضافة قائمة الانتظار",
        PT: "adicione Queue",
        RO: "TODO",
        IND: "TODO"
    },
    id: {
        EN: "Id",
        FR: "Id",
        SPN: "Id",
        DE: "Id",
        IT: "Id",
        DA: "Id",
        AR: "الهوية",
        PT: "Id",
        RO: "TODO",
        IND: "TODO"
    },
    interfaceQos: {
        EN: "Interface",
        FR: "Interface",
        SPN: "Interface",
        DE: "Anschluss",
        IT: "Interfaccia",
        DA: "Interface",
        AR: "السطح البيني",
        PT: "interface",
        RO: "TODO",
        IND: "TODO"
    },
    precedence: {
        EN: "Precedence",
        FR: "Priorité",
        SPN: "Precedencia",
        DE: "Priorität",
        IT: "Precedenza",
        DA: "Præcedens",
        AR: "الأسبقية",
        PT: "precedencia",
        RO: "TODO",
        IND: "TODO"
    },
    weight: {
        EN: "Weight",
        FR: "Poids",
        SPN: "Peso",
        DE: "Gewicht",
        IT: "Peso",
        DA: "Vægt",
        AR: "الوزن",
        PT: "peso",
        RO: "TODO",
        IND: "TODO"
    },
    schedulerAlgorithm: {
        EN: "Scheduler Algorithm",
        FR: "Algorithme Scheduler",
        SPN: "Algoritmo Schduler",
        DE: "Traffic-Shaping-Methode",
        IT: "Algoritmo di pianificazione",
        DA: "Scheduler Algorithm",
        AR: "جدولة خوارزمية",
        PT: "algoritmo calendario",
        RO: "TODO",
        IND: "TODO"
    },
    minRate: {
        EN: "Minimum Rate (bytes/s)",
        FR: "Taux minimum (octets/s)",
        SPN: "Tasa mínima (bytes/s)",
        DE: "Mindestgeschwindigkeit (Bytes/s)",
        IT: "Tasso Minimo (byte)",
        DA: "Minimumsfrekvens (bytes/s)",
        AR: "الحد الأدنى من المعدل+G1077 (بايت / ثانية)",
        PT: "taxa minima (bytes/s)",
        RO: "TODO",
        IND: "TODO"
    },
    shapingRate: {
        EN: "Shaping Rate",
        FR: "Taux Shaping",
        SPN: "Tasa Shaping",
        DE: "Datendurchsatz-Begrenzung",
        IT: "Imposta tasso",
        DA: "Shaping Rate",
        AR: "تشكيل معدلات ",
        PT: "taxa shaping",
        RO: "TODO",
        IND: "TODO"
    },
    shapingBurst: {
        EN: "Shaping Burst Size (bytes/s)",
        FR: "Taille Shaping Burst (octets/s)",
        SPN: "Tamaño Shaping Burst (bytes/s)",
        DE: "Kurzzeitiger Maximaldurchsatz (Bytes/s)",
        IT: "Imposta dimensioni burst (byte)",
        DA: "Shaping Burst Size (bytes/s)",
        AR: "تشكيل نبض الحجم (بايت / ثانية)",
        PT: "tamanha shaping burst (bytes/s)",
        RO: "TODO",
        IND: "TODO"
    },
    questionQos: {
        EN: "Do you really want to remove this item?",
        FR: "Voulez-vous vraiment supprimer cet élément?",
        SPN: "¿Realmente deseas eliminar este item?",
        DE: "Wollech Sie diesen Eintrag wirklich löschen?",
        IT: "Vuoi davvero eliminare questo elemento?",
        DA: "Vil du virkelig fjerne dette element?",
        AR: "هل تريد حقا إزالة هذا البند؟",
        PT: "tem a certeza que quer remover este item?",
        RO: "TODO",
        IND: "TODO"
    },
    confirmQos: {
        EN: "This operation cannot be undone after click on 'yes'",
        FR: "Cette opération ne peut être annulée après un clic sur 'oui'",
        SPN: "Esta operación no se puede deshacer después haga clic en 'sí'",
        DE: "Diese Änderung kann nicht mehr rückgängig gemacht werden, nachdem Sie auf die Schaltfläche 'Ja' geklickt haben",
        IT: "Questa operazione non può essere annullata dopo aver cliccato su 'sì'",
        DA: "Denne handling kan ikke fortrydes efter klik på 'Ja'.",
        AR: "لا يمكن التراجع عن هذه العملية بعد النقر على 'نعم'",
        PT: "nao poderá reverter esta operaçao se pressionar 'sim''",
        RO: "TODO",
        IND: "TODO"
    },
    qosQueueTip1: {
        EN: "Here you select and edit a queue item",
        FR: "Ici vous choisissez et modifiez un item queue",
        SPN: "Aquí tienes que elegir y editar un item queue",
        DE: "Hier wählen Sie einen Eintrag aus, den Sie ändern möchten",
        IT: "Qui selezioni e modifichi un elemento della coda",
        DA: "Her kan du vælge et køelement og redigere det",
        AR: "هنا يمكنك تحديد وتحرير عنصر قائمة انتظار",
        PT: "aquí pode seleccionar e editar um item queue",
        RO: "TODO",
        IND: "TODO"
    },
    qosQueueTip2: {
        EN: "Here you add new item",
        FR: "Ici vous ajoutez un nouveau item",
        SPN: "Aquí se agrega un nuevo item",
        DE: "Hier fügen Sie einen neuen Eintrag hinzu",
        IT: "Qui aggiungi un nuovo elemento",
        DA: "Her kan du tilføje et nyt element",
        AR: "هنا قمت بإضافة بند جديد",
        PT: "aquí adiciona um novo item",
        RO: "TODO",
        IND: "TODO"
    },
    qosQueueTip3: {
        EN: "Here you enter or edit properties of a queue item",
        FR: "Ici vous entrez ou modifier les propriétés d'un item queue",
        SPN: "Aquí se introduce o editar las propiedades de un item queue",
        DE: "Hier nehmen Sie Einstellungen an bestehenden oder neuen Einträgen vor",
        IT: "Qui entri o modifichi le proprietà di un elemento della coda",
        DA: "Her kan du angive eller redigere et køelements egenskaber",
        AR: "هنا بإمكانك الدخول أو تعديل خصائص عناصر قائمة الانتظار",
        PT: "aquí adiciona ou altera as propriedades de um item queue",
        RO: "TODO",
        IND: "TODO"
    },
    qosQueueTip4: {
        EN: "Here you delete an item",
        FR: "Ici vous supprimez un item",
        SPN: "Aquí se elimina un elemento",
        DE: "Hier löschen Sie Einträge",
        IT: "Qui elimini un elemento",
        DA: "Her kan du slette et element",
        AR: "هنا يمكنك حذف عنصر",
        PT: "aquí apaga um item",
        RO: "TODO",
        IND: "TODO"
    },
    qosQueueTip5: {
        EN: "Here you cancel an operation, changes made will not be used",
        FR: "Ici vous annulez une opération, les modifications apportées ne seront pas utilisés",
        SPN: "Aquí usted cancela una operación, no se utilizarán los cambios realizados",
        DE: "Hiermit brechen Sie die Eingabe ab. Ihre Änderungen werden nicht übernommen",
        IT: "Qui annulli un'operazione, le modifiche apportate non saranno utilizzate",
        DA: "Her kan du annullere en handling, de foretagne handlinger vil ikke blive anvendt",
        AR: "قمت بإلغاء العملية، لن يتم استخدام التغييرات التي أدخلت",
        PT: "aquí cancela uma operaçao, alteraçoes feitas nao serao usadas",
        RO: "TODO",
        IND: "TODO"
    },
    qosQueueTip6: {
        EN: "Here you save the new queue item",
        FR: "Ici vous enregistrez le nouvel item queue",
        SPN: "Aquí se guarda el nuevo item queue",
        DE: "Hier speichern Sie den neuen QoS-Eintrag",
        IT: "Qui salvi il nuovo elemento della coda",
        DA: "Her kan du gemme det nye køelement",
        AR: "هنا قمت بحفظ عنصر قائمة انتظار جديد",
        PT: "aquí pode guardar o novo item queue",
        RO: "TODO",
        IND: "TODO"
    },
    qosQueueTip7: {
        EN: "Here you update the queue item",
        FR: "Mettez à jour l'élément ici",
        SPN: "Aquí se actualiza el item queue",
        DE: "Hier aktualisieren einen bestehenden QoS-Eintrag",
        IT: "Qui aggiorni l'elemento della coda",
        DA: "Her kan du opdatere det nye køelement",
        AR: "أنت هنا من أجل تحديث عنصر قائمة انتظار",
        PT: "aquí pode fazer o update do item queue",
        RO: "TODO",
        IND: "TODO"
    },
    qosQueueTipNavigate: {
        EN: "Here you navigate through QoS section",
        FR: "Ici vous naviguez dans la section QoS",
        SPN: "Aquí usted navega en la sección de QoS",
        DE: "Hier gelangen Sie zu den verschiedenen Einstellungen für QoS",
        IT: "Qui navighi attraverso la sezione QoS",
        DA: "Her kan du navigere QoS-sektionen",
        AR: "هنا يمكنك التنقل من خلال قسم جودة الخدمة",
        PT: "aquí pode navegar atravez da secçao QoS",
        RO: "TODO",
        IND: "TODO"
    },
    qosClassTip1: {
        EN: "Here you select and edit a classification item",
        FR: "Choisissez et modifiez ici un item de classification",
        SPN: "Aquí tienes que elegir y editar un item de classificación",
        DE: "Here you select and edit a classification item",
        IT: "Qui selezioni e modifichi un elemento di classificazione",
        DA: "Her kan du vælge og redigere et klassificeringselement",
        AR: "هنا يمكنك تحديد وتحرير عنصر تصنيف",
        PT: "aquí pode seleccionar e editar a classificaçao de um item",
        RO: "TODO",
        IND: "TODO"
    },
    qosClassTip3: {
        EN: "Here you enter or edit properties of a classification item",
        FR: "Ici vous entrez ou modifier les propriétés d'un item de classification",
        SPN: "Aquí se introduce o editar las propiedades de un item de classificación",
        DE: "Here you enter or edit properties of a classification item",
        IT: "Qui entri o modifichi le proprietà di un elemento di classificazione",
        DA: "Her kan du angive eller redigere et klassificeringselements egenskaber",
        AR: "هنا بإمكانك الدخول أو تعديل خصائص عنصر تصنيف",
        PT: "aquí adiciona ou edita as propriedades de um item de classificaçao",
        RO: "TODO",
        IND: "TODO"
    },
    qosClassTip6: {
        EN: "Here you save the new classification item",
        FR: "Enregistrez ici le nouvel item de classification",
        SPN: "Aquí se guarda el nuevo item de classificación",
        DE: "Here you save the new classification item",
        IT: "Qui salvi il nuovo elemento di classificazione",
        DA: "Her kan du gemme det nye klassificeringselement",
        AR: "هنا يمكنك حفظ عنصر تصنيف جديد",
        PT: "aquí pode guardar um novo item de classificaçao",
        RO: "TODO",
        IND: "TODO"
    },
    qosClassTip7: {
        EN: "Enter here classification item",
        FR: "Entrez ici l'élément de classification",
        SPN: "Aquí se actualiza el item de classificación",
        DE: "Enter here classification item",
        IT: "Inserisci qui il punto classificazione",
        DA: "Angiv det nye klassificeringselement",
        AR: "ادخل هنا بند التصنيف",
        PT: "adicione aquí um item de classificaçao",
        RO: "TODO",
        IND: "TODO"
    },
    addNewClass: {
        EN: "Add new classification",
        FR: "Ajouter une nouvelle classification",
        SPN: "Crear nueva clasificación",
        DE: "Add new classification",
        IT: "Aggiungi nuova classificazione",
        DA: "Tilføj en ny klassificering",
        AR: "إضافة تصنيف جديد",
        PT: "adicione uma nova classificaçao",
        RO: "TODO",
        IND: "TODO"
    },
    qosClassSetup: {
        EN: "QoS Classification Setup",
        FR: "Configuration de la classification QoS",
        SPN: "Configuración de Clasificación QoS",
        DE: "QoS Classification Setup",
        IT: "Impostazioni di classificazione QoS",
        DA: "QoS Classification Setup",
        AR: "إعداد تصنيف جودة الخدمة ",
        PT: "configuraçao de classificaçao QoS",
        RO: "TODO",
        IND: "TODO"
    },
    className: {
        EN: "Class Name",
        FR: "Nom de la classe",
        SPN: "Nombre de clase",
        DE: "Class Name",
        IT: "Nome classe",
        DA: "Class Name",
        AR: "اسم الفئة",
        PT: "nome de classe",
        RO: "TODO",
        IND: "TODO"
    },
    order: {
        EN: "Order",
        FR: "Ordre",
        SPN: "Orden",
        DE: "Reihenfolge",
        IT: "Ordine",
        DA: "Order",
        AR: "أمر",
        PT: "ordem",
        RO: "TODO",
        IND: "TODO"
    },
    classCriteria: {
        EN: "Classification Criteria",
        FR: "Critères de Classement",
        SPN: "Criterio de Clasificación",
        DE: "Classification Criteria",
        IT: "Criteri di classificazione",
        DA: "Classification Criteria",
        AR: "معايير تصنيف",
        PT: "classificaçao de criteria",
        RO: "TODO",
        IND: "TODO"
    },
    sourceMac: {
        EN: "Source MAC Address",
        FR: "Adresse MAC de source",
        SPN: "Dirección MAC de origen",
        DE: "MAC-Addresse der Quelle",
        IT: "Fonte indirizzo MAC",
        DA: "Kildens MAC-adresse",
        AR: "مصدر عنوان MAC  ",
        PT: "origem de endereço MAC",
        RO: "TODO",
        IND: "TODO"
    },
    mac: {
        EN: "MAC",
        FR: "MAC",
        SPN: "MAC",
        DE: "MAC",
        IT: "MAC",
        DA: "MAC",
        AR: "MAC",
        PT: "MAC",
        RO: "TODO",
        IND: "TODO"
    },
    sourceMacMask: {
        EN: "Source MAC mask",
        FR: "Masque MAC de Source",
        SPN: "Máscara MAC de origen",
        DE: "MAC-Netzwerkmaske der Quelle",
        IT: "Fonte maschera MAC",
        DA: "Source MAC mask",
        AR: "مصدر قناع MAC",
        PT: "origem de mascara MAC",
        RO: "TODO",
        IND: "TODO"
    },
    sourceIpPrefixLength: {
        EN: "Source IP Address / Prefix length",
        FR: "Adresse IP Source / longueur de préfixe",
        SPN: "Dirección IP de origen / Tamaño de prefijo",
        DE: "IP-Addresse /Prefix-Länge der Quelle",
        IT: "Fonte indirizzo IP / lunghezza del prefisso",
        DA: "Source IP Address / Prefix length",
        AR: "مصدر عنوان IP / طول البادئة",
        PT: "origem de endereço IP / cumprimento de prefixo",
        RO: "TODO",
        IND: "TODO"
    },
    sourcePortRange: {
        EN: "Source port range",
        FR: "Intervalle du port source",
        SPN: "Intervalo de puertos de origen",
        DE: "Quellport-Intervall",
        IT: "Fonte intervallo di porta",
        DA: "Source port range",
        AR: "نطاق منفذ المصدر",
        PT: "origem de port range",
        RO: "TODO",
        IND: "TODO"
    },
    sourceVendor: {
        EN: "Source Vendor Class Id",
        FR: "Source Vendor Class Id",
        SPN: "ID de origen de clase de distribuidor",
        DE: "Vendor Class ID der Quelle",
        IT: "Fonte Vendor Class Id",
        DA: "Source Vendor Class Id",
        AR: "هوية مصدر فئة البائع ",
        PT: "origem de vendor class Id",
        RO: "TODO",
        IND: "TODO"
    },
    sourceUser: {
        EN: "Source User Class Id",
        FR: "Source User Class Id",
        SPN: "Fuente ID de clase",
        DE: "User Class ID der Quelle",
        IT: "Fonte classe ID utente",
        DA: "Source User Class Id",
        AR: "مصدر فئة العضو",
        PT: "origem de user class Id",
        RO: "TODO",
        IND: "TODO"
    },
    destMac: {
        EN: "Destination MAC address",
        FR: "Adresse MAC de destination",
        SPN: "Dirección MAC de destino",
        DE: "MAC-Addresse des Ziels",
        IT: "Destinazione indirizzo MAC",
        DA: "Destination MAC address",
        AR: "وجهة عنوان MAC",
        PT: "destino de MAC address",
        RO: "TODO",
        IND: "TODO"
    },
    destMacMask: {
        EN: "Destination MAC mask",
        FR: "masque MAC de destination",
        SPN: "Destino máscara MAC",
        DE: "MAC-Netzwerkmaske des Ziels",
        IT: "Destinazione maschera MAC",
        DA: "Destination MAC mask",
        AR: "وجهة قناع MAC ",
        PT: "destino de MAC mask",
        RO: "TODO",
        IND: "TODO"
    },
    destIpPrefixLength: {
        EN: "Destination IP Address / Prefix length",
        FR: "Adresse IP de destination / longueur du préfixe",
        SPN: "Dirección IP de destino / Longitud de prefijo",
        DE: "IP-Addresse /Prefix-Länge des Ziels",
        IT: "Indirizzo di destinazione IP / lunghezza del prefisso",
        DA: "Destination IP Address / Prefix length",
        AR: "عنوان الوجهة IP / طول البادئة",
        PT: "destino de endereço IP / cumprimento de prefixo",
        RO: "TODO",
        IND: "TODO"
    },
    destPortRange: {
        EN: "Destination Port range",
        FR: "Intervalle du port de destination",
        SPN: "Destino Intervalo de puertos ",
        DE: "Ziellport-Intervall",
        IT: "Destinazione gamma porta",
        DA: "Destination Port range",
        AR: "وجهة مجموعة البورت",
        PT: "destino de port range",
        RO: "TODO",
        IND: "TODO"
    },
    destVendor: {
        EN: "Destination Vendor Class Id",
        FR: "Destinations Vendor Class Id",
        SPN: "Destination Vendor Class Id",
        DE: "Vendor Class ID des Ziels",
        IT: "Destinazione Vendor Class Id",
        DA: "Destination Vendor Class Id",
        AR: "هوية فئة البائع ",
        PT: "destino de vendor class Id",
        RO: "TODO",
        IND: "TODO"
    },
    destUser: {
        EN: "Destination User Class Id",
        FR: "Destination User Class Id",
        SPN: "Destination User Class Id",
        DE: "User Class ID des Ziels",
        IT: "Fonte classe ID utente",
        DA: "Destination User Class Id",
        AR: "مقصد عضو درجة Id",
        PT: "destino de user class Id",
        RO: "TODO",
        IND: "TODO"
    },
    ipProtocol: {
        EN: "IP protocol",
        FR: "Protocole IP",
        SPN: "protocolo IP",
        DE: "IP-Protokoll",
        IT: "IP",
        DA: "IP-protokol",
        AR: "بروتوكول IP",
        PT: "protocolo IP",
        RO: "TODO",
        IND: "TODO"
    },
    minPktLength: {
        EN: "Minimum Packet Length",
        FR: "Longueur de paquet minimum",
        SPN: "Longitud mínima de paquetes",
        DE: "Mindestpaketlänge",
        IT: "Lunghezza minima del pacchetto",
        DA: "Minimal pakkelængde",
        AR: "الحد الأدنى من طول الحزمة",
        PT: "cumprimento minimo de packet",
        RO: "TODO",
        IND: "TODO"
    },
    dscpCheck: {
        EN: "DSCP check",
        FR: "DSCP check",
        SPN: "DSCP check",
        DE: "DSCP-Prüfung",
        IT: "Controllo DSCP",
        DA: "DSCP-tjek",
        AR: "اختيار DSCP",
        PT: "DSCP check",
        RO: "TODO",
        IND: "TODO"
    },
    priorityCheck: {
        EN: "802.1P priority check",
        FR: "802.1P priority check",
        SPN: "verificación de prioridad 802.1p",
        DE: "802.1P Prioritätsprüfung",
        IT: "Controllo priorità 802.1P",
        DA: "802.1P-prioritetstjek",
        AR: "اختيار الأولوية 802.1P",
        PT: "verificaçao de prioridade 802.1P",
        RO: "TODO",
        IND: "TODO"
    },
    invalidValueInit: {
        EN: "Invalid value, enter a number",
        FR: "Valeur invalide, entrez un nombre",
        SPN: "Valor no válido, que debe ser un número",
        DE: "Ungültiger Wert, bitte geben Sie eine Zahl ein",
        IT: "Valore non valido, inserisci un numero",
        DA: "Ugyldig værdi, angiv et nummer",
        AR: "قيمة غير صالحة، أدخل رقم",
        PT: "valor invalido, escreva um numero",
        RO: "TODO",
        IND: "TODO"
    },
    greaterThan: {
        EN: "greater than",
        FR: "Supérieur à",
        SPN: "mayor que",
        DE: "größer als",
        IT: "più grande di",
        DA: "Større end",
        AR: "أكبر من ",
        PT: "maior que",
        RO: "TODO",
        IND: "TODO"
    },
    greaterThanE: {
        EN: "greater than or equal to",
        FR: "Supérieur ou égal à",
        SPN: "mayor que o igual a",
        DE: "größer oder gleich",
        IT: "maggiore o uguale a",
        DA: "Større end eller lig med",
        AR: "أكبر من أو يساوي ",
        PT: "maior que ou igual a",
        RO: "TODO",
        IND: "TODO"
    },
    lowerThan: {
        EN: "lower than",
        FR: "inférieur à",
        SPN: "inferior a",
        DE: "kleiner als",
        IT: "inferiore a",
        DA: "lavere end",
        AR: "أقل من ",
        PT: "inferior a",
        RO: "TODO",
        IND: "TODO"
    },
    lowerThanE: {
        EN: "lower than or equal to",
        FR: "inférieur ou égal à",
        SPN: "inferior o igual a",
        DE: "kleiner oder gleich",
        IT: "inferiore o uguale a",
        DA: "lavere end eller lig med",
        AR: "أقل أو يساوي ",
        PT: "inferior a ou igual a",
        RO: "TODO",
        IND: "TODO"
    },
    and: {
        EN: "and",
        FR: "et",
        SPN: "e",
        DE: "und",
        IT: "e",
        DA: "og",
        AR: "و",
        PT: "e",
        RO: "TODO",
        IND: "TODO"
    },
    qosConfLab1: {
        EN: "Configuration",
        FR: "Configuration",
        SPN: "Configuración",
        DE: "Konfiguration",
        IT: "Configurazione",
        DA: "Konfiguration",
        AR: "ترتيب",
        PT: "configuraçao",
        RO: "TODO",
        IND: "TODO"
    },
    qosConfLab2: {
        EN: "QoS Configuration",
        FR: "QoS Configuration",
        SPN: "Configuración de QoS",
        DE: "Priorisierungs-Regeln konfigurieren",
        IT: "Configurazione QoS",
        DA: "QoS-konfiguration",
        AR: "تكوين جودة الخدمة",
        PT: "configuraçao de QoS",
        RO: "TODO",
        IND: "TODO"
    },
    qosConfLab3: {
        EN: "Select Default DSCP Mark",
        FR: "Sélectionnez par défaut DSCP Mark",
        SPN: "Seleccionar predeterminado DSCP Mark",
        DE: "Setze Standart DSCP-Klassifizierung",
        IT: "Seleziona DSCP Mark Predefinito",
        DA: "Vælg standard-DSCP-mærke",
        AR: "حدد علامة DSCP  الافتراضية ",
        PT: "Seleccionar DSCP Mark por defeito",
        RO: "TODO",
        IND: "TODO"
    },
    qosConfLab4: {
        EN: "Interface",
        FR: "Interface",
        SPN: "Interfaz",
        DE: "Anschluss",
        IT: "Interfaccia",
        DA: "Interface",
        AR: "السطح البيني",
        PT: "interface",
        RO: "TODO",
        IND: "TODO"
    },
    qosConfLab5: {
        EN: "Shaping Rate",
        FR: "Shaping Rate",
        SPN: "Shaping Rate",
        DE: "Bandbreitenbegrenzung",
        IT: "Definizione tasso",
        DA: "Shaping Rate",
        AR: "تشكيل معدل",
        PT: "Shaping rate",
        RO: "TODO",
        IND: "TODO"
    },
    qosConfLab6: {
        EN: "Burst Size (Bytes)",
        FR: "Burst Size (octets)",
        SPN: "Burst Size (Bytes)",
        DE: "Burst Size (Bytes)",
        IT: "Dimensioni Burst (byte)",
        DA: "Burst Size (Bytes)",
        AR: "انفجار الحجم (بايت(",
        PT: "Burst Size (Bytes)",
        RO: "TODO",
        IND: "TODO"
    },
    qosConfTip1: {
        EN: "Choose a default DSCP Mark to automatically mark incoming traffic without reference to a particular classifier.",
        FR: "Choisir un défaut DSCP Marquer pour marquer automatiquement le traffic entrant sans référence à un classificateur particulier.",
        SPN: "Elegir un valor predeterminado de DSCP Mark para marcar automáticamente el tráfico de entrada sin hacer referencia a un clasificador particular.",
        DE: "Wählen Sie eine Standart DSCP-Klassifizierung, um eingehenden Datenverkehr ohne Klassifizierung mit diesem Wert zu versehen.",
        IT: "Scegli un DSCP Mark predefinito per contrassegnare automaticamente il traffico in entrata, senza riferimento ad un particolare classificatore.",
        DA: "Vælg et standard-DSCP-mærke til automatisk at markere indgående trafik uden at referere til en specifik klassificering.",
        AR: "اختيار DSCP  الافتراضي من أجل تعليم حركة المرور الواردة بشكل تلقائي دون الإحالة إلى مصنف معين.",
        PT: "escolha um DSCP por defeito para automaticamente marcar o trafico de entrada sem referencia a um classificador em concreto",
        RO: "TODO",
        IND: "TODO"
    },
    qosConfTip2: {
        EN: "Here you configure the shaping rate and burst size for each interface.",
        FR: "Ici vous configurez le shaping rate et burst size pour chaque interface.",
        SPN: "Aquí se configura el shaping rate y burst size para cada interfaz",
        DE: "Hier können Sie pro Schnittstelle die Bandreitenbegrenzung und die maximal Lastspitzen-Paketgröße zu definieren.",
        IT: "Qui configuri il tasso di definizione e le dimensioni del burst per ogni interfaccia.",
        DA: "Her kan du konfigurere 'shaping rate' og 'burst size' for hvert interface.",
        AR: "هنا يمكنك تكوين معدل تشكيل حجم كل واجهة.",
        PT: "aquí pode configurar a shaping rate e o burst size de cada interface",
        RO: "TODO",
        IND: "TODO"
    },
    meterType: {
        EN: "Meter type",
        FR: "Type de compteur",
        SPN: "Tipo de medidor",
        DE: "Messmethode",
        IT: "Tipo di metro",
        DA: "Målertype",
        AR: "نوع المقياس",
        PT: "tipo de medidor",
        RO: "TODO",
        IND: "TODO"
    },
    committedRate: {
        EN: "Committed Rate",
        FR: "Committed Rate",
        SPN: "Cambio Comprometidos",
        DE: "Verbindliche Bandbreite",
        IT: "Committed Rate",
        DA: "Committed Rate",
        AR: "معدل ملتزم",
        PT: "taxa de compromisso",
        RO: "TODO",
        IND: "TODO"
    },
    committedBurstSize: {
        EN: "Committed Burst Size",
        FR: "Committed Burst Size",
        SPN: "Comprometidos Tamaño Burst",
        DE: "Verbindliche Spitzenlastgröße",
        IT: "Committed Burst Size",
        DA: "Committed Burst Size",
        AR: "حجم نبض محدد ",
        PT: "tamanho de burst de compromisso",
        RO: "TODO",
        IND: "TODO"
    },
    conformingAction: {
        EN: "Conforming Action",
        FR: "Conformément Action",
        SPN: "Conforme Acción",
        DE: "Conforming Action",
        IT: "Azione conforme",
        DA: "Conforming Action",
        AR: "مطابقة العمل ",
        PT: "acçao conforme",
        RO: "TODO",
        IND: "TODO"
    },
    nonConformingAction: {
        EN: "Non-conforming Action",
        FR: "Action invalide",
        SPN: "Acción no Conforme",
        DE: "Non-conforming Action",
        IT: "Azione non conforme",
        DA: "Non-conforming Action",
        AR: "غير مطابقة لمواصفات العمل",
        PT: "acçao nao conforme",
        RO: "TODO",
        IND: "TODO"
    },
    ethPriority: {
        EN: "ETH Priority",
        FR: "Priorité ETH",
        SPN: "ETH Prioridad",
        DE: "Priorität der Ethernet-Anschlüsse",
        IT: "Priorità ETH",
        DA: "ETH-prioritet",
        AR: "أولوية ETH",
        PT: "prioridade ETH",
        RO: "TODO",
        IND: "TODO"
    },
    dscpValue: {
        EN: "DSCP Value",
        FR: "valeur DSCP",
        SPN: "Valor DSCP",
        DE: "DSCP-Wert",
        IT: "Valore DSCP",
        DA: "DSCP-værdi",
        AR: "قيمة DSCP",
        PT: "valor DSCP",
        RO: "TODO",
        IND: "TODO"
    },
    policerConfig: {
        EN: "Policer Configuration",
        FR: "Configuration policer",
        SPN: "Configuración policer",
        DE: "Policer-Konfiguration",
        IT: "Configurazione Policer",
        DA: "Policer konfiguration",
        AR: "تكوين Policer",
        PT: "configuraçao policer",
        RO: "TODO",
        IND: "TODO"
    },
    qosAccept: {
        EN: "Accept",
        FR: "Accepter",
        SPN: "Aceptar",
        DE: "Akzeptieren",
        IT: "Accetta",
        DA: "Acceptér",
        AR: "قبول",
        PT: "aceitar",
        RO: "TODO",
        IND: "TODO"
    },
    qosDrop: {
        EN: "Drop",
        FR: "Perte",
        SPN: "Drop",
        DE: "Drop",
        IT: "Drop",
        DA: "Drop",
        AR: "إسقاط",
        PT: "cair",
        RO: "TODO",
        IND: "TODO"
    },
    qosNoAction: {
        EN: "No Action",
        FR: "Aucune action",
        SPN: "Sin acción",
        DE: "Keine Aktion",
        IT: "Nessuna Azione",
        DA: "Ingen handling",
        AR: "لا عمل",
        PT: "Sem acçao",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip1: {
        EN: "Here you can enable or disable an existing Policer Item. It will only be used by the system after you click on 'Apply'",
        FR: "Ici, vous pouvez activer ou désactiver un Item Policer existant. Il ne sera utilisé par le système après avoir cliqué sur 'Appliquer'",
        SPN: "Aquí puede activar o desactivar un item Policer  existente. Esto sólo será utilizada por el sistema después de hacer clic en 'Aplicar'",
        DE: "Hier lassen sich die einzelnen Policer-Regeln an- und abwählen. Änderungen werden erst übernommen, nachdem Sie auf  die Schaltfläche 'Anwenden' geklickt haben.",
        IT: "Qui puoi attivare o disattivare un elemento Policer esistente. Verrà utilizzato solo dal sistema dopo aver cliccato su 'Applica'",
        DA: "Her kan du aktivere eller deaktivere et aktiverende policer-element. Det vil kun blive anvendt af systemet, når du klikker på 'Anvend'.",
        AR: "هنا يمكنك تمكين أو تعطيل Policer في بند القائمة. لن يتم استخدامه من قبل النظام بعد النقر على 'تطبيق'",
        PT: "aquí pode habilitar ou desabilitar um item existente de policer. Apenas será usado pelo sistema depois de pressionar 'apply'",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip2: {
        EN: "Here you can remove a existing Policer Item. It will only be used by the system after you click on 'Apply'",
        FR: "Ici vous pouvez supprimer un Item Policer existant. Il ne sera utilisé par le système après avoir cliqué sur 'Appliquer'",
        SPN: "Aquí usted puede quitar un Item Policer existente. Esto sólo será utilizada por el sistema después de hacer clic en 'Aplicar'",
        DE: "Hier können sie die bestehenden Policer-Regeln löschen. Die Regeln werden erst nach Bestätigung auf 'Anwenden' gelöscht. ",
        IT: "Qui puoi rimuovere un elemento Policer esistente. Verrà utilizzato solo dal sistema dopo aver cliccato su 'Applica'",
        DA: "Her kan du fjerne et eksisterende policer-element. Det vil kun blive anvendt af systemet, når du klikker på 'Anvend'.",
        AR: "هنا يمكنك إزالة Policer من بند القائمة. لن يتم استخدامه من قبل النظام بعد النقر على 'تطبيق'",
        PT: "aquí pode remover um item existente de policer. Apenas será usado pelo sistema depois de pressionar 'apply'",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip3: {
        EN: "Here you set Enable property for a new Policer Item",
        FR: "Ici, vous activez un nouvel élément Policer",
        SPN: "Aquí ajusta propiedad Habilitar para un nuevo Item Policer",
        DE: "Hier können sie einzelne Policer-Regeln aktivieren.",
        IT: "Qui imposti la proprietà Attiva per un nuovo elemento Policer",
        DA: "Her vælger du 'Aktivér' for et nyt policer-element",
        AR: "هنا قمت بتعيين الخاصية لتمكين عنصر Policer جديد",
        PT: "aquí pode editar as propriedades para um novo item policer",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip4: {
        EN: "Here you pick Meter Type for a new Policer Item",
        FR: "Ici vous choisissez 'Meter Typer' pour une nouvelle Item Policer",
        SPN: "Aquí tienes que elegir 'Meter Type' para un nuevo Item Policer",
        DE: "Wählen sie eine Berechnungsmethode für die neue Policer-Regel.",
        IT: "Qui scegli il tipo di metro per un nuovo elemento Policer",
        DA: "Her vælger du målertypen for et nyt policer-element",
        AR: "هنا يمكنك اختيار نوع مقياس عنصر Policer جديد",
        PT: "aquí pode escolher um tipo de medida para um item de policer",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip5: {
        EN: "Here you set Committed Rate (bits per second) property for a new Policer Item",
        FR: "Ici vous réglez 'Committed Rate' (bits par seconde) de la propriété pour un nouveau Item Policer",
        SPN: "Aquí se ajusta 'Committed Rate' (bits por segundo) propiedad de un nuevo Item Policer",
        DE: "Hier konfigurieren Sie die zugesicherte Rate (Bits/s) für eine neue Policer-Regel.",
        IT: "Qui puoi impostare il Committed Rate (bit per secondo) per un nuovo elemento Policer",
        DA: "Her indstiller du 'Committed Rate' (bits pr. sekund) egenskaben for et nyt policer-element",
        AR: "هنا قمت بتعيين معدلات (بت في الثانية) لخاصية Policer الجديدة ",
        PT: "aquí pode adicionar o committed rate (bits por segundo) para um novo item de policer",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip6: {
        EN: "Here you set Committed Burst Size (bytes) property for a new Policer Item",
        FR: "Ici vous réglez 'Burst Taille engagé' (octets) de la propriété pour un nouveau Item Policer",
        SPN: "Aquí se ajusta 'Committed Burst Size' (bytes) Construcción de un nuevo Item Policer",
        DE: "Hier konfigurieren Sie die maximale Größe für ein Spitzenlast-Paket der neuen Policer-Regel.",
        IT: "Qui è possibile impostare il Committed Burst Size (byte) per un nuovo elemento Policer",
        DA: "Her vælger du Committed Burst Size (bytes) egenskaben for et nyt policer-element",
        AR: "هنا قمت بتعيين حجم النبض (بايت) لخاصية Policer الجديدة ",
        PT: "aquí pode escolher o tamanho de burst committed (bytes) para um novo item de policer",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip7: {
        EN: "Here you pick Conforming Action property for a new Policer Item",
        FR: "IIci vous choisissez 'Conforming Action' bien pour une nouvelle Item Policer",
        SPN: "Aquí tienes que elegir la propiedad 'Conforming Action' para un nuevo Item Policer",
        DE: "Wählen Sie eine Conforming Action für die neue Policer-Regel.",
        IT: "Qui selezioni la proprietà Azione conforme per un nuovo elemento Policer",
        DA: "Her vælger du 'Conforming Action' egenskaben for et nyt policer-element",
        AR: "هنا بإمكانك اختيار خاصة العمل Policer الجديدة ",
        PT: "aquí pode escolher a propriedade de conforming action para um novo item policer",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip8: {
        EN: "Here you pick Non Conforming Action property for a new Policer Item",
        FR: "Ici vous choisissez 'Non Conforming Action' bien pour une nouvelle Item Policer",
        SPN: "Aquí tienes que elegir 'Non Conforming Action' propiedad de un nuevo Item Policer",
        DE: "Wählen sie die NonConforming Action für die neue Policer-Regel.",
        IT: "Qui selezioni la proprietà Azione non conforme per un nuovo elemento Policer",
        DA: "Her vælger du 'Non Conforming Action' egenskaben for et nyt policer-element",
        AR: "هنا يمكنك اختيار مطابقة خاصية Policer الجديدة ",
        PT: "aquí pode escolher a propriedade de non conforming action para um novo item policer",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip9: {
        EN: "Here you set DSCP Value for a new Policer Item. Only necessary if you picked 'Accept' for Non Conforming Action, also is must be a number between 0 and 63",
        FR: "Ici vous définissez  valeur DSCP  pour une nouvelle Item Policer. Seulement nécessaire si vous avez choisi 'Accepter' pour 'Non Conforming Action', aussi est doit être un nombre entre 0 et 63",
        SPN: "Aquí se ajusta valor DSCP  para un nuevo Item Policer. Sólo es necesario si usted escogió 'Aceptar' para 'Non Conforming Action', también se debe ser un número entre 0 y 63",
        DE: "Legen Sie den neuen DSCP-Wert für die neue Policer-Regel fest. (Nur notwendig, wenn Sie 'Zulassen' als 'NonConforming-Action' gewählt haben. Der Wert muss zwischen 0 und 63 liegen. ",
        IT: "Qui puoi impostare il valore DSCP per un nuovo elemento Policer. Necessario solo se hai scelto 'Accetta' per l'azione non conforme, deve essere un numero compreso tra 0 e 63",
        DA: "Her indstiller du DSCP-værdien for et nyt policer-element Kun nødvendigt, hvis du har valgt 'Accepter' for  Non Conforming Action, skal også være et tal mellem 0 og 63",
        AR: "هنا قمت بتعيين قيمة DSCP الخاصة بـ Policer عنصر جديد. تحتاج إليها فقط في حال اختيار 'موافق' لمطابقة العمل والرقم يجب أن يكون بين 0 و 63 ",
        PT: "aquí pode editar o valor de DSCP para um novo item de policer. Apenas necessario se escolheu 'aceitar' para non conforming action, tambem debe ser um numero entre 0 e 63'",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip10: {
        EN: "Here you set Ethernet Priority property a new Policer Item. Only necessary if you picked 'Accept' for Non Conforming Action, also is must be a number between 0 and 7",
        FR: "Ici vous définissez Ethernet propriété Priority un nouveau Item Policer. Seulement nécessaire si vous avez choisi 'Accepter' pour 'Non Conforming Action', aussi est doit être un nombre compris entre 0 et 7",
        SPN: "Aquí se ajusta Ethernet propiedad Priority un nuevo Item Policer. Sólo es necesario si usted escogió 'Aceptar' para 'Non Conforming Action', también se debe ser un número entre 0 y 7",
        DE: "Definieren Sie die Ethernet-Priorität für die neue Policer-Regel fest. Dies ist nur notwendig, wenn sie 'akzeptieren' als NonConforming-Action gewählt haben. Der Wert muss zwischen 0 und 63 liegen. ",
        IT: "Qui puoi impostare la proprietà Priorità Ethernet per un nuovo elemento Policer. Necessario solo se hai scelto 'Accetta' per l'azione non conforme, deve essere un numero compreso tra 0 e 7",
        DA: "Her indstiller du Ethernetprioriteten for et nyt policer-element. Kun nødvendigt, hvis du har valgt 'Accepter' for  Non Conforming Action, skal også være et tal mellem 0 og 7",
        AR: "هنا قمت بتعيين أولية إيثرنت لخاصية Policer عنصر جديد. تحتاج إليها فقط في حال اختيار 'موافق' لمطابقة العمل والرقم يجب أن يكون بين 0 و 7",
        PT: "aquí pode escolher a prioridade de rede para um novo item de policer. Apenas necessario se escolheu 'aceitar' para non conforming action, tambem debe ser um numero entre 0 e 7'",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip11: {
        EN: "Here you add the new Policer Item. It will only be used by the system after you click on 'Apply'",
        FR: "Ici vous ajoutez le nouveau Item Policer. Il ne sera utilisé par le système après avoir cliqué sur 'Appliquer'",
        SPN: "Aquí se agrega el nuevo Item Policer. Esto sólo será utilizada por el sistema después de hacer clic en 'Aplicar'",
        DE: "Hier definieren Sie eine neue Policer-Regel. Sie wird erst nach Bestätigung durch  'Anwenden' geladen. ",
        IT: "Qui aggiungi un nuovo elemento Policer. Verrà utilizzato dal sistema dopo aver cliccato su 'Applica'",
        DA: "Her kan du tilføje det nye policer-element. Det vil kun blive anvendt af systemet, når du klikker på 'Anvend'.",
        AR: "هنا يمكنك إضافة Policer عنصر جديد. لن يتم استخدامه من قبل النظام بعد النقر على 'تطبيق'",
        PT: "aquí pode adicionar um novo item de policer. Apenas será usado pelo sistema se pressionar o botao de 'apply''",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip12: {
        EN: "Here you cancel all changes made in this page. If you didn't click on 'Apply' all changes will be lost",
        FR: "Ici, vous annulez toutes les modifications apportées à cette page. Si vous n'avez pas cliqué sur 'Appliquer' tous les changements seront perdus",
        SPN: "Aquí usted cancela todos los cambios realizados en esta página. Si no hizo clic en 'Aplicar', se perderán todos los cambios",
        DE: "Klicken Sie hier, um alle gemachten Änderungen zu verwerfen (insoweit Sie nicht schon einmal auf 'Annehmen' geklickt haben).",
        IT: "Qui annulli tutte le modifiche apportate in questa pagina. Se clicchi su 'Applica' tutte le modifiche andranno perse",
        DA: "Her kan du annullere alle de ændringer, som er foretaget på denne side. Hvis du ikke har klikket på 'Anvend', vil alle ændringer gå tabt",
        AR: "هنا قمت بإلغاء جميع التغييرات التي أدخلت على هذه الصفحة. في حال عدم النقر على 'تطبيق' سيتم فقدان جميع التغييرات",
        PT: "aquí pode cancelar todas as alteraçoes feitas nesta pagina. Se nao pressionar 'apply' todas as alteraçoes nao serao guardadas'",
        RO: "TODO",
        IND: "TODO"
    },
    policerTip13: {
        EN: "Save here all changes made in this page",
        FR: "Enregistrez ici toutes les modifications apportées à cette page",
        SPN: "Aquí se guarda todos los cambios realizados en esta página",
        DE: "Klicken Sie hier, um alle gemachten Änderungen zu speichern",
        IT: "Salva qui tutte le modifiche apportate in questa pagina",
        DA: "Her kan du gemme alle de ændringer, som er foretaget på denne side.",
        AR: "أحفظ هنا كل التغييرات التي أدخلت في هذه الصفحة",
        PT: "guarde aquí todas as alteraçoes feitas nesta pagina",
        RO: "TODO",
        IND: "TODO"
    },
    trafficSpeedTip1: {
        EN: "Here you can see the downstream bitrate",
        FR: "Ici vous pouvez voir le débit descendant",
        SPN: "Aquí se puede ver el downstream",
        DE: "Hier sehen Sie die Download-Geschwindigkeit",
        IT: "Qui potete vedere il Downstream bit rate",
        DA: "Her kan du se downstream-bitraten",
        AR: "هنا يمكنك ان ترى معدل التدفق التحتي (بت)",
        PT: "aquí pode ver o bitrate downstream",
        RO: "TODO",
        IND: "TODO"
    },
    trafficSpeedTip2: {
        EN: "Here you can see the upstream bitrate",
        FR: "Ici vous pouvez voir le débit montant",
        SPN: "Aquí se puede ver el upstream",
        DE: "Hier sehen Sie die Geschwindigkeit, mit der Daten ins Internet hochgeladen werden",
        IT: "Qui potete vedere l'upstream bitrate",
        DA: "Her kan du se upstream-bitraten",
        AR: "هنا يمكنك ان ترى معدل التدفق الفوقي ",
        PT: "aquí pode ver o bitrate upstream",
        RO: "TODO",
        IND: "TODO"
    },
    trafficSpeedTip3: {
        EN: "Here you can check your Internet connection speed, click on 'begin test' to start",
        FR: "Ici, vous pouvez vérifier votre vitesse de connexion Internet, cliquez sur 'begin test' pour commencer",
        SPN: "Aquí usted puede comprobar su velocidad de conexión actual, clic en 'begin test' para comenzar",
        DE: "Hier können Sie Geschwindigkeit Ihrer Internetverbindung prüfen. Klicken Sie auf 'Test starten', um mit den Speedtest durchzuführen.",
        IT: "Qui può controllare la velocità di connessione a Internet, clicca su 'inizia test' per avviare",
        DA: "Her kan du tjekke hastigheden af din internetforbindelse, klik på 'Start test' for at starte.",
        AR: "هنا يمكنك التحقق من سرعة اتصالك بالإنترنت، انقر على 'بدء اختبار ' للبدء",
        PT: "aquí pode consultar a sua velocidade de internet, pressione 'begin test' para iniciar'",
        RO: "TODO",
        IND: "TODO"
    },
    monitor: {
        EN: "Monitor",
        FR: "Monitor",
        SPN: "Monitor",
        DE: "Monitor",
        IT: "Monitor",
        DA: "Overvåg",
        AR: "مراقب",
        PT: "monitor",
        RO: "TODO",
        IND: "TODO"
    },
    monitorErroNtp: {
        EN: "This device is not synchronized with a NTP Server",
        FR: "Le modem n'est pas synchronisé avec un serveur NTP",
        SPN: "Este dispositivo no está sincronizado con un servidor NTP",
        DE: "Dieses Gerät wird mit keinem NTP-Server synchronisiert",
        IT: "Questo dispositivo non è sincronizzato con un server NTP",
        DA: "Denne enhed er ikke synkroniseret med en NTP-server",
        AR: "لم يتم مزامنة هذا الجهاز إلى خادم NTP",
        PT: "este dispositivo nao esta sincronizado com o servidor de NTP",
        RO: "TODO",
        IND: "TODO"
    },
    mbGraphScale: {
        EN: "Downstream MB x Days",
        FR: "MB Descendant x Jours",
        SPN: "Downstream MB x Días",
        DE: "Übertragungsgeschwindigkeit MByte x Tage",
        IT: "Downstream MB x giorni",
        DA: "Downstream: MB x dage",
        AR: "التدفق التحتي  MB مضروب بعدد الأيام",
        PT: "downstream MB x Dias",
        RO: "TODO",
        IND: "TODO"
    },
    confirmRemoveContact: {
        EN: "Are you sure?",
        FR: "Êtes-vous sûr?",
        SPN: "Estás seguro?",
        DE: "Sind Sie sicher?",
        IT: "Sei sicuro?",
        DA: "Er du sikker?",
        AR: "هل أنت متأكد؟",
        PT: "tem a certeza?",
        RO: "TODO",
        IND: "TODO"
    },
    confirmRemoveContactText: {
        EN: "Are you sure you want to remove this contact?",
        FR: "Êtes-vous sûr de vouloir supprimer ce contact?",
        SPN: "¿Está seguro de que desea eliminar este contacto?",
        DE: "Sind Sie sicher, dass Sie diesen Eintrag löschen möchten?",
        IT: "Sei sicuro di voler rimuovere questo contatto?",
        DA: "Er du sikker på, at du vil fjerne denne kontakt?",
        AR: "هل أنت متأكد أنك تريد إزالة هذا الاتصال؟",
        PT: "tem a certeza que quer remover este contacto?",
        RO: "TODO",
        IND: "TODO"
    },
    confirmRemoveAllContactText: {
        EN: "Are you sure you want to remove all contacts?",
        FR: "Êtes-vous sûr de vouloir supprimer tous les contacts?",
        SPN: "¿Está seguro de que desea eliminar todos los contactos?",
        DE: "Sind Sie sicher, dass Sie alle Eintäge löschen möchten?",
        IT: "Sei sicuro di voler rimuovere tutti i contatti?",
        DA: "Er du sikker på, at du vil fjerne alle kontakter?",
        AR: "هل أنت متأكد أنك تريد إزالة كل الاتصالات؟",
        PT: "tem a certeza que quer remover todos os contactos?",
        RO: "TODO",
        IND: "TODO"
    },
    invalidEmail: {
        EN: "Email not valid",
        FR: "E-mail invalide",
        SPN: "El correo electrónico no válida",
        DE: "Ungültige Email-Adresse",
        IT: "Email non valida",
        DA: "E-mail ikke gyldig",
        AR: "البريد الإلكتروني غير صالح",
        PT: "email invalido",
        RO: "TODO",
        IND: "TODO"
    },
    autoCall: {
        EN: "Auto Call",
        FR: "Appel Automatique",
        SPN: "Llamada Automática",
        DE: "Automatischer Anruf",
        IT: "Chiamata automatica",
        DA: "Autoopkald",
        AR: "اتصال تلقائي ",
        PT: "chamada automatica",
        RO: "TODO",
        IND: "TODO"
    },
    contact: {
        EN: "Contact",
        FR: "Contactez",
        SPN: "Contacto",
        DE: "Kontakt",
        IT: "Contatto",
        DA: "Kontakt",
        AR: "اتصال",
        PT: "contacto",
        RO: "TODO",
        IND: "TODO"
    },
    firstName: {
        EN: "First Name",
        FR: "Prénom",
        SPN: "Nombre de Pila",
        DE: "Vorname",
        IT: "Nome",
        DA: "Fornavn",
        AR: "الاسم الأول",
        PT: "nome",
        RO: "TODO",
        IND: "TODO"
    },
    pickLine: {
        EN: "Pick a line",
        FR: "Choisir une ligne",
        SPN: "Elegir una línea",
        DE: "Wählen Sie einen Telefonanschluss",
        IT: "Scegli una linea",
        DA: "Vælg en linje",
        AR: "اختيار خط",
        PT: "escolha uma linha",
        RO: "TODO",
        IND: "TODO"
    },
    toggleInstructions: {
        EN: "Toggle instructions",
        FR: "Afficher instructions",
        SPN: "Alternar instrucciones",
        DE: "Erläuterungen aus-/einschalten",
        IT: "Istruzioni Toggle",
        DA: "Hjælp",
        AR: "تعليمات التبديل",
        PT: "alternar instruçoes",
        RO: "TODO",
        IND: "TODO"
    },
    importContact: {
        EN: "Import Contacts from File",
        FR: "Importer fichier",
        SPN: "Importar de Archivo",
        DE: "Kontakte aus einer Datei importieren",
        IT: "Importa contatti da file",
        DA: "Importer kontakter fra fil",
        AR: "استيراد جهات الاتصال من ملف",
        PT: "imprte contactos desde ficheiro",
        RO: "TODO",
        IND: "TODO"
    },
    exportContact: {
        EN: "Export Contacts",
        FR: "Exporter les contacts",
        SPN: "Exportar contactos",
        DE: "Kontakte exportieren",
        IT: "Esporta contatti",
        DA: "Eksporter kontakter",
        AR: "تصدير جهات الاتصال",
        PT: "exporte contactos",
        RO: "TODO",
        IND: "TODO"
    },
    importGoogle: {
        EN: "Import from Google Contacts",
        FR: "Importer à partir de Google",
        SPN: "Importación de Google",
        DE: "Aus Google-Kontakte importieren",
        IT: "Importa da Google Contatti",
        DA: "Importer fra Google Contacts",
        AR: "استيراد جهات الاتصال من Google",
        PT: "importe contactos desde google",
        RO: "TODO",
        IND: "TODO"
    },
    deleteAllContacts: {
        EN: "Delete All",
        FR: "Tout supprimer",
        SPN: "Eliminar Todos",
        DE: "Alle Löschen",
        IT: "Cancella Tutto",
        DA: "Slet alle",
        AR: "حذف الجميع ",
        PT: "apague todos",
        RO: "TODO",
        IND: "TODO"
    },
    step1Import: {
        EN: "Select 'FILE' in Microsoft Outlook initial page.",
        FR: "Sélectionnez 'FICHIER' sur la page initiale de Microsoft Outlook.",
        SPN: "Desde la página inicial de Microsoft Outlook, seleccione 'ARCHIVO'.",
        DE: "Klicken Sie auf den Reiter 'Datei' links oben in Microsoft Outlook.",
        IT: "Seleziona 'FILE' sulla pagina iniziale di Microsoft Outlook.",
        DA: "Vælg 'Filer' på startsiden i Microsoft Outlook.",
        AR: "اختر 'الملف' في الصفحة الاولى من  Microsoft Outlook ",
        PT: "seleccione 'file' na pagina inicial do Microsoft Outlook'",
        RO: "TODO",
        IND: "TODO"
    },
    step2Import: {
        EN: "Select 'Open and Export' and then 'Import / Export'.",
        FR: "Sélectionnez 'Ouvrir et Exporter' puis 'Import / Export'.",
        SPN: "Seleccione 'Abrir y exportar' y luego 'Importar / Exportar'.",
        DE: "Klicken Sie auf 'Öffnen', dann auf 'Importieren'",
        IT: "Seleziona 'Apri e Esporta' e quindi 'Importa / Esporta'.",
        DA: "Vælg 'Importer og eksporter'.",
        AR: "حدد 'فتح وتصدير 'ثم' استيراد / تصدير '.",
        PT: "seleccione 'open and export' e escolha 'import / export''",
        RO: "TODO",
        IND: "TODO"
    },
    step3Import: {
        EN: "Select 'Export to a File' and click 'Next'.",
        FR: "Sélectionnez 'Exporter vers un fichier' et cliquez sur 'Suivant'.",
        SPN: "Seleccione 'Exportar a un archivo' y haga clic en 'Siguiente'.",
        DE: "Wählen Sie 'In Datei exportieren' und klicken Sie dann auf die Schaltfläche 'Weiter'",
        IT: "Seleziona 'Esporta in un file' e clicca su 'Avanti'.",
        DA: "Vælg 'Eksporter til en fil' og klik på 'Næste'.",
        AR: "اختر 'تصدير إلى ملف 'وانقر فوق' التالي '.",
        PT: "seleccione 'export to a file' e pressione 'next''",
        RO: "TODO",
        IND: "TODO"
    },
    step4Import: {
        EN: "Select 'Comma separated values' and click 'Next'.",
        FR: "Sélectionnez 'valeurs séparées par virgule' et cliquez sur 'Suivant'.",
        SPN: "Seleccione 'Valores separados por comas' y haga clic en 'Siguiente'.",
        DE: "Wählen Sie 'Kommagetrente Werte' und klicken Sie auf 'Weiter'.",
        IT: "Seleziona 'Valori separati da virgole' e clicca su 'Avanti'.",
        DA: "Vælg 'Semikolonseparerede værdier (DOS)', og klik på 'Næste'.",
        AR: "اختر ' قيم مفصولة بفواصل 'وانقر فوق' التالي '.",
        PT: "seleccione 'comma separated values' e pressione 'next''",
        RO: "TODO",
        IND: "TODO"
    },
    step5Import: {
        EN: "Select your contacts directory, choose a save destination and click on 'Finish'.",
        FR: "Sélectionnez votre répertoire de contacts, choisissez une destination de sauvegarde et cliquez sur 'Terminer'.",
        SPN: "Seleccione el directorio de contactos, elija un destino de almacenamiento y 'Finalizar'.",
        DE: "Wählen Sie den Eintrag 'Kontakte' bzw. 'Contacts' aus dem Verzeichnis aus und klicken Sie 'Weiter'. Anschließend wählen Sie den Speicherort und vergeben wenn gewünscht noch einen entsprechenden Namen. Klicken Sie erneut auf 'Weiter'.",
        IT: "Seleziona la rubrica, scegli una destinazione di salvataggio e clicca su 'Fine'.",
        DA: "Vælg din kontaktoversigtog vælg en destination hvor den skal gemmes. Klik på 'Næste' og 'Udfør'",
        AR: "حدد دليل جهات الاتصال الخاصة بك، وقم باختيار جهة الحفظ وانقر على 'إنهاء'.",
        PT: "seleccione o seu directorrio de contactos, escolha e guarde no destino e pressione 'finish''",
        RO: "TODO",
        IND: "TODO"
    },
    step6Import: {
        EN: "Use the file generated in the following field:",
        FR: "Utilisez le fichier généré dans le champ suivant:",
        SPN: "Utilice el archivo generado en el siguiente campo:",
        DE: "Verwenden Sie die so erzeugte Datei im folgenden Feld:",
        IT: "Utilizza il file generato nel seguente campo:",
        DA: "Anvend den fil, som er genereret i følgende felt:",
        AR: "استخدام الملف الذي تم إنشاؤه في الحقل التالي:",
        PT: "use o ficheiro gerado no seguinte campo:",
        RO: "TODO",
        IND: "TODO"
    },
    noteImport: {
        EN: "NOTE: You can also import a vcard from Outlook.",
        FR: "REMARQUE: Vous pouvez également importer une vCard à partir d'Outlook.",
        SPN: "NOTA: También puede importar una vCard desde Outlook.",
        DE: "Tip: Sie können auch eine vCard aus Outlook importieren.",
        IT: "NOTA: È inoltre possibile importare una vCard da Outlook.",
        DA: "BEMÆRK: Du kan også importere et visitkort fra Outlook",
        AR: "ملاحظة: يمكنك أيضا الاستيراد بصيغة بطاقة من Outlook.",
        PT: "NOTA: tambem pode importar vcard desde o Outlook",
        RO: "TODO",
        IND: "TODO"
    },
    phonebookMain: {
        EN: "Here you can see informations about contacts and call logs.",
        FR: "Ici vous pouvez voir des informations sur les contacts et le journal d'appels.",
        SPN: "Aquí se puede ver información sobre los contactos y los registros de llamadas.",
        DE: "Hier können Sie Informationen über Ihre Kontakte und Anruflisten einsehen",
        IT: "Qui puoi vedere le informazioni sui contatti e i registri delle chiamate.",
        DA: "Her kan du se oplysninger om kontakter og opkaldslogs.",
        AR: "هنا يمكنك عرض معلومات حول الاتصالات وسجلات المكالمات.",
        PT: "aquí pode ver as informaçoes sobre os contactos e os registros de chamadas",
        RO: "TODO",
        IND: "TODO"
    },
    mymediaMain: {
        EN: "Here you can share multimedia content from your devices connected to the USB ports.",
        FR: "Ici vous pouvez partager des contenus multimédia de vos périphériques connectés aux ports USB.",
        SPN: "Aquí usted puede compartir contenido multimedia a través de dispositivos conectados al puerto USB.",
        DE: "Hier können Sie Multimediainhalte der angeschlossenen Massenspeicher zur Verfügung stellen.",
        IT: "Qui puoi condividere contenuti multimediali dai dispositivi collegati alle porte USB.",
        DA: "Her kan du dele multimedieindhold fra dine enheder, som er tilsluttet USB-porte.",
        AR: "هنا يمكنك مشاركة محتوى الوسائط المتعددة من الأجهزة الخاصة بك من خلال الاتصال بمنفذ USB",
        PT: "aquí pode compartir os conteudos multimedia desde os dispositivos ligados as portas USB.",
        RO: "TODO",
        IND: "TODO"
    },
    mycloudMain: {
        EN: "You can upload your files in a cloud storage.",
        FR: "Vous pouvez télécharger vos fichiers vers le cloud.",
        SPN: "Puedes subir tus archivos para almacenamiento en la nube.",
        DE: "Hier können Sie Ihre Dateien in einen Cloud-Speicher hochladen.",
        IT: "Puoi caricare i file in un cloud storage.",
        DA: "Du kan uploade dine filer i cloudhukommelse.",
        AR: "يمكنك تحميل الملفات في سحابة التخزين.",
        PT: "aquí pode fazer o upload dos seus ficheiros na cloud",
        RO: "TODO",
        IND: "TODO"
    },
    devicesList: {
        EN: "This is the list of connected storage devices, click to view sharing options.",
        FR: "Liste des périphériques de stockage, cliquer pour afficher les options de partage.",
        SPN: "Esta es la lista de los dispositivos de almacenamiento conectados clic para ver opciones de uso compartido.",
        DE: "Dies ist die Übersicht der angeschlossenen Massenspeicher. Klicken Sie auf einen Eintrag, um weitere Einstellungen vorzunehmen.",
        IT: "Questa è la lista dei dispositivi di archiviazione collegati, clicca per visualizzare le opzioni di condivisione.",
        DA: "Dette er listen over de tilsluttede hukommelsesenheder, klik for at se delingsmulighederne.",
        AR: "هذه هي قائمة أجهزة التخزين المتصلة، انقر فوق عرض لرؤية خيارات المشاركة.",
        PT: "esta é a lista dos dispositivos de armazenamento ligados, pressione para ver as opçoes de partilha",
        RO: "TODO",
        IND: "TODO"
    },
    enableSambaShare: {
        EN: "Enable or disable network sharing of device content.",
        FR: "Active ou désactive le partage réseau du contenu du périphérique.",
        SPN: "Activa o desactiva el uso compartido de los contenidos del dispositivo en la red.",
        DE: "Hier legen Sie fest, ob Geräte auf Multimediainhalte Ihrer Massenspeicher zugreifen dürfen.",
        IT: "Abilita o disabilita la condivisione in rete dei contenuti del dispositivo.",
        DA: "Aktivér eller deaktivér netværksdeling af enhedens indhold.",
        AR: "تمكين أو تعطيل شبكة تبادل المحتوى من الجهاز.",
        PT: "active ou desactive a partilha de rede do conteudo do dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    selectAnItem: {
        EN: "Please, select an item",
        FR: "S'il vous plaît, sélectionner un élément",
        SPN: "Por favor, seleccione un elemento",
        DE: "Bitte wählen Sie einen Eintrag",
        IT: "Per favore, seleziona una voce",
        DA: "Vælg venligst et element",
        AR: "من فضلك، قم بتحديد عنصر",
        PT: "por favor, seleccione um item",
        RO: "TODO",
        IND: "TODO"
    },
    selectADir: {
        EN: "Please, select an directory",
        FR: "Merci de sélectionner un répertoire",
        SPN: "Por favor",
        DE: "Bitte Verzeichnis auswählen",
        IT: "Per favore, seleziona una cartella",
        DA: "TODO",
        AR: "TODO",
        PT: "por favor, seleccione um directorio",
        RO: "Va rugam sa selectati un director",
        IND: "TODO"
    },
    cantSelectADir: {
        EN: "Please, select a file",
        FR: "Merci de sélectionner un fichier",
        SPN: "Por favor",
        DE: "Bitte Datei auswählen",
        IT: "Per favore, seleziona un file",
        DA: "TODO",
        AR: "TODO",
        PT: "por favor, seleccione um ficheiro",
        RO: "Va rugam sa selectati un fisier",
        IND: "TODO"
    },
    redirectToANonMobile: {
        EN: "You will be redirected to a site not designed for mobile screens.",
        FR: "Vous allez être redirigé vers un site non conçu pour les écrans mobiles.",
        SPN: "Usted será redirigido a un sitio que no está diseñado para móviles.",
        DE: "Sie werden auf eine Seite weitergeleitet, die für die Anzeige auf Mobilgeräten nicht optimiert ist.",
        IT: "Sarai reindirizzato a un sito non progettato per schermi mobili.",
        DA: "Du vil blive omdirigeret til en side, som ikke er designet til mobile skærme.",
        AR: "سيتم نقلك إلى موقع غير مصمم لشاشات الهواتف المحمولة",
        PT: "voce será redireccionado a um site nao desenhado para telemoveis",
        RO: "TODO",
        IND: "TODO"
    },
    mobileNetworkMap: {
        EN: "NETWORK MAP",
        FR: "CARTE DU RÉSEAU",
        SPN: "MAPA DE REDE",
        DE: "Netzwerkmaske",
        IT: "MAPPA DELLA RETE",
        DA: "NETVÆRKSKORT",
        AR: "خريطة الشبكة ",
        PT: "MAPA DE REDE",
        RO: "TODO",
        IND: "TODO"
    },
    mobileStatus: {
        EN: "STATUS & SETTINGS",
        FR: "STATUT ET PARAMÈTRES",
        SPN: "SITUACIÓN Y AJUSTES",
        DE: "Status & Einstellungen",
        IT: "STATO E IMPOSTAZIONI",
        DA: "STATUS OG INDSTILLINGER",
        AR: "الحالة والاعدادات ",
        PT: "FERRAMENTAS E ESTADO",
        RO: "TODO",
        IND: "TODO"
    },
    mobileGuestAccess: {
        EN: "GUEST ACCESS",
        FR: "ACCÈS INVITÉ",
        SPN: "ACCESO DE INVITADOS",
        DE: "Gastzugang",
        IT: "ACCESSO OSPITI",
        DA: "GÆSTEADGANG",
        AR: "وصول الضيف ",
        PT: "ACESSO DE CONVIDADOS",
        RO: "TODO",
        IND: "TODO"
    },
    mobileParentalControl: {
        EN: "PARENTAL CONTROl",
        FR: "CONTRÔLE PARENTAl",
        SPN: "CONTROL PATERNO",
        DE: "Kindersicherung",
        IT: "CONTROLLO GENITORI",
        DA: "FORÆLDREKONTROl",
        AR: "الرقابة الأبوية ",
        PT: "CONTROLO PARENTAl",
        RO: "TODO",
        IND: "TODO"
    },
    mobileMultimedia: {
        EN: "MULTIMEDIA",
        FR: "MULTIMEDIA",
        SPN: "MULTIMEDIA",
        DE: "Multimedia",
        IT: "MULTIMEDIA",
        DA: "MULTIMEDIE",
        AR: "متعدد الوسائط",
        PT: "MULTIMEDIA",
        RO: "TODO",
        IND: "TODO"
    },
    mobileQr: {
        EN: "QR CODE",
        FR: "QR CODE",
        SPN: "CÓDIGO QR",
        DE: "QR-Code",
        IT: "CODICE QR",
        DA: "QR-KODE",
        AR: "رمز QR",
        PT: "CODIGO QR",
        RO: "TODO",
        IND: "TODO"
    },
    qrcodeTextMobile: {
        EN: "Select a wireless interface to generate the QR code",
        FR: "Sélectionnez une interface sans fil pour générer le code QR",
        SPN: "Seleccione la conexión Wireless para generar el código QR",
        DE: "Wählen Sie ein WLAN aus, für das der QR-Code erstellt werden soll",
        IT: "Seleziona un'interfaccia wireless per generare il codice QR",
        DA: "Vælg en trådløs brugerflade for at generere QR-koden.",
        AR: "تحديد واجهة لاسلكية لتوليد رمز الاستجابة السريعة",
        PT: "Seleccione um interface wireless para gerar um codigo QR",
        RO: "TODO",
        IND: "TODO"
    },
    qrcodeTextMobileDont: {
        EN: "There are no Wireless Connections enabled to generate the QR Code",
        FR: "Il n'y a pas de connexions sans fil activés pour générer le code QR",
        SPN: "Seleccionar una interfaz inalámbrica para generar el código QR",
        DE: "Keine WLAN-Verbindung aktiv. Erstellung eines QR-Codes nicht möglich",
        IT: "Non ci sono connessioni wireless abilitate per generare il codice QR",
        DA: "Ingen trådløse forbindelser er aktiveret til at aktivere QR-koden",
        AR: "لا توجد اتصالات لاسلكية مفعلة لتوليد رمز الاستجابة السريعة",
        PT: "nao existem ligaçoes wireless activas para gerar um codigo QR",
        RO: "TODO",
        IND: "TODO"
    },
    allRightsReserved: {
        EN: " All Rights Reserved",
        FR: "Tous droits réservés",
        SPN: " Reservados Todos Los Derechos",
        DE: "Alle Rechte vorbehalten",
        IT: "Tutti i Diritti Riservati",
        DA: "Alle rettigheder forbeholdes",
        AR: " جميع الحقوق محفوظة",
        PT: "todos os direitos reservados",
        RO: "TODO",
        IND: "TODO"
    },
    languages: {
        EN: "Languages",
        FR: "Langues",
        SPN: "Idiomas",
        DE: "Sprache",
        IT: "Lingue",
        DA: "Sprog",
        AR: "اللغات",
        PT: "idiomas",
        RO: "TODO",
        IND: "TODO"
    },
    autoLogin: {
        EN: "Autologin",
        FR: "Connexion Automatique",
        SPN: "Inicio de sesión automático",
        DE: "Automatische Verbindung",
        IT: "Login automatico",
        DA: "Log ind automatisk",
        AR: "الدخول التلقائي",
        PT: "login automatico",
        RO: "TODO",
        IND: "TODO"
    },
    about: {
        EN: "About",
        FR: "A propos",
        SPN: "Acerca",
        DE: "Über",
        IT: "Su",
        DA: "Om",
        AR: "حول",
        PT: "Sobre",
        RO: "TODO",
        IND: "TODO"
    },
    logout: {
        EN: "Logout",
        FR: "Déconnexion",
        SPN: "Cierre de sesión",
        DE: "Abmelden",
        IT: "Logout",
        DA: "Log ud",
        AR: "تسجيل الخروج",
        PT: "logout",
        RO: "TODO",
        IND: "TODO"
    },
    hosts: {
        EN: "Hosts",
        FR: "Hôtes",
        SPN: "Hosts",
        DE: "Hosts",
        IT: "Host",
        DA: "Hosts",
        AR: "المضيفين",
        PT: "hosts",
        RO: "TODO",
        IND: "TODO"
    },
    profile: {
        EN: "Profile",
        FR: "Profil",
        SPN: "Perfil",
        DE: "Profil",
        IT: "Profilo",
        DA: "Profil",
        AR: "الملف الشخصي",
        PT: "perfil",
        RO: "TODO",
        IND: "TODO"
    },
    removeParentalHost: {
        EN: "Do you really want to remove this Host?",
        FR: "Voulez-vous vraiment supprimer cet hôte?",
        SPN: "¿Realmente desea eliminar este Host?",
        DE: "Wollen Sie diesen Host wirklich aus der Liste löschen?",
        IT: "Vuoi davvero rimuovere questo host?",
        DA: "Vil du virkelig fjerne denne host?",
        AR: "هل تريد حقا إزالة هذا المضيف؟",
        PT: "tem a certeza que quer remover este host?",
        RO: "TODO",
        IND: "TODO"
    },
    confirmRemoveParentalHost: {
        EN: "The host will be removed permanently.",
        FR: "l'hôte sera définitivement supprimé.",
        SPN: "El host se eliminará de forma permanente.",
        DE: "Dieser Host wird permanent aus der Liste gelöscht.",
        IT: "l'host sarà rimosso in modo permanente.",
        DA: "Denne host vil blive fjernet permanent.",
        AR: "سيتم إزالة المضيف بشكل دائم.",
        PT: "o host será removido permanentemente",
        RO: "TODO",
        IND: "TODO"
    },
    webPageBlocked: {
        EN: "WEB PAGE BLOCKEd",
        FR: "PAGE WEB BLOQUÉE",
        SPN: "PÁGINA WEB BLOQUEADA",
        DE: "Anzeige der Inhalte wurde geblockt",
        IT: "PAGINA WEB BLOCCATA",
        DA: "INTERNETSIDE BLOKERET",
        AR: "صفحة الويب محجوبة ",
        PT: "PAGINA WEB BLOQUEADA",
        RO: "TODO",
        IND: "TODO"
    },
    blockedDescription: {
        EN: "The page you are trying to reach is not allowed for your profile as it belongs to the category of",
        FR: "La page que vous essayez d'atteindre n'est pas autorisé pour votre profil car il appartient à la catégorie des",
        SPN: "La página que está intentando alcanzar no está permitido para su perfil, ya que pertenece a la categoría de",
        DE: "Die aufgerufene Seite ist für das von Ihnen verwendete Benutzerprofil verboten, da sie Inhalte folgender Kategorie enthält",
        IT: "La pagina che stai cercando di raggiungere non è consentita per il tuo profilo in quanto appartiene alla categoria di",
        DA: "Den side, du forsøger at åbne, er ikke tilladt for din profil, da den tilhører kategorien",
        AR: "إن الصفحة التي تحاول الوصول إليها غير مسموح بها في بروفايلك لأنها تنتمي إلى فئة",
        PT: "a pagina web que esta a tentar aceder nao está permitida no perfil já que pertence a categoria de",
        RO: "TODO",
        IND: "TODO"
    },
    details: {
        EN: "Details...",
        FR: "Détails...",
        SPN: "Detalles...",
        DE: "Details...",
        IT: "Dettagli...",
        DA: "Detaljerede oplysninger ...",
        AR: "التفاصيل ...",
        PT: "detalhes...",
        RO: "TODO",
        IND: "TODO"
    },
    category: {
        EN: "Category",
        FR: "Catégorie",
        SPN: "Categoría",
        DE: "Kategorie",
        IT: "Categoria",
        DA: "Kategori",
        AR: "الفئة",
        PT: "categoria",
        RO: "TODO",
        IND: "TODO"
    },
    NoRestriction: {
        EN: "No Restriction",
        FR: "Pas de restriction",
        SPN: "Sin restricción",
        DE: "Keine Einschränkgung",
        IT: "Nessuna restrizione",
        DA: "Ingen begrænsning",
        AR: "لا يوجد قيود",
        PT: "Sem restriçoes",
        RO: "TODO",
        IND: "TODO"
    },
    Kids: {
        EN: "Kids",
        FR: "Enfants",
        SPN: "Niños",
        DE: "Kinder",
        IT: "Bambini",
        DA: "Børn",
        AR: "أطفال",
        PT: "crianças",
        RO: "TODO",
        IND: "TODO"
    },
    Teenage: {
        EN: "Teenager",
        FR: "Adolescent",
        SPN: "Adolescente",
        DE: "Teenager",
        IT: "Adolescente",
        DA: "Teenagers",
        AR: "مراهقين",
        PT: "adolescente",
        RO: "TODO",
        IND: "TODO"
    },
    secure: {
        EN: "Secure",
        FR: "Sécurisé",
        SPN: "Secure",
        DE: "Sicher",
        IT: "Sicuro",
        DA: "Sikker",
        AR: "آمنة",
        PT: "Seguro",
        RO: "TODO",
        IND: "TODO"
    },
    ecoMode: {
        EN: "Eco Mode",
        FR: "Mode Éco",
        SPN: "Modo Eco",
        DE: "ECO-Modus",
        IT: "Eco Mode",
        DA: "Eco-tilstand",
        AR: "وضع التوفير",
        PT: "modo eco",
        RO: "TODO",
        IND: "TODO"
    },
    healthCheck: {
        EN: "Health Check",
        FR: "Tests système",
        SPN: "Verificación de Salud",
        DE: "Selbstüberprüfung",
        IT: "Auto-diagnostica",
        DA: "Helbredstjek",
        AR: "التحقق من الصحة ",
        PT: "verificaçao de saude",
        RO: "TODO",
        IND: "TODO"
    },
    g3Backup: {
        EN: "3G/LTE Backup",
        FR: "3G / LTE Sauvegarde",
        SPN: "Copia de Seguridad de 3G / LTE",
        DE: "3G/LTE Backup",
        IT: "Backup 3G/LTE",
        DA: "3G/4G-backup",
        AR: "النسخ الاحتياطي 3G/LTE",
        PT: "backup 3G/LTE",
        RO: "TODO",
        IND: "TODO"
    },
    g3BackupTitlePage: {
        EN: "3G/LTE Backup",
        FR: "3G / LTE Sauvegarde",
        SPN: "Copia de Seguridad de 3G / LTE",
        DE: "3G/LTE Backup",
        IT: "Backup 3G/LTE",
        DA: "3G/4G-backup",
        AR: "النسخ الاحتياطي 3G/LTE",
        PT: "backup 3G/LTE",
        RO: "TODO",
        IND: "TODO"
    },
    certificates: {
        EN: "Certificates",
        FR: "Certificats",
        SPN: "Certificados",
        DE: "Zertifikate",
        IT: "Certificati",
        DA: "Certifikater",
        AR: "الشهادات",
        PT: "certificados",
        RO: "TODO",
        IND: "TODO"
    },
    lt2pClient: {
        EN: "L2TP Client",
        FR: "Client L2TP",
        SPN: "Cliente L2TP",
        DE: "L2TP Client",
        IT: "Client L2TP",
        DA: "L2TP-klient",
        AR: "عميل L2TP",
        PT: "cliente L2TP",
        RO: "TODO",
        IND: "TODO"
    },
    ipSecClient: {
        EN: "IPSec Client",
        FR: "Client IPSec",
        SPN: "Cliente IPSec",
        DE: "IPSec Client",
        IT: "Client IPSec",
        DA: "IPSec-klient",
        AR: "عميل IPSec",
        PT: "cliente IPSec",
        RO: "TODO",
        IND: "TODO"
    },
    local: {
        EN: "Local",
        FR: "Local",
        SPN: "Local",
        DE: "Lokal",
        IT: "Locale",
        DA: "Lokal",
        AR: "محلي ",
        PT: "Local",
        RO: "TODO",
        IND: "TODO"
    },
    remote: {
        EN: "Remote",
        FR: "Éloigné",
        SPN: "Remoto",
        DE: "Entfernt",
        IT: "In remoto",
        DA: "Fjern",
        AR: "عن بعد",
        PT: "Remoto",
        RO: "TODO",
        IND: "TODO"
    },
    scheduling: {
        EN: "Scheduling",
        FR: "Planification",
        SPN: "Programación",
        DE: "Zeitplanung",
        IT: "Programmazione",
        DA: "Planlægning",
        AR: "جدولة ",
        PT: "programaçao",
        RO: "TODO",
        IND: "TODO"
    },
    control: {
        EN: "Control",
        FR: "Contrôle",
        SPN: "El Controln",
        DE: "Allgemein",
        IT: "Controllo",
        DA: "Kontrol",
        AR: "تحكم ",
        PT: "controlo",
        RO: "TODO",
        IND: "TODO"
    },
    information: {
        EN: "Information",
        FR: "Information",
        SPN: "Información",
        DE: "Information",
        IT: "Informazioni",
        DA: "Information",
        AR: "معلومات",
        PT: "informaçao",
        RO: "TODO",
        IND: "TODO"
    },
    utilities: {
        EN: "Utilities",
        FR: "Utilitaires",
        SPN: "Utilidades",
        DE: "Werkzeug",
        IT: "Utilities",
        DA: "Utilities",
        AR: "خدمات",
        PT: "utilidades",
        RO: "TODO",
        IND: "TODO"
    },
    removeContactTitle: {
        EN: "Are you sure?",
        FR: "Êtes-vous sûr?",
        SPN: "Estás seguro?",
        DE: "Sind Sie sicher?",
        IT: "Sei sicuro?",
        DA: "Er du sikker?",
        AR: "هل أنت متأكد؟",
        PT: "tem a certeza?",
        RO: "TODO",
        IND: "TODO"
    },
    removeContactQuestion: {
        EN: "Do you want to remove this contact?",
        FR: "Voulez-vous supprimer ce contact?",
        SPN: "¿Quieres eliminar este contacto?",
        DE: "Möchten Sie diesen Kontakt löschen?",
        IT: "Vuoi rimuovere questo contatto?",
        DA: "Vil du fjerne denne kontakt?",
        AR: "هل تريد إزالة هذا الاتصال؟",
        PT: "quer remover este contacto?",
        RO: "TODO",
        IND: "TODO"
    },
    connectionType: {
        EN: "Connection type",
        FR: "Type de connexion",
        SPN: "Tipo de conexión",
        DE: "Verbindungstyp",
        IT: "Tipo di connessione",
        DA: "Forbindelsestype",
        AR: "نوع الاتصال",
        PT: "tipo de ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    mask: {
        EN: "Mask",
        FR: "Masque",
        SPN: "Máscara",
        DE: "Netzwerkmaske",
        IT: "Maschera",
        DA: "Maske",
        AR: "قناع",
        PT: "mascara",
        RO: "TODO",
        IND: "TODO"
    },
    gateway: {
        EN: "Gateway",
        FR: "Passerelle",
        SPN: "Gateway",
        DE: "Gateway",
        IT: "Gateway",
        DA: "Gateway",
        AR: "بوابة",
        PT: "gateway",
        RO: "TODO",
        IND: "TODO"
    },
    basicIpv4Tip1: {
        EN: "Here is the current connection type",
        FR: "Type de connexion actuel",
        SPN: "Aquí es el tipo de conexión actual",
        DE: "Hier sehen Sie den aktuell verwendeten Verbindungstyp",
        IT: "Ecco il tipo di connessione corrente",
        DA: "Her er den aktuelle forbindelsestype",
        AR: "هنا هو نوع الاتصال الحالي",
        PT: "aquí tem o actual tipo de ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    basicIpv4Tip2: {
        EN: "Here you set ppp username",
        FR: "Ici vous définissez le Nom d'utilisateur PPP",
        SPN: "Aquí se ajusta nombre de usuario ppp",
        DE: "Hier legen Sie den PPP-Nutzernamen fest",
        IT: "Qui puoi impostare il nome utente ppp",
        DA: "Her indstiller du brugernavnet for PPP",
        AR: "هنا قمت بتعيين اسم المستخدم PPP",
        PT: "aquí defina o username de PPP",
        RO: "TODO",
        IND: "TODO"
    },
    basicIpv4Tip3: {
        EN: "Here you set ppp password",
        FR: "Ici, vous définissez le mot de passe PPP",
        SPN: "Aquí se ajusta contraseña ppp",
        DE: "Hier legen Sie das PPP-Kennwort fest",
        IT: "Qui puoi impostare una password ppp",
        DA: "Her indstiller du adgangskoden for PPP",
        AR: "هنا قمت بتعيين كلمة المرور PPP",
        PT: "aquí defina a password de PPP",
        RO: "TODO",
        IND: "TODO"
    },
    basicIpv4Tip4: {
        EN: "Here you can see current connection status",
        FR: "Ici vous pouvez voir l'état actuel de la connexion",
        SPN: "Aquí puedes ver el estado de conexión actual",
        DE: "Hier sehen Sie den Status der aktuellen Internetverbindung",
        IT: "Qui puoi vedere lo stato corrente della connessione",
        DA: "Her kan du se den aktuelle forbindelsesstatus",
        AR: "هنا يمكنك معرفة حالة الاتصال الحالي",
        PT: "aquí pode ver o estado da ligaçao",
        RO: "TODO",
        IND: "TODO"
    },
    basicIpv4Tip5: {
        EN: "Here you navigate through IPv4 and IPv6 settings",
        FR: "Ici vous naviguez dans les paramètres IPv4 et IPv6",
        SPN: "Aquí usted navegar a través de la configuración de IPv4 e IPv6",
        DE: "Hier werden Einstellungen zu IPv4 und IPv6 angezeigt",
        IT: "Qui navighi attraverso le impostazioni IPv4 e IPv6",
        DA: "Her kan du navigere gennem IPv4- og IPv6-indstillinger",
        AR: "هنا يمكنك التنقل من خلال اعدادت IPv4 و IPv6",
        PT: "aquí pode navegar atravez dos paramentros de IPv4 e IPv6",
        RO: "TODO",
        IND: "TODO"
    },
    staticDnsServer: {
        EN: "Static DNS Server Configuration",
        FR: "Configuration du serveur DNS statique",
        SPN: "Configuración del servidor DNS estático",
        DE: "Konfiguration des statischen DNS-Servers",
        IT: "Configurazione del server DNS statico",
        DA: "Konfiguration af statisk DNS-server",
        AR: "تكوين الملقم DNS ثابت",
        PT: "configuraçao de servidor DNS estatico",
        RO: "TODO",
        IND: "TODO"
    },
    no: {
        EN: "No",
        FR: "Non",
        SPN: "No",
        DE: "Nein",
        IT: "No",
        DA: "Nej",
        AR: "لا",
        PT: "nao",
        RO: "TODO",
        IND: "TODO"
    },
    discardChanges: {
        EN: "Discard Changes?",
        FR: "Rejeter les modifications?",
        SPN: "Descartar los cambios?",
        DE: "Änderungen verwerfen?",
        IT: "Annullare le modifiche?",
        DA: "Slet ændringer?",
        AR: "تجاهل التغييرات؟",
        PT: "descartar mudanças?",
        RO: "TODO",
        IND: "TODO"
    },
    messageDiscardChanges: {
        EN: "If you leave this page, all your modifications will be lost.",
        FR: "Si vous quittez cette page, toutes vos modifications seront perdues.",
        SPN: "Si deja esta página ahora, se perderán todas las modificaciones.",
        DE: "Wenn Sie diese Seite jetzt verlassen gehen alle vorgenommen Änderungen verloren.",
        IT: "Se esci da questa pagina, andranno perse tutte le modifiche.",
        DA: "Hvis du forlader denne side, vil alle dine ændringer gå tabt.",
        AR: "إذا غادرت هذه الصفحة الآن، سيتم فقدان كل التعديلات.",
        PT: "Se abandonar esta pagina, todas as alteraçoes serao perdidas",
        RO: "TODO",
        IND: "TODO"
    },
    sNetwork: {
        EN: "Network",
        FR: "Réseau",
        SPN: "Red",
        DE: "Netzwerkmaske",
        IT: "Rete",
        DA: "Netværk",
        AR: "شبكة",
        PT: "rede",
        RO: "TODO",
        IND: "TODO"
    },
    sStatus: {
        EN: "Status",
        FR: "Statut",
        SPN: "Estado",
        DE: "Status",
        IT: "Stato",
        DA: "Status",
        AR: "وضع",
        PT: "estado",
        RO: "TODO",
        IND: "TODO"
    },
    sUptime: {
        EN: "Uptime",
        FR: "Durée de fonctionnement",
        SPN: "El tiempo de actividad",
        DE: "Eingeschaltet seit",
        IT: "Tempo di attività",
        DA: "Oppetid",
        AR: "الجهوزية",
        PT: "uptime",
        RO: "TODO",
        IND: "TODO"
    },
    sMacaddres: {
        EN: "MAC address",
        FR: "Adresse Mac",
        SPN: "MAC dirección",
        DE: "MAC-Adresse",
        IT: "Indirizzo MAC",
        DA: "MAC-adresse",
        AR: "عنوان MAC",
        PT: "MAC address",
        RO: "TODO",
        IND: "TODO"
    },
    sMode: {
        EN: "Mode",
        FR: "Mode",
        SPN: "Modo",
        DE: "Modus",
        IT: "Modo",
        DA: "Tilstand",
        AR: "طريقة",
        PT: "modo",
        RO: "TODO",
        IND: "TODO"
    },
    sBitrate: {
        EN: "Bitrate",
        FR: "Débit en bits",
        SPN: "Velocidad de bits",
        DE: "Bitrate",
        IT: "Bit rate",
        DA: "Bithastighed",
        AR: "معدل البت",
        PT: "bitrate",
        RO: "TODO",
        IND: "TODO"
    },
    sSecurity: {
        EN: "Security",
        FR: "Sécurité",
        SPN: "Seguridad",
        DE: "Sicherheit",
        IT: "Sicurezza",
        DA: "Sikkerhed",
        AR: "الأمن ",
        PT: "Segurança",
        RO: "TODO",
        IND: "TODO"
    },
    sManufacturer: {
        EN: "Manufacturer",
        FR: "Fabricant",
        SPN: "Fabricante",
        DE: "Hersteller",
        IT: "Fabbricante",
        DA: "Producent",
        AR: "الجهة المصنعة ",
        PT: "fabricante",
        RO: "TODO",
        IND: "TODO"
    },
    tracerouteResults: {
        EN: "Traceroute results",
        FR: "Résultats du traceroute",
        SPN: "Resultados traceroute",
        DE: "Ergebnisse der Traceroute",
        IT: "Risultati Traceroute",
        DA: "Traceroute-resultater",
        AR: "نتائج التتبع ",
        PT: "resultados traceroute",
        RO: "TODO",
        IND: "TODO"
    },
    connectionStatus: {
        EN: "Status",
        FR: "Etat",
        SPN: "Estado",
        DE: "Status",
        IT: "Stato",
        DA: "Status",
        AR: "الحالة ",
        PT: "estado",
        RO: "TODO",
        IND: "TODO"
    },
    lastConnectionError: {
        EN: "Last error",
        FR: "Dernière erreur",
        SPN: "Último error",
        DE: "Letzter Fehler",
        IT: "Ultimo errore",
        DA: "Seneste fejl",
        AR: "آخر خطأ",
        PT: "ultimo erro",
        RO: "TODO",
        IND: "TODO"
    },
    removeDevice: {
        EN: "Do you really want to remove this device?",
        FR: "Voulez-vous vraiment supprimer ce périphérique?",
        SPN: "¿Realmente desea eliminar este dispositivo?",
        DE: "Wollen Sie dieses Gerät wirkich aus der Liste löschen?",
        IT: "Vuoi davvero eliminare questo dispositivo?",
        DA: "Vil du virkelig fjerne denne enhed?",
        AR: "هل تريد حقا إزالة هذا الجهاز؟",
        PT: "tem a certeza que quer remover este dispositivo?",
        RO: "TODO",
        IND: "TODO"
    },
    warningUnstableConfPage: {
        EN: "Change of Wan Mode may leave the gateway unstable. In this case, reboot manually to complete the operation.",
        FR: "Le changement de mode Wan peut rendre le modem instable. Dans ce cas, redémarrez manuellement le modem pour terminer l'opération.",
        SPN: "El cambio de modo Wan puede hacer que la puerta de enlace esté inestable.  En este caso, reinicie de forma manual para completar la operación.",
        DE: "Der Änderung des WAN-Modus kann zu einem instabilen Gateway führen. In diesem Fall starten Sie manuell neu, um den Vorgang abzuschließen.",
        IT: "La modifica della modalità Wan può lasciare il gateway instabile. In questo caso, riavvia manualmente per completare l'operazione.",
        DA: "Ændring af WAN-tilstand kan gøre gatewayen ustabil. I dette tilfælde kan du genstarte manuelt for at fuldføre handlingen.",
        AR: "تغيير وضع WAN قد يترك المربع غير مستقر. قد تكون هناك حاجة لإعادة التشغيل اليدوي لإتمام الإجراء.",
        PT: "mudança do modo de wan pode deixa o gateway inestavel. Neste caso, reinicie manualmente para completar a operaçao.",
        RO: "TODO",
        IND: "TODO"
    },
    PhyInterfaceType: {
        EN: "PhyInterface Type",
        FR: "Type de d'interface physique",
        SPN: "Tipo de PhyInterface",
        DE: "PhyInterface Type",
        IT: "Tipo di PhyInterface",
        DA: "PhyInterface Type",
        AR: "نوع PhyInterface",
        PT: "tipo de Phyinterface",
        RO: "TODO",
        IND: "TODO"
    },
    FXSStatus: {
        EN: "FXS Status",
        FR: "Statut du FXS",
        SPN: "Estado de FXS",
        DE: "FXS Status",
        IT: "Stato FXS",
        DA: "FXS-status",
        AR: "حالة FXS",
        PT: "estado FXS",
        RO: "TODO",
        IND: "TODO"
    },
    ForceDTMFInBand: {
        EN: "Force DTMF in-band",
        FR: "Forcer DTMF in-band",
        SPN: "Fuerza de DTMF in-band",
        DE: "DTMF in-band erzwingen",
        IT: "Forzare DTMF in banda",
        DA: "Tvungen DTMF in-band",
        AR: "قوة DTMF في الحزمة ",
        PT: "Force DTMF in-band",
        RO: "TODO",
        IND: "TODO"
    },
    pageNotFound: {
        EN: "404 - Page not found!",
        FR: "404 - Page non trouvée!",
        SPN: "404 - Página no encontrada!",
        DE: "404 - Seite nicht gefunden!",
        IT: "404 - Pagina non trovata!",
        DA: "404 - Siden ikke fundet!",
        AR: "404-  الصفحة غير موجودة!",
        PT: "404 - pagina nao encontrada!",
        RO: "TODO",
        IND: "TODO"
    },
    home: {
        EN: "Home page",
        FR: "Page d'accueil",
        SPN: "Página de inicio",
        DE: "Startseite",
        IT: "Homepage",
        DA: "Siden 'Hjem'",
        AR: "الصفحة الرئيسية ",
        PT: "home page",
        RO: "TODO",
        IND: "TODO"
    },
    homeSimple: {
        EN: "Home",
        FR: "TODO",
        SPN: "Inicio",
        DE: "Home",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "home",
        RO: "Acasa",
        IND: "TODO"
    },
    broadband: {
        EN: "Broadband",
        FR: "TODO",
        SPN: "Banda ancha",
        DE: "Breitband",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "broadband",
        RO: "Broadband",
        IND: "TODO"
    },
    contentSharing: {
        EN: "Content Sharing",
        FR: "TODO",
        SPN: "Contenido para compartir",
        DE: "Inhalte teilen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "partilha de conteudo",
        RO: "Partajare continut",
        IND: "TODO"
    },
    services: {
        EN: "Services",
        FR: "TODO",
        SPN: "Servicios",
        DE: "Dienste",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Serviços",
        RO: "Servicii",
        IND: "TODO"
    },
    userSettings: {
        EN: "User Settings",
        FR: "TODO",
        SPN: "Ajustes de usuario",
        DE: "Benutzereinstellungen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "parametros de utilizador",
        RO: "Setarile utilizatorului",
        IND: "TODO"
    },
    wifiRadio: {
        EN: "Wi-Fi Radio",
        FR: "TODO",
        SPN: "Radio WiFi",
        DE: "WLAN-Funknetz",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "radio Wi-Fi",
        RO: "Radio Wi-Fi",
        IND: "TODO"
    },
    setPinCode: {
        EN: "Set PIN code",
        FR: "TODO",
        SPN: "Ajustar codigo PIN",
        DE: "PIN-Code einstellen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "edite codigo PIN",
        RO: "Setare cod PIN",
        IND: "TODO"
    },
    sorryPageNotFound: {
        EN: "Sorry, the requested URL doesn't exist.",
        FR: "Désolé, l'URL demandée n'existe pas.",
        SPN: "Lo sentimos, no existe la URL solicitada.",
        DE: "Die angeforderte URL existiert nicht.",
        IT: "Spiacenti, l'URL richiesto non esiste.",
        DA: "Desværre, det anmodede URL eksisterer ikke.",
        AR: "عذراً الصفحة المطلوبة غير موجودة ",
        PT: "desculpe, o URL solicitado nao existe",
        RO: "TODO",
        IND: "TODO"
    },
    wanModalDescription: {
        EN: "This page only shows connections that are UP. If you did not succeed to create an active connection, it will disappear. In some cases, you may have to wait a few seconds and click on refresh button.",
        FR: "Cette page ne montre que les connexions établies. Si vous n'avez pas réussi à établir une connexion, celle-ci disparaitra. Sinon patientez quelques instants et appuyez sur le bouton refresh.",
        SPN: "Esta página sólo muestra las conexiones que son UP. Si no tiene éxito para crear una conexión activa, desaparecerá. En algunos casos, es posible que tenga que esperar unos segundos y haga clic en el botón de actualización.",
        DE: "Diese Seite zeigt nur UP-Verbindungen. Wenn Sie keine aktive Verbindung aufbauen konnten, wird es verschwinden. In einigen Fällen müssen Sie möglicherweise einige Sekunden warten und Sie auf die Aktualisieren-Schaltfläche klicken.",
        IT: "Questa pagina mostra solo le connessioni ATTIVE. Se riesci a creare una connessione attiva, sparirà. In alcuni casi, potrebbe essere necessario attendere alcuni secondi e fare clic sul pulsante di aggiornamento.",
        DA: "Denne side viser kun forbindelser, som er OPPE. Hvis du ikke kunne oprette en aktiv forbindelse, vil den forsvinde. I nogle tilfælde kan du være nødt til at vente i et par sekunder og derefter klikke på knappen 'Opdater'.",
        AR: "هذه الصفحة لا تظهر الا الاتصالات على أساس UP. لم تنجح في إنشاء اتصال نشط، وسوف تختفي الصفحة. في بعض الحالات، قد تضطر إلى الانتظار لبضع ثوان. انقر على زر التحديث.",
        PT: "esta pagina somente mostra ligaçoes que estao UP. Se nao conseguir crear uma ligaçao active, ela desaparecerá. Em alguns casos, deverá esperar alguns segundos e pressionar o botao refrescar.",
        RO: "TODO",
        IND: "TODO"
    },
    globalWANMode: {
        EN: "Global Wan Mode",
        FR: "Mode Global Wan",
        SPN: "Modo Wan Global",
        DE: "Globaler WAN-Modus",
        IT: "Modalità Global Wan",
        DA: "Global WAN-tilstand",
        AR: "وضع WAN العالمي ",
        PT: "modo wan global",
        RO: "TODO",
        IND: "TODO"
    },
    enableOfeo: {
        EN: "Here you can active and disable olfeo.",
        FR: "Ici vous pouvez activer et désactiver Olfeo.",
        SPN: "Aquí usted puede active y desactive olfeo.",
        DE: "Hier können Sie olfeo aktivieren und deaktivieren.",
        IT: "Qui puoi attivare e disabilitare olfeo.",
        DA: "Her kan du aktivere og deaktivere olfeo.",
        AR: "هنا يمكنك تفعيل وتعطيل  olfeo ",
        PT: "aquí pode activar e desactivar olfeo",
        RO: "TODO",
        IND: "TODO"
    },
    protocolId: {
        EN: "Here you can see the type of service protocol.",
        FR: "Ici vous pouvez voir le type de protocole de service.",
        SPN: "Aquí se puede ver el tipo de protocolo de servicio.",
        DE: "Hier sehen Sie den Typ des Serviceprotokolls.",
        IT: "Qui puoi vedere il tipo di protocollo di servizio.",
        DA: "Her kan du se typen af tjenesteprotokol.",
        AR: "هنا يمكنك رؤية نوع بروتوكول الخدمة.",
        PT: "aquí pode consultar o tipo de protocolo de serviço.",
        RO: "TODO",
        IND: "TODO"
    },
    serverIp: {
        EN: "Here you can see the IP address of the server.",
        FR: "Ici vous pouvez voir l'adresse IP du serveur.",
        SPN: "Aquí se puede ver la dirección IP del servidor.",
        DE: "Hier sehen Sie die IP-Adresse des Servers.",
        IT: "Qui puoi vedere l'indirizzo IP del server.",
        DA: "Her kan du se serverens IP-adresse.",
        AR: "هنا يمكنك رؤية عنوان IP لملقم.",
        PT: "aquí pode consultaro endereço IP do servidor",
        RO: "TODO",
        IND: "TODO"
    },
    serverPortId: {
        EN: "Here you can see the server port.",
        FR: "Ici vous pouvez voir le port du serveur.",
        SPN: "Aquí se puede ver el puerto del servidor.",
        DE: "Hier sehen Sie den Serverport.",
        IT: "Qui puoi vedere la porta del server.",
        DA: "Her kan du se serverporten.",
        AR: "هنا يمكنك ان ترى بورت الخادم.",
        PT: "aquí pode consultar a porta do servidor",
        RO: "TODO",
        IND: "TODO"
    },
    editId: {
        EN: "Here you can edit the settings for each server.",
        FR: "Ici vous pouvez modifier les paramètres pour chaque serveur.",
        SPN: "Aquí puede editar la configuración de cada servidor.",
        DE: "Hier können Sie die Einstellungen für jeden Server bearbeiten.",
        IT: "Qui puoi modificare le impostazioni per ogni server.",
        DA: "Her kan du redigere indstillingerne for hver server.",
        AR: "هنا يمكنك تعديل الإعدادات لكل خادم.",
        PT: "aquí pode editar os paramentros de cada servidor",
        RO: "TODO",
        IND: "TODO"
    },
    firstNoAccess: {
        EN: "It's not possible to access to Internet right now. Please check the cables connected to the gateway and refresh this page. You can also skip this step and go to the next one.",
        FR: "Il n'est pas possible d'accéder à Internet pour l'instant. Vérifiez les câbles connectés au modem et rafraîchissez cette page. Vous pouvez également sauter cette étape et passer à la suivante.",
        SPN: "No es posible conectarse a internet en este momento, por favor revise los cables conectados a la puerta de entrada y volver a cargar esta página o puede omitir este paso y vaya a la siguiente",
        DE: "Es kann derzeit keine Verbindung zum Internet hergestellt werden. Überprüfen Sie bitte die Kabel am Gateway und aktualisieren Sie diese Seite oder überspringen Sie diesen Schritt und gehen Sie zum nächsten",
        IT: "Non è possibile connettersi a internet in questo momento, controlla i cavi collegati al gateway e aggiorna questa pagina o salta questa fase e passa a quella successiva",
        DA: "Det er ikke muligt at oprette adgang til internettet lige nu. Tjek venligst de kabler, som er forbundet til gatewayen, og opdater denne side. Du kan også springe dette trin over og gå videre til det næste.",
        AR: "ليس من الممكن الاتصال بالإنترنت في الوقت الراهن، الرجاء التحقق من الكابلات التي المتصلة بالبوابة وتحديث هذه الصفحة أو يمكنك تخطي هذه الخطوة والانتقال إلى المرحلة التالية",
        PT: "Nao é possivel acceder á internet neste momento. Por favor verifique se os cabos estao ligados ao seu gateway e refresque a pagina. Pode avançar este passo directamente para o seguinte.",
        RO: "TODO",
        IND: "TODO"
    },
    clickToPrint: {
        EN: "Click on image to print",
        FR: "Cliquez sur l'image pour l'imprimer",
        SPN: "Haga clic en la imagen para imprimir",
        DE: "Klicken Sie auf das Bild, um es auszudrucken",
        IT: "Clicca sull immagine per stampare",
        DA: "Klik på billedet for at udskrive det",
        AR: "انقر على الصورة للطباعة",
        PT: "pressione na imagem para imprimir",
        RO: "TODO",
        IND: "TODO"
    },
    statusReason: {
        EN: "Status Reason",
        FR: "Cause du statut",
        SPN: "Razón para el estado",
        DE: "Statusgrund",
        IT: "Ragione stato",
        DA: "Statusårsag",
        AR: "سبب الحالة",
        PT: "razao para o estado",
        RO: "TODO",
        IND: "TODO"
    },
    callState: {
        EN: "Call State",
        FR: "État de l'appel",
        SPN: "Llame Estado",
        DE: "Anrufstatus",
        IT: "Chiama stato",
        DA: "Opkaldsstatus",
        AR: "الاتصال بالدولة ",
        PT: "chamar o estado",
        RO: "TODO",
        IND: "TODO"
    },
    change: {
        EN: "Change",
        FR: "Changer",
        SPN: "Cambiar",
        DE: "Änderung",
        IT: "Cambia",
        DA: "Ændre",
        AR: "تغيير",
        PT: "mudar",
        RO: "TODO",
        IND: "TODO"
    },
    displayWirelessEnviroment: {
        EN: "Display wireless environment",
        FR: "Afficher environement Wi-Fi",
        SPN: "Mostrar entorno inalambrico",
        DE: "Anzeige der drahtlosen Netzwerkumgebung (WLAN)",
        IT: "Mostra l'ambiente Wi-Fi circostante ",
        DA: "Vis det trådløse miljø",
        AR: "TODO",
        PT: "mostrar o ambiente wireless",
        RO: "Afisare mediu wireless",
        IND: "TODO"
    },
    display: {
        EN: "Display",
        FR: "Afficher",
        SPN: "Mostrar",
        DE: "Scannen",
        IT: "Scannerizza",
        DA: "Vis",
        AR: "تفحص",
        PT: "mostrar",
        RO: "TODO",
        IND: "TODO"
    },
    wifiChannel: {
        EN: "Tune",
        FR: "Réglage",
        SPN: "Ajuste",
        DE: "WLAN-Kanal:",
        IT: "Canale Wi-Fi",
        DA: "Indstil",
        AR: "قناة واي فاي",
        PT: "ajuste",
        RO: "TODO",
        IND: "TODO"
    },
    channelInfo: {
        EN: "Here you can see information about a channel and the networks that use it.",
        FR: "Ici vous pouvez voir les informations sur un canal et les réseaux qui l'utilisent.",
        SPN: "Aquí puede ver información sobre el canal y las redes que están en él.",
        DE: "Hier sehen Sie Informationen über den Kanal und die darin enthaltenen Netzwerke.",
        IT: "Qui puoi vedere le informazioni sul canale e le reti che sono in essa.",
        DA: "Her kan du se oplysninger om en kanal og de netværk, der anvender den.",
        AR: "هنا يمكنك عرض معلومات حول القناة والشبكات التي بداخلها.",
        PT: "aquí pode ver a informaçao sobre o canal e as redes em uso",
        RO: "TODO",
        IND: "TODO"
    },
    AllName: {
        EN: "- Show all -",
        FR: "- Montrer tout -",
        SPN: "- Mostrar todos -",
        DE: "- Alle anzeigen -",
        IT: "- Mostra tutti -",
        DA: "- Vis alle -",
        AR: "رؤية الجميع ",
        PT: " - mostrar tudo -",
        RO: "TODO",
        IND: "TODO"
    },
    MusicNode1: {
        EN: "Albums,%ALBUM",
        FR: "Albums,%ALBUM",
        SPN: "Álbumes,%ALBUM",
        DE: "Alben  %ALBUM",
        IT: "Album,%ALBUM",
        DA: "Albummer,%ALBUM",
        AR: "ألبومات،٪ ALBUM",
        PT: "Albuns,%ALBUM",
        RO: "TODO",
        IND: "TODO"
    },
    MusicNode2: {
        EN: "Artists,%ARTIST",
        FR: "Artistes,%ARTIST",
        SPN: "Artistas,%ARTIST",
        DE: "Künstler, %ARTIST",
        IT: "Artisti,%ARTISTA",
        DA: "Kunstnere,%ARTIST",
        AR: "الفنانين و٪ ARTIST",
        PT: "Artistas,%ARTISTA",
        RO: "TODO",
        IND: "TODO"
    },
    MusicNode3: {
        EN: "Types,%GENRE",
        FR: "Types,%GENRE",
        SPN: "Tipos,%GENRE",
        DE: "Arten, %GENRE",
        IT: "Tipo,%GENERE",
        DA: "Genrer,%GENRE",
        AR: "أنواع،٪ GENRE",
        PT: "Tipos,%GENERO",
        RO: "TODO",
        IND: "TODO"
    },
    MusicNode4: {
        EN: "Artists Index,[3]%ARTIST,%ALBUM",
        FR: "Index des artistes,[3]%ARTIST,%ALBUM",
        SPN: "Índice de Artistas,[3]%ARTIST,%ALBUM",
        DE: "Künstlerindex, [3]%ARTIST, %ALBUM",
        IT: "Indice artisti,[3]%ARTISTA,%ALBUM",
        DA: "Kunstnerindeks,[3]%ARTIST,%ALBUM",
        AR: "مؤشر الفنانين، [3]٪ ARTIST،٪ ALBUM",
        PT: "Artistas Index,[3]%ARTISTA,%ALBUM",
        RO: "TODO",
        IND: "TODO"
    },
    MusicNode5: {
        EN: "By folder,%PATH",
        FR: "Par dossier,%PATH",
        SPN: "Por carpeta,%PATH",
        DE: "Nach Ordner, %PATH",
        IT: "Per cartella,%PATH",
        DA: "Efter mappe,%PATH",
        AR: "حسب مسرى المجلد ٪",
        PT: "Por pasta,%CAMINHO",
        RO: "TODO",
        IND: "TODO"
    },
    AllTracks: {
        EN: "All tracks",
        FR: "Toutes les pistes",
        SPN: "Todas las pistas",
        DE: "Alle Titel",
        IT: "Tutti i brani",
        DA: "Alle sange",
        AR: "جميع المسارات ",
        PT: "todas as faixas",
        RO: "TODO",
        IND: "TODO"
    },
    AllRadio: {
        EN: "All radios",
        FR: "Toutes les radios",
        SPN: "Todas las radios",
        DE: "Alle Radiostationen",
        IT: "Tutte le radio",
        DA: "Alle radioer",
        AR: "جميع الإذاعات ",
        PT: "todas as radios",
        RO: "TODO",
        IND: "TODO"
    },
    PlaylistLastPlayed: {
        EN: "- Last played tracks -",
        FR: "- Les derniers morceaux joués -",
        SPN: "- Última jugado pistas -",
        DE: "- Zuletzt gespielte Stücke -",
        IT: "- Ultimi brani ascoltati -",
        DA: "- Senest afspillede sange -",
        AR: "- آخر مسارات تم تشغيلها - ",
        PT: "- Ultimas cançoes tocadas -",
        RO: "TODO",
        IND: "TODO"
    },
    PlaylistMostPlayed: {
        EN: "- Most played tracks -",
        FR: "- Morceaux les plus joués -",
        SPN: "- Pistas más jugado -",
        DE: "- Meistgespielte Stücke -",
        IT: "- Brani più ascoltati -",
        DA: "- Mest afspillede sange -",
        AR: "- أكثر المسارات تشغيلاً- ",
        PT: "- Cançoes mais tocadas -",
        RO: "TODO",
        IND: "TODO"
    },
    Playlists: {
        EN: "Playlists",
        FR: "Liste de lecture",
        SPN: "Listas de reproducción",
        DE: "Playlists",
        IT: "Playlist",
        DA: "Afspilningslister",
        AR: "قوائم التشغيل ",
        PT: "Playlists",
        RO: "TODO",
        IND: "TODO"
    },
    InternetRadio: {
        EN: "Internet Radio",
        FR: "Radio Internet",
        SPN: "Internet Radio",
        DE: "Internet-Radio",
        IT: "Radio Internet",
        DA: "Internetradio",
        AR: "راديو الإنترنت ",
        PT: "Internet radio",
        RO: "TODO",
        IND: "TODO"
    },
    RootMusic: {
        EN: "Audio",
        FR: "Audio",
        SPN: "Música",
        DE: "Musik",
        IT: "Musica",
        DA: "Musik",
        AR: "موسيقى ",
        PT: "audio",
        RO: "TODO",
        IND: "TODO"
    },
    PictureNode1: {
        EN: "By date,%YEAR,%MONTH",
        FR: "Par date,%YEAR,%MONTH",
        SPN: "Por fecha,%YEAR,%MONTH",
        DE: "Nach Datum, %YEAR, %MONTH",
        IT: "Per data,%ANNO,%MESE",
        DA: "Efter dato,%YEAR,%MONTH",
        AR: "حسب التاريخ، السنة ٪،٪ في الشهر",
        PT: "Por data,%ANO,%MES",
        RO: "TODO",
        IND: "TODO"
    },
    PictureNode2: {
        EN: "By folder,%PATH",
        FR: "Par dossier,%PATH",
        SPN: "Por carpeta,%PATH",
        DE: "Nach Ordner, %PATH",
        IT: "Per cartella,%PATH",
        DA: "Efter mappe,%PATH",
        AR: "حسب المجلد% المسار",
        PT: "Por pasta,%CAMINHO",
        RO: "TODO",
        IND: "TODO"
    },
    PictureNode3: {
        EN: "By keyword,%KEYWORd",
        FR: "Par mot clé,%KEYWORd",
        SPN: "Por palabra clave,%KEYWORd",
        DE: "Nach Schlüsselwort, %KEYWORd",
        IT: "Per tastiera,%TASTIERA",
        DA: "Efter nøgleord,%KEYWORd",
        AR: "حسب الكلمة%",
        PT: "Por palabra chave,%PALAVRA CHAVE",
        RO: "TODO",
        IND: "TODO"
    },
    AllPictures: {
        EN: "All photos",
        FR: "Toutes les photos",
        SPN: "Todas las fotos",
        DE: "Alle Fotos",
        IT: "Tutte le foto",
        DA: "Alle billeder",
        AR: "جميع الصور ",
        PT: "todas fotos",
        RO: "TODO",
        IND: "TODO"
    },
    RootPicture: {
        EN: "Photos",
        FR: "Photos",
        SPN: "Fotos",
        DE: "Fotos",
        IT: "Foto",
        DA: "Billeder",
        AR: "الصور ",
        PT: "fotos",
        RO: "TODO",
        IND: "TODO"
    },
    TagsPicture: {
        EN: "By keyword",
        FR: "Par mot clé",
        SPN: "Por palabra clave",
        DE: "Nach Schlüsselwort",
        IT: "Per tastiera",
        DA: "Efter nøgleord",
        AR: "حسب الكلمة ",
        PT: "por palabra chave",
        RO: "TODO",
        IND: "TODO"
    },
    VideoNode1: {
        EN: "By date,%YEAR,%MONTH",
        FR: "Par date,%YEAR,%MONTH",
        SPN: "Por fecha,%MONTH",
        DE: "Nach Datum, %YEAR, %MONTH",
        IT: "Per data,%ANNO,%MESE",
        DA: "Efter dato,%YEAR,%MONTH",
        AR: "حسب التاريخ%السنة% الشهر ",
        PT: "Por data,%ANO,%MES",
        RO: "TODO",
        IND: "TODO"
    },
    VideoNode2: {
        EN: "By folder,%PATH",
        FR: "Par dossier,%PATH",
        SPN: "Por carpeta,%PATH",
        DE: "Nach Ordner, %PATH",
        IT: "Per cartella,%PATH",
        DA: "Efter mappe,%PATH",
        AR: "حسب المجلد% المسار",
        PT: "Por pasta,%CAMINHO",
        RO: "TODO",
        IND: "TODO"
    },
    VideoNode3: {
        EN: "Titles,[3]%TITLE",
        FR: "Titres,[3]%TITLE",
        SPN: "Títulos,[3]%TITLE",
        DE: "Titel, [3] %TITEl",
        IT: "Titoli,[3]%TITOLO",
        DA: "Titler,[3]%TITLE",
        AR: "حسب العنوان% العناوين ",
        PT: "Titulos,[3]%TITULO",
        RO: "TODO",
        IND: "TODO"
    },
    AllVideos: {
        EN: "All videos",
        FR: "Toutes les vidéos",
        SPN: "Todos los vídeos",
        DE: "Alle Videos",
        IT: "Tutti i video",
        DA: "Alle videoer",
        AR: "جميع مقاطع الفيديو",
        PT: "todos os videos",
        RO: "TODO",
        IND: "TODO"
    },
    RootVideo: {
        EN: "Videos",
        FR: "Vidéos",
        SPN: "Videos",
        DE: "Videos",
        IT: "Video",
        DA: "Videoer",
        AR: "فيديو",
        PT: "Videos",
        RO: "TODO",
        IND: "TODO"
    },
    callerId: {
        EN: "Caller Id",
        FR: "Identification de l'appelant",
        SPN: "Identificador de llamadas",
        DE: "Anrufer-Id",
        IT: "ID chiamante",
        DA: "Opkalder-id",
        AR: "هوية المتصل",
        PT: "ID chamada",
        RO: "TODO",
        IND: "TODO"
    },
    callId: {
        EN: "Call Id",
        FR: "ID d'appel",
        SPN: "ID de llamada",
        DE: "Anruf-Id",
        IT: "ID chiamata",
        DA: "Opkalds-id",
        AR: "هوية المكالمة",
        PT: "ID chamada",
        RO: "TODO",
        IND: "TODO"
    },
    callIdName: {
        EN: "Call ID Name",
        FR: "Nom de l'ID d'appel",
        SPN: "Llame ID Nombre",
        DE: "Anruf-ID   Name",
        IT: "chiama ID Nome",
        DA: "Opkalds-id-navn",
        AR: "استدعاء تعريف الاسم",
        PT: "ID chamada nome",
        RO: "TODO",
        IND: "TODO"
    },
    conferenceCalling: {
        EN: "Conference Calls",
        FR: "Conférences Téléphoniques",
        SPN: "Llamada de conferencia",
        DE: "Konferenzgespräch",
        IT: "Teleconferenza",
        DA: "Konferenceopkald",
        AR: "مكالمة جماعية / اتصال جماعي ",
        PT: "chamadas conferencia",
        RO: "TODO",
        IND: "TODO"
    },
    sessionsCount: {
        EN: "Sessions Count",
        FR: "Compteur de sessions",
        SPN: "Sesiones Count",
        DE: "Sitzungszähler",
        IT: "Conto sessioni",
        DA: "Sessionantal",
        AR: "عدّ الجلسات ",
        PT: "contador sessoes",
        RO: "TODO",
        IND: "TODO"
    },
    callForwarding: {
        EN: "Call Forwarding",
        FR: "Renvoi d'appel",
        SPN: "Desvío de llamadas",
        DE: "Anrufweiterleitung",
        IT: "Inoltro chiamata",
        DA: "Viderestilling af opkald",
        AR: "تحويل المكالمات",
        PT: "chamada encaminhada",
        RO: "TODO",
        IND: "TODO"
    },
    callForwardingNumber: {
        EN: "Call Forwarding Number",
        FR: "Numéro tél. de renvoi",
        SPN: "Número de desvío",
        DE: "Nummer für Anrufweiterleitung",
        IT: "Chiama numero di inoltro",
        DA: "Nummer til viderestilling af opkald",
        AR: "رقم تحويل المكالمات ",
        PT: "numero chamada encaminhada",
        RO: "TODO",
        IND: "TODO"
    },
    fowardUnconditionally: {
        EN: "Forward immediately",
        FR: "Renvoi immédiat",
        SPN: "Reenviar incondicionalmente",
        DE: "Sofortige Weiterleitung",
        IT: "Inoltra sempre",
        DA: "Viderestil uden undtagelse",
        AR: "تحويل المكالمات بشكل غير مشروط",
        PT: "encaminhar imediatamente",
        RO: "TODO",
        IND: "TODO"
    },
    fowardOnBusy: {
        EN: "Forward 'On Busy'",
        FR: "Renvoi 'sur occupé'",
        SPN: "Reenviar 'Concurrida'",
        DE: "Weiterleitung wenn besetzt",
        IT: "Inoltra 'su occupato'",
        DA: "Viderestil ved 'Optaget'",
        AR: "تحويل المكالمات عند 'انشغال الخط'",
        PT: "encaminhar 'quando ocupado''",
        RO: "TODO",
        IND: "TODO"
    },
    fowardOnNoAnswer: {
        EN: "Forward 'On No Answer'",
        FR: "Renvoi 'sur non répondu'",
        SPN: "Reenviar 'si no hay respuesta'",
        DE: "Weiterleitung bei keiner Antwort",
        IT: "Inoltra 'alla mancata risposta'",
        DA: "Viderestil ved 'Intet svar'",
        AR: "تحويل المكالمات في 'حال عدم الرد على المكالمة'",
        PT: "encaminhar 'quando nao atende''",
        RO: "TODO",
        IND: "TODO"
    },
    callWaiting: {
        EN: "Call Waiting",
        FR: "Appel en attente",
        SPN: "Llamada en espera",
        DE: "Anruf in Warteschleife",
        IT: "Chiamata in attesa",
        DA: "Opkald venter",
        AR: "مكالمة انتظار ",
        PT: "chamada em espera",
        RO: "TODO",
        IND: "TODO"
    },
    callWaitingStatus: {
        EN: "Call Waiting Status",
        FR: "Statut appel en attente",
        SPN: "Llamada en espera de estado",
        DE: "Anruf in Warteschleife",
        IT: "Stato chiamata in attesa",
        DA: "Opkaldets ventestatus",
        AR: "حالة مكالمة الانتظار ",
        PT: "estado chamada em espera",
        RO: "TODO",
        IND: "TODO"
    },
    callParking: {
        EN: "Call Parking",
        FR: "Parking d'appel",
        SPN: "Aparcamiento de llamadas",
        DE: "Anruf parken",
        IT: "Chiamata Parking",
        DA: "Opkaldsparkering",
        AR: "وضع المكالمات قيد الانتظار ",
        PT: "estacionamento de chamada",
        RO: "TODO",
        IND: "TODO"
    },
    timeout: {
        EN: "Timeout",
        FR: "Timeout",
        SPN: "Se Acabó El Tiempo",
        DE: "Timeout",
        IT: "Pausa",
        DA: "Timeout",
        AR: "نفذ الوقت ",
        PT: "timeout",
        RO: "TODO",
        IND: "TODO"
    },
    anonymousCalling: {
        EN: "Anonymous Calling",
        FR: "Appel anonyme",
        SPN: "Llamada anónima",
        DE: "Anonym anrufen",
        IT: "Chiamata anonima",
        DA: "Anonyme opkald",
        AR: "مكالمة من مجهول ",
        PT: "chamada anonima",
        RO: "TODO",
        IND: "TODO"
    },
    anonymousCallBlocking: {
        EN: "Anonymous Call Blocking",
        FR: "Blocage des appels anonymes",
        SPN: "Bloqueo de llamadas anónima",
        DE: "Blockieren anonymer Anrufe",
        IT: "Blocco chiamate anonime",
        DA: "Blokering af anonyme opkald",
        AR: "حجب المكالمات من مجهول ",
        PT: "bloquear chamada anonima",
        RO: "TODO",
        IND: "TODO"
    },
    doNotDisturb: {
        EN: "Do Not Disturb",
        FR: "Ne Pas Déranger",
        SPN: "No Molestar",
        DE: "Bitte nicht stören",
        IT: "Non disturbare",
        DA: "Vil ikke forstyrres",
        AR: "عدم الازعاج",
        PT: "nao incomodar",
        RO: "TODO",
        IND: "TODO"
    },
    outgoingCall: {
        EN: "Outgoing calls",
        FR: "Appels sortants",
        SPN: "Llamada saliente",
        DE: "Ausgehender Anruf",
        IT: "Chiamata in uscita",
        DA: "Udgående opkald",
        AR: "مكالمة صادرة ",
        PT: "chamadas de saida",
        RO: "TODO",
        IND: "TODO"
    },
    misc: {
        EN: "Misc",
        FR: "Divers",
        SPN: "Varios",
        DE: "Sonstiges",
        IT: "Varie",
        DA: "Diverse",
        AR: "متفرقات ",
        PT: "varios",
        RO: "TODO",
        IND: "TODO"
    },
    messageWaitingIndicator: {
        EN: "Message Waiting Indicator",
        FR: "Indicateur de message en attente",
        SPN: "Indicador de mensaje en espera",
        DE: "Anzeige wartender Nachrichten",
        IT: "Indicatore di messaggio in attesa",
        DA: "Indikator for ventende besked",
        AR: "مؤشر رسالة الانتظار ",
        PT: "indicador de espera de mensagem",
        RO: "TODO",
        IND: "TODO"
    },
    menuMaintenanceResets: {
        EN: "Resets",
        FR: "Réinitialisation",
        SPN: "Restablecimientos",
        DE: "Resets",
        IT: "Ripristina",
        DA: "Nulstillinger",
        AR: "إعادة ضبط ",
        PT: "resets",
        RO: "TODO",
        IND: "TODO"
    },
    menuMaintenanceBkp: {
        EN: "Backup & Restore",
        FR: "Sauvegarde & Restauration",
        SPN: "Copia de seguridad y restauración",
        DE: "Backup & Wiederherstellung",
        IT: "Backup e ripristino",
        DA: "Tag backup, og gendan",
        AR: "النسخ الاحتياطي والاستعادة ",
        PT: "backup & restore",
        RO: "TODO",
        IND: "TODO"
    },
    menuMaintenanceSoftUpdate: {
        EN: "Software Update",
        FR: "Mise à jour",
        SPN: "Actualización de software",
        DE: "Software-Update",
        IT: "Aggiornamento Software",
        DA: "Softwareopdatering",
        AR: "تحديث البرامج",
        PT: "update de software",
        RO: "TODO",
        IND: "TODO"
    },
    menuMaintenanceInternetTime: {
        EN: "Internet Time (NTP)",
        FR: "Heure du réseau (NTP)",
        SPN: "Hora de Internet (NTP)",
        DE: "Zeitsynchronisation (NTP)",
        IT: "Tempo di internet (NTP)",
        DA: "Internettid (NTP)",
        AR: "وقت الإنترنت (NTP)",
        PT: "tempo de internet (NTP)",
        RO: "TODO",
        IND: "TODO"
    },
    menuMaintenanceLogs: {
        EN: "Logs",
        FR: "Logs",
        SPN: "Registros",
        DE: "Logs",
        IT: "Logs",
        DA: "Logs",
        AR: "السجلات ",
        PT: "registros",
        RO: "TODO",
        IND: "TODO"
    },
    menuMaintenanceInternetUtils: {
        EN: "Internet Utilities",
        FR: "Utilitaires Internet",
        SPN: "Utilidades Internet",
        DE: "Internet-Tools",
        IT: "Internet Utilities",
        DA: "Internetfunktioner",
        AR: "مرافق الإنترنت ",
        PT: "utilidades de internet",
        RO: "TODO",
        IND: "TODO"
    },
    privateUrlFilteringNote: {
        EN: "Restrictions on Web sites will apply to all connected devices.",
        FR: "La restriction sur les sites Internet s'appliquera à tous les appareils connectés.",
        SPN: "La restricción en los sitios web se aplicará a todos los dispositivos conectados.",
        DE: "Beschränkung für Internetseiten gilt für alle mit dem Heimnetz verbundenen Geräte.",
        IT: "La restrizione del sito si applicherà a tutti i dispositivi collegati.",
        DA: "Hjemmesidebegrænsninger vil gælde for alle tilsluttede enheder.",
        AR: "سيكون تقييد الوصول إلى مواقع الإنترنت قابل للتطبيق في جميع الأجهزة.",
        PT: "restricçoes ás webs aplicam a todos os dispositivos ligados",
        RO: "TODO",
        IND: "TODO"
    },
    sProvider: {
        EN: "Provider",
        FR: "Fournisseur",
        SPN: "Proveedor",
        DE: "Provider",
        IT: "Provider",
        DA: "Udbyder",
        AR: "مقدِّم خدمة",
        PT: "fornecedor",
        RO: "TODO",
        IND: "TODO"
    },
    sTypeOfUpgrade: {
        EN: "Type of upgrade:",
        FR: "Type de mise à jour:",
        SPN: "Tipo de actualización:",
        DE: "Art des Upgrades",
        IT: "Tipo di aggiornamento:",
        DA: "Opgraderingstype:",
        AR: "نوع الترقية:",
        PT: "tipo de upgrade:",
        RO: "TODO",
        IND: "TODO"
    },
    sCustomName: {
        EN: "Custom Name",
        FR: "Nom personnalisé",
        SPN: "Nombre personalizado",
        DE: "Benutzerdefinierter Name",
        IT: "Nome personalizzato",
        DA: "Tilpas navn",
        AR: "اسم مخصص",
        PT: "nome personalizado",
        RO: "TODO",
        IND: "TODO"
    },
    fileSharing: {
        EN: "File Sharing",
        FR: "Partage de fichier",
        SPN: "Uso compartido de archivos",
        DE: "Datenaustausch",
        IT: "Condivisione file",
        DA: "Fildeling",
        AR: "مشاركة الملفات",
        PT: "ficheiro partilhado",
        RO: "TODO",
        IND: "TODO"
    },
    weak: {
        EN: "weak",
        FR: "faible",
        SPN: "Semana",
        DE: "Schwach",
        IT: "debole",
        DA: "Svag",
        AR: "ضعيفة",
        PT: "fraco",
        RO: "TODO",
        IND: "TODO"
    },
    fair: {
        EN: "fair",
        FR: "correct",
        SPN: "correcto",
        DE: "fair",
        IT: "chiaro",
        DA: "nogenlunde",
        AR: "وسط",
        PT: "normal",
        RO: "TODO",
        IND: "TODO"
    },
    strong: {
        EN: "Strong",
        FR: "fort",
        SPN: "fuerte",
        DE: "Stark",
        IT: "forte",
        DA: "Stærk",
        AR: "قوية",
        PT: "forte",
        RO: "TODO",
        IND: "TODO"
    },
    weak_strength: {
        EN: "weak",
        FR: "TODO",
        SPN: "Debil",
        DE: "Schwach",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "fraco",
        RO: "Slab",
        IND: "TODO"
    },
    fair_strength: {
        EN: "fair",
        FR: "TODO",
        SPN: "Limpio",
        DE: "mittel",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "normal",
        RO: "Suficient",
        IND: "TODO"
    },
    good_strength: {
        EN: "good",
        FR: "TODO",
        SPN: "Bueno",
        DE: "gut",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "bom",
        RO: "bun",
        IND: "TODO"
    },
    strong_strength: {
        EN: "Strong",
        FR: "TODO",
        SPN: "Fuerte",
        DE: "Sehr gut",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "forte",
        RO: "puternic",
        IND: "TODO"
    },
    statusStatistics: {
        EN: "Status & Statistics",
        FR: "Statut & Statistiques",
        SPN: "Estado y estadísticas",
        DE: "Status und Statistiken",
        IT: "Stato e statistiche",
        DA: "Status og statistik",
        AR: "الحالة والإحصاءات",
        PT: "estado & estatisticas",
        RO: "TODO",
        IND: "TODO"
    },
    upnpWarning: {
        EN: "This option can create a risk for the security of your network.",
        FR: "Cette option peut causer un risque pour la sécurité de votre réseau.",
        SPN: "Esta opción puede poner en riesgo la seguridad de su red.",
        DE: "Diese Option kann ein Risiko für die Sicherheit Ihres Netzwerks darstellen.",
        IT: "Questa opzione può mettere a rischio la sicurezza della rete.",
        DA: "Denne valgmulighed kan skabe en risiko for dit netværks sikkerhed.",
        AR: "يمكن أن يولِّدَ هذا الخيار مخاطرةً أمنية لشبكتك.",
        PT: "esta opçao pode crear um risco de segurança na sua rede.",
        RO: "TODO",
        IND: "TODO"
    },
    upnpWarningDisabled: {
        EN: "Enable or disable UPnP IGD can cause lost of some rules and some services may not work anymore.",
        FR: "TODO",
        SPN: "Habilitar o deshabilitar UPnP IGD puede causar la perdida de alguna reglas y algunos servicios pueden dejar de funcionar",
        DE: "Ein- oder Ausschalten von UPnP IGD kann Einschränkungen auf die Verfügbarkeit einiger Dienste bewirken.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Activarea sau dezactivare UPnP IGD poate provoca pierderea unor reguli sau nefunctionarea unor servicii.",
        IND: "TODO"
    },
    delegatedPrefix: {
        EN: "Delegated Prefix",
        FR: "Préfixe délégué",
        SPN: "Prefijo delegado",
        DE: "Besondere Vorwahl",
        IT: "Delegato Prefisso",
        DA: "Delegeret præfiks",
        AR: "سابقة عنوان معتمَدة",
        PT: "prefixo delegado",
        RO: "TODO",
        IND: "TODO"
    },
    lanIPv6Address: {
        EN: "LAN IPv6 Address",
        FR: "Adresse LAN IPv6",
        SPN: "Dirección LAN IPv6",
        DE: "LAN IPv6-Adresse",
        IT: "Indirizzo Lan IPv6",
        DA: "Lan IPv6-adresse",
        AR: "عنوان Lan IPv6",
        PT: "endereço de Lan IPv6",
        RO: "TODO",
        IND: "TODO"
    },
    wanIPv6Address: {
        EN: "Wan IPv6 Address",
        FR: "Adresse WAN IPv6",
        SPN: "Dirección WAN IPv6",
        DE: "WAN IPv6-Adresse",
        IT: "Indirizzo Wan IPv6",
        DA: "Wan IPv6-adresse",
        AR: "عنوان Wan IPv6",
        PT: "endereço de Wan IPv6",
        RO: "TODO",
        IND: "TODO"
    },
    wanSettingsDefaultGateway: {
        EN: "IPv6 Default Gateway: ",
        FR: "TODO",
        SPN: "Gateway por defecto de IPv6",
        DE: "IPv6-Standardgateway:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Portal IPv6 implicit:",
        IND: "TODO"
    },
    wanSettingsIpv4DefaultGateway: {
        EN: "IPv4 Default Gateway: ",
        FR: "TODO",
        SPN: "Gateway por defecto de IPv4",
        DE: "IPv4-Standardgateway:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Portal IPv4 implicit:",
        IND: "TODO"
    },
    wanSettingsLeaseTime: {
        EN: "IPv6 Lease Time: ",
        FR: "TODO",
        SPN: "Tiempo de cesion IPv6",
        DE: "IPv6-Lease Time:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Timp de operare IPv6:",
        IND: "TODO"
    },
    wanSettingsLeaseExpire: {
        EN: "IPv6 Lease Expire: ",
        FR: "TODO",
        SPN: "Tiempo para expirar IPv6",
        DE: "IPv6-Lease ablaufen:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Timp de expirare IPv6:",
        IND: "TODO"
    },
    wanSettingsIpv4LeaseExpire: {
        EN: "IPv4 Lease Expire: ",
        FR: "TODO",
        SPN: "Tiempo para expirar IPv4",
        DE: "IPv4-Lease ablaufen:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Timp de expirare IPv4:",
        IND: "TODO"
    },
    wanSettingsDnsServer: {
        EN: "IPv6 DNS Server: ",
        FR: "TODO",
        SPN: "Servidor DNS IPv6",
        DE: "IPv6-DNS-Server:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Server DNS IPv6",
        IND: "TODO"
    },
    wanSettingsDsliteStatus: {
        EN: "IPv6 DS-Lite Status: ",
        FR: "TODO",
        SPN: "Estado DS-Lite IPv6",
        DE: "IPv6 DS-Lite Status:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Status conexiune IPv6 DS-Lite:",
        IND: "TODO"
    },
    wanSettingsDsliteAftr: {
        EN: "DS-Lite AFTR FQDN: ",
        FR: "TODO",
        SPN: "DS-Lite AFTR FQDN: ",
        DE: "DS-Lite AFTR FQDN:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "DS-Lite AFTR FQDN: ",
        IND: "TODO"
    },
    wanSettingsDsliteAftrAddress: {
        EN: "DS-Lite AFTR Address: ",
        FR: "TODO",
        SPN: "DireccionDS-Lite AFTR",
        DE: "DS-Lite AFTR-Adresse:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Adresa DS-Lite AFTR:",
        IND: "TODO"
    },
    wanSettingsIPv4DnsServers: {
        EN: "IPv4 DNS Servers: ",
        FR: "TODO",
        SPN: "Servidor DNS IPv4",
        DE: "IPv4-DNS-Server:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Server DNS IPv4",
        IND: "TODO"
    },
    wanSettingsIpv4LeaseTime: {
        EN: "IPv4 Lease Time: ",
        FR: "TODO",
        SPN: "Tiempo de cesion IPv4",
        DE: "IPv4-Lease Time:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Timp de operare IPv4:",
        IND: "TODO"
    },
    firstIPv6DNS: {
        EN: "First IPv6 DNS Server",
        FR: "Serveur DNS IPv6 primaire",
        SPN: "Servidor DNS IPv6 primario",
        DE: "Erster IPv6-DNS-Server",
        IT: "Server Prima DNS IPv6",
        DA: "Første IPv6 DNS-server",
        AR: "أول مخدِّم IPv6 DNS",
        PT: "primeiro servidor DNS IPv6",
        RO: "TODO",
        IND: "TODO"
    },
    secondIPv6DNS: {
        EN: "Second IPv6 DNS Server",
        FR: "Serveur DNS IPv6 secondaire",
        SPN: "Servidor DNS IPv6 secundario",
        DE: "Zweiter IPv6-DNS-Server",
        IT: "Server Seconda DNS IPv6",
        DA: "Anden IPv6 DNS-server",
        AR: "ثاني مخدِّم IPv6 DNS",
        PT: "Segundo servidor DNS IPv6",
        RO: "TODO",
        IND: "TODO"
    },
    ipv6Enable: {
        EN: "Click here to enable IPv6",
        FR: "Cliquez ici pour activer l'IPv6",
        SPN: "Click para habilitar IPv6",
        DE: "Hier klicken, um IPv6 zu aktivieren",
        IT: "Premere qui per attivare l'IPv6",
        DA: "Klik her for at aktivere IPv6",
        AR: "TODO",
        PT: "pressione aquí para habilitar IPv6",
        RO: "Apasati aici pentru activare IPv6",
        IND: "TODO"
    },
    ipv6Prefix: {
        EN: "In IPv6 networking, prefix delegation is used to assign a network address prefix to a user site, it configures the user's gateway with the prefix to be used for the LAN.",
        FR: "En IPv6, la délégation de préfixe est utilisée pour assigner un préfixe d'adresse réseau à un site, elle configure un préfixe d'adresse pour le réseau local du modem.",
        SPN: "En las funciones de red IPv6, la delegación de prefijo se utiliza para asignar un prefijo de dirección de red a un sitio de usuario. Esta configura la puerta de enlace del usuario con el prefijo que utilizará la LAN.",
        DE: "Beim IPv6-Networking wird die Präfix-Delegierung verwendet werden, um einem Benutzerstandort ein Präfix der Netzwerkadresse zuzuordnen. Es konfiguriert das Gateway des Benutzers mit dem Präfix, das für das LAN verwendet werden soll.",
        IT: "Nelle reti IPv6, la delegazione del prefisso viene utilizzata per assegnare un prefisso di indirizzo di rete di un utente del sito, si configura il gateway per l'utente con il prefisso da utilizzare per la LAN.",
        DA: "I IPv6-netværk anvendes præfiksdelegering til at tildele en netværksadresse til en brugerside ved at konfigurere brugerens gateway til det præfiks, der anvendes til LAN'et.",
        AR: "في شبكات IPv6، تُستخدَم سابقة العنوان المعتمَدة لتخصيص سابقةِ عنوانٍ شبكي لموقع مستخدِم، تقوم بتكوين بوابة هذا المستخدِم لاستخدامها في الشبكة المحلية.",
        PT: "Em rede de IPv6, a delegaçao de prefixo é usada para assingnar o prefixo de endereço da rede ao site de utilizador, configura o gateway do utilizador com o prefixo a ser usado para a LAN.",
        RO: "TODO",
        IND: "TODO"
    },
    ipv6Lan: {
        EN: "This is the gateway's LAN IPv6 address",
        FR: "Ceci est l'adresse IPv6 du modem sur le réseau local",
        SPN: "Esta es la dirección IPv6 del módem en la red local",
        DE: "Dies ist die LAN IPv6-Adresse des Gateways",
        IT: "Questo è l'indirizzo LAN IPv6 del gateway",
        DA: "Dette er gatewayens LAN IPv6-adresse",
        AR: "هذا هو عنوان LAN IPv6 للبوابة",
        PT: "este é o endereço de LAN IPv6 do gateway",
        RO: "TODO",
        IND: "TODO"
    },
    ipv6Wan: {
        EN: "This is the external IPv6 address",
        FR: "Ceci est l'adresse IPv6 externe",
        SPN: "Esta es la dirección IPv6 externa",
        DE: "Dies ist die externe IPv6-Adresse",
        IT: "Questo è l'indirizzo IPv6 esterno",
        DA: "Dette er den eksterne IPv6-adresse",
        AR: "هذا هو عنوان IPv6 الخارجي",
        PT: "este é o endereço IPv6 externo",
        RO: "TODO",
        IND: "TODO"
    },
    wanIpv6DefaultGatewayTip: {
        EN: "This is the IPv6 Default Gateway",
        FR: "TODO",
        SPN: "Este es el gateway por defecto de IPv6",
        DE: "Standard-Adresse des IPv6-Gateways",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta este setarea implicita a portalului IPv6",
        IND: "TODO"
    },
    wanIpv6LeaseTimeTip: {
        EN: "This is the IPv6 Lease Time",
        FR: "TODO",
        SPN: "Este es el tiempo de cesion de IPv6",
        DE: "IPv6-Lease auf dem öffentlichen (WAN-)Interface",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Acesta este timpul de operare IPv6",
        IND: "TODO"
    },
    wanIpv6LeaseExpireTip: {
        EN: "This is the IPv6 Lease Expire",
        FR: "TODO",
        SPN: "Este es el tiempo de expiracion de IPv6",
        DE: "Ablaufzeit der öffentlichen IPv6-Adresse",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Acesta este timpul de expirare IPv6",
        IND: "TODO"
    },
    wanIpv6DnsServerTip: {
        EN: "This is the IPv6 DNS Server",
        FR: "TODO",
        SPN: "Este es el servidor DNS de IPv6",
        DE: "Genutzter IPv6-DNS",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Acesta este serverul DNS IPv6",
        IND: "TODO"
    },
    wanDsliteStatusTip: {
        EN: "This is the IPv6 DS-Lite Status",
        FR: "TODO",
        SPN: "Este es el estado de DS-Lite IPv6",
        DE: "Status der DS-Lite/IPv6-CGN Betriebsart",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Acesta este statusul IPv6 DS-Lite",
        IND: "TODO"
    },
    wanDsliteAftrTip: {
        EN: "This is the DS-Lite AFTR FQDN",
        FR: "TODO",
        SPN: "Este es el DS-Lite AFTR FQDN",
        DE: "DNS-Namen (FQDN) des AddressFamilyTransition-Routers (AFTR)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Acesta este DS-Lite AFTR FQDN",
        IND: "TODO"
    },
    wanDsliteAftrAddressTip: {
        EN: "This is the DS-Lite AFTR Address",
        FR: "TODO",
        SPN: "Esta es el direccion de DS-Lite AFTR",
        DE: "IP-Adresse (IPv6) des AdressFamilyTransition-Routers (AFTR)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta este adresa DS-Lite AFTR",
        IND: "TODO"
    },
    ipv6DNS1: {
        EN: "This is the first IPv6 DNS Server",
        FR: "Ceci est le serveur DNS IPv6 primaire",
        SPN: "Este es el servidor DNS IPv6 primario",
        DE: "Dies ist der erste IPv6-DNS-Server",
        IT: "Questo è il primo server DNS IPv6",
        DA: "Dette er den første IPv6 DNS-server",
        AR: "هذا هو أول مخدِّم IPv6 DNS",
        PT: "este é o primeiro servidor DNS IPv6",
        RO: "TODO",
        IND: "TODO"
    },
    ipv6DNS2: {
        EN: "This is the second IPv6 DNS Server",
        FR: "Ceci est le serveur DNS IPv6 secondaire",
        SPN: "Este es el servidor DNS IPv6 secundario",
        DE: "Dies ist der zweite IPv6-DNS-Server",
        IT: "Questo è il secondo server DNS IPv6",
        DA: "Dette er den anden IPv6 DNS-server",
        AR: "هذا هو ثاني مخدِّم IPv6 DNS",
        PT: "este é o segundo servidor DNS IPv6",
        RO: "TODO",
        IND: "TODO"
    },
    usbDefaultDeviceLabel: {
        EN: "Storage device on port ",
        FR: "Périph. de stockage sur port ",
        SPN: "Dispositivo de almacenamiento en puerto ",
        DE: "Speichergerät an Port ",
        IT: "Dispositivo di archiviazione sulla porta",
        DA: "Hukommelsesenhed i port ",
        AR: "جهاز التخزين على المنفذ",
        PT: "dispositivo de armazenamento na porta",
        RO: "TODO",
        IND: "TODO"
    },
    usbControl: {
        EN: "USB Control",
        FR: "TODO",
        SPN: "Control USB",
        DE: "USB Allgemein",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Control USB",
        IND: "TODO"
    },
    usbNetworkStorage: {
        EN: "Network Storage",
        FR: "TODO",
        SPN: "Almacenamiento de red",
        DE: "Netzwerkspeicher",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    workgroupName: {
        EN: "Workgroup Name",
        FR: "TODO",
        SPN: "Nombre del grupo de trabajo",
        DE: "Arbeitsgruppenname",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    networkStorageDescription: {
        EN: "This page allows configuration of the USB network storage shared over the network.",
        FR: "TODO",
        SPN: "Esta pagina permite la configuracion de un dispositivo USB para compartir sobre la red",
        DE: "Auf dieser Seite können Sie die über das Netzwerk freigegebenen USB-Geräte steuern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    usbControlDescription: {
        EN: "This page allows configuration of the USB network storage shared over the network",
        FR: "TODO",
        SPN: "Esta pagina permite la configuracion de un dispositivo USB para compartir sobre la red",
        DE: "Auf dieser Seite können Sie die über das Netzwerk freigegebenen USB-Geräte steuern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta pagina permite configurarea mediului de stocare USB distribuit  in retea ",
        IND: "TODO"
    },
    "3gKeyReference": {
        EN: "3G/LTE Key Reference",
        FR: "Référence clé 3G/LTE",
        SPN: "Referencia clave 3G/LTE",
        DE: "3G/LTE-Tastenübersicht",
        IT: "Chiave di riferimento 3G/LTE",
        DA: "3G/4G-nøglereference",
        AR: "مرجع أساس 3G/LTE",
        PT: "referencia de chave 3G/LTE",
        RO: "TODO",
        IND: "TODO"
    },
    "3gSignalLevel": {
        EN: "Signal level",
        FR: "Niveau de signal",
        SPN: "Nivel de señal",
        DE: "Signalpegel",
        IT: "Livello del segnale",
        DA: "Signalniveau",
        AR: "مستوى الإشارة",
        PT: "nivel de sinal",
        RO: "TODO",
        IND: "TODO"
    },
    "3gPinCode": {
        EN: "Pin Code",
        FR: "Code PIN",
        SPN: "Código PIN",
        DE: "PIN",
        IT: "Codice Pin",
        DA: "Pinkode",
        AR: "رقم التعريف الشخصي ",
        PT: "codigo Pin",
        RO: "TODO",
        IND: "TODO"
    },
    "3gAdvanceConf": {
        EN: "Advanced Configuration",
        FR: "Configuration avancée",
        SPN: "Configuración avanzada",
        DE: "Erweiterte Konfiguration",
        IT: "Configurazione avanzata",
        DA: "Avanceret konfiguration",
        AR: "TODO",
        PT: "configuraçao avançada",
        RO: "Configurari avansate",
        IND: "TODO"
    },
    "3gDcTime": {
        EN: "Internet disconnection time (in minutes)",
        FR: "Durée de la déconnexion Internet (em minutes)",
        SPN: "Duración de la desconexión a Internet (en minutos)",
        DE: "Internet-Trennzeit (in Minuten)",
        IT: "Tempo di disconnessione Internet (in minuti)",
        DA: "Internetforbindelsestid (i minutter)",
        AR: "زمن فصل الإنترنت (بالدقائق)",
        PT: "tempo de desconexao de internet (em minutos)",
        RO: "TODO",
        IND: "TODO"
    },
    "3gPukCode": {
        EN: "PUK Code",
        FR: "Code PUK",
        SPN: "Código PUK",
        DE: "PUK-Code",
        IT: "Codice PUK",
        DA: "PUK-kode",
        AR: "مفتاح إلغاء تأمين رقم التعريف الشخصي (PUK)",
        PT: "codigo PUK",
        RO: "TODO",
        IND: "TODO"
    },
    "3gProxy": {
        EN: "Proxy",
        FR: "TODO",
        SPN: "Proxy",
        DE: "Proxy",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Proxy",
        IND: "TODO"
    },
    mtStatus: {
        EN: "Modem Status",
        FR: "Etat du modem",
        SPN: "Estado del modem",
        DE: "Modem-Status",
        IT: "Stato della rete mobile",
        DA: "Modem status",
        AR: "TODO",
        PT: "TODO",
        RO: "Stare MT",
        IND: "TODO"
    },
    "3gMobTechStatus": {
        EN: "Mobile Network Technology",
        FR: "Type de réseau mobile",
        SPN: "Tecnologia de red movil",
        DE: "Mobilfunktechnologie",
        IT: "Connessione alla rete mobile",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Stare Tehnologie mobila",
        IND: "TODO"
    },
    "3gDongleManufacturer": {
        EN: "Dongle Manufacturer",
        FR: "Fabricant de la clé",
        SPN: "Fabricante de Dongle",
        DE: "Dongle-Hersteller",
        IT: "Costruttore della chiavetta Internet",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Producator Modem USB",
        IND: "TODO"
    },
    "3gDongleModel": {
        EN: "Dongle Model",
        FR: "Modèle de la clé",
        SPN: "Modelo de dongle",
        DE: "Dongle-Modell",
        IT: "Modello della chiavetta Internet",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Model Modem USB",
        IND: "TODO"
    },
    "3gIpServer": {
        EN: "IP Server",
        FR: "Serveur IP",
        SPN: "Servidor IP",
        DE: "IP-Server",
        IT: "IP del server",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Server IP",
        IND: "TODO"
    },
    "3gInternetAvailability": {
        EN: "Internet Availability",
        FR: "TODO",
        SPN: "Disponibilidad de Internet",
        DE: "Internet-Verfügbarkeit",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Disponibilitate internet",
        IND: "TODO"
    },
    notAvailable: {
        EN: "Not available",
        FR: "TODO",
        SPN: "No disponible",
        DE: "Nicht verfügbar",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Indisponibil",
        IND: "TODO"
    },
    "3gTip1": {
        EN: "Enable and configure here 3G/LTE backup feature that will replace your xDSL/WAN access in case of issue.",
        FR: "Activer et configurer ici la connexion de secours 3G/LTE qui remplacera votre accès xDSL/WAN em cas de problème. ",
        SPN: "Activar y configurar aquí la conexión de recuperación 3G/LTE que sustituirá su acceso xDSL/WAN en caso de problemas.",
        DE: "Aktivieren und konfigurieren Sie hier die 3G/LTE-Backup-Funktion, die Ihren xDSL/WAN-Zugang im Notfall ersetzen wird.",
        IT: "Attiva e configura qui la funzione di backup 3G/LTE che andrà a sostituire l'accesso xDSL/WAN in caso di emissione.",
        DA: "Her kan du aktivere og konfigurere 3G/4G-backupfunktionen, som vil erstatte din xDSL/WAN-adgang i tilfælde af problemer.",
        AR: "هاهنا تمكين وتكوين ميزة احتياط 3G/LTE التي ستحل محل منفذ xDSL/WAN عند حدوث مشكلةٍ ما.",
        PT: "habilite e configure aquí o backup 3G/LTE que vai substituir o seu acesso xDSL/WAN em caso de problema.",
        RO: "TODO",
        IND: "TODO"
    },
    "3gTip2": {
        EN: "This is the service status",
        FR: "Statut du service.",
        SPN: "Estado del servicio",
        DE: "Dies ist der Service-Status",
        IT: "Questo è lo stato del servizio",
        DA: "Dette er status for tjenesten",
        AR: "هذه هي حالة الخدمة",
        PT: "este é o estado do serviço",
        RO: "TODO",
        IND: "TODO"
    },
    "3gTip3": {
        EN: "This is the up time of the service",
        FR: "Temps de fonctionnement du service.",
        SPN: "Tiempo de funcionamiento del servicio",
        DE: "Dies ist die Laufzeit des Dienstes",
        IT: "Questo è il tempo di servizio",
        DA: "Dette er tjenestens oppetid",
        AR: "هذا هو زمن بقاء الخدمة",
        PT: "este é o tempo de actividade do serviço",
        RO: "TODO",
        IND: "TODO"
    },
    "3gTip4": {
        EN: "This is the dongle manufacturer",
        FR: "Fabricant de la clé",
        SPN: "Fabricante de la clave",
        DE: "Dies ist der Dongle-Hersteller",
        IT: "Questo è il produttore dongle",
        DA: "Dette er donglens producent",
        AR: "هذه هي الشركة الصانعة للمفتاح (الدونغل)",
        PT: "este é o fabricante do dongle",
        RO: "TODO",
        IND: "TODO"
    },
    "3gTip5": {
        EN: "This is the dongle power level in dB",
        FR: "Niveau de signal de la clé",
        SPN: "Nivel de señal de la clave en dB",
        DE: "Dies ist der Leistungspegel des Dongles in dB",
        IT: "Questo è il livello di potenza dongle in dB",
        DA: "Dette er donglens strømniveau i dB",
        AR: "هذا هو مستوى استطاعة المفتاح بالديسيبل",
        PT: "este é o nivel de potencia do dongle em dB",
        RO: "TODO",
        IND: "TODO"
    },
    "3gTip6": {
        EN: "You can edit the 3G Adapter PIN Code",
        FR: "Editez ici le PIN code de la clé 3G",
        SPN: "Edite aquí el Código PIN de la clave 3G",
        DE: "Sie können den PIN-Code des 3G-Adapters ändern",
        IT: "Puoi modificare il codice PIN adattatore 3G",
        DA: "Du kan redigere 3G-adapterens pinkode",
        AR: "يمكنك تحرير رمز التعريف الشخصي لمهايئ 3G",
        PT: "pode editar o codigo PIN do adaptador 3G",
        RO: "TODO",
        IND: "TODO"
    },
    "3gTip7": {
        EN: "Enter here the  Access Point Name provided by your operator",
        FR: "Entrez ici le nom du point d'accès fourni par votre opérateur",
        SPN: "Introduzca aquí el nombre del punto de acceso que le haya dado el operador",
        DE: "Geben Sie hier den Namen des von Ihrem Netzbetreiber bereitgestellten Access Point ein",
        IT: "Inserisci qui il nome del punto di accesso fornito dall'operatore",
        DA: "Her skal du indtaste navnet på det adgangspunkt, som er leveret af din udbyder",
        AR: "أدخِل هنا اسمَ نقطة الدخول المعطَى لك من مشغِّل الخدمة",
        PT: "escreva aquí o nome do fornecedor do access pointo do seu operador",
        RO: "TODO",
        IND: "TODO"
    },
    "3gTip11": {
        EN: "Display advanced options",
        FR: "Afficher les options avancées",
        SPN: "Mostrar opciones avanzadas",
        DE: "Anzeige der erweiterten Optionen",
        IT: "Opzioni di visualizzazione avanzate",
        DA: "Vis avancerede muligheder",
        AR: "عرض الخيارات المتقدمة",
        PT: "mostre as opçoes avançadas",
        RO: "TODO",
        IND: "TODO"
    },
    "3gTip12": {
        EN: "Wait time in minute before enabling 3G/LTE rescue connection. This time is decremented after a loss of the  main Internet link. ",
        FR: "Temps d'attente em minute avant l'activation de la connexion de secours 3G/LTE. Ce temps est décompté à partir de la perte de la connexion internet principale.",
        SPN: "Tiempo de espera en minutos antes de activar la conexión de recuperación 3G/LTE. Este tiempo se descontará a partir de la pérdida de conexión a Internet. ",
        DE: "Wartezeit in Minuten vor der Aktivierung der 3G/LTE-Notfallverbindung. Nach einem Verlust der Hauptinternetverbindung ist diese Zeit abgezogen. ",
        IT: "Tempo di attesa in minuti prima di abilitare la connessione di salvataggio 3G / LTE. Questo tempo viene decrementato dopo una perdita del collegamento principale di Internet.",
        DA: "Ventetid i minutter før aktivering af en 3G/4G-nødforbindelse. Denne ventetid formindskes, når et hovedinternetlink mistes. ",
        AR: "زمن الانتظار بالدقائق قبل تمكين وصلة الإنقاذ 3G/LTE. يمكن إنقاص هذا الزمن بعد فقدان وصلة الإنترنت الرئيسية. ",
        PT: "tempo de espera em minutos antes de habilitar a ligaçao de reserva 3G/LTE. Este tempo desconta a partir do momento da perda do sinal",
        RO: "TODO",
        IND: "TODO"
    },
    "3gTip13": {
        EN: "This is your PIN Unlock Key, which is used to reset your PIN Code.",
        FR: "Ceci est votre code PIN de déblocage qui est utilisé pour réinitialiser votre code PIN.",
        SPN: "Este es su código PIN de desbloqueo utilizado para restablecer su código PIN.",
        DE: "Das ist Ihr PIN-Entsperrcode, der verwendet wird, um Ihre PIN zurückzusetzen.",
        IT: "Questo è il PIN Unlock Key, che viene utilizzato per reimpostare il codice PIN.",
        DA: "Dette er din oplåsnings-pinkode (PUK), som anvendes til at nulstille din pinkode.",
        AR: "هذا هو مفتاح إلغاء تأمين رقم التعريف الشخصي الخاص بك، الذي يُستخدَم لإعادة تعيين هذا الرقم.",
        PT: "este é o seu PIN, que é usado para resetear o seu codigo PIN.",
        RO: "TODO",
        IND: "TODO"
    },
    "3gTip14": {
        EN: "You can check the Mobile Technology Status",
        FR: "TODO",
        SPN: "Puede chequear el estado de la tecnologia movil",
        DE: "Anzeige der verwendeten Mobilfunktechnologie",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti verifica starea Tehnologiei mobile",
        IND: "TODO"
    },
    "3gTip15": {
        EN: "You can edit the IP server",
        FR: "TODO",
        SPN: "Puede editar la IP del servidor",
        DE: "Hier können Sie die IP-Adresse des Servers ändern",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti edita serverul IP",
        IND: "TODO"
    },
    "3gTip16": {
        EN: "You can check the Internet Availability",
        FR: "TODO",
        SPN: "Puede chequear la disponibilidad de Internet",
        DE: "Hier sehen Sie, ob eine Verbindung zum Internet hergestellt werden konnte",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti verifica disponibilitea internetului",
        IND: "TODO"
    },
    "3gTip17": {
        EN: "You can check the Dongle Model",
        FR: "TODO",
        SPN: "Puede revisar el modelo del dongle",
        DE: "Anzeige des angeschlossenen Mobilfunk-Dongles",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti verifica modelul Modemului USB",
        IND: "TODO"
    },
    "3gTip18": {
        EN: "You can change the Proxy",
        FR: "TODO",
        SPN: "Puede cambiar el Proxy",
        DE: "Hier können Sie den verwendeten Proxy ändern",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti schimba Proxy-ul",
        IND: "TODO"
    },
    pinCodeError: {
        EN: "Pin Code must be a number between 0000 and 9999",
        FR: "Le PIN code doit être compris entre 0000 et 9999",
        SPN: "El código PIN debe ser un número comprendido entre 0000 y 9999",
        DE: "PIN muss eine Zahl zwischen 0000 und 9999 sein",
        IT: "Il codice PIN deve essere un numero compreso tra 0000 e 9999",
        DA: "Pinkoden skal være et tal mellem 0000 og 9999",
        AR: "يجب أن يكونَ رقم التعريف الشخصي عدداً بين 0000 وبين 9999",
        PT: "o Codigo PIN debe ser um numero entre 0000 e 9999",
        RO: "TODO",
        IND: "TODO"
    },
    pukCodeError: {
        EN: "PUK Code must be a number between 00000000 and 99999999",
        FR: "Le code PUK doit être compris entre 00000000 et 99999999",
        SPN: "El código PUK debe ser un número comprendido entre 00000000 y 99999999",
        DE: "Der PUK-Code muss eine Zahl zwischen 00000000 und 99999999 sein",
        IT: "Il codice PUK deve essere un numero compreso tra 00000000 e 99999999",
        DA: "PUK-koden skal være et tal mellem 00000000 og 99999999",
        AR: "يجب أن يكونَ مفتاح إلغاء تأمين رقم التعريف الشخصي بين 00000000 وبين 99999999",
        PT: "Codigo PUK debe ser um numero entre 00000000 e 99999999",
        RO: "TODO",
        IND: "TODO"
    },
    dcTimeError: {
        EN: "Wait time after disconnection must be greater than 1 minute",
        FR: "Le temps d'attente suite a une déconnection doit être supérieur à 1 minute.",
        SPN: "El tiempo de espera tras una desconexión debe ser superior a 1 minuto",
        DE: "Wartezeit nach dem Abschalten muss größer als 1 Minute sein",
        IT: "Il tempo di attesa dopo la disconnessione deve essere maggiore di 1 minuto",
        DA: "Ventetiden efter frakobling skal være større end 1 minut",
        AR: "يجب أن يكونَ زمن الانتظار بعد الفصل أكبر من 1 دقيقة.",
        PT: "Tempo de espera depois de desligar debe ser maior de 1 minuto",
        RO: "TODO",
        IND: "TODO"
    },
    pbImportSummary: {
        EN: "Import Summary",
        FR: "Compte-rendu de l'import",
        SPN: "Resumen de importación",
        DE: "Zusammenfassung des Imports",
        IT: "Riepilogo importazioni",
        DA: "Importopsummering",
        AR: "خلاصة جهات الاتصال المستوردة",
        PT: "resumo da importaçao",
        RO: "TODO",
        IND: "TODO"
    },
    pbTotalFound: {
        EN: "Total contacts found:",
        FR: "Nombre de contacts trouvés:",
        SPN: "Número de contactos encontrados:",
        DE: "Insgesamt gefundene Kontakte:",
        IT: "Totale contatti trovati:",
        DA: "Samlet antal kontakter fundet:",
        AR: "إجمالي ما وُجِد من جهات اتصال:",
        PT: "Total de contactos encontrados:",
        RO: "TODO",
        IND: "TODO"
    },
    pbTotalImported: {
        EN: "Total contacts imported:",
        FR: "Nombre de contacts importés:",
        SPN: "Número de contactos importados:",
        DE: "Insgesamt importierte Kontakte:",
        IT: "Totale contatti importati:",
        DA: "Samlet antal kontakter importeret:",
        AR: "إجمالي ما تم استيراده من جهات اتصال:",
        PT: "Total de contactos importados:",
        RO: "TODO",
        IND: "TODO"
    },
    pbGoogleImport: {
        EN: "Import from Google",
        FR: "Importation depuis Google",
        SPN: "Importar desde Google",
        DE: "Import von Google",
        IT: "Importa da Google",
        DA: "Import fra Google",
        AR: "استيراد من Google",
        PT: "importados desde Google",
        RO: "TODO",
        IND: "TODO"
    },
    MISCELLANEOUS: {
        EN: "Miscellaneous",
        FR: "Divers",
        SPN: "Varios",
        DE: "Verschiedenes",
        IT: "Varie",
        DA: "Diverse",
        AR: "متنوع",
        PT: "varios",
        RO: "TODO",
        IND: "TODO"
    },
    COMPUTER: {
        EN: "Computer",
        FR: "Ordinateur",
        SPN: "Ordenador",
        DE: "Computer",
        IT: "Computer",
        DA: "Computer",
        AR: "TODO",
        PT: "computador",
        RO: "Computer",
        IND: "TODO"
    },
    PHONE: {
        EN: "Phone",
        FR: "Téléphone",
        SPN: "Tel‚fono",
        DE: "Telefon",
        IT: "Telefono",
        DA: "Telefon",
        AR: "TODO",
        PT: "telefone",
        RO: "Telefon",
        IND: "TODO"
    },
    UNIK: {
        EN: "UNIK",
        FR: "UNIK",
        SPN: "UNIK",
        DE: "UNIK",
        IT: "UNIK",
        DA: "UNIK",
        AR: "UNIK",
        PT: "UNIK",
        RO: "TODO",
        IND: "TODO"
    },
    NETWORKACCESSPOINT: {
        EN: "Network Access Point",
        FR: "Point d'accès réseau",
        SPN: "Punto de acceso de red",
        DE: "Netzwerkzugriffspunkt",
        IT: "Network Access Point",
        DA: "Netværksadgangspunkt",
        AR: "نقطة اتصال بالشبكة",
        PT: "ponto de acesso de rede",
        RO: "TODO",
        IND: "TODO"
    },
    AUDIOVIDEO: {
        EN: "Audio & Video",
        FR: "Audio & vidéo",
        SPN: "Audio y Vídeo",
        DE: "Audio & Video",
        IT: "Audio & Video",
        DA: "Audio og video",
        AR: "صوت وفيديو",
        PT: "Audio & Video",
        RO: "TODO",
        IND: "TODO"
    },
    PERIPHERAl: {
        EN: "Peripheral",
        FR: "Périphérique",
        SPN: "Periférico",
        DE: "Peripher",
        IT: "Periferico",
        DA: "Perifere enheder",
        AR: "جهاز محيطي",
        PT: "periferico",
        RO: "TODO",
        IND: "TODO"
    },
    IMAGING: {
        EN: "Imaging",
        FR: "Scanner",
        SPN: "Escáner",
        DE: "Imaging",
        IT: "Imaging",
        DA: "Billeder",
        AR: "تداول صور",
        PT: "imagem",
        RO: "TODO",
        IND: "TODO"
    },
    NOTEBOOKS: {
        EN: "Notebook",
        FR: "Ordinateur portable",
        SPN: "Notebook",
        DE: "Notebook",
        IT: "Notebook",
        DA: "Notebook",
        AR: "TODO",
        PT: "Notebook",
        RO: "Laptop",
        IND: "TODO"
    },
    GAMECONSOLE: {
        EN: "Game Console",
        FR: "Console de jeux",
        SPN: "Consola de juego",
        DE: "Spielekonsole",
        IT: "Console di gioco",
        DA: "Spilkonsol",
        AR: "جهاز ألعاب",
        PT: "consola de jogos",
        RO: "TODO",
        IND: "TODO"
    },
    sTORAGE: {
        EN: "Storage",
        FR: "Stockage",
        SPN: "Almacenamiento",
        DE: "Speicher",
        IT: "Storage",
        DA: "Lagring",
        AR: "وسط تخزين",
        PT: "armazenamento",
        RO: "TODO",
        IND: "TODO"
    },
    BLACKLISTEd: {
        EN: "Blacklisted",
        FR: "Rejeté",
        SPN: "Rechazado",
        DE: "Schwarze Liste",
        IT: "Blacklisted",
        DA: "Sortlistet",
        AR: "مُدرَج على اللائحة السوداء",
        PT: "lista negra",
        RO: "TODO",
        IND: "TODO"
    },
    HIDDEN: {
        EN: "Hidden",
        FR: "Caché",
        SPN: "Oculto",
        DE: "Versteckt",
        IT: "Nascosto",
        DA: "Skjult",
        AR: "مخفي",
        PT: "escondido",
        RO: "TODO",
        IND: "TODO"
    },
    PRINTER: {
        EN: "Printer",
        FR: "Imprimante",
        SPN: "Impresora",
        DE: "Drucker",
        IT: "Stampante",
        DA: "Printer",
        AR: "طابعة",
        PT: "impressora",
        RO: "TODO",
        IND: "TODO"
    },
    TABLET: {
        EN: "Tablet",
        FR: "Tablette",
        SPN: "Impresora",
        DE: "Tablet",
        IT: "Tablet",
        DA: "Tablet",
        AR: "TODO",
        PT: "tablet",
        RO: "Tableta",
        IND: "TODO"
    },
    MOBILE_PHONE: {
        EN: "Mobile Phone",
        FR: "Téléphone mobile",
        SPN: "Tel‚fono móvil",
        DE: "Mobiltelefon",
        IT: "Cellulare",
        DA: "Mobiltelefon",
        AR: "TODO",
        PT: "telemovel",
        RO: "Telefon mobil",
        IND: "TODO"
    },
    TV_DECODER: {
        EN: "TV Decoder",
        FR: "Décodeur TV",
        SPN: "Decodificador TV",
        DE: "TV-Decoder",
        IT: "Decoder TV",
        DA: "Tv-dekoder",
        AR: "فاكّ تشفير تلفزيوني",
        PT: "descodificador TV",
        RO: "TODO",
        IND: "TODO"
    },
    WIFI_BRIDGE: {
        EN: "Wi-Fi Bridge",
        FR: "Pont Wi-Fi",
        SPN: "Puente Wi-Fi",
        DE: "WLAN-Brücke",
        IT: "Wi-Fi Bridge",
        DA: "Wi-Fi Bridge",
        AR: "جسر واي-فاي",
        PT: "Wi-Fi Bridge",
        RO: "TODO",
        IND: "TODO"
    },
    WIFI_REPEATER: {
        EN: "Wi-Fi Repeater",
        FR: "Répéteur Wi-Fi",
        SPN: "Repetidor Wi-Fi",
        DE: "WLAN-Verstärker",
        IT: "Ripetitore Wi-Fi",
        DA: "Wi-Fi Repeater",
        AR: "مضخم واي-فاي",
        PT: "Wi-Fi Repetidor",
        RO: "TODO",
        IND: "TODO"
    },
    PLC: {
        EN: "PLC",
        FR: "CPl",
        SPN: "PLC",
        DE: "SPS",
        IT: "PLC",
        DA: "PLC",
        AR: "جهاز تحكم رقمي مبرمَج",
        PT: "PLC",
        RO: "TODO",
        IND: "TODO"
    },
    active: {
        EN: "Active",
        FR: "Actif",
        SPN: "Activo",
        DE: "Aktiv",
        IT: "Attivo",
        DA: "Aktiv",
        AR: "مفعَّل",
        PT: "activo",
        RO: "TODO",
        IND: "TODO"
    },
    dectEnable: {
        EN: "Enable DECT",
        FR: "Activer DECT",
        SPN: "Activar DECT",
        DE: "DECT aktivieren",
        IT: "Abilita DECT",
        DA: "Aktiver DECT",
        AR: "تمكين DECT",
        PT: "habilitar DECT",
        RO: "TODO",
        IND: "TODO"
    },
    dectClockMastered: {
        EN: "Clock Mastered",
        FR: "Contrôlé par l'horloge",
        SPN: "Clock Mastered",
        DE: "Uhrzeitsteuerung",
        IT: "Controllato da orologio",
        DA: "Urstyring",
        AR: "حيازة التزامن",
        PT: "relogio",
        RO: "TODO",
        IND: "TODO"
    },
    dectPinError: {
        EN: "Pin Code must be a number between 0000 and 9999",
        FR: "Le code PIN doit être un nombre entre 0000 et 9999",
        SPN: "El código PIN debe ser un n£mero comprendido entre 0000 y 9999",
        DE: "PIN muss eine Zahl zwischen 0000 und 9999 sein",
        IT: "Il codice PIN deve essere un numero compreso tra 0000 e 9999",
        DA: "Pinkoden skal være et tal mellem 0000 og 9999",
        AR: "TODO",
        PT: "codigo Pin debe ser um numero entre 0000 e 9999",
        RO: "Codul PIN trebuie sa contina numere intre 0000 si 9999",
        IND: "TODO"
    },
    dectDockSettings: {
        EN: "DECT Base Settings",
        FR: "Réglages de la base DECT",
        SPN: "Ajustes de la base DECT",
        DE: "DECT-Basis-Einstellungen",
        IT: "Impostazioni di base DECT",
        DA: "DECT-basisindstillinger",
        AR: "إعدادات قاعدة DECT",
        PT: "defeniçoes da base de DECT",
        RO: "TODO",
        IND: "TODO"
    },
    dectQtySingular: {
        EN: "handset is connected on a maximum of",
        FR: "combiné est connecté sur un maximum de",
        SPN: "auricular telefónico está conectado a un máximo de",
        DE: "Mobilteil ist verbunden mit höchstens",
        IT: "Il ricevitore è collegato su un massimo di",
        DA: "håndsættet er forbundet på maksimalt",
        AR: "السماعة موصولة إلى ما مجموعُه في الحد الأقصى",
        PT: "o handsets estao ligados a um maximo de ",
        RO: "TODO",
        IND: "TODO"
    },
    dectQtyPlural: {
        EN: "handsets are connected on a maximum of",
        FR: "combinés sont connectés sur un maximum de",
        SPN: "auriculares telefónicos están conectados a un máximo de",
        DE: "Mobilteile sind verbunden mit höchstens",
        IT: "I ricevitori sono collegati su un massimo di",
        DA: "håndsættene er forbundet på maksimalt",
        AR: "السماعات موصولة إلى ما مجموعُه في الحد الأقصى",
        PT: "o handset esta ligado a um maximo de ",
        RO: "TODO",
        IND: "TODO"
    },
    dectStartPairing: {
        EN: "Start Pairing",
        FR: "Démarrer l'association",
        SPN: "Iniciar aparejamiento",
        DE: "Koppeln starten",
        IT: "Avvia accoppiamento",
        DA: "Start parring",
        AR: "بدء الاقتران",
        PT: "iniciar emparelhamento",
        RO: "TODO",
        IND: "TODO"
    },
    dectApplyPin: {
        EN: "Apply Pin",
        FR: "Appliquer PIN",
        SPN: "Aplicar PIN",
        DE: "PIN übernehmen",
        IT: "Applica il PIN",
        DA: "TODO",
        AR: "TODO",
        PT: "aplicar pin",
        RO: "Aplicare PIN",
        IND: "TODO"
    },
    dectLocate: {
        EN: "Paging",
        FR: "Paging",
        SPN: "Paging",
        DE: "Paging",
        IT: "Paging",
        DA: "Paging",
        AR: "بحث لاسلكي",
        PT: "Paging",
        RO: "TODO",
        IND: "TODO"
    },
    dectLocateDescription: {
        EN: "Use Paging to locate your handsets. They will ring several seconds.",
        FR: "Utilisez le Paging pour localiser vos combinés. Ils sonneront plusieurs secondes.",
        SPN: "Utilice Paging para localizar sus auriculares telefónicos. Sonarán varios segundos.",
        DE: "Verwenden Sie Paging, um Ihre Mobilteile zu finden. Es wird einige Sekunden klingeln.",
        IT: "Utilizzare il paging per individuare i portatili. Suoneranno per alcuni secondi.",
        DA: "Brug paging til at lokalisere dine håndsæt De vil ringe i flere sekunder.",
        AR: "استخدم البحث اللاسلكي لتحديد موقع سماعاتِك. سترنّ السماعات لبضع ثوان. ",
        PT: "Use Paging para localizar os seus handsets. Eles tocarao durante alguns segundos.",
        RO: "TODO",
        IND: "TODO"
    },
    dectPinSave: {
        EN: "After clicking the Start Pairing button, use this PIN code on the handset.",
        FR: "Après avoir cliqué sur le bouton 'Démarrer l'association', utilisez ce code PIN sur le combiné",
        SPN: "Tras hacer clic en el botón de Iniciar aparejamiento, utilice este código PIN en el auricular telefónico.",
        DE: "Nach Anklicken der Start-Pairing-Taste verwenden Sie diese PIN auf dem Mobilteil.",
        IT: "Dopo aver cliccato sul pulsante Avvia accoppiamento, utilizza questo codice PIN sul portatile.",
        DA: "Når du har klikket på knappen Start parring, skal du bruge denne pinkode på håndsættet.",
        AR: "بعد النقر على زر بدء الاقتران، استخدم رقم التعريف الشخصي على السماعة.",
        PT: "depois de iniciar o emparelhamento, use este codigo PIN no handset.",
        RO: "TODO",
        IND: "TODO"
    },
    dectTip1: {
        EN: "You can enable the internal DECT dock here.",
        FR: "Vous pouvez activer la base DECT interne ici.",
        SPN: "Puede activar la base DECT interna aquí. ",
        DE: "Sie können hier die interne DECT-Dockingstation aktivieren.",
        IT: "Puoi attivare il dock DECT interno qui.",
        DA: "Du kan aktivere den interne DECT-dock her.",
        AR: "يمكنك هنا تمكين إرساء DECT الداخلي.",
        PT: "pode habilitar aquí o DECT interno",
        RO: "TODO",
        IND: "TODO"
    },
    dectTip2: {
        EN: "You can check dock status here",
        FR: "Vous pouvez vérifier le statut de la base ici.",
        SPN: "Puede comprobar el estado de la base aquí",
        DE: "Sie können hier den Status der Dockingstation überprüfen",
        IT: "Puoi controllare lo stato del dock qui",
        DA: "Du kan tjekke dockens status her.",
        AR: "يمكنك هنا تفقد حالة الإرساء.",
        PT: "pode verificar o estado do dock aquí",
        RO: "TODO",
        IND: "TODO"
    },
    dectTip3: {
        EN: "The new PIN code will be used for next pairing.",
        FR: "Le nouveau code PIN sera utilisé lors de la prochaine association.",
        SPN: "El nuevo código PIN se utilizará en el siguiente aparejamiento.",
        DE: "Die neue PIN wird für den nächsten Kopplungsvorgang verwendet.",
        IT: "Il nuovo codice PIN sarà utilizzato per il prossimo accoppiamento.",
        DA: "Den nye pinkode vil blive anvendt til den næste parring.",
        AR: "سوف يُستخدَم رقم التعريف الشخصي الجديد في الاقتران التالي.",
        PT: "o novo Pin será usado para o proximo emparelhamento",
        RO: "TODO",
        IND: "TODO"
    },
    dectTip4: {
        EN: "Starts pairing process. Check your handset to allow pairing.",
        FR: "Démarre le processus d'association. Vérifiez votre combiné pour autoriser l'association.",
        SPN: "Inicia el proceso de aparejamiento. Compruebe que su auricular telefónico le permite esta opción.",
        DE: "Startet den Kopplungsvorgang. Überprüfen Sie Ihr Mobilteil, um den Kopplungsvorgang zu ermöglichen.",
        IT: "Avvia processo di accoppiamento. Controlla il tuo telefono per consentire l'accoppiamento.",
        DA: "Starter parringsprocessen. Tjek dit håndsæt for at tillade parring.",
        AR: "بدء عملية الاقتران. تفقّد سماعتك للسماح بالاقتران",
        PT: "incicio do processo de emparelhamento. Verificar o seu handset para autorizar o emparelhamento.",
        RO: "TODO",
        IND: "TODO"
    },
    dectTip5: {
        EN: "Select a handset.",
        FR: "Sélectionner un combiné",
        SPN: "Seleccione un auricular telefónico.",
        DE: "Wählen Sie ein Mobilteil aus.",
        IT: "Seleziona un portatile.",
        DA: "Vælg et håndsæt.",
        AR: "حدد سماعة.",
        PT: "Seleccione o handset.",
        RO: "TODO",
        IND: "TODO"
    },
    dectTip6: {
        EN: "Make the selected handset ring.",
        FR: "Faire sonner le combiné selectionné.",
        SPN: "Haga sonar el auricular telefónico seleccionado.",
        DE: "Ausgewähltes Mobilteil klingeln lassen.",
        IT: "Fai squillare il ricevitore selezionato.",
        DA: "Få det valgte håndsæt til at ringe.",
        AR: "اجعل السماعة المحددة ترن.",
        PT: "Fazer o handset selecionado tocar",
        RO: "TODO",
        IND: "TODO"
    },
    dectTabTip: {
        EN: "You can switch between basic and advanced dock settings",
        FR: "Vous pouvez basculer entre les réglages basiques et avancés",
        SPN: "Puede cambiar de los ajustes básicos a los avanzados",
        DE: "Sie können zwischen einfachen und fortgeschrittenen Einstellungen wechseln",
        IT: "Puoi passare tra le impostazioni dock di base e avanzate",
        DA: "Du kan skifte mellem basis- og avancerede dockindstillinger",
        AR: "يمكنك التبديل بين إعدادات الإرساء الأساسية والمتقدمة.",
        PT: "Voce pode mudar os ajustes entre basico e avançado",
        RO: "TODO",
        IND: "TODO"
    },
    dectRfpi: {
        EN: "RFPI",
        FR: "RFPI",
        SPN: "RFPI",
        DE: "RFPI",
        IT: "RFPI",
        DA: "RFPI",
        AR: "RFPI",
        PT: "RFPI",
        RO: "TODO",
        IND: "TODO"
    },
    dectEncryptionType: {
        EN: "Encryption Type",
        FR: "Type d'encryption",
        SPN: "Tipo de cifrado",
        DE: "Verschlüsselungstyp",
        IT: "Tipo di crittografia",
        DA: "Krypteringstype",
        AR: "نوع التشفير",
        PT: "tipo de encriptaçao",
        RO: "TODO",
        IND: "TODO"
    },
    dectAllowUncrypted: {
        EN: "Allow uncrypted connections",
        FR: "Autoriser les connections en clair",
        SPN: "Permitir conexiones descifradas",
        DE: "Unverschlüsselte Verbindungen erlauben",
        IT: "Consenti connessioni non crittografate",
        DA: "Tillad ukrypterede forbindelser",
        AR: "السماح باتصالات غير مشفرة",
        PT: "permitir ligaçoes encriptadas",
        RO: "TODO",
        IND: "TODO"
    },
    dectAdvancedTip1: {
        EN: "You can change DECT dock operation standard.",
        FR: "Vous pouvez changer la norme DECT utilisée.",
        SPN: "Puede cambiar la norma DECT utilizada.",
        DE: "Sie können den Betriebsstandard der DECT-Basis ändern.",
        IT: "Puoi cambiare lo standard operativo del dock DECT.",
        DA: "Du kan ændre DECT-dockens driftsstandard.",
        AR: "يمكنك تغيير معيار عمل إرساء DECT.",
        PT: "Pode alterar as operaçoes standard do DECT dock.",
        RO: "TODO",
        IND: "TODO"
    },
    dectAdvancedTip2: {
        EN: "Turning Clock Mastered ON will allow DECT to control clock settings. Leaving it OFF will let the gateway control clock settings",
        FR: "Activer Contrôlé par l'horloge va permettre à DECT de contrôler les paramètres de l'horloge. Le laisser désactivé permettra à la passerelle de contrôler les paramètres de l'horloge",
        SPN: "Activar el Reloj Maestro permitirá que DECT controle los ajustes del teléfono. Si no lo activa, el módem controlará los ajustes del teléfono",
        DE: "Mit ‚Uhrzeitsteuerung‘ auf ON kann das DECT die Uhrzeiteinstellungen steuern. Mit OFF wird die Uhrzeit über das Gateway gesteuert",
        IT: "Clock Mastered ON permetterà al DECT di controllare le impostazioni dell'orologio. Lasciando OFF rimarranno attive le impostazioni dell'orologio di controllo del gateway",
        DA: "Hvis 'Urstyring' slås TIL, vil DECT styre alle urindstillinger. Hvis dette valg forbliver 'FRA', vil gatewayen styre urindstillingerne",
        AR: "سوف يتيح تشغيل وظيفة حيازة التزامن لـ DECT السيطرة على إعدادات التزامن. وإنّ عدم تشغيل هذه الوظيفة يجعل البوابة هي التي تسيطر على الإعدادات المذكورة.",
        PT: "activar o relogio master permite o DECT controlar os ajustes de relogio. Deixar em OFF permitirá o gateway controlar os ajustes de relogio",
        RO: "TODO",
        IND: "TODO"
    },
    dectAdvancedTip3: {
        EN: "This is the DECT base description.",
        FR: "Description de la base DECT",
        SPN: "Esta es la descripción base DECT.",
        DE: "Dies ist die Beschreibung der DECT-Basis.",
        IT: "Questa è la descrizione del DECT base.",
        DA: "Dette er basisbeskrivelsen af DECT.",
        AR: "هذا هو وصف قاعدة DECT.",
        PT: "Esta é a descripçao da base DECT.",
        RO: "TODO",
        IND: "TODO"
    },
    dectAdvancedTip4: {
        EN: "Enable and disable DECT Eco Mode.",
        FR: "Activer/Désactiver le mode éco du DECT",
        SPN: "Conectar o desconectar el Modo Eco DECT.",
        DE: "Aktivieren und Deaktivieren des DECT Eco-Modus.",
        IT: "Attiva e disattiva la modalità Eco DECT.",
        DA: "Aktiver og deaktiver DECT Eco-tilstand",
        AR: "تمكين وتعطيل وضع DECT Eco Mode.",
        PT: "habilitar e desabilitar o modo eco do DECT",
        RO: "TODO",
        IND: "TODO"
    },
    dectAdvancedTip5: {
        EN: "This is the Radio Fixed Part Identity (RFPI) which is used by the handsets to identify the DECT dock.",
        FR: "Ceci est l'identifiant (Radio Fixed Part Identity: RFPI) qui est utilisé par les combinés pour identifier la base.",
        SPN: "Este es el identificador (Radio Fixed Part Identity: RFPI) que utiliza el auricular telefónico para identificar la base.",
        DE: "Dies ist die RFPI (Radio Fixed Part Identity), die von den Mobilteilen verwendet wird, um die DECT-Dockingstation zu identifizieren.",
        IT: "Questo è il Radio Fixed Part Identity (RFPI), che viene utilizzato dai cellulari per identificare il dock DECT.",
        DA: "Dette er Radio Fixed Part Identity (RFPI), som anvendes af håndsættene til at identificere DECT-docken.",
        AR: "هذه هي هوية الجزء الثابت الراديوي (RFPI) الذي تَستخدِمه السماعات لتعريف إرساء DECT.",
        PT: "Este é o Radio Fixed Part Identity (RFPI) que é usado pelo handset para identificar o dock do DECT.",
        RO: "TODO",
        IND: "TODO"
    },
    dectAdvancedTip6: {
        EN: "This is the DECT base firmware version.",
        FR: "Ceci est la version du firmware de la base DECT",
        SPN: "Esta es la versión firmware de la base DECT.",
        DE: "Dies ist die Firmware-Version der DECT-Basis.",
        IT: "Questa è la versione di base del firmware DECT.",
        DA: "Dette er basisfirmwareversionen af DECT.",
        AR: "هذا هو رقم إصدار البرنامج الدائم لقاعدة DECT.",
        PT: "esta é a versao de firmware da base DECT",
        RO: "TODO",
        IND: "TODO"
    },
    dectAdvancedTip7: {
        EN: "This is the firmware upgrade progress level",
        FR: "Indique la progression de la mise à jour",
        SPN: "Este es el nivel de progreso de la actualizacion del firmware",
        DE: "Fortschrittsanzeige der Firmwareaktualisierung",
        IT: "Indica l'avanzamento dell'aggiornamento",
        DA: "Dette er fremgangsniveauet for opgradering af firmware ",
        AR: "TODO",
        PT: "Este é o nivel de progresso do upgrade de firmware",
        RO: "Acesta este statusul procesului de actualizare software",
        IND: "TODO"
    },
    dectAdvancedTip8: {
        EN: "This is the DECT base EEPROM version.",
        FR: "Ceci est la version de l'EEPROM de la base DECT",
        SPN: "Esta es la versión EEPROM de la base DECT.",
        DE: "Dies ist die EEPROM-Version der DECT-Basis.",
        IT: "Questa è la versione di base del EEPROM DECT .",
        DA: "Dette er basis-EEPROM-versionen af DECT.",
        AR: "هذا هو رقم إصدار ذاكرة EEPROM لقاعدة DECT.",
        PT: "Esta é a versao de EEPROM da base DECT",
        RO: "TODO",
        IND: "TODO"
    },
    dectAdvancedTip9: {
        EN: "This is the DECT base hardware version.",
        FR: "Ceci est la version matérielle de la base DECT",
        SPN: "Esta es la versión hardware de la base DECT.",
        DE: "Dies ist die Hardware-Version der DECT-Basis.",
        IT: "Questa è la versione di base dell'hardware DECT.",
        DA: "Dette er basis-hardwareversionen af DECT.",
        AR: "هذا هو رقم إصدار الكيان الصلب لقاعدة DECT. ",
        PT: "esta é a versao de hardware da base DECT",
        RO: "TODO",
        IND: "TODO"
    },
    dectAdvancedTip10: {
        EN: "Turn this option ON to allow uncrypted connections.",
        FR: "Activez cette option pour permettre les communications en clair",
        SPN: "Activa esta opción para habilitar conexiones descifradas.",
        DE: "Aktivieren Sie diese Option, um unverschlüsselte Verbindungen zu erlauben.",
        IT: "Attiva questa opzione per consentire le connessioni non crittografate.",
        DA: "Slå dette valg TIL for at tillade ukrypterede forbindelser.",
        AR: "تشغيل هذا الخيار للسماح بالاتصالات غير المشفرة.",
        PT: "mude esta opçao a ON para permitir ligaçoes nao encriptadas",
        RO: "TODO",
        IND: "TODO"
    },
    dectAdvancedTip11: {
        EN: "You can specify DECT dock encryption type.",
        FR: "Vous pouvez spécifier le type d'encryption de la base DECT.",
        SPN: "Puede especificar el tipo de cifrado de la base.",
        DE: "Sie können den Verschlüsselungstyp der DECT-Dockingstation angeben.",
        IT: "Puoi specificare il tipo di crittografia del dock DECT.",
        DA: "Du kan specificere DECT-dockens krypteringsstype.",
        AR: "يمكنك تحديد نوع تشفير إرساء DECT.",
        PT: "pode especificar o tipo de encriptaçao da base DECT",
        RO: "TODO",
        IND: "TODO"
    },
    unpair: {
        EN: "Unpair",
        FR: "Désassocier",
        SPN: "Desemparejar",
        DE: "Entkoppeln",
        IT: "Disaccoppia",
        DA: "Ophæv parring",
        AR: "فك الاقتران",
        PT: "desemparelhar",
        RO: "TODO",
        IND: "TODO"
    },
    dectHandsetTip1: {
        EN: "Click here to unpair this device.",
        FR: "Cliquez ici pour désassocier ce combiné.",
        SPN: "Haga clic aquí para desemparejar este dispositivo.",
        DE: "Klicken Sie hier, um die Kopplung dieses Geräts aufzuheben.",
        IT: "Clicca qui per disaccoppiare questo dispositivo.",
        DA: "Klik her for at ophæve parringen for denne enhed.",
        AR: "انقر هنا لفك اقتران هذا الجهاز.",
        PT: "pressione aquí para desemparelhar o dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    dectHandsetTip2: {
        EN: "Here you can enter a name for this device.",
        FR: "Entrez ici un nom pour ce combiné.",
        SPN: "Aquí puede darle un nombre a este dispositivo.",
        DE: "Hier können Sie einen Namen für dieses Gerät einstellen.",
        IT: "Qui puoi impostare un nome per questo dispositivo.",
        DA: "Her kan du angive et navn for denne enhed.",
        AR: "هنا يمكنك تحديد اسم لهذا الجهاز.",
        PT: "aquí pode escrever o nome deste dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    dectHandsetTip3: {
        EN: "Here you can see the current status of this device.",
        FR: "Statut du combiné",
        SPN: "Aquí puede ver el estado de este dispositivo.",
        DE: "Hier können Sie diesen aktuellen Gerätestatus einsehen.",
        IT: "Qui puoi visualizzare lo stato corrente del dispositivo.",
        DA: "Her kan du se den aktuelle enhedsstatus.",
        AR: "هنا يمكنك رؤية الحالة الراهنة لهذا الجهاز.",
        PT: "aquí pode ver o estado actual deste dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    dectHandsetTip4: {
        EN: "Here you can select the handset role for this device.",
        FR: "Sélectionnez ici la fonction du combiné.",
        SPN: "Aquí puede seleccionar la función del auricular telefónico para este dispositivo.",
        DE: "Hier können Sie die Rolle des Mobilteils für dieses Gerät auswählen.",
        IT: "Qui puoi selezionare l'International Portable User Identity per questo dispositivo.",
        DA: "Her kan du vælge denne enheds håndsætrolle.",
        AR: "هنا يمكنك تحديد دور سماعة هذا الجهاز.",
        PT: "aquí pode seleccionar o papel do handser para este dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    dectHandsetTip5: {
        EN: "Here you can set the device lock pin code.",
        FR: "Entrez ici le pin code de déverrouillage du combiné.",
        SPN: "Introduzca aquí el código pin de bloqueo del dispositivo.",
        DE: "Hier können Sie die PIN für die Gerätesperre einstellen.",
        IT: "Qui puoi impostare il codice PIN di protezione del dispositivo.",
        DA: "Her kan du indstille enhedens låsepinkode.",
        AR: "هنا يمكنك تحديد رقم التعريف الشخصي لتأمين الجهاز.",
        PT: "aquí pode editar o codigo pin de bloqueio do dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    dectHandsetTip6: {
        EN: "Here you can see the International Portable User Identity for this device.",
        FR: "Identifiant (International Portable User Identity) du combiné.",
        SPN: "Identificador (International Portable User Identity) del dispositivo.",
        DE: "Hier können Sie die Internationale Mobilteil-Benutzeridentttät für dieses Gerät einsehen.",
        IT: "Qui puoi visualizzare l'International Portable User Identity per questo dispositivoo.",
        DA: "Her kan du se den internationale bærbare brugeridentitet for denne enhed.",
        AR: "هنا يمكنك رؤية رقم التعريف الدولي للمستخدِم الجوال (IPUI) لهذا الجهاز",
        PT: "aquí pode consultar a identidade de utilizador portatil internacional para este dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    dectHandsetTip7: {
        EN: "Here you can see the standard in use by this device.",
        FR: "Normes supportées par le combiné",
        SPN: "Normas establecidas por este dispositivo.",
        DE: "Hier können Sie den von diesem Gerät verwendeten Standard sehen.",
        IT: "Qui puoi visualizzare lo standard in uso da questo dispositivo.",
        DA: "Her kan du se den standard, som anvendes af denne enhed.",
        AR: "هنا يمكنك رؤية المعيار المستخدم في هذا الجهاز.",
        PT: "aquí pode consultar o uso standard deste dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    dectHandsetTip8: {
        EN: "Here you can see the subscription time for this device.",
        FR: "Temps d'association de ce combiné",
        SPN: "Tiempo de suscripción para este dispositivo.",
        DE: "Hier können Sie die Abodauer für dieses Gerät sehen.",
        IT: "Qui puoi visualizzare il tempo di sottoscrizione per questo dispositivo.",
        DA: "Her kan du se denne enheds abonnementstid.",
        AR: "هنا يمكنك رؤية زمن اشتراك هذا الجهاز.",
        PT: "aquí pode consultar o tempo de subscriçao para este dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    dectHandsetTabTip: {
        EN: "Here you can navigate through device handset sections.",
        FR: "Naviguez dans les options du combiné.",
        SPN: "Navegue por las opciones del auricular telefónico.",
        DE: "Hier können Sie durch die Mobilteil-Abschnitte des Geräts navigieren.",
        IT: "Qui puoi navigare attraverso le sezioni del dispositivo.",
        DA: "Her kan du navigere gennem enhedens håndsætsektioner.",
        AR: "هنا يمكنك التنقل بين أقسام سماعة هذا الجهاز.",
        PT: "aquí pode navegar pelas secçoes do handset",
        RO: "TODO",
        IND: "TODO"
    },
    dectDock: {
        EN: "Dect Dock",
        FR: "Base DECT",
        SPN: "Base DECT",
        DE: "DECT-Dockingstation",
        IT: "Dect Dock",
        DA: "DECT-dock",
        AR: "إرساء DECT",
        PT: "Base dect",
        RO: "TODO",
        IND: "TODO"
    },
    dectPairingProgress: {
        EN: "Pairing is in progress. Confirm operation on your handset.",
        FR: "Association en cours. Confirmez l'opération sur votre combiné.",
        SPN: "Emparejamiento en curso. Confirme la operación en su auricular telefónico.",
        DE: "Kopplung wird durchgeführt. Bestätigen Sie den Vorgang auf Ihrem Mobilteil.",
        IT: "Accoppiamento in corso. Conferma operazione sul ricevitore.",
        DA: "Parring er i gang. Bekræft handlingen på dit håndsæt.",
        AR: "الاقتران جارٍ. تأكيد العملية على سماعتك.",
        PT: "emparelhamento está em progresso. Confirme a operaçao no seu handset",
        RO: "TODO",
        IND: "TODO"
    },
    dectHandset: {
        EN: "DECT Handset",
        FR: "Combiné DECT",
        SPN: "Auricular telefónico DECT",
        DE: "DECT-Mobilteil",
        IT: "DECT",
        DA: "DECT-håndset",
        AR: "سماعة DECT",
        PT: "DECT Handset",
        RO: "TODO",
        IND: "TODO"
    },
    dectHandsetSettings: {
        EN: "DECT Handset Settings",
        FR: "Réglages combiné DECT",
        SPN: "Ajustes del auricular telefónico DECT",
        DE: "DECT Mobilteil-Einstellungen",
        IT: "Impostazioni del portatile DECT",
        DA: "DECT-håndsætindstillinger",
        AR: "إعدادات سماعة DECT",
        PT: "ajustes DECT Handset",
        RO: "TODO",
        IND: "TODO"
    },
    unpairThisDevice: {
        EN: "Unpair this device",
        FR: "Désassocier le combiné",
        SPN: "Desemparejar este dispositivo",
        DE: "Dieses Gerät entkoppeln",
        IT: "Disaccoppia questo dispositivo",
        DA: "Ophæv parringen med denne enhed",
        AR: "فك اقتران هذا الجهاز.",
        PT: "desemparelhar este dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    handsetRole: {
        EN: "Handset role",
        FR: "Fonction du combiné",
        SPN: "Función del auricular telefónico",
        DE: "Mobilteil-Rolle",
        IT: "Ruolo ricevitore",
        DA: "Håndsætrolle",
        AR: "دور السماعة.",
        PT: "funçao de handset",
        RO: "TODO",
        IND: "TODO"
    },
    deviceLockPin: {
        EN: "Device lock PIN",
        FR: "Code de vérrouillage du combiné",
        SPN: "Código PIN de bloqueo del dispositivo",
        DE: "PIN für Gerätesperre",
        IT: "PIN per il blocco del dispositivo",
        DA: "Enhedens låsepin",
        AR: "رقم التعريف الشخصي لتأمين الجهاز.",
        PT: "PIN de bloqueio do dispositivo",
        RO: "TODO",
        IND: "TODO"
    },
    ipei: {
        EN: "IPEI",
        FR: "IPEI",
        SPN: "IPEI",
        DE: "IPEI",
        IT: "IPEI",
        DA: "IPEI",
        AR: "IPEI",
        PT: "IPEI",
        RO: "TODO",
        IND: "TODO"
    },
    ipui: {
        EN: "IPUI",
        FR: "IPUI",
        SPN: "IPUI",
        DE: "IPUI",
        IT: "IPUI",
        DA: "IPUI",
        AR: "TODO",
        PT: "IPUI",
        RO: "IPUI",
        IND: "TODO"
    },
    subscriptionTime: {
        EN: "Subscription time",
        FR: "Temps d'association",
        SPN: "Tiempo de asociación",
        DE: "Abodauer",
        IT: "Tempo di iscrizione",
        DA: "Subscription time",
        AR: "زمن الاشتراك",
        PT: "tempo de subscriçao",
        RO: "TODO",
        IND: "TODO"
    },
    In_reach: {
        EN: "In reach",
        FR: "A portée",
        SPN: "Al alcance",
        DE: "In der Nähe",
        IT: "A portata",
        DA: "In reach",
        AR: "في المتناول",
        PT: "ao alcance",
        RO: "TODO",
        IND: "TODO"
    },
    Not_in_reach: {
        EN: "Not in reach",
        FR: "Hors de portée",
        SPN: "No al alcance",
        DE: "Nicht in Reichweite",
        IT: "Non a portata",
        DA: "Not in reach",
        AR: "ليس في المتناول",
        PT: "fora do alcance",
        RO: "TODO",
        IND: "TODO"
    },
    Unregistered: {
        EN: "Unregistered",
        FR: "Désassocié",
        SPN: "No registrado",
        DE: "Nicht registriert",
        IT: "Non registrato",
        DA: "Unregistered",
        AR: "غير مسجل",
        PT: "nao registrado",
        RO: "TODO",
        IND: "TODO"
    },
    dynDnsTitle: {
        EN: "Dynamic DNS Client",
        FR: "Client DNS dynamique",
        SPN: "Cliente DNS dinámico",
        DE: "Dynamischer DNS-Client",
        IT: "Client DNS dinamico",
        DA: "Dynamisk DNS klient",
        AR: "عميل DNS ديناميكي",
        PT: "cliente DNS dinamico",
        RO: "TODO",
        IND: "TODO"
    },
    dynDnsBasicAuth: {
        EN: "Basic Authentication",
        FR: "Authentification basique",
        SPN: "Autenticación básica",
        DE: "Grundlegende Authentisierung",
        IT: "Autenticazione di base",
        DA: "Basic Authentication",
        AR: "مصادقة أساسية",
        PT: "autenticaçao basica",
        RO: "TODO",
        IND: "TODO"
    },
    dynDnsServer: {
        EN: "Server",
        FR: "Serveur",
        SPN: "Servidor",
        DE: "Server",
        IT: "Server",
        DA: "Server",
        AR: "مخدِّم",
        PT: "Sevidor",
        RO: "TODO",
        IND: "TODO"
    },
    dynDnsRequest: {
        EN: "Request",
        FR: "Demande",
        SPN: "Solicitud",
        DE: "Anfrage",
        IT: "Richiesta",
        DA: "Request",
        AR: "طلب",
        PT: "pedido",
        RO: "TODO",
        IND: "TODO"
    },
    dynDnsUpdateInt: {
        EN: "Update Interval",
        FR: "Intervalle de mise à jour",
        SPN: "Intervalo de actualización",
        DE: "Update-Intervall",
        IT: "Intervallo di aggiornamento",
        DA: "Update Interval",
        AR: "تحديث المجال",
        PT: "intervalo de update",
        RO: "TODO",
        IND: "TODO"
    },
    dynDnsRetryInt: {
        EN: "Retry Interval",
        FR: "Intervalle de relance",
        SPN: "Intervalo de reintento",
        DE: "Wiederholungsintervall",
        IT: "Intervallo tentativi",
        DA: "Retry Interval",
        AR: "إعادة محاولة تحديث المجال",
        PT: "intervalo de reintento",
        RO: "TODO",
        IND: "TODO"
    },
    dynDnsMaxRetry: {
        EN: "Max Retries",
        FR: "Nombre maximal de relances",
        SPN: "Reintentos máximos",
        DE: "Max, Anzahl der erneuten Versuche",
        IT: "Max tentativi",
        DA: "Max Retries",
        AR: "الحد الأقصى لعدد مرات إعادة المحاولة",
        PT: "reintentos maximos",
        RO: "TODO",
        IND: "TODO"
    },
    dynDnsCustomServer: {
        EN: "Custom Server",
        FR: "Serveur personnalisé",
        SPN: "Servidor personalizado",
        DE: "Benutzerdefinierter Server",
        IT: "Server personalizzati",
        DA: "Custom Server",
        AR: "مخدِّم مخصص",
        PT: "Servidor personalizado",
        RO: "TODO",
        IND: "TODO"
    },
    wifi2G4: {
        EN: "Wi-Fi 2.4GHz",
        FR: "Wi-Fi 2.4GHz",
        SPN: "Wi-Fi 2.4GHz",
        DE: "Wi-Fi 2.4GHz",
        IT: "Wi-Fi 2.4GHz",
        DA: "Wi-Fi 2,4 GHz",
        AR: "واي-فاي 2.4 جيغاهرتز",
        PT: "Wi-Fi 2.4GHz",
        RO: "TODO",
        IND: "TODO"
    },
    wifi5G: {
        EN: "Wi-Fi 5GHz",
        FR: "Wi-Fi 5.0GHz",
        SPN: "Wi-Fi 5GHz",
        DE: "Wi-Fi 5.0GHz",
        IT: "Wi-Fi 5.0GHz",
        DA: "Wi-Fi 5 GHz",
        AR: "واي-فاي 5.0 جيغاهرتز",
        PT: "Wi-Fi 5GHz",
        RO: "TODO",
        IND: "TODO"
    },
    myMedia: {
        EN: "My Media",
        FR: "Mon contenu multimédia",
        SPN: "Mi multimedia",
        DE: "Meine Medien",
        IT: "I miei media",
        DA: "Mine medier",
        AR: "وسائطي",
        PT: "Meu multimedia",
        RO: "TODO",
        IND: "TODO"
    },
    selectWireless2G4: {
        EN: "Wireless 2.4GHz",
        FR: "Wi-Fi 2.4GHz",
        SPN: "Inalámbrico 2.4GHz",
        DE: "Wireless 2.4 GHz",
        IT: "Wireless 2.4GHz",
        DA: "Trådløs 2,4 GHz",
        AR: "لاسلكي 2.4 جيغاهرتز",
        PT: "Wireless 2.4GHz",
        RO: "TODO",
        IND: "TODO"
    },
    selectWireless5G: {
        EN: "Wireless 5GHz",
        FR: "Wi-Fi 5GHz",
        SPN: "Inalámbrico 5GHz",
        DE: "WLAN 5 GHz",
        IT: "Wireless 5GHz",
        DA: "Trådløs 5 GHz",
        AR: "لاسلكي 5 جيغاهرتز",
        PT: "Wireless 5GHz",
        RO: "TODO",
        IND: "TODO"
    },
    incomingCalls: {
        EN: "Incoming Calls",
        FR: "Appels entrants",
        SPN: "Llamadas entrantes",
        DE: "Eingehende Gespräche",
        IT: "Chiamate In arrivo",
        DA: "Indkommende opkald",
        AR: "مكالمات واردة",
        PT: "chamadas entrada",
        RO: "TODO",
        IND: "TODO"
    },
    outgoingCalls: {
        EN: "Outgoing Calls",
        FR: "Appels sortants",
        SPN: "Llamadas salientes",
        DE: "Ausgehende Gespräche",
        IT: "Chiamate in uscita",
        DA: "Udgående opkald",
        AR: "مكالمات صادرة",
        PT: "chamadas saida",
        RO: "TODO",
        IND: "TODO"
    },
    telephoneMatrix: {
        EN: "Telephones Matrix",
        FR: "Matrice de téléphones",
        SPN: "Teléfonos Matrix",
        DE: "Telefon-Matrix",
        IT: "Matrice telefoni",
        DA: "Telefonmatrix",
        AR: "مصفوفات الهواتف",
        PT: "telefones matrix",
        RO: "TODO",
        IND: "TODO"
    },
    telephoneTip1: {
        EN: "For each line, you can select the handset that will receive incoming calls",
        FR: "Pour chaque ligne vous pouvez sélectionner le combiné qui recevra des appels entrants",
        SPN: "En cada línea, puede seleccionar el auricular telefónico que recibirá las llamadas entrantes.",
        DE: "Für jede Zeile können Sie das Mobilteil auswählen, das eingehende Anrufe empfangen soll",
        IT: "Per ogni linea, puoi selezionare il ricevitore che riceverà le chiamate in arrivo",
        DA: "For hver linje kan du vælge, hvilket håndsæt, der skal modtage indkommende opkald",
        AR: "لكل خط، يمكنك تحديد السماعة التي تستقبل بها المكالمات.",
        PT: "para cada linha, pode seleccionar o handset que vai receber a chamada de entrada",
        RO: "TODO",
        IND: "TODO"
    },
    telephoneTip2: {
        EN: "Select the line used by each handset for outgoing calls, only one choice is possible per handset",
        FR: "Sélectionnez la ligne utilisée par chaque combiné pour les appels sortants, un seul choix est possible par combiné !",
        SPN: "Seleccione la línea utilizada por cada auricular para las llamadas salientes. Solo se puede elegir una para cada auricular",
        DE: "Wählen Sie die von jedem Mobilteil für ausgehende Anrufe verwendete Leitung. Es ist nur eine Wahl pro Mobilteil möglich.",
        IT: "Seleziona la linea utilizzata da ciascun telefono per le chiamate in uscita, una sola scelta possibile per telefono",
        DA: "Vælg den linje, som hvert håndsæt skal anvendes til udgående opkald, kun ét valg er mulig pr. håndsæt",
        AR: "حدد الخط الذي يمكن أن تستخدمَه كل سماعة للمكالمات الصادرة، خط واحد فقط لكل سماعة. ",
        PT: "Selecione a linha usada por cada handset para chamadas de saida, apenas pode escolher uma por handset",
        RO: "TODO",
        IND: "TODO"
    },
    telephoneTip3: {
        EN: "If you want to leave the page without saving your changes, click on 'cancel' button.",
        FR: "Si vous voulez quitter la page sans sauvegarder vos changements, cliquez sur le bouton 'annuler'!",
        SPN: "Si desea abandonar la pagina sin guardar los cambios",
        DE: "Wenn Sie die Seite verlassen wollen, ohne die Änderungen zu speichern, klicken Sie auf  Abbrechen .",
        IT: "Se vuoi uscire dalla pagina senza salvare le modifiche, clicca sul pulsante 'cancella'.",
        DA: "Hvis du vil forlade siden uden at gemme dine ændringer, skal du klikke på knappen Annuller.",
        AR: "TODO",
        PT: "Se quiser abandonar uma pagina sem guardar, pressione o botao 'cancel'.'",
        RO: "Daca doriti parasirea paginii fara a salva schimbarile, apasati butonul 'Cancel''",
        IND: "TODO"
    },
    telephoneTip4: {
        EN: "You can change the fields above but the information will only be saved if you click on 'apply'.",
        FR: "Vous pouvez modifier les champs ci-dessus mais les informations ne seront enregistrées qu'après l'appui sur le bouton 'appliquer'.",
        SPN: "Puede cambiar los siguientes campos pero la información solo se guardar  si hace clic en 'Aplicar'.",
        DE: "Sie können die vorstehenden Felder ändern, aber die Daten werden nur gespeichert, wenn Sie auf  Übernehmen  klicken.",
        IT: "Puoi modificare i campi sopra ma le informazioni verranno salvate solo se clicchi su 'applica'.",
        DA: "Du kan ændre felterne herover, men oplysningerne vil kun blive gemt, hvis du klikker på Anvend.",
        AR: "TODO",
        PT: "Pode alterar os campos mas a informaçao só será guardada se pressionar 'apply'.'",
        RO: "Puteti schimba campurile anterioare dar informatiile vor fi salvate doar daca apasati 'Aplicare''",
        IND: "TODO"
    },
    moreThanOneLineEnabled: {
        EN: "You must enable at least one telephone line to use this feature",
        FR: "Au moins une ligne téléphonique doit être activée pour utiliser cette fonction.",
        SPN: "Debe habilitar al menos una linea de telefono para usar esta funcion",
        DE: "Sie müssen mindestens eine Telefonleitung aktivieren, um diese Funktion nutzen zu können",
        IT: "Bisogna attivare almeno una linea telefonica per poter utilizzare questa funzionalità",
        DA: "Mindst en telefonlinie skal være aktiveret for at bruge denne funktion",
        AR: "TODO",
        PT: "Debe habilitar pelo menos um telefone para usar esta opçao",
        RO: "Trebuie sa activati cel putin o linie telefonica pentru a utiliza aceasta caracteristica",
        IND: "TODO"
    },
    fuPercent: {
        EN: "Firmware upgrade status:",
        FR: "Progression de la mise à jour:",
        SPN: "Estado de la actualizacion de firmware",
        DE: "Status Firmwareaktualisierung:",
        IT: "Avanzamento dell'aggiornamento software",
        DA: "Status på opgradering af firmware",
        AR: "TODO",
        PT: "estado de Firmware upgrade:",
        RO: "Starea de actualizare a firmware-ului:",
        IND: "TODO"
    },
    eepromVersion: {
        EN: "EEPROM Version:",
        FR: "Version de l'EEPROM",
        SPN: "Versión EEPROM:",
        DE: "EEPROM-Version:",
        IT: "Versione EEPROM",
        DA: "EEPROM-version:",
        AR: "رقم إصدار ذاكرة EEPROM:",
        PT: "versao de EEPROM:",
        RO: "TODO",
        IND: "TODO"
    },
    noInternet: {
        EN: "Test not available, check your connection.",
        FR: "Test non disponible, vérifiez votre connexion",
        SPN: "Test no disponible",
        DE: "Test nicht Verfügbar. Bitte prüfen Sie Ihre Internetverbindung",
        IT: "Test non disponibile, verificare la connessione",
        DA: "Testen er ikke tilgængelig, kontrollér din forbindelse.",
        AR: "TODO",
        PT: "teste nao disponivel, verifique a sua ligaçao.",
        RO: "Test indisponibil, verificati conexiunea.",
        IND: "TODO"
    },
    rescanMessage: {
        EN: "Updating content!",
        FR: "l'actualisation du contenu a démarré!",
        SPN: "Actualizando contenido",
        DE: "Aktualisierung der Datenbank gestartet!",
        IT: "l'aggiornamento del contenuto è iniziato!",
        DA: "Opdaterer indhold!",
        AR: "TODO",
        PT: "conteudo de update!",
        RO: "Actualizare continut!",
        IND: "TODO"
    },
    guestClients: {
        EN: "Guests",
        FR: "Invités",
        SPN: "Invitados",
        DE: "Gäste",
        IT: "Ospiti",
        DA: "Gæster",
        AR: "TODO",
        PT: "convidados",
        RO: "Vizitatori",
        IND: "TODO"
    },
    television: {
        EN: "Television",
        FR: "Television",
        SPN: "television",
        DE: "Fernseher",
        IT: "Televisione",
        DA: "TODO",
        AR: "TODO",
        PT: "Televisão",
        RO: "Televiziune",
        IND: "TODO"
    },
    guestStations: {
        EN: "Guest Stations",
        FR: "Stations invité",
        SPN: "Estaciones de invitados",
        DE: "Gastgeräte",
        IT: "Apparati ospiti",
        DA: "Gæstestationer",
        AR: "TODO",
        PT: "estaçoes de convidados",
        RO: "Statii vizitatori",
        IND: "TODO"
    },
    aboutMessage: {
        EN: "Sagemcom Swan™ for mobile devices",
        FR: "Sagemcom Swan™ pour appareils mobiles",
        SPN: "Sagemcom Swan! Para dispositivos moviles'",
        DE: "Sagemcom Swan™ für Mobiltelefone",
        IT: "Sagemcom Swan™ per dispositivo mobile",
        DA: "Sagemcom Swan! Til mobile enheder'",
        AR: "TODO",
        PT: "Sagemcom Swan! Para dispositivos moveis''",
        RO: "Sagemcom Swan! pentru dispozitive mobile",
        IND: "TODO"
    },
    reservedIpAddresses: {
        EN: "Reserved IP Addresses",
        FR: "TODO",
        SPN: "Direcciones IP reservadas",
        DE: "Reservierte IP-Adressen",
        IT: "TODO",
        DA: "Reserveret IP adresser",
        AR: "TODO",
        PT: "Endereços IP reservados",
        RO: "Adresa IP rezervata",
        IND: "TODO"
    },
    reserveIP: {
        EN: "Reserve IP",
        FR: "Réserver IP",
        SPN: "IP reservada",
        DE: "Reserviere IP",
        IT: "Riservare un indirizzo IP",
        DA: "Reservér IP",
        AR: "TODO",
        PT: "Reserve IP",
        RO: "Rezervare IP",
        IND: "TODO"
    },
    cancelReserveIP: {
        EN: "Cancel reservation",
        FR: "Annuler réservation",
        SPN: "Cancelar reserva",
        DE: "Reservierung beenden",
        IT: "Cancellare la riservazione",
        DA: "Annullér reservation",
        AR: "TODO",
        PT: "Cancele reservaçao",
        RO: "Anulare rezervare",
        IND: "TODO"
    },
    sfp: {
        EN: "WAN Layer 1 - SFP",
        FR: "WAN Couche 1 - SFP",
        SPN: "Capa 1 WAN - SFP",
        DE: "WAN Layer 1 - SFP",
        IT: "WAN Livello 1 - SFP",
        DA: "WAN lag 1 - SFP",
        AR: "TODO",
        PT: "WAN Layer 1 - SFP",
        RO: "WAN Layer 1 - SFP",
        IND: "TODO"
    },
    goToHealthCheck: {
        EN: "Go to Health Check",
        FR: "Aller aux tests systèmes ",
        SPN: "Ir a chequeo de estado",
        DE: "Zur Systemprüfung",
        IT: "Andare al Sanity Check",
        DA: "Gå til helbredskontrol",
        AR: "TODO",
        PT: "ir para verificaçao de estado",
        RO: "Du-te la verificarea functionalitatii",
        IND: "TODO"
    },
    noUsbDevices: {
        EN: "No content is available right now, please plug a hard disk or a pen drive to your gateway.",
        FR: "Aucun contenu disponible, connectez un disque dur ou une clé USB au modem",
        SPN: "Contenido no disponible en este momento",
        DE: "Keine Inhalte verfügbar. Bitte verbinden Sie zunächst eine Festplatte oder einen USB-Speicherstick mit Ihrer gateway.",
        IT: "Nessun contenuto disponibile, connettere un disco duro o una chiavetta USB al gateway ",
        DA: "TODO",
        AR: "TODO",
        PT: "nenhum conteudo esta disponivel agora, por favor ligue um disco ou pen drive ao seu gateway",
        RO: "Niciun continut nu este disponibil acum, va rugam conectati un hard disk sau un memory stick la modem.",
        IND: "TODO"
    },
    down: {
        EN: "DOWN",
        FR: "INACTIF",
        SPN: "INACTIVO",
        DE: "AUS",
        IT: "GIÙ",
        DA: "Slukket",
        AR: "أسفل",
        PT: "BAIXO",
        RO: "TODO",
        IND: "TODO"
    },
    up: {
        EN: "UP",
        FR: "ACTIF",
        SPN: "ACTIVO",
        DE: "AN",
        IT: "SU",
        DA: "Tændt",
        AR: "أعلي",
        PT: "CIMA",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStatusDown: {
        EN: "DOWN",
        FR: "INACTIF",
        SPN: "INACTIVO",
        DE: "AUS",
        IT: "GIÙ",
        DA: "OFF",
        AR: "أسفل",
        PT: "BAIXO",
        RO: "TODO",
        IND: "TODO"
    },
    wifiStatusUp: {
        EN: "UP",
        FR: "ACTIF",
        SPN: "ACTIVO",
        DE: "AN",
        IT: "SU",
        DA: "ON",
        AR: "أعلي",
        PT: "CIMA",
        RO: "TODO",
        IND: "TODO"
    },
    error: {
        EN: "Error",
        FR: "Erreur",
        SPN: "Error",
        DE: "Fehler",
        IT: "Errore",
        DA: "Fejl",
        AR: "خطأ   ",
        PT: "erro",
        RO: "TODO",
        IND: "TODO"
    },
    unsynchronized: {
        EN: "Unsynchronized",
        FR: "Non synchronisé",
        SPN: "Desincronizado",
        DE: "Nicht synchronisiert",
        IT: "Non sincronizzato",
        DA: "Ikke synkroniseret",
        AR: "TODO",
        PT: "descincronizado",
        RO: "Nesincronizat",
        IND: "TODO"
    },
    "synchronized": {
        EN: "Synchronized",
        FR: "Synchronisé",
        SPN: "Sincronizado",
        DE: "Synchronisiert",
        IT: "Sincronizzato",
        DA: "Synkroniseret",
        AR: "TODO",
        PT: "Sincronizado",
        RO: "Sincronizat",
        IND: "TODO"
    },
    error_failedtosynchronize: {
        EN: "Error: failed to synchronize",
        FR: "Erreur: Echec de la synchronisation",
        SPN: "Error: fallo de sincronizacion",
        DE: "Synchronisierung fehlgeschlagen",
        IT: "Errore nella sincronizzazione",
        DA: "Fejl: synkronisering mislykkedes",
        AR: "TODO",
        PT: "erro: falho a sincronizar",
        RO: "Eroare: Sincronizare nereusita",
        IND: "TODO"
    },
    complete: {
        EN: "Complete",
        FR: "Achevé",
        SPN: "Completo",
        DE: "Abgeschlossen",
        IT: "Completo",
        DA: "Komplet",
        AR: "TODO",
        PT: "completo",
        RO: "Complet",
        IND: "TODO"
    },
    incomplete: {
        EN: "Incomplete",
        FR: "Inachevé",
        SPN: "Incompleto",
        DE: "Nicht abgeschlossen",
        IT: "Incompleto",
        DA: "Ikke komplet",
        AR: "TODO",
        PT: "incompleto",
        RO: "Incomplet",
        IND: "TODO"
    },
    enabled: {
        EN: "Enabled",
        FR: "Activé",
        SPN: "Habilitado",
        DE: "Aktiviert",
        IT: "Attivo",
        DA: "Aktiveret",
        AR: "TODO",
        PT: "habilitado",
        RO: "Activat",
        IND: "TODO"
    },
    disabled: {
        EN: "Disabled",
        FR: "Désactivé",
        SPN: "Deshabilitado",
        DE: "Deaktiviert",
        IT: "Disattivo",
        DA: "Deaktiveret",
        AR: "TODO",
        PT: "desabilitado",
        RO: "Dezactivat",
        IND: "TODO"
    },
    less: {
        EN: "Less",
        FR: "Moins",
        SPN: "Menos",
        DE: "Weniger",
        IT: "Meno",
        DA: "Mindre",
        AR: "TODO",
        PT: "menos",
        RO: "Mai putin",
        IND: "TODO"
    },
    more: {
        EN: "More",
        FR: "Plus",
        SPN: "Mas",
        DE: "Mehr",
        IT: "Più",
        DA: "Mere",
        AR: "TODO",
        PT: "mais",
        RO: "Mai mult",
        IND: "TODO"
    },
    resolving: {
        EN: "Resolving",
        FR: "Résolution",
        SPN: "Resolviendo",
        DE: "Löse auf",
        IT: "Risoluzione",
        DA: "Løser",
        AR: "TODO",
        PT: "resolvendo",
        RO: "Rezolvare",
        IND: "TODO"
    },
    nosignal: {
        EN: "No signal",
        FR: "Aucun signal",
        SPN: "Sin Señal",
        DE: "Kein Signal",
        IT: "Nessun segnale",
        DA: "Intet signal",
        AR: "TODO",
        PT: "Sem sinal",
        RO: "Fara semnal",
        IND: "TODO"
    },
    connecting: {
        EN: "Connecting",
        FR: "Connexion",
        SPN: "Conectando",
        DE: "Verbinde",
        IT: "In connessione",
        DA: "Forbinder",
        AR: "TODO",
        PT: "ligando",
        RO: "Conectare",
        IND: "TODO"
    },
    updating: {
        EN: "Updating",
        FR: "Mise à jour",
        SPN: "Actualizando",
        DE: "Aktualisiere",
        IT: "Aggiornamento",
        DA: "Opdaterer",
        AR: "TODO",
        PT: "Updating",
        RO: "Actualizare ",
        IND: "TODO"
    },
    authenticating: {
        EN: "Authenticating",
        FR: "Authentification",
        SPN: "Autenticando",
        DE: "Authentifiziere",
        IT: "Autenticazione",
        DA: "Godkender",
        AR: "TODO",
        PT: "autenticando",
        RO: "Autentificare",
        IND: "TODO"
    },
    notregistered: {
        EN: "Not registered",
        FR: "Non enregistré",
        SPN: "No registrado",
        DE: "Nicht registriert",
        IT: "Non registrato",
        DA: "Ikke registreret",
        AR: "TODO",
        PT: "nao registrado",
        RO: "Neinregistrat",
        IND: "TODO"
    },
    registered: {
        EN: "Registered",
        FR: "Enregistré",
        SPN: "Registrado",
        DE: "Registriert",
        IT: "Registrato",
        DA: "Registreret",
        AR: "TODO",
        PT: "registrado",
        RO: "Inregistrat",
        IND: "TODO"
    },
    lowerlayerdown: {
        EN: "Lower Layer Down",
        FR: "Couche basse inactive",
        SPN: "Capa baja caida",
        DE: "Zugang nicht verfügbar",
        IT: "Livello inferiore disattivo",
        DA: "Ned på lavere lag",
        AR: "TODO",
        PT: "Lower Layer Down",
        RO: "Un nivel mai jos",
        IND: "TODO"
    },
    dormant: {
        EN: "Dormant",
        FR: "Dormant",
        SPN: "Dormido",
        DE: "Ruhezustand",
        IT: "In attesa",
        DA: "Dvale",
        AR: "TODO",
        PT: "Dormant",
        RO: "Lent",
        IND: "TODO"
    },
    idle: {
        EN: "Idle",
        FR: "Libre",
        SPN: "Vacio",
        DE: "Frei",
        IT: "Libero",
        DA: "Tomgang",
        AR: "TODO",
        PT: "Idle",
        RO: "Inactiv",
        IND: "TODO"
    },
    calling: {
        EN: "Calling",
        FR: "Appel",
        SPN: "Llamando",
        DE: "Anruf",
        IT: "Chiamata",
        DA: "Ringer op",
        AR: "TODO",
        PT: "chamando",
        RO: "Apelare",
        IND: "TODO"
    },
    unknown: {
        EN: "Unknown",
        FR: "Inconnu",
        SPN: "Desconocido",
        DE: "Unbekannt",
        IT: "Sconosciuto",
        DA: "Ukendt",
        AR: "TODO",
        PT: "desconhecido",
        RO: "Necunoscut",
        IND: "TODO"
    },
    ringing: {
        EN: "Ringing",
        FR: "Sonnerie",
        SPN: "Sonando",
        DE: "Klingelt",
        IT: "Suona",
        DA: "Ringer",
        AR: "TODO",
        PT: "tocando",
        RO: "Sonerie",
        IND: "TODO"
    },
    incall: {
        EN: "In call",
        FR: "En ligne",
        SPN: "En linea",
        DE: "im Gespräch",
        IT: "In linea",
        DA: "I samtale",
        AR: "TODO",
        PT: "em chamada",
        RO: "In Apel",
        IND: "TODO"
    },
    hold: {
        EN: "Hold",
        FR: "Occupé",
        SPN: "Ocupado",
        DE: "Warten",
        IT: "Occupato",
        DA: "Hold",
        AR: "TODO",
        PT: "espere",
        RO: "Ocupat",
        IND: "TODO"
    },
    resetting: {
        EN: "Resetting",
        FR: "Réinitialisation",
        SPN: "Reseteando",
        DE: "Zurücksetzen",
        IT: "Reinizializzazione",
        DA: "Nulstiller",
        AR: "TODO",
        PT: "reseteando",
        RO: "Resetare",
        IND: "TODO"
    },
    disconnecting: {
        EN: "Disconnecting",
        FR: "Déconnexion",
        SPN: "Desconectando",
        DE: "Beende Verbindung",
        IT: "Disconnessione",
        DA: "Frakobler",
        AR: "TODO",
        PT: "desligando",
        RO: "Deconectare",
        IND: "TODO"
    },
    initializing: {
        EN: "Initializing",
        FR: "Initialisation",
        SPN: "Inicializando",
        DE: "Initialisiere",
        IT: "Inizializzazione",
        DA: "Initialisering",
        AR: "TODO",
        PT: "inicializando",
        RO: "Initializare",
        IND: "TODO"
    },
    registering: {
        EN: "Registering",
        FR: "Enregistrement",
        SPN: "Registrando",
        DE: "Registriere",
        IT: "Registrazione",
        DA: "Registrering",
        AR: "TODO",
        PT: "registrando",
        RO: "Inregistrare",
        IND: "TODO"
    },
    unregistering: {
        EN: "Unregistering",
        FR: "Désenregistrement",
        SPN: "Desregistrando",
        DE: "Beende Registrierung",
        IT: "De-registra",
        DA: "Afregistrering",
        AR: "TODO",
        PT: "remover registro",
        RO: "Anulare inregistrare",
        IND: "TODO"
    },
    testing: {
        EN: "Testing",
        FR: "Test en cours",
        SPN: "Testeando",
        DE: "Teste",
        IT: "Test in corso",
        DA: "Tester",
        AR: "TODO",
        PT: "teste",
        RO: "Testare",
        IND: "TODO"
    },
    quiescent: {
        EN: "Quiescent",
        FR: "Inactif",
        SPN: "Inactivo",
        DE: "Inaktiv",
        IT: "Inattivo",
        DA: "Inaktiv",
        AR: "TODO",
        PT: "Quiescent",
        RO: "Static",
        IND: "TODO"
    },
    notpresent: {
        EN: "Not present",
        FR: "Non présent",
        SPN: "No presente",
        DE: "Nicht verfügbar",
        IT: "Non presente",
        DA: "Ikke tilstede",
        AR: "TODO",
        PT: "nao presente",
        RO: "Nu este prezent",
        IND: "TODO"
    },
    not_present: {
        EN: "Not present",
        FR: "Non présent",
        SPN: "No presente",
        DE: "Nicht verfügbar",
        IT: "Non presente",
        DA: "Ikke tilstede",
        AR: "TODO",
        PT: "nao presente",
        RO: "Nu este prezent",
        IND: "TODO"
    },
    offhook: {
        EN: "Off hook",
        FR: "Décroché",
        SPN: "Descolgado",
        DE: "Abgehoben",
        IT: "Sganciato",
        DA: "Røret taget af",
        AR: "TODO",
        PT: "fora gancho",
        RO: "Eliberat",
        IND: "TODO"
    },
    onhook: {
        EN: "On hook",
        FR: "Raccroché",
        SPN: "Colgado",
        DE: "Aufgelegt",
        IT: "Aggangiato",
        DA: "Røret lagt på",
        AR: "TODO",
        PT: "no gancho",
        RO: "Agatat",
        IND: "TODO"
    },
    none: {
        EN: "None",
        FR: "Aucun",
        SPN: "Ninguno",
        DE: "Keine",
        IT: "Nessuno",
        DA: "Ingen",
        AR: "TODO",
        PT: "Nenhum",
        RO: "Nici unul",
        IND: "TODO"
    },
    noneedtoregister: {
        EN: "No need to register",
        FR: "Enregistrement inutile",
        SPN: "No neceista registrar",
        DE: "Registrierung nicht notwendig",
        IT: "Registrazione inutile",
        DA: "Ikke nødvendigt at registrere",
        AR: "TODO",
        PT: "nao é necessario o registro",
        RO: "Nu este necesara inregistrarea",
        IND: "TODO"
    },
    loginfailed: {
        EN: "Login failed",
        FR: "Echec login",
        SPN: "Acceso fallido",
        DE: "Login fehlgeschlagen",
        IT: "Errore nel login",
        DA: "Log ind mislykkedes",
        AR: "TODO",
        PT: "falho login",
        RO: "Eroare logare",
        IND: "TODO"
    },
    login_user_label: {
        EN: "Router Username:",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    login_pass_label: {
        EN: "Router Password:",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    passwordfailed: {
        EN: "Password failed",
        FR: "Echec mot de passe",
        SPN: "Contraseña fallida",
        DE: "Password nicht korrekt",
        IT: "Errore nella password",
        DA: "Adgangskode mislykkedes",
        AR: "TODO",
        PT: "falho password",
        RO: "Eroare parola",
        IND: "TODO"
    },
    noresponse: {
        EN: "No response",
        FR: "Pas de réponse",
        SPN: "Sin respuesta",
        DE: "Keine Antwort",
        IT: "Nessuna risposta",
        DA: "Ingen svar",
        AR: "TODO",
        PT: "Sem resposta",
        RO: "Fara raspuns",
        IND: "TODO"
    },
    serviceunavailable: {
        EN: "Service unavailable",
        FR: "Service indisponible",
        SPN: "Servicio no disponible",
        DE: "Service nicht verfügbar",
        IT: "Servizio indisponibile",
        DA: "Tjeneste ikke tilgængelig",
        AR: "TODO",
        PT: "Serviço nao disponivel",
        RO: "Serviciu indisponibil",
        IND: "TODO"
    },
    otherresponse: {
        EN: "Other response",
        FR: "Autre réponse",
        SPN: "Otra respuesta",
        DE: "Andere Antwort",
        IT: "Altra risposta",
        DA: "Andet svar",
        AR: "TODO",
        PT: "outra resposta",
        RO: "Alt raspuns",
        IND: "TODO"
    },
    erroredSeconds: {
        EN: "Errored Seconds",
        FR: "Secondes en erreur",
        SPN: "Segundos con error",
        DE: "Fehler (Zeit in Sekunden)",
        IT: "Secondi in errore",
        DA: "Fejlsekunder",
        AR: "TODO",
        PT: "Segundos errados",
        RO: "Secunde eronate",
        IND: "TODO"
    },
    severelyErroredSecs: {
        EN: "Severely Errored Seconds",
        FR: "Secondes en erreur grave",
        SPN: "Segundos con error grave",
        DE: "Gravierender Fehler (Zeit in Sekunden)",
        IT: "Secondi in errore grave",
        DA: "Sekunder med alvorlig fejl",
        AR: "TODO",
        PT: "Segundos errados severamente",
        RO: "Secunde eronate severe",
        IND: "TODO"
    },
    reSynchronisations: {
        EN: "Re-synchronisations",
        FR: "Resynchronisation",
        SPN: "Re-sincronizaciones",
        DE: "Erneute Synchronisierung",
        IT: "Risincronizzazione",
        DA: "Resynkronisering",
        AR: "TODO",
        PT: "Re-sincronizaçao",
        RO: "Resincronizari",
        IND: "TODO"
    },
    URI: {
        EN: "URI",
        FR: "URI",
        SPN: "URI",
        DE: "URI",
        IT: "URI",
        DA: "URI",
        AR: "URI",
        PT: "URI",
        RO: "TODO",
        IND: "TODO"
    },
    lightControl: {
        EN: "Light control",
        FR: "Contrôle LEDs",
        SPN: "Control de luz",
        DE: "Leuchtstärke",
        IT: "Controllo LEd",
        DA: "Lysstyring",
        AR: "TODO",
        PT: "control de luz",
        RO: "Control LED-uri",
        IND: "TODO"
    },
    hubLight: {
        EN: "LEDs",
        FR: "LEDs",
        SPN: "LEDs",
        DE: "LEDs",
        IT: "LEDs",
        DA: "LED´er",
        AR: "TODO",
        PT: "LEDs",
        RO: "LED-uri",
        IND: "TODO"
    },
    ledPageInfo: {
        EN: "The front LEDs indicate different functions of the device. It can be set in two modes: Dark mode – after 5 minutes of normal activity, the status LEDs will turn off and the power LED will turn blue. If any error occurs, or the WiFi/WPS button is pushed, LEDs will light up again. Always on – status LEDs will always indicate device status.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "LED på  modemmets forside indikerer dets forskellige funktioner. LED lys kan sættes i to indstillinger: Slukket !! Efter 5 minutters normal tilstand vil alle LED slukke pånær power LED som vil lyse konstant grøn. Hvis der opstår en fejl eller hvis WiFi/WPS knap aktiveres, vil LED blive tændt. Tændt !! LED vil altid vise aktuel status.",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    noDLNAText: {
        EN: "Media sharing is disabled. Enable DLNA to continue.",
        FR: "Partage de contenu désactivé. Activez le DLNA pour continuer.",
        SPN: "Comparticion de contenido deshanilitado. Habilite DLNA para continuar",
        DE: "Die Medienfreigabe ist deaktiviert. Aktivieren Sie DNLA, um fortzufahren.",
        IT: "La condivisione file multimediali è disattivata. Abilitare DLNA per continuare.",
        DA: "Mediadeling er deaktiveret. Aktivér DLNA for at fortsætte. ",
        AR: "TODO",
        PT: "partilha de midia desligada. Activar DLNA para continuar.",
        RO: "Partajarea fisierelor media este dezactivata. Activati DLNA pentru a continua.",
        IND: "TODO"
    },
    networkRange: {
        EN: "Network Range",
        FR: "Intervalle réseau",
        SPN: "Rango de red",
        DE: "Netzwerkbereich",
        IT: "Intervallo della rete",
        DA: "Netværksområde",
        AR: "TODO",
        PT: "alcance de rede",
        RO: "Interval de retea",
        IND: "TODO"
    },
    sessionTimeoutTitle: {
        EN: "Are you still there?",
        FR: "Etes vous encore présent?",
        SPN: "¨Sigue ah¡?",
        DE: "Sind Sie noch da?",
        IT: "Ci sei ancora?",
        DA: "Er du der stadig?",
        AR: "TODO",
        PT: "continua ai?",
        RO: "Esti inca acolo?",
        IND: "TODO"
    },
    sessionTimeoutContent: {
        EN: "Your session will expire in",
        FR: "Votre session va expirer dans",
        SPN: "Su sesion expirara en ",
        DE: "Ihre Sitzung wird beendet in",
        IT: "La sessione terminerà tra",
        DA: "Din session udløber om",
        AR: "TODO",
        PT: "a sua sessao expira em",
        RO: "Sesiunea dumneavoastra va expira in",
        IND: "TODO"
    },
    continueBrowsing: {
        EN: "Continue Browsing",
        FR: "Continuer la navigation",
        SPN: "Continue navegando",
        DE: "Weiter im Internet browsen.",
        IT: "Continuare la navigazione",
        DA: "Fortsæt med at browse",
        AR: "TODO",
        PT: "Continue Browsing",
        RO: "Continuati navigarea",
        IND: "TODO"
    },
    msgGreat: {
        EN: "Signal level here is great.",
        FR: "Niveau de signal optimal ici.",
        SPN: "El nivel de señal aqu¡ es excelente",
        DE: "Die Signalstärke hier ist hervorragend.",
        IT: "La potenza del segnale è ottima qui",
        DA: "Signalstyrken er god.",
        AR: "TODO",
        PT: "Nivel de sinal aquí é otimo",
        RO: "Nivelul semnalului este foarte bun.",
        IND: "TODO"
    },
    msgOk: {
        EN: "The Signal in this location is OK, though it would be again better if you placed an extender nearby or moved your gateway closer.",
        FR: "Niveau de signal correct à cet endroit, vous pourriez encore améliorer la réception en plaçant votre modem plus près ou en ajoutant un extender Wi-Fi.",
        SPN: "Nivel de señal aqui es bueno",
        DE: "Die Signalstärke an diesem Standort ist in Ordnung. Um diese zu verbessern sollten Sie gegebenenfalls hier in der Nähe eine weitere WLAN-Basisstation (oder das Gateway selbst) in Betrieb zu nehmen.",
        IT: "La potenza del segnale è corretta in questo posto, ma puoi ancora migliorare la ricezione mettendo il modem più vicino o aggiungendo un Wi-Fi extender",
        DA: "Signalet på stedet er OK, det vil dog blive bedre hvis du opsætter en forlænger tæt ved eller flytter din gateway tættere på.",
        AR: "TODO",
        PT: "o sinal neste local é OK, no entanto seria melhor se coloca-se um amplificador ou mover o gateway mais proximo.",
        RO: "Semnalul in aceasta locatie este OK, totusi ar fi mai bine daca ati plasa un prelungitor in apropiere sau ati muta modem-ul mai aproape.",
        IND: "TODO"
    },
    msgPoor: {
        EN: "The Signal in this location is poor, you might be able to improve the signal here if you placed an extender nearby or moved your gateway closer.",
        FR: "Niveau de signal faible à cet endroit, vous pourriez améliorer la réception en plaçant votre modem plus près ou en ajoutant un extender Wi-Fi",
        SPN: "Nivel de señal aqui es pobre",
        DE: "Die Signalstärke an diesem Standort ist in nicht gut. Um diese zu verbessern sollten Sie versuchen hier in der Nähe eine weitere WLAN-Basisstation (oder das Gateway selbst) in Betrieb zu nehmen.",
        IT: "Potenza del segnale debole in questo posto, puoi migliorare la ricezione mettendo il modem più vicino o aggiungendo un extender Wi-Fi",
        DA: "Il segnale in questa posizione è scarso e probabilmente potrebbe essere migliorato posizionando un dispositivo extender nei paraggi o avvicinando il gateway.",
        AR: "TODO",
        PT: "o sinal neste local é pobre, pode melhorar o sinal com um amplificador ou mover o gateway mais proximo.",
        RO: "Semnalul in aceasta locatie este slab, ati putea imbunatati semnalul daca ati plasa un prelungitor in apropiere sau ati muta modem-ul mai aproape.",
        IND: "TODO"
    },
    poor: {
        EN: "POOR",
        FR: "FAIBLE",
        SPN: "Pobre",
        DE: "Schwach",
        IT: "Debole",
        DA: "DÅRLIG",
        AR: "TODO",
        PT: "POBRE",
        RO: "SLAB",
        IND: "TODO"
    },
    ok: {
        EN: "OK",
        FR: "OK",
        SPN: "Bueno",
        DE: "OK",
        IT: "Ok",
        DA: "OK",
        AR: "TODO",
        PT: "OK",
        RO: "OK",
        IND: "TODO"
    },
    great: {
        EN: "GREAT",
        FR: "Excellent",
        SPN: "Excelente",
        DE: "Exzellent",
        IT: "Eccellente",
        DA: "GODT",
        AR: "TODO",
        PT: "OTIMO",
        RO: "FOARTE BUN",
        IND: "TODO"
    },
    wifiStrength: {
        EN: "Wi-Fi Strength",
        FR: "Force du signal",
        SPN: "Nivel de WiFI",
        DE: "WLAN-Signalstärke",
        IT: "Potenza del segnale Wi-Fi",
        DA: "WiFi-styrke",
        AR: "TODO",
        PT: "força Wi-Fi ",
        RO: "Putere Wi-Fi",
        IND: "TODO"
    },
    changeChannelTitle: {
        EN: "Wi-Fi CHANNEl",
        FR: "CANAL Wi-Fi",
        SPN: "Canal de WiFi",
        DE: "Funkkanal",
        IT: "Canale Wi-Fi",
        DA: "Wi-Fi kanal",
        AR: "TODO",
        PT: "CANAL Wi-Fi",
        RO: "CANAL Wi-Fi",
        IND: "TODO"
    },
    changeChannelMsg1: {
        EN: "Optimize channel selection for this device",
        FR: "Optimiser la sélection du canal pour cet appareil",
        SPN: "Optimizar al seleccion de canal para este dispositivo",
        DE: "Auswahl des Funkkanals für dieses Gerät optimieren",
        IT: "Ottimizza la selezione del canale per questo apparato",
        DA: "Optimer kanalvalg for denne enhed",
        AR: "TODO",
        PT: "optimize a seleçao de canal para este dispositivo",
        RO: "Optimizare selectare canal pentru acest echipament",
        IND: "TODO"
    },
    changeChannelMsg2: {
        EN: "All other connected devices might suffer a loss of signal quality",
        FR: "Les autres appareils connectés pourraient subir une perte de qualité de signal. ",
        SPN: "Todos los demas dispositivos conectados podiran sufrir perdida de señal",
        DE: "Die Qualität des Funksignals aller verbundenen Geräte wird unter Umständen negativ beeinflusst",
        IT: "Tutti gli apparati potrebbero subire una perdida di qualità del segnale",
        DA: "Alle forbundne enheder kan have dårlig signalkvalitet",
        AR: "TODO",
        PT: "todos os outros dispositivos ligados podem sofrer uma perda de qualidade de sinal",
        RO: "Toate celelalte dispozitive conectate pot suferi pierderi ale calitatii semnalului",
        IND: "TODO"
    },
    changeChannelMsg3Part1: {
        EN: "Configuration changed to channel",
        FR: "La configuration a changé pour le canal",
        SPN: "Cambio de configuracion de canal",
        DE: "Konfiguration wurde auf folgenden Funkkanal geändert",
        IT: "Configurazione cambiata sul canale",
        DA: "Konfigurationen er ændret til den pågældende kanal",
        AR: "TODO",
        PT: "configuraçao alterada para canal",
        RO: "Configurare schimbata pe canal",
        IND: "TODO"
    },
    changeChannelMsg3Part2: {
        EN: "For better Wi-Fi performance with this device, you will be disconnected from the Wi-Fi network temporarily.",
        FR: "Pour de meilleures performances avec cet appareil, vous serez déconnecté temporairement du réseau Wi-Fi.",
        SPN: "Para un mejor rendimiento WiFi en este dispositivo",
        DE: "Um eine bessere Verbindungsqualität für Ihr Gerät zu erreichen werden Sie kurzfristig vom WLAN getrennt",
        IT: "Per prestazioni migliori su questo apparato potresti esser disconnesso dalla rete Wi-Fi per qualche secondo",
        DA: "for bedre Wi-Fi ydeevne på denne enhed. Din Wi-Fi forbindelse vil blive afbrudt midlertidigt.",
        AR: "TODO",
        PT: "Para melhor performance de Wi-Fi este dispositivo, ele será desligado da rede Wi-Fi temporariamente.",
        RO: "Pentru o performanta Wi-Fi imbunatatita cu acest terminal, vei fi deconectat temporar de pe aceasta retea Wi-Fi.",
        IND: "TODO"
    },
    channelTip1: {
        EN: "Note, the channel must be scanned before using it. The Wi-Fi may be unusable for about one minute",
        FR: "Attention, le canal doit être analysé avant d'être utilisé. Le Wi-Fi pourra être inutilisable pendant une minute environ",
        SPN: "Nota",
        DE: "Hinweis: vor der Nutzung muss der Funkkanal zunächst geprüft werden. Die WLAN-Verbindung wird während dieser Überprüfung ca. 1 Minute nicht zur Verfügung stehen",
        IT: "Nota, il canale deve essere scansionato prima di poterlo utilizzare. Il Wi-Fi potrebbe non funzionare per un minuto circa",
        AR: "TODO",
        PT: "TODO",
        RO: "Canalul trebuie scanat inainte de utilizare. Reteau Wi-fi nu va fi functionala pentru aproximativ 1 minut.",
        IND: "TODO"
    },
    channelTip2: {
        EN: "Note, the channel must be scanned before using it. The Wi-Fi may be unusable for about 10 minutes",
        FR: "Attention, le canal doit être analysé avant d'être utilisé. Le Wi-Fi pourra être inutilisable pendant 10 minutes environ",
        SPN: "Nota",
        DE: "Hinweis: vor der Nutzung muss der Funkkanal zunächst geprüft werden. Die WLAN-Verbindung wird während dieser Überprüfung ca. 10 Minuten nicht zur Verfügung stehen",
        IT: "Nota, il canale deve essere scansionato prima di poterlo utilizzare. Il Wi-Fi potrebbe non funzionare per dieci minuti circa",
        AR: "TODO",
        PT: "TODO",
        RO: "Canalul trebuie scanat inainte de utilizare. Reteau Wi-fi nu va fi functionala pentru aproximativ 10 minute.",
        IND: "TODO"
    },
    legendWifi: {
        EN: "Click on the labels above to show and hide the Wi-Fi networks",
        FR: "Cliquez ci-dessus pour cacher ou afficher les réseaux Wi-Fi",
        SPN: "Click en las etiquetas de abajo para mostrar y ocultar las redes WiFi",
        DE: "Klicken Sie auf die Schaltfläche um verfügbare Funknetze anzuzeigen oder auszublenden",
        IT: "Seleziona qui sopra per mostrare o nascondere le reti Wi-Fi",
        DA: "Klik på mærkerne ovenfor, for at vise og skjule WiFi-netværk",
        AR: "TODO",
        PT: "pressione as etiquetas para mostrar ou ocultar as redes de Wi-Fi",
        RO: "Apasati pe etichetele de mai sus pentru a afisa si ascunde retelele Wi-Fi",
        IND: "TODO"
    },
    testEthernetCable: {
        EN: "Test ethernet cables",
        FR: "Test des câbles Ethernet",
        SPN: "Test de cables ethernet",
        DE: "Test der Ethernet/LAN-Verbindung (kabelgebunden)",
        IT: "Test dei cavi ethernet",
        DA: "Test ethernet kabler",
        AR: "TODO",
        PT: "teste os cabos de ethernet",
        RO: "Testare cabluri ethernet",
        IND: "TODO"
    },
    testLanCableInfoShort: {
        EN: "This indicates if there is faults on LAN cables. If the test shows a cable having a 'Short', the cable must be exchanged.",
        FR: "Indique s'il y a un défaut sur les câbles du réseau local. Si le test affiche un câble en 'Court-circuit', le câble doit-être changé.",
        SPN: "TODO",
        DE: "Gibt Hinweise auf die Qualität der verwendeten LAN-Kabels. Wenn das Ergebnis des Tests 'Kurz' lautet, sollten Sie das entsprechende Kabel austauschen.",
        IT: "Questo indica se ci sono problemi sui cavi della rete domestica. Si il test indica un 'corto circuito', il cavo deve essere cambiato",
        DA: "Dette viser, om der er en fejl på Ethernet-kabler. Hvis testen viser et kabel med 'kortslutning', skal kablet udskiftes.",
        AR: "TODO",
        PT: "Isto indica se há falo nos cabos LAN. Se o teste mostra um cabo em curto, o cabo tem que ser substituido.",
        RO: "Acest test indica daca exista defecte pe cablurile LAN. In cazul in care testul arata ca un cablu  are un 'scurt', acestal trebuie sa fie schimbat.'",
        IND: "TODO"
    },
    testLanCableInfoOpen: {
        EN: "If the test shows an 'open' cable, there is a cable inserted in the gateway but it is not connected at the far end.",
        FR: "Si le test affiche un câble 'ouvert', il y a un câble inséré dans le modem mais il n'est pas connecté a l'autre extrémité.",
        SPN: "TODO",
        DE: "Wenn als Ergebnis des Tests 'Offen' angezeigt wird, ist am anderen Ende des Gateways kein Gerät angeschlossen.",
        IT: "Se il test indica 'aperto', vuol dire che un cavo è inserito nel modem ma l'altra estremità non è connessa ",
        DA: "Hvis testen viser et 'åbent' kabel, er der et kabel isat gatewayen, der ikke er forbundet i den anden ende.",
        AR: "TODO",
        PT: "Se o teste mostra o cabo em aberto, existe um cabo ligado ao gateway mas nao tem ligaçao no outro extremos.",
        RO: "Daca in timpul testului se identifica un cablu ca fiind 'deschis', acesta este conectat la router insa nu este conectat la priza.'",
        IND: "TODO"
    },
    testLanCableInfoLength: {
        EN: "Check if the cable is connected at the far end or has been cut. The test result shows the length to the open end.",
        FR: "Vérifiez si le câble est connecté à l'autre extrêmité ou a été coupé. Le résultat donne la distance à partir du modem.",
        SPN: "Verifique si el cable esta conectado en el otro extremo o ha sido cortado. El resultado del test muestra la longitud del extremo abierto",
        DE: "Prüft, ob das LAN-Kabel am anderen Ende mit einem anderen Gerät verbunden ist oder durchtrennt wurde. Das Ergebnis gibt einen Hinweis darauf, in welcher Entfernung vom Gateway es ein Problem gibt.",
        IT: "Verifica se il cavo è connesso all'estremità opposta o è stato tagliato. Il risultato indica la distanza a partire dal modem",
        DA: "Kontrollér om kablet er forbundet i den anden ende eller er skåret over. Testresultatet viser afstanden til den åbne ende.",
        AR: "TODO",
        PT: "Verifique se o cabo esta ligado ou foi cortado. O resultado do teste mostra o comprimento até ao final.",
        RO: "Verificati daca respectivul cablu este conectat la priza sau daca nu cumva este taiat/intrerupt. Testul rezultatului indica distanta pe care este intrerupt.",
        IND: "TODO"
    },
    startAllTests: {
        EN: "Start All Tests",
        FR: "Démarrer tous les tests",
        SPN: "Comenzar todos los tests",
        DE: "Starte alle Tests",
        IT: "Inizia tutti i test",
        DA: "Start alle test",
        AR: "TODO",
        PT: "começar todos os testes",
        RO: "Porniti toate testele",
        IND: "TODO"
    },
    disconected: {
        EN: "Disconected",
        FR: "Déconnecté",
        SPN: "Desconectado",
        DE: "Getrennt",
        IT: "Disconnesso",
        DA: "Frakoblet",
        AR: "TODO",
        PT: "desligado",
        RO: "Deconectat",
        IND: "TODO"
    },
    length: {
        EN: "length",
        FR: "longueur",
        SPN: "Longitud",
        DE: "Länge",
        IT: "Lunghezza",
        DA: "længde",
        AR: "TODO",
        PT: "comprimento",
        RO: "Lungime",
        IND: "TODO"
    },
    open: {
        EN: "Open",
        FR: "Ouvrir",
        SPN: "Abierto",
        DE: "Offen",
        IT: "Aperto",
        DA: "Åbne",
        AR: "TODO",
        PT: "aberto",
        RO: "Deschis",
        IND: "TODO"
    },
    close: {
        EN: "Close",
        FR: "Fermer",
        SPN: "Cerrado",
        DE: "Geschlossen",
        IT: "Chiuso",
        DA: "Lukke",
        AR: "TODO",
        PT: "fechado",
        RO: "Inchis",
        IND: "TODO"
    },
    inconditional: {
        EN: "Immediately",
        FR: "Immédiat",
        SPN: "Inmediatamente",
        DE: "Sofort",
        IT: "Immediatamente",
        DA: "Straks",
        AR: "TODO",
        PT: "imediatamente",
        RO: "Imediat",
        IND: "TODO"
    },
    busy: {
        EN: "Busy",
        FR: "Occupé",
        SPN: "Ocupado",
        DE: "Besetzt",
        IT: "Occupato",
        DA: "Optaget",
        AR: "TODO",
        PT: "ocupado",
        RO: "Ocupat",
        IND: "TODO"
    },
    notResponding: {
        EN: "Not responding",
        FR: "Pas de réponse",
        SPN: "No responde",
        DE: "Antwortet nicht",
        IT: "Senza risposta",
        DA: "Svarer ikke",
        AR: "TODO",
        PT: "nao responde",
        RO: "Nu raspunde",
        IND: "TODO"
    },
    forwarding: {
        EN: "Forwarding",
        FR: "Transfert",
        SPN: "Reenvio",
        DE: "Weiterleitung",
        IT: "Trasferimento",
        DA: "Viderestiller",
        AR: "TODO",
        PT: "encaminhando",
        RO: "Redirectionare",
        IND: "TODO"
    },
    forwardingPlace: {
        EN: "Enter phone or keyword voicemail",
        FR: "Entrer le téléphone ou le mot-clé voicemail",
        SPN: "Introduzca tel‚fono o palabra clave del buzón de voz",
        DE: "Geben Sie das Passwort für das Telefon oder den Anrufbeantworter ein",
        IT: "Inserire il numero o la password della segretieria",
        DA: "Gå til telefon- eller voicemail",
        AR: "TODO",
        PT: "escreva o telefone ou a palabra passe do voicemail",
        RO: "Introduceti telefonul sau parola de voicemail",
        IND: "TODO"
    },
    notRespondingFor: {
        EN: "Not responding for",
        FR: "Pas de réponse pendant",
        SPN: "Sin respuesta para",
        DE: "Antwortet nicht seit",
        IT: "Senza risposta per",
        DA: "Ikke svaret i",
        AR: "TODO",
        PT: "nao responde por",
        RO: "Nu raspunde pentru ",
        IND: "TODO"
    },
    cfHelpTip1: {
        EN: "Use this form to insert Call Forwarding rules.",
        FR: "Utiliser ce formulaire pour insérer les règles de redirection de port",
        SPN: "Utilice este formato para insertar las reglas de reenv¡o de llamadas",
        DE: "Nutzen Sie diese Einstellungen, um Anrufweiterleitungsregeln einzustellen.",
        IT: "Usa questo formulario per inserire le regole per il trasferimento di chiamata",
        DA: "Anvend denne formular til at opsætte regler for viderestilling af opkald.",
        AR: "TODO",
        PT: "use este formulario para inserir as regras de encaminhamento das chamadas",
        RO: "Utilizati acest formular pentru a introduce reguli pentru redirectionarea apelurilor.",
        IND: "TODO"
    },
    cfHelpTip2: {
        EN: "This table shows the call forwarding rule list.",
        FR: "Cette table montre la liste des règles de redirection de port",
        SPN: "Esta tabla muestra la lista de reglas del reenv¡o de llamadas",
        DE: "Diese Tabelle gibt eine Übersicht aller eingerichteten Anrufweiterleitungsregeln.",
        IT: "Questa tabella mostra la lista delle regole per il trasferimento di chiamata",
        DA: "Denne tabel viser oversigten over regler for viderestilling af opkald.",
        AR: "TODO",
        PT: "esta tabela mostra as lista de regras de encaminhamento",
        RO: "Aceasta  tabela arata lista regulilor de redirectionare a apelului.",
        IND: "TODO"
    },
    cfHelpTip3: {
        EN: "Enable or disable a rule.",
        FR: "Activer ou désactiver une règle",
        SPN: "Habilitar o deshabilitar un regla",
        DE: "Regel aktivieren oder abschalten.",
        IT: "Attiva o disattiva una regola",
        DA: "Aktivere eller deaktivere en regel.",
        AR: "TODO",
        PT: "habilitar ou desabilitar uma regra",
        RO: "Activeaza sau dezactiveaza o regula.",
        IND: "TODO"
    },
    cfHelpTip4: {
        EN: "Delete or update a rule.",
        FR: "Effacer ou éditer une règle",
        SPN: "Eliminar o actualizar una regla",
        DE: "Regel aktualisieren oder löschen.",
        IT: "Cancella o configura una regola",
        DA: "Slet eller opdatér en regel.",
        AR: "TODO",
        PT: "apagar ou actualizar uma regra",
        RO: "Sterge sau editeaza o regula.",
        IND: "TODO"
    },
    healthCheckTip1: {
        EN: "Click here to start all tests asynchronously.",
        FR: "Cliquer ici pour démarrer tous les tests.",
        SPN: "Click para empezar todos los tests as¡ncronamente",
        DE: "Klicken Sie hier, um alle Tests nacheinander durchzuführen.",
        IT: "Seleziona qui per iniziare tutti i test in modo asincrono",
        DA: "Klik her for at starte alle test asynkront.",
        AR: "TODO",
        PT: "pressione aquí para arrancar todos os testes de forma asincrona",
        RO: "Apasati aici pentru a incepe toate testele asincron.",
        IND: "TODO"
    },
    hcDiagnostics: {
        EN: "Health Check - Diagnostics",
        FR: "Auto-diagnostique",
        SPN: "Chequeo de estado - Diagnostico",
        DE: "Selbstüberprüfung",
        IT: "Auto-diagnostica",
        DA: "Helbredskontrol - diagnose",
        AR: "TODO",
        PT: "diagnostico",
        RO: "Verificare status - diagnostic",
        IND: "TODO"
    },
    hcTestMultipleDHCP: {
        EN: "Test for multiple DHCP servers",
        FR: "Tester la présence de plusieurs serveurs DHCP",
        SPN: "Test de servidores DCHP",
        DE: "Test auf multiple DHCP-Server im Heimnetz",
        IT: "Test per la presenza di molteplici server DHCP",
        DA: "Test af flere DHCP-servere",
        AR: "TODO",
        PT: "teste multiplos servidores DHCP",
        RO: "Test pentru multiple servere DHCP",
        IND: "TODO"
    },
    hdNoDHCPConflict: {
        EN: "No DHCP conflict",
        FR: "Pas de conflit DHCP",
        SPN: "Sin conflicto DHCP",
        DE: "Kein DHCP-Konflikt",
        IT: "Nessun conflitto DHCP",
        DA: "Ingen DHCP-konflikt",
        AR: "TODO",
        PT: "nao há conflicto DHCP",
        RO: "Niciun conflict DHCP",
        IND: "TODO"
    },
    hcDhcpServers: {
        EN: "DHCP Servers",
        FR: "Serveurs DHCP",
        SPN: "Servidores DHCP",
        DE: "DHCP-Server",
        IT: "Server DHCP",
        DA: "DHCP-servere",
        AR: "TODO",
        PT: "Servidores DHCP",
        RO: "Servere DHCP",
        IND: "TODO"
    },
    hcMultipleDHCP: {
        EN: "Multiple DHCP servers found",
        FR: "Plusieurs serveurs DHCP trouvés",
        SPN: "Varios servidores DHCP encontrados",
        DE: "Es wurden mehrere DHCP-Server in Ihrem Heimnetz gefunden. Bitte sorgen Sie dafür, dass immer nur ein DHCP-Server in Ihrem Heimnetz aktiviert ist!",
        IT: "Sono stati trovati molteplici server DHCP",
        DA: "Der er fundet flere DHCP-servere",
        AR: "TODO",
        PT: "Multiplos servidore DHCP encontrados",
        RO: "Multiple servere DHCP gasite",
        IND: "TODO"
    },
    hcTestIPConflict: {
        EN: "Test for IP address conflict",
        FR: "Tester les conflits d'adresse IP",
        SPN: "Test para conflictos de direcciones IP",
        DE: "Test auf Adresskonflikt bei IP-Adressen",
        IT: "Test per la presenza di conflitti di indirizzi IP",
        DA: "Test for IP-adressekonflikt",
        AR: "TODO",
        PT: "teste conflito de endereço IP",
        RO: "Test pentru conflict de adresa IP",
        IND: "TODO"
    },
    hcNoIPConflict: {
        EN: "No IP address conflict",
        FR: "Pas de conflit d'adresse IP",
        SPN: "No hay conflicto de direcciones IP",
        DE: "Keinen IP-Adresskonflikt gefunden",
        IT: "Nessun conflitto di indirizzo IP",
        DA: "Ingen IP-adressekonflikt",
        AR: "TODO",
        PT: "Sem conflito de endereço IP",
        RO: "Niciun conflict de adresa IP",
        IND: "TODO"
    },
    hcIPConflicted: {
        EN: "Conflicted IP addresses",
        FR: "Adresses IP en conflit",
        SPN: "Direcciones IP conflictivas",
        DE: "Liste der mehrfach vorhandenen IP-Adressen. Bitte sorgen Sie dafür, dass in Ihrem Heimnetz jedes Endgerät eine eindeutige IP-Adresse erhält.",
        IT: "Indirizzo IP in conflitto",
        DA: "IP-adresser med konflikt",
        AR: "TODO",
        PT: "conflito de endereços IP",
        RO: "Adrese IP conflictuale",
        IND: "TODO"
    },
    hcIPConflictFound: {
        EN: "IP addresses conflicts found",
        FR: "Conflit d'adresses IP trouvé",
        SPN: "Conflicto de direcciones IP encontrado",
        DE: "Konflikt bei IP-Adressen gefunden",
        IT: "Sono stati trovati indirizzi IP in conflitto",
        DA: "Der er fundet IP-adresser med konflikt",
        AR: "TODO",
        PT: "conflito de endereços IP encontrados",
        RO: "Conflicte de adrese IP gasite",
        IND: "TODO"
    },
    hcTestProgress: {
        EN: "Test in progress...",
        FR: "Test en cours...",
        SPN: "Test en curso?",
        DE: "Test wird gerade durchgeführt...",
        IT: "Test in corso...",
        DA: "Test i gang...",
        AR: "TODO",
        PT: "teste em progresso...",
        RO: "Test in curs?",
        IND: "TODO"
    },
    hcLanNotConfigured: {
        EN: "PC Ethernet port is not configured with auto",
        FR: "Le port Ethernet du PC n'est pas configuré en mode AUTO",
        SPN: "Puerto ethernet del ordenador no configurado en modo auto",
        DE: "Der LAN-Anschluss der Gegenstelle ist nicht auf 'Auto' eingestellt",
        IT: "La porta ethernet del PC non è configurata in modo AUTO",
        DA: "Ethernet-porten på pc er ikke opsat med auto",
        AR: "TODO",
        PT: "porta de PC ethernet nao configurada como auto",
        RO: "Portul PC Ethernet nu este configurat automat",
        IND: "TODO"
    },
    healthCheckTip2: {
        EN: "Click here to start the multiple DHCP servers test.",
        FR: "Cliquer ici pour démarrer le test de plusieurs serveurs DHCP.",
        SPN: "click para empezar el test sobre varios servidores DHCP",
        DE: "Klicken Sie hier um die Suche nach mehrfachen DHCP-Servern in Ihrem Heimnetz zu starten.",
        IT: "Seleziona qui per iniziare il test sui molteplici server DHCP",
        DA: "Klik her, for at starte test af flere DHCP-servere.",
        AR: "TODO",
        PT: "pressione aquí para arrancar com o teste em multiplos servidores DHCP",
        RO: "Apasati aici pentru a incepe testul pentru multiple servere DHCP",
        IND: "TODO"
    },
    healthCheckTip3: {
        EN: "Here you can check if there´s any DHCP server conflicts on your network.",
        FR: "Ici, vous pouvez vérifier s'il y a des conflits de serveurs DHCP sur votre réseau.",
        SPN: "Aqui puede verificar si hay algun conflicto  de servidor DHCP en su red",
        DE: "Hier sehen Sie, ob es einen Konflikt durch mehrere DHCP-Server in Ihrem Heimnetz gibt.",
        IT: "Qui puoi verificare se ci sono dei conflitti di server DHCP nella tua rete",
        DA: "Her kan du kontrollere, om der er nogen DHCP-serverkonflikter i dit netværk.",
        AR: "TODO",
        PT: "aquí pode consultar se há algum conflito de servidor DHCP na sua rede",
        RO: "Aici puteti verifica daca exista vreun conflict de server DHCP in retea.",
        IND: "TODO"
    },
    healthCheckTip4: {
        EN: "Click here to check if there are any devices with conflicting IP.",
        FR: "Cliquer ici pour vérifier s'il y a des conflits d'adresses IP sur votre réseau local.",
        SPN: "Click para verificar si hay dispositivos con conflicto IP",
        DE: "Klicken Sie hier, um ihr Heimnetz auf Konflikte bei IP-Adresse zu überprüfen.",
        IT: "Qui puoi verificare se ci sono degli indirizzi IP in conflitto nella tua rete",
        DA: "Klik her, for at kontrollere, om der er nogen enheder med IP der er i konflikt.",
        AR: "TODO",
        PT: "pressione aquí para consultar se há algum dispositivo com conflito de IP",
        RO: "Apasati aici pentru a verifica daca sunt dispozitive cu IP-uri in conflict.",
        IND: "TODO"
    },
    healthCheckTip5: {
        EN: "Here you can check if there are devices with the same IP on your network.",
        FR: "Cliquer ici pour vérifier s'il y a plusieurs appareils avec la même adresse IP sur votre réseau local.",
        SPN: "Aqui puede verificar si hay dispositivos con la misma IP en su red",
        DE: "Hier können Sie Endgeräte mit gleicher IP-Adresse identifizieren.",
        IT: "Qui puoi verificare se ci sono apparati con lo stesso indirizzo IP nella tua rete",
        DA: "Her kan du kontrollere, om der er enheder med samme IP i dit netværk.",
        AR: "TODO",
        PT: "aquí pode consultar se ha varios dispositivos com o mesmo IP na sua rede",
        RO: "Aici puteti verifica daca exista dispozitive cu acelasi IP in retea.",
        IND: "TODO"
    },
    healthCheckTip6: {
        EN: "Click here to check the availability of your LAN interfaces.",
        FR: "Cliquer ici pour vérifier la disponibilité de vos interfaces de réseau local.",
        SPN: "Click para verificar la disponibilidad de los interfaces LAN",
        DE: "Klicken Sie hier, um die Verfügbarkeit Ihrer Ethernet/LAN-Anschlüsse zu prüfen.",
        IT: "Seleziona qui per verificare la disponibilità delle interfacce LAN",
        DA: "Klik her, for at kontrollere tilgængeligheden af dine LAN-interfaces.",
        AR: "TODO",
        PT: "pressione aquí para verificar a disponibilidade dos interfaces de LAN na sua rede.",
        RO: "Apasati aici pentru a verifica disponibilitatea interfetelor LAN.",
        IND: "TODO"
    },
    healthCheckTip7: {
        EN: "Here you can check the usage of the LAN ports on your gateway.",
        FR: "Ici, vous pouvez vérifier l'utilisation des ports du réseau local.",
        SPN: "TODO",
        DE: "Hier können Sie sehen, an welchen LAN-Anschlüssen Ihres Gateways andere Endgeräte angeschlossen sind.",
        IT: "Qui puoi verificare l'utilizzo delle porte LAN della tua rete",
        DA: "Her kan du kontrollere anvendelsen af LAN-porte på din gateway.",
        AR: "TODO",
        PT: "aquí pode consultar o uso das portas LAN do seu gateway",
        RO: "Aici puteti verifica gradul de folosire al porturilor LAN pe router.",
        IND: "TODO"
    },
    tabTipMaintenance: {
        EN: "You can navigate through other tools and configurations.",
        FR: "Vous pouvez naviguer à travers d'autres outils et configurations.",
        SPN: "Puede navegar a traves de otras herramientas y configuraciones",
        DE: "Sie können durch andere Werkzeuge und Einstellungen navigieren.",
        IT: "Puoi navigare verso altri strumenti e configurazioni",
        DA: "Du kan navigere gennem andre værktøjer og konfigurationer.",
        AR: "TODO",
        PT: "aquí pode navegar atravez de outras ferramentas e configuraçoes",
        RO: "Puteti naviga intre alte functionalitati si configurari.",
        IND: "TODO"
    },
    operatorLog: {
        EN: "Operator Logs",
        FR: "Logs opérateur",
        SPN: "Logs de operador",
        DE: "Operator-Logs",
        IT: "Log operatore",
        DA: "Operatør-logge",
        AR: "TODO",
        PT: "registros de operadores",
        RO: "Jurnalul Operatorului",
        IND: "TODO"
    },
    messages: {
        EN: "Messages",
        FR: "Messages",
        SPN: "Mensajes",
        DE: "Nachrichten",
        IT: "Messaggi",
        DA: "Beskeder",
        AR: "TODO",
        PT: "mensagens",
        RO: "Mesaje",
        IND: "TODO"
    },
    date: {
        EN: "Date",
        FR: "Date",
        SPN: "Fecha",
        DE: "Datum",
        IT: "Data",
        DA: "Dato",
        AR: "TODO",
        PT: "data",
        RO: "Data",
        IND: "TODO"
    },
    duration: {
        EN: "Duration",
        FR: "Durée",
        SPN: "Duracion",
        DE: "Dauer",
        IT: "Durata",
        DA: "Varighed",
        AR: "TODO",
        PT: "duraçao",
        RO: "Durata",
        IND: "TODO"
    },
    origin: {
        EN: "Origin",
        FR: "Origine",
        SPN: "Origen",
        DE: "Herkunft",
        IT: "Origine",
        DA: "Oprindelse",
        AR: "TODO",
        PT: "origem",
        RO: "Origine",
        IND: "TODO"
    },
    nameOrNumber: {
        EN: "Name or Number",
        FR: "Nom ou numéro",
        SPN: "Nombre o numero",
        DE: "Name oder Nummer",
        IT: "Nome o numero",
        DA: "Navn og nummer",
        AR: "TODO",
        PT: "nome ou numero",
        RO: "Nume sau numar",
        IND: "TODO"
    },
    amsMailbox: {
        EN: "Mailbox",
        FR: "TODO",
        SPN: "Buzon de correo",
        DE: "Anrufbeantworter",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Casuta postala",
        IND: "TODO"
    },
    ammHelpTip1: {
        EN: "This table shows all your messages.",
        FR: "Cette table affiche tous vos messages.",
        SPN: "Esta tabla muestra todos sus mensajes",
        DE: "Diese Übersicht zeigt alle Nachrichten.",
        IT: "Questa tabella mostra tutti i tuoi messaggi",
        DA: "Denne tabel viser alle dine beskeder.",
        AR: "TODO",
        PT: "esta tabela mostra todas as suas mensagens",
        RO: "Aceasta tabela afiseaza toate mesajele dumneavoastra.",
        IND: "TODO"
    },
    ammHelpTip2: {
        EN: "Use this audio player to listen messages.",
        FR: "Utiliser ce lecteur audio pour écouter vos messages téléphoniques.",
        SPN: "Utilice este reproductor de audio para escuchar los mensajes",
        DE: "Nutzen Sie diesen Player, um Nachrichten abzuhören.",
        IT: "Usa questo lettore audio per ascoltare i messaggi della segreteria telefonica",
        DA: "Anvend denne lydafspiller til at lytte til beskeder.",
        AR: "TODO",
        PT: "use este leitor de audio para ouvir as mensagens",
        RO: "Folositi acest player audio pentru a asculta mesajele.",
        IND: "TODO"
    },
    ammHelpTipTab: {
        EN: "You can navigate through other answering machine configuration options here",
        FR: "Vous pouvez accéder ici à plus d'options de configuration de votre répondeur téléphonique.",
        SPN: "Puede navegar a traves de otras configuraciones de contestador automatico aqui",
        DE: "Hier können Sie durch andere Einstellungsmöglichkeiten des Anrufbeantworters navigieren",
        IT: "Qui puoi accedere ad altre opzioni di configurazione della segreteria telefonica",
        DA: "Du kan navigere gennem andre konfigurationsmuligheder for telefonsvareren her",
        AR: "TODO",
        PT: "pode navegar aquí atravez das opçoes de configuraçao de outro atendedor de chamadas",
        RO: "Puteti naviga printre alte optiuni de configurare pentru robotul telefonic",
        IND: "TODO"
    },
    amsHelpTip1: {
        EN: "This is the name field.",
        FR: "Champ nom",
        SPN: "Este es el campo nombre",
        DE: "Dies ist das Feld für den Namen",
        IT: "Campo per il nome",
        DA: "Dette er navnefeltet.",
        AR: "TODO",
        PT: "este é o nome do campo",
        RO: "Acesta este campul de nume.",
        IND: "TODO"
    },
    amsHelpTip2: {
        EN: "Here you can set enable or disable mailbox.",
        FR: "Activer ici le répondeur téléphonique",
        SPN: "Aqui puede habilitar o deshabilitar el buzon de correo",
        DE: "Hier können Sie den Anrufbeantworter ein-/ oder ausschalten",
        IT: "Qui puoi attivare o disattivare la segreteria telefonica",
        DA: "Her kan du aktivere eller deaktivere postkassen.",
        AR: "TODO",
        PT: "aquí pode definir habilitar ou desabilitar o mailbox",
        RO: "Aici puteti seta, activa sau dezactiva casuta postala.",
        IND: "TODO"
    },
    amsHelpTip3: {
        EN: "Here you can set mode.",
        FR: "Réglage du mode",
        SPN: "Aqui puede ajustar el modo",
        DE: "Hier können Sie die Betriebsart auswählen",
        IT: "Qui puoi configuare il modo",
        DA: "Her kan du indstille tilstanden.",
        AR: "TODO",
        PT: "aquí pode editar o modo",
        RO: "Reglare mod.",
        IND: "TODO"
    },
    amsHelpTip4: {
        EN: "Here you can select default language for greetings.",
        FR: "Sélection de la langue par défaut pour les annonces.",
        SPN: "Aqui puede seleccionar el idioma por defecto del saludo",
        DE: "Hier können Sie die gewünschte Sprache für Standarttexte auswählen",
        IT: "Seleziona la lingua predefinita per gli annunci",
        DA: "Her kan du vælge standardsproget for hilsner.",
        AR: "TODO",
        PT: "aquí pode seleccionar o idioma da pagina de inicio por defeito",
        RO: "Aici puteti selecta limba implicita pentru mesajul de intampinare.",
        IND: "TODO"
    },
    amsHelpTip5: {
        EN: "Here you can set maximum record time.",
        FR: "Indiquer ici la durée maximum des enregistrements.",
        SPN: "Aqui puede ajustar el tiempo maximo de grabacion",
        DE: "Einstellung für die maximale Aufnahmedauer",
        IT: "Indica qui la durata massima dei messaggi registrati",
        DA: "Her kan du indstille den maksimale optagelsestid.",
        AR: "TODO",
        PT: "aquí pode alterar o tempo maximo de gravaçao",
        RO: "Aici puteti seta timpul maxim de inregistrare.",
        IND: "TODO"
    },
    lightSettings: {
        EN: "Auto-dimming",
        FR: "Réduction de la luminosité",
        SPN: "TODO",
        DE: "Auto-Dimmung",
        IT: "Riduzione della luminosità",
        DA: "Auto-dæmpning",
        AR: "TODO",
        PT: "Auto-dimming",
        RO: "TODO",
        IND: "TODO"
    },
    autodimming: {
        EN: "Auto-dimming",
        FR: "Réduction de la luminosité",
        SPN: "Auto-oscurecimiento",
        DE: "Auto-Dimmung",
        IT: "Riduzione della luminosità",
        DA: "Auto-dæmpning",
        AR: "TODO",
        PT: "Auto-dimming",
        RO: "Reglare automata a intensitatii luminoase",
        IND: "TODO"
    },
    dimming: {
        EN: "Dimming",
        FR: "Réduction de la luminosité",
        SPN: "Oscurecimiento",
        DE: "Dimmung",
        IT: "TODO",
        DA: "Dæmpning",
        AR: "TODO",
        PT: "Dimming",
        RO: "Intensitate luminoasa",
        IND: "TODO"
    },
    brightness: {
        EN: "Brightness",
        FR: "Luminosité",
        SPN: "Claridad",
        DE: "Helligkeit",
        IT: "Luminosità",
        DA: "Lysstyrke",
        AR: "TODO",
        PT: "Brightness",
        RO: "Luminozitate",
        IND: "TODO"
    },
    ledMode: {
        EN: "Here you can select LED modes.",
        FR: "Vous pouvez choisir ici les différents modes pour les LED.",
        SPN: "Aqui puede seleccionar los modos de los LEDs",
        DE: "Hier können Sie das Verhalten der LEDs festlegen",
        IT: "Qui puoi scegliere tra i diversi modi dei LEd",
        DA: "Her vælger du mellem LED-tilstande.",
        AR: "TODO",
        PT: "aquí pode selccionar os modos de LEd",
        RO: "Aici puteti selecta modurile LED-urilor.",
        IND: "TODO"
    },
    ledBrightness: {
        EN: "Here you can select LED intensity.",
        FR: "Vous pouvez choisir ici la luminosité des LED.",
        SPN: "Aqui puede seleccionar la intensidad de los LEDs",
        DE: "Hier können Sie die Helligkeit der LEDs festlegen",
        IT: "Qui puoi configurare la luminosità dei LEd",
        DA: "Her vælger mellem LED-styrker.",
        AR: "TODO",
        PT: "aquí `pode seleccionar a intensidade dos LEd",
        RO: "Aici puteti selecta intensitatea LED-urilor.",
        IND: "TODO"
    },
    manual: {
        EN: "Manual",
        FR: "Manuel",
        SPN: "Manual",
        DE: "Manuell",
        IT: "manuale",
        DA: "Manuelt",
        AR: "TODO",
        PT: "Manual",
        RO: "Manual",
        IND: "TODO"
    },
    amsHelpTip6: {
        EN: "Greeting only mode options.",
        FR: "Options du mode annonce seule.",
        SPN: "Opciones de solo saludo",
        DE: "Optionen für Betriebsart 'Nur Begrüßung'",
        IT: "opzione per l'annuncio",
        DA: "Muligheder for tilstanden kun hilsen.",
        AR: "TODO",
        PT: "modo de opçao de saudaçao",
        RO: "Optiuni numai pentru modul de intampinare.",
        IND: "TODO"
    },
    amsHelpTip7: {
        EN: "Select here which type of greeting you want the caller to hear when the answering machine is enabled.<br>To create a customized greeting through the interface:<br>You can upload an audio file by clicking on 'custom' in the greeting only mode (admitted format is: Wav,Mono, 8 bits by sample, frequency of 8000).",
        FR: "Sélectionnez ici le type de message d’accueil que vous souhaitez que l’appelant entende lorsque le répondeur est activé.<br>Vous pouvez télécharger un fichier audio en cliquant sur 'personnalisé' dans le mode 'Mode annonce' seule (format autorisé: wav, mono, 8 bits par échantillon, fréquence de 8000).",
        SPN: "Opciones de grabacion de mensajes",
        DE: "Wählen Sie hier, welche Begrüssungsart der Anrufer hören soll, wenn der Anrufbeantworter aktiviert ist.<br>So erstellen Sie über die Benutzerschnittstelle eine benutzerdefinierte Begrüssung: Klicken Sie im Modus 'Nur Begrüßung' auf 'Benutzerdefiniert', um eine Audiodatei hochzuladen (zulässiges Format: Wav, Mono, 8 Bit Beispiel, Frequenz 8000).",
        IT: "Selezionare quale tipo di annuncio che si intende far ascoltare al chiamante quando si abilita la segreteria telefonica.<br>Si può caricare un file audio facendo clic su 'Personalizza' nella modalità 'annuncio solo' (il formato ammesso è: Wav, Mono, 8 bit per campione, frequenza di 8000).",
        DA: "Muligheder for tilstanden beskedoptagelser.",
        AR: "TODO",
        PT: "modo de opçoes de gravaçao de mensagens",
        RO: "Optiuni pentru modul de inregistrare al mesajelor.",
        IND: "TODO"
    },
    ansMode: {
        EN: "Answering mode",
        FR: "Mode",
        SPN: "Modo contestador",
        DE: "Betriebsart",
        IT: "modo di risposta",
        DA: "Telefonsvaretilstand",
        AR: "TODO",
        PT: "modo de atendimento",
        RO: "Modul de raspuns",
        IND: "TODO"
    },
    defaultLanguage: {
        EN: "Default Language",
        FR: "Langue par défaut",
        SPN: "Idioma por defecto",
        DE: "Standartsprache",
        IT: "lingua predefinita",
        DA: "Standardsprog",
        AR: "TODO",
        PT: "idioma por defeito",
        RO: "Limba implicita",
        IND: "TODO"
    },
    recordLenght: {
        EN: "Record Length",
        FR: "Durée de l'enregistrement",
        SPN: "Longitud de grabacion",
        DE: "Aufnahmedauer",
        IT: "durata del messaggio registrato",
        DA: "Længde på optagelse",
        AR: "TODO",
        PT: "cumprimento de gravaçao",
        RO: "Durata de inregistrare",
        IND: "TODO"
    },
    simpleGreetings: {
        EN: "Greeting only mode",
        FR: "Mode annonce seule",
        SPN: "Modo saludo",
        DE: "Betriebsart 'Nur Begrüßung'",
        IT: "modo per l'annuncio",
        DA: "Tilstanden kun hilsen",
        AR: "TODO",
        PT: "modo de gravaçao de mensagens",
        RO: "Modul doar de intampinare",
        IND: "TODO"
    },
    unconditionalGreeting: {
        EN: "Immediate Greeting",
        FR: "Annonce immédiate",
        SPN: "Saludo inmediato",
        DE: "Begrüßung sofort",
        IT: "annuncio immediato",
        DA: "Omgående hilsen",
        AR: "TODO",
        PT: "Saudaçao imediata",
        RO: "Anunt imediat",
        IND: "TODO"
    },
    onBusyGreeting: {
        EN: "Busy Greeting",
        FR: "Annonce occupé",
        SPN: "Saludo ocupado",
        DE: "Begrüßung bei besetzt",
        IT: "annuncio di occupato",
        DA: "Optaget hilsen",
        AR: "TODO",
        PT: "Saudaçao ocupada",
        RO: "Anunt ocupat",
        IND: "TODO"
    },
    recordingGreetings: {
        EN: "Record mode",
        FR: "Mode enregistreur",
        SPN: "Modo grabacion",
        DE: "Aufnahmemodus",
        IT: "modo per registrare",
        DA: "Optagetilstand",
        AR: "TODO",
        PT: "modo gravaçao",
        RO: "Modul de inregistrare",
        IND: "TODO"
    },
    onNoAnswerGreeting: {
        EN: "Unavailable Greeting",
        FR: "Annonce indisponible",
        SPN: "Saludo indisponible",
        DE: "Begrüßung bei Abwesenheit",
        IT: "annuncio di non disponibile",
        DA: "Ikke tilgængelig hilsen",
        AR: "TODO",
        PT: "Saudaçao indisponivel",
        RO: "Anunt indisponibil",
        IND: "TODO"
    },
    simple: {
        EN: "Greeting only",
        FR: "Annonce seule",
        SPN: "Solo saludo",
        DE: "Nur Begrüßung",
        IT: "annuncio solo",
        DA: "Kun hilsen",
        AR: "TODO",
        PT: "Saudaçao apenas",
        RO: "Doar anunturi",
        IND: "TODO"
    },
    recording: {
        EN: "Record messages",
        FR: "Enregistrement des messages",
        SPN: "Mensajes grabados",
        DE: "Nachrichten aufnehmen",
        IT: "registrare i messaggi",
        DA: "Optag beskeder",
        AR: "TODO",
        PT: "gravaçao de mensagens",
        RO: "Inregistrare mesaje",
        IND: "TODO"
    },
    english: {
        EN: "English",
        FR: "Anglais",
        SPN: "Ingles",
        DE: "Englisch",
        IT: "inglese",
        DA: "Engelsk",
        AR: "TODO",
        PT: "English",
        RO: "Engleza",
        IND: "TODO"
    },
    french: {
        EN: "French",
        FR: "Français",
        SPN: "Frances",
        DE: "Französisch",
        IT: "francese",
        DA: "Fransk",
        AR: "TODO",
        PT: "Ingles",
        RO: "Franceza",
        IND: "TODO"
    },
    german: {
        EN: "German",
        FR: "Allemand",
        SPN: "Aleman",
        DE: "Deutsch",
        IT: "tedesco",
        DA: "Tysk",
        AR: "TODO",
        PT: "Frances",
        RO: "Germana",
        IND: "TODO"
    },
    italian: {
        EN: "Italian",
        FR: "Italien",
        SPN: "Italiano",
        DE: "Italienisch",
        IT: "italiano",
        DA: "Italiensk",
        AR: "TODO",
        PT: "Italiano",
        RO: "Italiana",
        IND: "TODO"
    },
    "default": {
        EN: "Default",
        FR: "Défaut",
        SPN: "Por defecto",
        DE: "Standart",
        IT: "Predefinito",
        DA: "Standard",
        AR: "TODO",
        PT: "Defeito",
        RO: "Implicit",
        IND: "TODO"
    },
    noMediaText: {
        EN: "No USB devices connected.",
        FR: "Aucun périphérique USB connecté",
        SPN: "No hay dispositivos USB conectados.",
        DE: "Keine USB-Endgeräte angeschlossen.",
        IT: "Nessuna chiavetta USB connessa",
        DA: "l'aggregazione DLNA è disattivata, non ci sono driver USB o eSATA collegati. Risolvere uno di questi problemi per accedere a sezione MyMedia.",
        AR: "TODO",
        PT: "Sem dispositivos USB ligados",
        RO: "Niciun dispozitiv USB conectat",
        IND: "TODO"
    },
    noDeviceConnected: {
        EN: "No device connected",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    operationStatus: {
        EN: "Operation status",
        FR: "Statut opérationnel",
        SPN: "Estado de operacion",
        DE: "Betriebsstatus",
        IT: "Stato operazionale",
        DA: "TODO",
        AR: "TODO",
        PT: "estado operaçao",
        RO: "Status operational",
        IND: "TODO"
    },
    invalidPhone: {
        EN: "Invalid phone",
        FR: "Téléphone invalide",
        SPN: "Telefono invalido",
        DE: "Ungültiges Telefon",
        IT: "Numero non valido",
        DA: "Ugyldig telefon",
        AR: "TODO",
        PT: "telefone invalido",
        RO: "Telefon invalid",
        IND: "TODO"
    },
    invalidRule: {
        EN: "Conflicted rule",
        FR: "TODO",
        SPN: "Regla con conflicto",
        DE: "Regelkonflikt",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Regula conflictuala",
        IND: "TODO"
    },
    gponSerialNumber: {
        EN: "GPON Serial Number",
        FR: "Numéro de série GPON",
        SPN: "Numero de serie de GPON",
        DE: "GPON Seriennummer",
        IT: "Numero di serie GPON",
        DA: "GPON serienummer",
        AR: "TODO",
        PT: "numero de serie GPON",
        RO: "Numar Serial GPON",
        IND: "TODO"
    },
    gponState: {
        EN: "Optical Link Status",
        FR: "Statut du lien optique",
        SPN: "Estado del enlace optico",
        DE: "Status der Glasfaserverbindung",
        IT: "Stato della connessione ottica",
        DA: "Optisk link status",
        AR: "TODO",
        PT: "estado de link optico",
        RO: "Status link optic",
        IND: "TODO"
    },
    gponTransmitOpticalLevel: {
        EN: "Optical Module Tx Power (dBm)",
        FR: "Puissance émission Tx (dBm)",
        SPN: "Potencia Tx del modulo optico (dBm)",
        DE: "Sendeleistung Glasfasermodul (dBm)",
        IT: "Potenza emissione tx (dbm)",
        DA: "Optisk modul Tx Power (dBm)",
        AR: "TODO",
        PT: "potencia Tx de modulo optico (dBm)",
        RO: "Putere Tx (dBm)",
        IND: "TODO"
    },
    gponOpticalSignalLevel: {
        EN: "Optical Module Rx Power (dBm)",
        FR: "Puissance réception Rx (dBm)",
        SPN: "Potencia Rx del modulo optico (dBm)",
        DE: "Empfangsleistung Glasfasermodul (dBm)",
        IT: "Potenza ricezione rx (dbm)",
        DA: "Optisk modul Rx Power (dBm)",
        AR: "TODO",
        PT: "Potencia Rx de modulo optico (dBm)",
        RO: "Putere Rx (dBm)",
        IND: "TODO"
    },
    gponTemperature: {
        EN: "Optical Module Temperature (C)",
        FR: "Température du module optique (°C)",
        SPN: "Temperatura del modulo optico (Celsius)",
        DE: "Temperatur Glasfasermodul (°C)",
        IT: "Temperatura del modulo ottico ©",
        DA: "Optisk modul Temperature (C)",
        AR: "TODO",
        PT: "temperatura de modulo optico (C)",
        RO: "Temperatura (øC)",
        IND: "TODO"
    },
    gponVoltage: {
        EN: "Optical Module Power Feed Volt (mV)",
        FR: "Optical Module Power Feed Volt (mV)",
        SPN: "Potencia de alimantacion del modulo optico (mV)",
        DE: "Stromspannung Glasfasermodul (mV)",
        IT: "Potenza elettrica per modulo ottico (mv)",
        DA: "Optisk modul Power Feed Volt (mV)",
        AR: "TODO",
        PT: "Potencia de modulo optico (mV)",
        RO: "Voltaj (mV)",
        IND: "TODO"
    },
    gponBIASCurrent: {
        EN: "Optical Module BIAS current (mA)",
        FR: "Optical Module BIAS current (mA)",
        SPN: "Corriente del modulo optico (mA)",
        DE: "Vorstrom Glasfasermodul (mA)",
        IT: "Modulo ottico BIAS corrente (ma)",
        DA: "Optisk modul BIAS current (mA)",
        AR: "TODO",
        PT: "BIAS actual de modulo optico (mA)",
        RO: "Amperaj (mA)",
        IND: "TODO"
    },
    gponUpstreamFEC: {
        EN: "Upstream FEC",
        FR: "FEC montant",
        SPN: "FEC subida",
        DE: "FEC Upstream",
        IT: "FEC invio",
        DA: "Upstream FEC",
        AR: "TODO",
        PT: "Upstream FEC",
        RO: "Incarcare FEC",
        IND: "TODO"
    },
    gponDownstreamFEC: {
        EN: "Downstream FEC",
        FR: "FEC descendant",
        SPN: "FEC bajada",
        DE: "FEC Downstream",
        IT: "FEC ricezione",
        DA: "Downstream FEC",
        AR: "TODO",
        PT: "Downstream FEC",
        RO: "Descarcare FEC",
        IND: "TODO"
    },
    gponTip1: {
        EN: "Here you can see GPON serial number.",
        FR: "Numéro de série GPON",
        SPN: "Aqui puede ver el numero de serie de GPON",
        DE: "Hier können Sie die Seriennummer des GPON-Moduls sehen.",
        IT: "Qui puoi vedere il numero di serie GPON",
        DA: "Her kan du se GPON serienummer.",
        AR: "TODO",
        PT: "aquí pode ver o numero de serie GPON",
        RO: "Numarul de serie al modemului.",
        IND: "TODO"
    },
    gponTip2: {
        EN: "Here you can see the link status.",
        FR: "Statut du lien optique",
        SPN: "Aqui puede ver el estado del enlace",
        DE: "Hier können Sie den Status der Verbindung sehen.",
        IT: "Stato della connessione ottica",
        DA: "Her kan du se link status.",
        AR: "TODO",
        PT: "aquí pode ver o estado do link",
        RO: "Statusul link-ului optic.",
        IND: "TODO"
    },
    gponTip3: {
        EN: "Here you can see the module Tx Power in dBm.",
        FR: "Puissance émission Tx (dBm)",
        SPN: "Aqui puede ver la potencia Tx del modulo en dBm",
        DE: "Hier wird die Sendeleistung des Moduls in dBm angezeigt",
        IT: "Potenza emissione tx (dbm)",
        DA: "Her kan du se modulets Tx Power in dBm.",
        AR: "TODO",
        PT: "aquí pode ver a potencia Rx do modulo em dBm",
        RO: "Puterea Tx a modulului in dBm",
        IND: "TODO"
    },
    gponTip4: {
        EN: "Here you can see the module Rx Power in dBm.",
        FR: "Puissance réception Rx (dBm)",
        SPN: "Aqui puede ver la potencia Rx del modulo en dBm",
        DE: "Hier wird die Empfangsleistung des Moduls in dBm angezeigt",
        IT: "Potenza ricezione rx (dbm)",
        DA: "Her kan du se modulets Rx Power in dBm.",
        AR: "TODO",
        PT: "aquí pode ver a potencia Tx do modulo em dBm",
        RO: "Puterea Rx a modulului in dBm",
        IND: "TODO"
    },
    gponTip5: {
        EN: "Here you can see the module temperature, expressed in Celsius (C).",
        FR: "Température du module optique (°C)",
        SPN: "Aqui puede ver la temperatura del modulo",
        DE: "Hier wird die Temparatur des Moduls in Grad Celsius (°C) angezeigt",
        IT: "Temperatura del modulo ottico ©",
        DA: "Her kan du se modulets temperatur udtrykt i Celsius (C).",
        AR: "TODO",
        PT: "aquí pode ver a temperatura do modulo, expresso em Celsius ©",
        RO: "Aici este indicata temperatura modulului optic (øC)",
        IND: "TODO"
    },
    gponTip6: {
        EN: "Here you can see the module power feed volt, expressed in millivolts (mV).",
        FR: "Optical Module Power Feed Volt (mV)",
        SPN: "Aqui puede ver la potencia de alimentacion del modulo",
        DE: "Hier wird die Versorgungsspannung des Moduls in Millivolt (mV) angezeigt",
        IT: "Potenza elettrica per modulo ottico (mv)",
        DA: "Her kan du se modulets power feed volt, udtrykt i milivolts (mV).",
        AR: "TODO",
        PT: "aquí pode ver a potencia do modulo, expresso em milivolts (mV)",
        RO: "Aici este indicata valoarea voltajului, exprimata in mV.",
        IND: "TODO"
    },
    gponTip7: {
        EN: "Here you can see the module BIAS current, expressed in milliamperes (mA).",
        FR: "Optical Module BIAS current (mA)",
        SPN: "Aqui puede ver la corriente del modulo",
        DE: "Hier wird der Vorstrom des Moduls in Milliampere (mA) angezeigt",
        IT: "Modulo ottico BIAS corrente (ma)",
        DA: "Her kan du se modulets nuværende BIAS, udtrykt i miliamperes (mA).",
        AR: "TODO",
        PT: "aquí pode ver a BIAS actual do modulo, expresso em miliamperes (mA)",
        RO: "Aici este indicata valoarea amperajului, exprimata in mA.",
        IND: "TODO"
    },
    gponTip8: {
        EN: "Here you can see current upstream FEC information.",
        FR: "FEC montant",
        SPN: "Aqui puede ver la informacion de subida FEC",
        DE: "Hier wird die aktuelle FEC Upstream-Geschwindigkeit angezeigt",
        IT: "FEC invio",
        DA: "Her kan du se den nuværende upstream FEC information.",
        AR: "TODO",
        PT: "aquí pode ver a informaçao actual de upstream FEC",
        RO: "Aici este indicata informatia despre incarcarea FEC.",
        IND: "TODO"
    },
    gponTip9: {
        EN: "Here you can see current downstream FEC information.",
        FR: "FEC descendant",
        SPN: "Aqui puede ver la informacion de bajada FEC",
        DE: "Hier wird die aktuelle FEC Downstream-Geschwindigkeit angezeigt",
        IT: "FEC ricezione",
        DA: "Her kan du se den nuværende downstream FEC information.",
        AR: "TODO",
        PT: "aquí pode ver a informaçao actual de downstream FEC",
        RO: "Aici este indicata informatia despre descarcarea FEC.",
        IND: "TODO"
    },
    cableModemDownstreams: {
        EN: "In this table you can check the status of the downstream bonded channels.",
        FR: "TODO",
        SPN: "Puede verificar en esta tabla el estado de los canales de bajada",
        DE: "Informationen zu den DOCIS-Kanälen in Empfangsrichtung.",
        IT: "TODO",
        DA: "I denne tabel kan du checke status på nedstrøms bundlede kanaler.",
        AR: "TODO",
        PT: "Nesta tabela você pode verificar o estado dos canais downstream.",
        RO: "In acest tabel puteti verifica statusul canalelor de descarcare conectate.",
        IND: "TODO"
    },
    cableModemUpstreams: {
        EN: "In this table you can check the status of the upstream bonded channels.",
        FR: "TODO",
        SPN: "Puede verificar en esta tabla el estado de los canales de subida",
        DE: "Informationen zu den DOCSIS-Kanälen in Senderichtung.",
        IT: "TODO",
        DA: "I denne tabel kan du checke status på opstrøms bundlede kanaler.",
        AR: "TODO",
        PT: "Nesta tabela você pode verificar o estado dos canais upstream.",
        RO: "In acest tabel puteti verifica statusul canalelor de incarcare conectate.",
        IND: "TODO"
    },
    dsBondedChannels: {
        EN: "Downstream Bonded Channels",
        FR: "TODO",
        SPN: "Canales de bajada",
        DE: "Gebündelte Downstream-Kanäle",
        IT: "TODO",
        DA: "Nedstrøms bundlede kanaler",
        AR: "TODO",
        PT: "TODO",
        RO: "Canale de Descarcare conectate",
        IND: "TODO"
    },
    usBondedChannels: {
        EN: "Upstream Bonded Channels",
        FR: "TODO",
        SPN: "Canales de subida",
        DE: "Gebündelte Upstream-Kanäle",
        IT: "TODO",
        DA: "Opstrøms bundlede kanaler",
        AR: "TODO",
        PT: "TODO",
        RO: "Canale de Incarcare conectate",
        IND: "TODO"
    },
    frequencyHZ: {
        EN: "Frequency (Hz)",
        FR: "TODO",
        SPN: "Frecuencia (Hz)",
        DE: "Frequenz (Hz)",
        IT: "TODO",
        DA: "Frekvens (Hz)",
        AR: "TODO",
        PT: "Frequência (Hz)",
        RO: "Frecventa (Hz)",
        IND: "TODO"
    },
    powerDBUV: {
        EN: "Power (dBµV)",
        FR: "Puissance (dBµV)",
        SPN: "Potencia (dBµV)",
        DE: "Power (dBµV)",
        IT: "Potenza (dBµV)",
        DA: "Strøm (dBµV)",
        AR: "الطاقة (dBµV)",
        PT: "Potência (dBµV)",
        RO: "TODO",
        IND: "TODO"
    },
    powerDBMV: {
        EN: "Power (dBmV)",
        FR: "Puissance (dBmV)",
        SPN: "Potencia (dBmV)",
        DE: "Power (dBmV)",
        IT: "Potenza (dBmV)",
        DA: "Strøm (dBmV)",
        AR: "الطاقة (dBmV)",
        PT: "Potência (dBmV)",
        RO: "TODO",
        IND: "TODO"
    },
    snrDB: {
        EN: "SNR (dB)",
        FR: "TODO",
        SPN: "SNR (dB)",
        DE: "Signalrauschabstand - SNR (in dB)",
        IT: "TODO",
        DA: "SNR (dB)",
        AR: "TODO",
        PT: "SNR (dB)",
        RO: "SNR (dB)",
        IND: "TODO"
    },
    modulation: {
        EN: "Modulation",
        FR: "Modulation",
        SPN: "Modulación",
        DE: "Modulationen",
        IT: "Modulazione",
        DA: "Modulation",
        AR: "TODO",
        PT: "Modulação",
        RO: "Modulatie",
        IND: "TODO"
    },
    channelId: {
        EN: "Channel Id",
        FR: "TODO",
        SPN: "ID del canal",
        DE: "Kanal Id",
        IT: "TODO",
        DA: "Kanal Id",
        AR: "TODO",
        PT: "ID do Canal",
        RO: "ID Canal",
        IND: "TODO"
    },
    unerroredCodewords: {
        EN: "Unerrored Codewords",
        FR: "TODO",
        SPN: "Codigos sin error",
        DE: "Fehlerfreie Codewörter",
        IT: "TODO",
        DA: "Unerrored Codewords",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    totalCorrectables: {
        EN: "Total Correctables",
        FR: "TODO",
        SPN: "Total corregidos",
        DE: "Korrigierbar insgesamt",
        IT: "TODO",
        DA: "Total Correctables",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    totalUncorrectables: {
        EN: "Total Uncorrectables",
        FR: "TODO",
        SPN: "Total no corregidos",
        DE: "Nicht korrigierbar insgesamt",
        IT: "TODO",
        DA: "Total Uncorrectables",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    powerDBAUV: {
        EN: "Power (dBÂµV)",
        FR: "Puissance (dBÂµV)",
        SPN: "Potencia (dBÂµV)",
        DE: "Power (dBÂµV)",
        IT: "Potenza (dBÂµV)",
        DA: "Power (dBµV)",
        AR: "TODO (dBÂµV)",
        PT: "Potência (dBÂµV)",
        RO: "TODO",
        IND: "TODO"
    },
    symbolRateKSPS: {
        EN: "Symbol Rate (ksps)",
        FR: "TODO",
        SPN: "Tasa de simbolo (kbps)",
        DE: "Symbolrate (ksps)",
        IT: "TODO",
        DA: "Symbol Rate (kbps)",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    noDownstreamData: {
        EN: "No downstream data available.",
        FR: "TODO",
        SPN: "No hay datos de bajada disponibles",
        DE: "Keine Downstream Daten verfügbar",
        IT: "TODO",
        DA: "Ingen nedstrøms data tilgængelige",
        AR: "TODO",
        PT: "Sem dados de downstream disponíveis.",
        RO: "Nu exista informatii despre perioada de descarcare",
        IND: "TODO"
    },
    noUpstreamData: {
        EN: "No upstream data available.",
        FR: "TODO",
        SPN: "No hay datos de subida disponibles",
        DE: "Keine Upstream Daten verfügbar",
        IT: "TODO",
        DA: "Ingen opstrøms data tilgængelige",
        AR: "TODO",
        PT: "Sem dados de upstream disponíveis.",
        RO: "Nu exista informatii despre perioada de incarcare",
        IND: "TODO"
    },
    fiber: {
        EN: "Fiber",
        FR: "Fibre",
        SPN: "Fibra",
        DE: "Glasfaser",
        IT: "Fibra",
        DA: "Fiber",
        AR: "TODO",
        PT: "Fibra",
        RO: "Fibra",
        IND: "TODO"
    },
    lanLayer1: {
        EN: "LAN Layer 1",
        FR: "Couche LAN 1",
        SPN: "Capa 1 LAN",
        DE: "LAN Layer 1",
        IT: "LAN Layer 1",
        DA: "LAN lag 1",
        AR: "TODO",
        PT: "LAN Layer 1",
        RO: "LAN Layer 1",
        IND: "TODO"
    },
    wanLayer3: {
        EN: "WAN Layer 3",
        FR: "Couche WAN 3",
        SPN: "Capa 3 WAN",
        DE: "WAN Layer 3",
        IT: "WAN Layer 3",
        DA: "WAN lag 3",
        AR: "TODO",
        PT: "WAN Layer 3",
        RO: "WAN Layer 3",
        IND: "TODO"
    },
    wanLayer1Ethernet: {
        EN: "WAN Layer 1 - Ethernet",
        FR: "Couche WAN 1 - Ethernet",
        SPN: "Capa 1 WAN - Ethernet",
        DE: "WAN Layer 1 - Ethernet",
        IT: "WAN Layer 1 - Ethernet",
        DA: "WAN lag 1 - Ethernet",
        AR: "TODO",
        PT: "WAN Layer 1 - Ethernet",
        RO: "WAN Layer 1 - Ethernet",
        IND: "TODO"
    },
    wanLayer2AtmPtm: {
        EN: "WAN Layer 2 - ATM / PTM",
        FR: "Couche WAN 2 - ATM/PTM",
        SPN: "Capa 2 WAN - ATM/PTM",
        DE: "WAN Layer 2 - ATM / PTM",
        IT: "WAN Layer 2 - ATM / PTM",
        DA: "WAN lag 2 - ATM/PTM",
        AR: "TODO",
        PT: "WAN Layer 2 - ATM / PTM",
        RO: "WAN Layer 2 - ATM / PTM",
        IND: "TODO"
    },
    wanLayer1xdsl: {
        EN: "WAN Layer 1 - xDSl",
        FR: "Couche WAN 1 - xDSl",
        SPN: "Capa 1 WAN - xDSl",
        DE: "WAN Layer 1 - xDSl",
        IT: "WAN Layer 1 - xDSl",
        DA: "WAN lag 1 - xDSl",
        AR: "TODO",
        PT: "WAN Layer 1 - xDSl",
        RO: "WAN Layer 1 - xDSl",
        IND: "TODO"
    },
    pstnMode: {
        EN: "If in PSTN mode, do not connect phones to the gateway.",
        FR: "En mode RTCP, ne pas connecter les téléphones au routeur.",
        SPN: "Si esta en modo PSTN",
        DE: "Bitte verbinden Sie keine Telefone mit der gateway, die im PSTN-Modus betrieben werden.",
        IT: "Se hai una linea POTS, non connettere i telefoni al modem",
        DA: "Hvis du ikke anvender bredbåndstelefoni, så undgå at tilslutte telefoner til routeren.",
        AR: "TODO",
        PT: "Se no modo PSTN, nao ligue os telefones ao gateway",
        RO: "Daca modul PSTN este activat, nu conectati telefoane la modem.",
        IND: "TODO"
    },
    wifiSchedulingTip1: {
        EN: "Here you can enable or disable the Wi-Fi scheduling.",
        FR: "Activez ici la programmation du Wi-Fi",
        SPN: "Aqui puede habilitar o deshabilitar el temporizador para WIFI",
        DE: "Hier können Sie das zeitgesteuerte Ein-/ bzw. Ausschalten Ihres WLAN-Netzwerkes vornehmen.",
        IT: "Attiva la programmazione del Wi-Fi",
        DA: "Her kan du aktivere og deaktivere Wi-Fi tidsindstilling.",
        AR: "TODO",
        PT: "aquí pode activar ou desactivar o calendario de Wi-Fi",
        RO: "Aici puteti activa sau dezactiva programarea WiFi.",
        IND: "TODO"
    },
    wifiSchedulingTip2: {
        EN: "Here you can enable or disable the Wi-Fi scheduling for every hour of the day of the week.",
        FR: "Ici vous pouvez programmer l'extinction du Wi-Fi pour chaque heure de la semaine.",
        SPN: "Aqui puede habilitar o deshabilitar el temporizador para WIFI para cada hora de cada dia de la semana",
        DE: "Hier können Sie das zeitgesteuerte Ein-/ bzw. Ausschalten Ihres WLAN-Netzwerkes auf Basis von Stunden und Wochentagen vornehmen.",
        IT: "La programmazione di permette di attivare o disattivare il Wi-Fi per ogni ora di ogni giorno della settimana",
        DA: "Her kan du aktivere og deaktivere Wi-Fi tidsindstilling for hver time på dagen i løbet af ugen.",
        AR: "TODO",
        PT: "aquí pode activar ou desactivar o calendario de Wi-Fi todos os dias da semana",
        RO: "Aici puteti activa sau dezactiva programarea WiFi pentru orice ora a zilei, a saptamanii.",
        IND: "TODO"
    },
    wifiSchedulingTip3: {
        EN: "Here you can choose the hours you enable or disable the Wi-Fi scheduling.",
        FR: "Ici vous pouvez sélectionner les heures de la journée pour l'extinction du Wi-Fi.",
        SPN: "Aqui puede elegir las horas que desee habilitar o deshabilitar WiFi",
        DE: "Hier wählen Sie die Stunden aus, in denen Ihr WLAN-Netzwerk ein-/ bzw. ausgeschaltet ist.",
        IT: "Qui puoi selezionare le ore della giornata per programmare di attivare o disattivare il Wi-Fi secondo programmazione",
        DA: "Her kan du vælge de timer hvor du aktiverer eller deaktiverer Wi-Fi tidsindstilling.",
        AR: "TODO",
        PT: "aquí pode escolher as horas que habilita ou desabilita o calendario de Wi-Fi",
        RO: "Aici puteti alege orele pentru activarea sau dezactivarea programarii WiFi.",
        IND: "TODO"
    },
    wifiSchedulingTip4: {
        EN: "Here you can enable or disable the Wi-Fi scheduling for every hour of the day.",
        FR: "Ici vous pouvez programmer l'extinction du Wi-Fi pour chaque heure du jour.",
        SPN: "Aqui puede habilitar o deshabilitar el temporizador para WIFI para cada hora de cada dia",
        DE: "Hier können Sie das zeitgesteuerte Ein-/ bzw. Ausschalten Ihres WLAN-Netzwerkes auf Basis von Stunden vornehmen.",
        IT: "Qui puoi selezionare per programmare di attivare o disattivare il Wi-Fi per ogni ora del giorno",
        DA: "Her kan du aktivere og deaktivere Wi-Fi tidsindstilling for hver time i løbet af dagen.",
        AR: "TODO",
        PT: "aquí pode habilitar ou desabilitar o calendario de Wi-Fi para todas as horas do dia",
        RO: "Aici puteti activa sau dezactiva programarea WiFi pentru orice ora a zilei.",
        IND: "TODO"
    },
    fullname: {
        EN: "Full Name",
        FR: "Nom complet",
        SPN: "Nombre completo",
        DE: "Name",
        IT: "Nome completo",
        DA: "Fulde navn",
        AR: "TODO",
        PT: "nome completo",
        RO: "Nume intreg",
        IND: "TODO"
    },
    permissions: {
        EN: "Permissions",
        FR: "Permissions",
        SPN: "Permisos",
        DE: "Zugriffsrechte",
        IT: "Permissioni",
        DA: "Tilladelser",
        AR: "TODO",
        PT: "permissoes",
        RO: "Permisiuni",
        IND: "TODO"
    },
    ordinary: {
        EN: "Ordinary",
        FR: "Ordinaire",
        SPN: "Ordinario",
        DE: "Normal",
        IT: "Ordinario",
        DA: "Ordinær",
        AR: "TODO",
        PT: "ordinario",
        RO: "Obisnuit",
        IND: "TODO"
    },
    confirmRemoveUserTip: {
        EN: "This user will be removed permanently.",
        FR: "Cet utilisateur sera effacé de façon permanente.",
        SPN: "Este usuario se eliminara de manera permanente",
        DE: "Dieser Nutzer wird endgültig gelöscht.",
        IT: "Questo utilizzatore è stato calcellato definitivamente",
        DA: "Denne bruger vil blive slettet permanent.",
        AR: "TODO",
        PT: "este utilizador será removido definitivamente",
        RO: "Acest utilizator va fi sters permanent.",
        IND: "TODO"
    },
    confirmRemoveUserTitle: {
        EN: "Do you want to remove this user?",
        FR: "Souhaitez-vous effacer cet utilisateur ?",
        SPN: "Desea eliminar este usuario?",
        DE: "Wollen Sie diesen Nutzer löschen?",
        IT: "Vuoi veramente cancellare questo utilizzatore?",
        DA: "Vil du fjerne denne bruger?",
        AR: "TODO",
        PT: "quer remover este utilizador?",
        RO: "Doriti sa stergeti acest utilizator?",
        IND: "TODO"
    },
    userExists: {
        EN: "User already exists",
        FR: "l'utilisateur existe déjà.",
        SPN: "Usuario ya existe",
        DE: "Nutzer bereits vorhanden",
        IT: "l'utilizzatore è già esistente",
        DA: "Brugeren eksisterer allerede",
        AR: "TODO",
        PT: "utilizador existente",
        RO: "Utilizatorul deja exista",
        IND: "TODO"
    },
    closeGuide: {
        EN: "Close Guide",
        FR: "Fermer le guide",
        SPN: "Cerrar guia",
        DE: "Anleitung schließen",
        IT: "Chiudi la guida",
        DA: "Luk guiden",
        AR: "TODO",
        PT: "Guia de fecho",
        RO: "Inchidere Ghid",
        IND: "TODO"
    },
    previous: {
        EN: "Previous",
        FR: "Précédent",
        SPN: "Anterior",
        DE: "Vorherige",
        IT: "Precedente",
        DA: "Tidligere",
        AR: "TODO",
        PT: "anterior",
        RO: "Anterior",
        IND: "TODO"
    },
    operationTimeout: {
        EN: "Communication error with the gateway",
        FR: "TODO",
        SPN: "Error de comunicacion con el gateway",
        DE: "Kommunikationsproblem mit dem Gateway",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "erro de comunicaçao com o gateway",
        RO: "Eroare de comunicare cu modemul",
        IND: "TODO"
    },
    internetStartComfort: {
        EN: "Internet Start or Comfort",
        FR: "Internet Start ou Comfort",
        SPN: "Inicio o confort de Internet",
        DE: "Internet Start oder Comfort",
        IT: "Internet Start or Comfort",
        DA: "TODO",
        AR: "TODO",
        PT: "Internet Start or Comfort",
        RO: "Start Internet sau Comfort",
        IND: "TODO"
    },
    internetMAX: {
        EN: "Internet MAX",
        FR: "Internet MAX",
        SPN: "Internet MAX",
        DE: "Internet MAX",
        IT: "Internet MAX",
        DA: "TODO",
        AR: "TODO",
        PT: "Internet MAX",
        RO: "Internet Max",
        IND: "TODO"
    },
    blueTheme: {
        EN: "Blue Theme",
        FR: "TODO",
        SPN: "Tema azul",
        DE: "Blaues Design",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "tema azul",
        RO: "Tema albastra",
        IND: "TODO"
    },
    redTheme: {
        EN: "Red theme",
        FR: "Thème rouge",
        SPN: "Tema rojo",
        DE: "Rotes Design",
        IT: "Tema rosso",
        DA: "TODO",
        AR: "TODO",
        PT: "tema vermelho",
        RO: "Tema rosie",
        IND: "TODO"
    },
    goldTheme: {
        EN: "Gold Theme",
        FR: "TODO",
        SPN: "Tema dorado",
        DE: "Goldenes Design",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "tema ouro",
        RO: "Tema aurie",
        IND: "TODO"
    },
    violetTheme: {
        EN: "Violet Theme",
        FR: "TODO",
        SPN: "Tema violeta",
        DE: "Violettes Design",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "tema violeta",
        RO: "Tema violet",
        IND: "TODO"
    },
    orangeTheme: {
        EN: "Orange theme",
        FR: "Thème orange",
        SPN: "Tema naranja",
        DE: "Oranges Design",
        IT: "Tema arancione",
        DA: "TODO",
        AR: "TODO",
        PT: "tema laranja",
        RO: "Tema portocalie",
        IND: "TODO"
    },
    magentaTheme: {
        EN: "Magenta theme",
        FR: "Thème magenta",
        SPN: "Tema magenta",
        DE: "Magenta Design",
        IT: "Tema magenta",
        DA: "TODO",
        AR: "TODO",
        PT: "tema magenta",
        RO: "Tema magenta",
        IND: "TODO"
    },
    purpleTheme: {
        EN: "Purple theme",
        FR: "Thème violet",
        SPN: "Tema purpura",
        DE: "Lila Design",
        IT: "Tema viola",
        DA: "TODO",
        AR: "TODO",
        PT: "tema lilas",
        RO: "Tema violet",
        IND: "TODO"
    },
    deepPurpleTheme: {
        EN: "Deep purple theme",
        FR: "Thème violet foncé",
        SPN: "Tema purpura oscuro",
        DE: "Dunkellila Design",
        IT: "Tema viola scuro",
        DA: "TODO",
        AR: "TODO",
        PT: "tema lilas escuro",
        RO: "Tema violet inchis",
        IND: "TODO"
    },
    advertisementPeriod: {
        EN: "Advertisement Period",
        FR: "TODO",
        SPN: "Periodo de anuncio",
        DE: "Aktualisierungsintervall",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "priodo de anuncio",
        RO: "Perioada de emisie  ",
        IND: "TODO"
    },
    advertisementTTl: {
        EN: "Advertisement TTl",
        FR: "TODO",
        SPN: "Anuncio TTl",
        DE: "Anzahl der hops",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "anuncio TTl",
        RO: "Emisie TTl",
        IND: "TODO"
    },
    remoteAccessEverywhere: {
        EN: "Allow remote access from everywhere",
        FR: "Autoriser l'accès distant sans restriction",
        SPN: "Permitir el acceso remoto desde cualquier lugar",
        DE: "Erlauben Sie Fernzugriff von überall",
        IT: "Consentire l'accesso remoto da ovunque",
        DA: "Tillad fjernadgang fra overalt",
        AR: "السماح بالوصول عن بعد من كل مكان",
        PT: "Permite remoto controlo desde todo lado",
        RO: "TODO",
        IND: "TODO"
    },
    showAll: {
        EN: "Show non-connected devices",
        FR: "TODO",
        SPN: "Mostrar los dispositivos no conectados",
        DE: "Zeige nicht verbundene Endgeräte",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "mostra dispositivos nao ligados",
        RO: "Arata dispozitivele neconectate",
        IND: "TODO"
    },
    showActive: {
        EN: "Hide non-connected devices",
        FR: "TODO",
        SPN: "Ocultar los dispositivos no conectados",
        DE: "Verberge nicht verbundene Endgeräte",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "esconde dispositivos nao ligados",
        RO: "Ascunde dispozitivele neconectate",
        IND: "TODO"
    },
    broadbandNormally: {
        EN: "Your Broadband service is working normally. You are connected and online.",
        FR: "TODO",
        SPN: "Su servicio de band ancha funciona con normalidad. Esta conectado",
        DE: "Alles in Ordnung mit Ihrer Internetverbindung.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "o seu serviço esta a funcionar normalmente. Voce esta ligado e online",
        RO: "Serviciul de internet functioneaza normal. Sunteti conectat si online.",
        IND: "TODO"
    },
    broadbandAnormally: {
        EN: "Your Broadband service is not working normally. You are offline.",
        FR: "TODO",
        SPN: "Su servicio de band ancha no funciona con normalidad. Esta desconectado",
        DE: "Es gibt ein Problem mit Ihrer Internetverbindung. Sie sind offline.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "o seu serviço nao esta a funcionar normalmente. Voce esta offline",
        RO: "Serviciul de internet nu functioneaza normal. Sunteti offline.",
        IND: "TODO"
    },
    wanIP: {
        EN: "Wan IP",
        FR: "Wan IP",
        SPN: "Wan IP",
        DE: "Wan IP",
        IT: "Wan IP",
        DA: "Wan IP",
        AR: "Wan IP",
        PT: "Wan IP",
        RO: "TODO",
        IND: "TODO"
    },
    routerIP: {
        EN: "Router IP",
        FR: "TODO",
        SPN: "Router IP",
        DE: "IP-Adresse des Routers",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Router IP",
        RO: "Router IP",
        IND: "TODO"
    },
    frameworkVersion: {
        EN: "Framework version",
        FR: "TODO",
        SPN: "Framework version",
        DE: "Framework-Version",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Framework version",
        RO: "Versiune cadru",
        IND: "TODO"
    },
    goToLogin: {
        EN: "Go to login",
        FR: "TODO",
        SPN: "Ir a login",
        DE: "Gehe zum Login",
        IT: "TODO",
        DA: "Gå til login",
        AR: "TODO",
        PT: "ir para login",
        RO: "Mergi catre logare",
        IND: "TODO"
    },
    noActiveDevices: {
        EN: "No active devices",
        FR: "TODO",
        SPN: "No hay dispositivos activos",
        DE: "Keine aktiven Endgeräte",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Sem dispositivos activos",
        RO: "Nu exista dispozitive active",
        IND: "TODO"
    },
    wifiSimpleTip1: {
        EN: "Here you can see the MAC Address.",
        FR: "TODO",
        SPN: "Aqui puede ver la direccion MAC",
        DE: "Hier können Sie die MAC-Adressen einsehen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "aquí pode consultar o MAC address",
        RO: "Aici puteti vedea adresa MAC.",
        IND: "TODO"
    },
    wifiSimpleTip2: {
        EN: "Here you can see the speed.",
        FR: "TODO",
        SPN: "Aqui puede ver la velocidad",
        DE: "Hier sehen Sie die Verbindungsgeschwindigkeit.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "aquí pode consultar a velocidade",
        RO: "Aici puteti vedea viteza.",
        IND: "TODO"
    },
    wifiSimpleTip3: {
        EN: "Here you can see the Wi-Fi standard region.",
        FR: "TODO",
        SPN: "Aqui puede ver el estandar WiFi de su region",
        DE: "Hier sehen Sie die voreingestellte Region für das WLAN.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "aquí pode consultar a regiao standard de Wi-Fi",
        RO: "Aici puteti vedea regiunea standard de WiFi.",
        IND: "TODO"
    },
    wifiSimpleTip4: {
        EN: "Here you can see the current channel.",
        FR: "TODO",
        SPN: "Aqui puede ver el canal actual",
        DE: "Hier sehen Sie den aktuell verwendeten Funkkanal.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "aquí pode consultar o canal actual",
        RO: "Aici puteti vedea canalul curent.",
        IND: "TODO"
    },
    wifiSimpleTip5: {
        EN: "Click this button to generate Pin Code.",
        FR: "TODO",
        SPN: "Click para generar un codigo PIN",
        DE: "Klicken Sie auf diese Schaltfläche, um einen PIN-Code zu generieren.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "pressione este botao para gerar o codigo Pin",
        RO: "Apasa aici pentru a genera codul PIN.",
        IND: "TODO"
    },
    wifiSimpleTip6: {
        EN: "Enter the client PIN Code and click 'set PIN Code'.",
        FR: "TODO",
        SPN: "Introduzca codigo Pin del cliente y click en 'Ajustar cogido PIN'",
        DE: "Geben Sie den PIN-Code ein und klicken Sie auf 'PIN-Code einstellen'",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "insira o codigo PIN e pressione 'set PIN code''",
        RO: "Introdu codul PIN si apasa 'setare cod PIN''",
        IND: "TODO"
    },
    wifiSimpleTip7: {
        EN: "Click here to set PIN code.",
        FR: "TODO",
        SPN: "Click para ajustar codigo PIN",
        DE: "Klicken Sie hier, um den PIN-Code einzustellen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "pressione aquí para escrever o codigo PIN",
        RO: "Apasa aici pentru a seta codul PIN.",
        IND: "TODO"
    },
    wifiSimpleTip8: {
        EN: "Activate WPS on the Wireless client within 2 minutes after clicking 'start'.",
        FR: "TODO",
        SPN: "Activar WPS en el cliente en los 2 minutos siguientes de click en 'Empezar'",
        DE: "Nachdem Sie auf 'start' geklickt haben, müssen Sie WPS ebenfalls auf Ihrem Endgerät innerhalb von 2 Minuten aktivieren/einschalten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "active WPS no cliente wireless durante 2 minutos depois de pressionar 'start''",
        RO: "Activeaza WPS pe clientul wireless in decurs de 2 minute dupa ce faceti clic pe 'start'.'",
        IND: "TODO"
    },
    userErrorMessage: {
        EN: "The old or new passwords are wrong.",
        FR: "TODO",
        SPN: "Las contraseñas antigua o neva no son correctas",
        DE: "Altes oder neues Passwort sind nicht korrekt",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "a password antiga ou a nova esta errada",
        RO: "Parola veche sau noua este gresita.",
        IND: "TODO"
    },
    noFlashPlugin: {
        EN: "Flash plugin is not installed or enabled. Please, fix it and try again.",
        FR: "TODO",
        SPN: "Flash plugin no esta instalado o habilitado. Por favor",
        DE: "Das Flash-Plugin ist auf Ihrem Internetbrowser nicht installiert bzw. aktiviert. Bitte beheben Sie dies und versuchen es dann erneut.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Plug-in flash nu este instalat sau activat. Te rog, rezolva si incearca din nou.",
        IND: "TODO"
    },
    amPlayingNow: {
        EN: "Playing now:",
        FR: "TODO",
        SPN: "Reproduciendo ahora",
        DE: "Sie hören:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Ruleaza",
        IND: "TODO"
    },
    amCurrentSelected: {
        EN: "Current selected:",
        FR: "TODO",
        SPN: "Seleccionado ahora",
        DE: "Aktuell ausgewählt:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Selectie curenta",
        IND: "TODO"
    },
    amCallFrom: {
        EN: "Call from",
        FR: "TODO",
        SPN: "Llamada desde",
        DE: "Anruf von",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Apel de la",
        IND: "TODO"
    },
    amAt: {
        EN: "at",
        FR: "TODO",
        SPN: "en",
        DE: "um",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "la",
        IND: "TODO"
    },
    amNewMessages: {
        EN: "new messages",
        FR: "nouveaux messages",
        SPN: "nuevos mensajes",
        DE: "neue Nachrichten",
        IT: "nuovi messaggi",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Mesaj nou",
        IND: "TODO"
    },
    amBrowserNotSupported: {
        EN: "Your browser does not support the audio element.",
        FR: "TODO",
        SPN: "Su navegador no soporta este elemento de audio",
        DE: "Ihr Internetbrowser unterstützt dieses Audioformat nicht",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Browserul dumneavoastra nu suporta elementul audio.",
        IND: "TODO"
    },
    amCallDuration: {
        EN: "Call duration",
        FR: "TODO",
        SPN: "Duracion de llamada",
        DE: "Anrufdauer",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Durata apel",
        IND: "TODO"
    },
    router: {
        EN: "Router",
        FR: "TODO",
        SPN: "Router",
        DE: "Router",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Roteador",
        RO: "Router",
        IND: "TODO"
    },
    voice: {
        EN: "Voice",
        FR: "TODO",
        SPN: "Voz",
        DE: "Telefonie",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Voz",
        RO: "Voce",
        IND: "TODO"
    },
    failure: {
        EN: "Failure",
        FR: "TODO",
        SPN: "Fallo",
        DE: "Fehler",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Falha",
        RO: "Eroare",
        IND: "TODO"
    },
    success: {
        EN: "Success",
        FR: "TODO",
        SPN: "Exito",
        DE: "Erledigt",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Sucesso",
        RO: "Succes",
        IND: "TODO"
    },
    deviceSing: {
        EN: "Device",
        FR: "Dispositif",
        SPN: "Dispositivo",
        DE: "Gerät",
        IT: "Dispositivo",
        DA: "Enhed",
        AR: "TODO",
        PT: "Dispositivo",
        RO: "Dispozitiv",
        IND: "TODO"
    },
    deviceSingPlur: {
        EN: "Devices",
        FR: "Dispositifs",
        SPN: "Dispositivos",
        DE: "Geräte",
        IT: "Dispositivos",
        DA: "TODO",
        AR: "TODO",
        PT: "Dispositivos",
        RO: "Dispozitive",
        IND: "TODO"
    },
    modem: {
        EN: "Modem",
        FR: "TODO",
        SPN: "Modem",
        DE: "Modem",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Modem",
        RO: "Modem",
        IND: "TODO"
    },
    good: {
        EN: "Good",
        FR: "TODO",
        SPN: "Bueno",
        DE: "Gut",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Ligado",
        RO: "Bun",
        IND: "TODO"
    },
    downCap: {
        EN: "Down",
        FR: "Down",
        SPN: "abajo",
        DE: "Aus",
        IT: "Giù",
        DA: "Ned",
        AR: "أسفل",
        PT: "Desligado",
        RO: "Jos",
        IND: "TODO"
    },
    ssid24: {
        EN: "SSID 2.4 GHz:",
        FR: "SSID 2.4 GHz:",
        SPN: "SSID 2.4 GHz:",
        DE: "SSID 2.4 GHz:",
        IT: "SSID 2.4 GHz:",
        DA: "SSID 2,4 GHz:",
        AR: "TODO",
        PT: "SSID 2.4 GHz:",
        RO: "SSID 2.4 GHz:",
        IND: "TODO"
    },
    ssid50: {
        EN: "SSID 5 GHz:",
        FR: "SSID 5 GHz:",
        SPN: "SSID 5 GHz:",
        DE: "SSID 5 GHz:",
        IT: "SSID 5 GHz:",
        DA: "SSID 5 GHz:",
        AR: "TODO",
        PT: "SSID 5 GHz:",
        RO: "SSID 5 GHz:",
        IND: "TODO"
    },
    signalLevel: {
        EN: "SSID 5 GHz:",
        FR: "SSID 5 GHz:",
        SPN: "SSID 5 GHz:",
        DE: "SSID 5 GHz:",
        IT: "SSID 5 GHz:",
        DA: "SSID 5 GHz:",
        AR: "TODO",
        PT: "SSID 5 GHz:",
        RO: "SSID 5 GHz:",
        IND: "TODO"
    },
    modemRouterTabs: {
        EN: "You can navigate through these tabs to change additional settings about your router/modem.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Durch klicken auf die verschiedenen Reiter können Sie erweiterte Einstellungen an Ihrem Gateway ändern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti naviga prin aceste file pentru a modifica setarile suplimentare ale routerului / modemului dumneavoastra.",
        IND: "TODO"
    },
    modemRouterBasicTabs: {
        EN: "You can navigate through these tabs to change others basic settings about your router/modem.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Durch klicken auf die verschiedenen Reiter können Sie die am häufigsten verwendeten Einstellungen an Ihrem Gateway ändern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti naviga prin aceste file pentru a modifica alte setari de baza ale routerului / modemului dumneavoastra.",
        IND: "TODO"
    },
    dhcpNewTip1: {
        EN: "Here you can set the start of DHCPv4 pool",
        FR: "TODO",
        SPN: "TODO",
        DE: "Niedrigste IPv4-Adresse, die der DHCP-Server im Heimnetz vergibt",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti defini punctul de pornire a grupului DHCPv4",
        IND: "TODO"
    },
    dhcpNewTip2: {
        EN: "Here you can set how many devices the DHCPv4 must handle",
        FR: "TODO",
        SPN: "TODO",
        DE: "Anzahl der IPv4-Adressen, die der DHCP-Server an Geräte im Heimnetz vergeben kann",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti defini cate terminale poate suporta DHCPv4",
        IND: "TODO"
    },
    dhcpNewTip3: {
        EN: "Here you can set DHCPv4 lease time.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ablaufzeit/Verfall von nicht erneuerten DHCPv4-Leases in Sekunden",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti defini timpul de operare DHCPv4.",
        IND: "TODO"
    },
    dhcpv6Tip1: {
        EN: "Here you can set the start of DHCPv6 pool",
        FR: "TODO",
        SPN: "TODO",
        DE: "Start des lokalen IPv6-DHCP-Bereiches",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti defini punctul de pornire a grupului DHCPv6",
        IND: "TODO"
    },
    dhcpv6Tip2: {
        EN: "Here you can set the configuration type to stateless or stateful",
        FR: "TODO",
        SPN: "TODO",
        DE: "Umschaltung der lokalen IPv6-Konfiguration zwischen stateles (SLAAC) und stateful (DHCPv6)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti defini tipul configuratiei in varianta simpla sau completa",
        IND: "TODO"
    },
    dhcpv6Tip3: {
        EN: "Here you can set the number of valid addresses",
        FR: "TODO",
        SPN: "TODO",
        DE: "Anzahl der maximal gültigen Adressen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti seta numarul de adrese valide",
        IND: "TODO"
    },
    dhcpv6Tip4: {
        EN: "Here you can set the DHCPv6 valid lifetime",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ablaufzeit/Verfall von nicht erneuertern DHCPv6-Leases in Stunden",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti defini durata si validitatea DHCPv6",
        IND: "TODO"
    },
    dhcpv6Tip5: {
        EN: "Here you can set the router advertisement lifetime",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ablaufzeit für RouterAdvertisments (IPv6-RA lifetime)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti defini durata emisie router-ului",
        IND: "TODO"
    },
    dhcpv6Tip6: {
        EN: "Here you can set the router advertisement interval",
        FR: "TODO",
        SPN: "TODO",
        DE: "Abstand zwischen RouterAdvertisments (IPv6-RA interval)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti defini intervalul de timp al emisiei router-ului",
        IND: "TODO"
    },
    notAvailableIpv6: {
        EN: "Not available",
        FR: "TODO",
        SPN: "TODO",
        DE: "Nicht verfügbar",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Indisponibil",
        IND: "TODO"
    },
    dhcpServerExplained: {
        EN: "Enabling DHCP server on LAN interface can provide proper IP address settings to your computers or network devices.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Durch Aktivierung des DHCP-Servers im Heimnetz erhalten Ihre Computer und Netzwerkgeräte die richtigen IPv4-Adresseinstellungen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Activarea serverului DHCP pe interfata LAN poate atribui corect setarea adresei IP pentru computerul dvs. sau pentru dispozitivele conectate la retea.",
        IND: "TODO"
    },
    dhcpv6ServerExplained: {
        EN: "This page allows you to configure DHCPv6 server to assign proper IP addresses to your computers or network devices at your home network.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Durch Aktivierung des DHCP-Servers im Heimnetz erhalten Ihre Computer und Netzwerkgeräte die richtigen IPv6-Adresseinstellungen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta pagina va permite sa configurati serverul DHCPv6 pentru a atribui adrese IP corespunzatoare pentru calculatoarele sau dispozitivele de retea la reteaua de domiciliu.",
        IND: "TODO"
    },
    lanNewTip1: {
        EN: "Here you can see IPv6 LAN address.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Anzeige des IPv6-Adressbereiches des LANs.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti vedea adresa LAN IPv6.",
        IND: "TODO"
    },
    lanNewTip2: {
        EN: "Here you can see IPv6 LAN Prefix.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Anzeige des lokalen IPv6-Prefixes (LAN).",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti vedea prefixul LAN IPv6.",
        IND: "TODO"
    },
    MacAddressTip: {
        EN: "Here you can see the router/modem MAC address.",
        FR: "TODO",
        SPN: "TODO",
        DE: "MAC/IEEEE-Adresse(n) des Gerätes anzeigen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti vedea adresa MAC a routerului/modemului.",
        IND: "TODO"
    },
    newDhcpStartingLocalAddress: {
        EN: "Starting Local Address:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Lokale Startadresse:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Adresa de pornire locala:",
        IND: "TODO"
    },
    newDhcpNumberCPES: {
        EN: "Number of CPEs:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Anzahl an CPEs:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Numar de CPE-uri:",
        IND: "TODO"
    },
    numberOfAdresses: {
        EN: "Number of Addresses:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Adressanzahl:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Numar de adrese:",
        IND: "TODO"
    },
    startAddress: {
        EN: "Start Address:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Startadresse:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Adresa de start:",
        IND: "TODO"
    },
    "timeUnitMinutes": {
        EN: "(minutes)",
        FR: "TODO",
        SPN: "TODO",
        DE: "(minuten)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "(minute)",
        IND: "TODO"
    },
    "timeUnitSeconds": {
        EN: "(seconds)",
        FR: "TODO",
        SPN: "TODO",
        DE: "(sekunden)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "(secunde)",
        IND: "TODO"
    },
    dhcpv6ValidLifetime: {
        EN: "Valid Lifetime:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Gültige Lebensdauer:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Interval de functionare valid:",
        IND: "TODO"
    },
    routerAdvertisementLifetim: {
        EN: "Router Advertisement Lifetime:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Router Advertisement gültige Lebensdauer:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Perioada de emisie a routerului:",
        IND: "TODO"
    },
    routerAdvertisementInterval: {
        EN: "Router Advertisement Interval:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Router Advertisement-Intervall:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Intervalul de emisie a routerului:",
        IND: "TODO"
    },
    newDhcpLeaseTime: {
        EN: "Lease Time:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Gültigkeitsdauer:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Interval emisie:",
        IND: "TODO"
    },
    dhcpEnableUpnp: {
        EN: "Here you can enable/disable UPnP. UPNP allows games, peer-to-peer, remote assistance or others applications to automatically create port forwarding rules.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Mittels UPnP erlauben Sie es, dass Programme auf ihren lokalen Rechnern ihre Dienste öffentlich anbieten. Diese Funktion kann z.B. von Spielen benötigt werden.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa / dezactiva UPnP. UPNP permite jocuri, peer-to-peer, asistenta de la distanta sau din alte aplicatii pentru a crea automat reguli de redirectionare de port.",
        IND: "TODO"
    },
    lanSettings: {
        EN: "LAN Settings",
        FR: "TODO",
        SPN: "TODO",
        DE: "LAN-Einstellungen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Setari LAN",
        IND: "TODO"
    },
    wanSettings: {
        EN: "WAN Settings",
        FR: "TODO",
        SPN: "TODO",
        DE: "WAN-Einstellungen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        RO: "Setari WAN",
        IND: "TODO"
    },
    dhcpv4Server: {
        EN: "DHCPv4 Server",
        FR: "TODO",
        SPN: "TODO",
        DE: "DHCPv4-Server",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Server DHCPv4",
        IND: "TODO"
    },
    dhcpv6Server: {
        EN: "DHCPv6 Server",
        FR: "TODO",
        SPN: "TODO",
        DE: "DHCPv6-Server",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Server DHCPv6",
        IND: "TODO"
    },
    autoConfigurationType: {
        EN: "AutoConfiguration Type:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Autokonfigurationstyp:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Mod Autoconfigurare:",
        IND: "TODO"
    },
    myNetwork: {
        EN: "My Network",
        FR: "TODO",
        SPN: "TODO",
        DE: "Verbundene Geräte",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Reteaua mea",
        IND: "TODO"
    },
    lanSettingsExplanation: {
        EN: "This page allows you to configure basic LAN side IP settings of your home gateway.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Auf dieser Seite können Sie die IP-Grundeinstellungen Ihres Kabelrouters im Heimnetz konfigurieren.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    newDhcpIPv6Address: {
        EN: "IPv6 Address:",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv6-Adresse:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Adresa IPv6",
        IND: "TODO"
    },
    ipv6Address: {
        EN: "IPv6 Address",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv6-Adresse",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Adresa IPv6",
        IND: "TODO"
    },
    newDhcpIPv6Prefix: {
        EN: "IPv6 Prefix:",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv6-Präfix:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Prefix IPv6",
        IND: "TODO"
    },
    newDhcpIpv4Address: {
        EN: "IPv4 Address:",
        FR: "Adresse IPv4:",
        SPN: "IPv4 Dirección:",
        DE: "IPv4-Adresse:",
        IT: "Indirizzo IPv4:",
        DA: "IPv4-adresse:",
        AR: "عنوان IPv4",
        PT: "TODO",
        RO: "Adresa IPv4",
        IND: "TODO"
    },
    newDhcpMACAddress: {
        EN: "MAC address:",
        FR: "Adresse physique:",
        SPN: "Dirección MAC:",
        DE: "MAC-Adresse:",
        IT: "Indirizzo MAC:",
        DA: "MAC-adresse:",
        AR: "عنوان MAC",
        PT: "TODO",
        RO: "Adresa MAC",
        IND: "TODO"
    },
    newDhcpDays: {
        EN: "Days",
        FR: "Jours",
        SPN: "D¡as",
        DE: "Tage",
        IT: "Giorni",
        DA: "Dage",
        AR: "أيام",
        PT: "TODO",
        RO: "Zile",
        IND: "TODO"
    },
    newDhcpHours: {
        EN: "Hours",
        FR: "Heures",
        SPN: "Horas",
        DE: "Stunden",
        IT: "Ore",
        DA: "Timer",
        AR: "ساعات",
        PT: "TODO",
        RO: "Ore",
        IND: "TODO"
    },
    newDhcpMins: {
        EN: "Minutes",
        FR: "Minutes",
        SPN: "Acta",
        DE: "Minuten",
        IT: "Minuti",
        DA: "Minutter",
        AR: "دقائق",
        PT: "TODO",
        RO: "Minute",
        IND: "TODO"
    },
    standardSpecCompliant: {
        EN: "Standard Specification Compliant",
        FR: "TODO",
        SPN: "TODO",
        DE: "DOCSIS Modus",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Specificatii de conformitate standard",
        IND: "TODO"
    },
    networkAccess: {
        EN: "Network Access",
        FR: "TODO",
        SPN: "TODO",
        DE: "Netzwerkzugriff",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Acces retea",
        IND: "TODO"
    },
    networkAccessAllowed: {
        EN: "Allowed",
        FR: "TODO",
        SPN: "TODO",
        DE: "Erlaubt",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Permis",
        IND: "TODO"
    },
    networkAccessNotAllowed: {
        EN: "Not Allowed",
        FR: "TODO",
        SPN: "TODO",
        DE: "Nicht erlaubt",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Nepermis",
        IND: "TODO"
    },
    cableModem: {
        EN: "Cable Modem",
        FR: "TODO",
        SPN: "TODO",
        DE: "Kabelmodem",
        IT: "TODO",
        DA: "Kabel Modem",
        AR: "TODO",
        PT: "TODO",
        RO: "Modem cablu",
        IND: "TODO"
    },
    cableModemPageDescription1: {
        EN: "The information below shows current status of this home gateway.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Die folgende Tabelle zeigt die Gerätedaten und den Status des Kabelrouters.",
        IT: "TODO",
        DA: "Informationen nedenfor angiver modemmets aktuelle status",
        AR: "TODO",
        PT: "TODO",
        RO: "Informatiile de mai jos arata starea curenta a acestui router.",
        IND: "TODO"
    },
    cableModemPageDescription2: {
        EN: "This page displays information on the status of the cable modem's HFC and IP network connectivity.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Auf dieser Seite werden Informationen zum Status der HFC-Netzwerkkonnektivität des Kabelmodems angezeigt.",
        IT: "TODO",
        DA: "Denne side viser status informationen om kabel modemmets HFC og IP netværks konnektivitet.",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    cableModemPageDescription3: {
        EN: "This page provides information about the manually configurable settings of the Cable Modem.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Diese Seite enthält Informationen über die manuell konfigurierbaren Einstellungen des Kabelmodems.",
        IT: "TODO",
        DA: "Denne side informerer om kabel modemmets manuelle konfigurations indstillinger.",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    cableModemSubtabsHelp: {
        EN: "You can navigate through these tabs to see other information about your cable modem.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Durch klicken auf die verschiedenen Reiter können Sie weitere Informationen zu Ihrem Gateway einsehen.",
        IT: "TODO",
        DA: "Du kan navigerer gennem disse faneblade for at se kabelmodemmets andre informationer.",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    PowerLine: {
        EN: "PowerLine",
        FR: "TODO",
        SPN: "TODO",
        DE: "Powerline",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "PowerLine",
        IND: "TODO"
    },
    powerLineDevice: {
        EN: "PowerLine Device",
        FR: "TODO",
        SPN: "TODO",
        DE: "Powerline-Adapter",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Dispozitiv PowerLine",
        IND: "TODO"
    },
    plcTip1: {
        EN: "Displays the status of the PLC device.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Zeigt den Status des Powerline-Adapters",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Arata starea dispozitivului PLC.",
        IND: "TODO"
    },
    plcTip2: {
        EN: "Changes the name of the PLC device.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ändert den angezeigten Namens des Powerline-Adapters",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Schimba numele dispozitivului PLC.",
        IND: "TODO"
    },
    plcTip3: {
        EN: "Displays the connection time of the PLC device.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Zeigt die Verbindungsdauer mit dem Powerline-Adapter an.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Afiseaza timpul de conectare al dispozitivului PLC.",
        IND: "TODO"
    },
    plcTip4: {
        EN: "Displays the MAC address of the PLC device.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Zeigt die MAC-Adresse des Powerline-Adapters an.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Afiseaza adresa MAC a dispozitivului PLC.",
        IND: "TODO"
    },
    uptimeFormat: {
        EN: "%d day(s) %hh:%mm:%ss",
        FR: "TODO",
        SPN: "TODO",
        DE: "%d Tag(e) %hh:%mm:%ss",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "%z zi(le) %hh:%mm:%ss",
        IND: "TODO"
    },
    backhaul: {
        EN: "Backhaul",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wifibackhaul: {
        EN: "Wi-Fi Backhaul",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ipv6LeaseTimeFormat: {
        EN: "D:%d H:%h M:%m S:%s",
        FR: "TODO",
        SPN: "TODO",
        DE: "D:%d H:%h M:%m S:%s",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Z:%z H:%h M:%m S:%s",
        IND: "TODO"
    },
    wifiDualWiFiSettings: {
        EN: "Wi-Fi Settings",
        FR: "TODO",
        SPN: "TODO",
        DE: "WLAN Einstellungen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Setari WiFi",
        IND: "TODO"
    },
    wifiDualIntro: {
        EN: "This page allows you to configure basic features of your Wi-Fi wireless network.You can enable or disable the wireless interface, change the wireless network name(SSID), select the working channel and set the Pre-Shared Key.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Auf dieser Seite können Sie die allgemeinen Einstellungen Ihres WLAN konfigurieren. Sie können die WLAN-Schnittstelle aktivieren oder deaktivieren, den Netzwerknamen (SSID) ändern, den Kanal auswählen und den WLAN-Schlüssel festlegen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta pagina va permite configurarea setarilor de baza a retelei WiFi. Puteti activa si dezactiva interfata wireless, schimba numele retelei wireless (SSID), selecta canalul functionabil si seta cheia pre-partajata.",
        IND: "TODO"
    },
    wifiDualWirelessRadio: {
        EN: "Wireless Radio:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Drahtlos-Modus",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Radio Wireless",
        IND: "TODO"
    },
    wifiDualNetworkName: {
        EN: "Network name (SSID):",
        FR: "TODO",
        SPN: "TODO",
        DE: "Netzwerkname (SSID)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Numele retelei (SSID):",
        IND: "TODO"
    },
    wifiDualBSSId: {
        EN: "BSSID:",
        FR: "TODO",
        SPN: "TODO",
        DE: "BSSID (Basic Service Set Identifier: MAC-Adresse Ihrer WLAN-Basisstation)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "BSSID:",
        IND: "TODO"
    },
    wifiDualHideNetwork: {
        EN: "Hide network:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Netzwerk ausblenden",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Ascunde retea:",
        IND: "TODO"
    },
    wifiDualPreSharedKey: {
        EN: "Pre-shared key:",
        FR: "TODO",
        SPN: "TODO",
        DE: "WLAN-Schlüssel",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Cheie Pre-partajata:",
        IND: "TODO"
    },
    wifiDualGroupRekeyInterval: {
        EN: "Group rekey interval (in seconds):",
        FR: "TODO",
        SPN: "TODO",
        DE: "Group-Rekey-Intervall",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wifiDualTransmissionMode: {
        EN: "Transmission Mode:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Übertragungsmodus",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Mod de transmisie:",
        IND: "TODO"
    },
    restoreWireless: {
        EN: "Restore wireless defaults",
        FR: "TODO",
        SPN: "TODO",
        DE: "WLAN Standardeinstellungen wiederherstellen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Restaurati setarile wireless implicite",
        IND: "TODO"
    },
    usbControlSubTabs: {
        EN: "You can navigate through these tabs to set up media sharing.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Durch klicken auf die verschiedenen Reiter können Sie weitere Einstellungen zur Medienverwaltung vornehmen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti naviga prin aceste file pentru a configura partajarea fisierelor media",
        IND: "TODO"
    },
    ipv4PortForwarding: {
        EN: "IPv4 Port Forwarding",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv4 Port-Weiterleitung ",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Redirectionare port IPv4",
        IND: "TODO"
    },
    enableUsbPort: {
        EN: "Here you can enable and disable the USB port to connect.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Der USB-Anschluss am Gerät lässt sich mittels dieser Funktion ein-/abschalten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa si dezactiva portul USB pentru conectare.",
        IND: "TODO"
    },
    remarkColon: {
        EN: "Remark:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hinweis:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Nota:",
        IND: "TODO"
    },
    usbConnected: {
        EN: "USB Connected",
        FR: "TODO",
        SPN: "TODO",
        DE: "USB verbunden",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "USB Conectat",
        IND: "TODO"
    },
    ipv4PFExplained: {
        EN: "Gateway is in DS-Lite mode. Always check external IPv4 address and assigned port as these may change. Up to 16 port forwarding rules are supported.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ihr Gateway befindet sich im Betriebsmodus 'DS-Lite'. Die hier angezeigte externe IP-Adresse kann sich ändern. Es können maximal 16 Port-Weiterleitungen eingerichtet werden.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    usbPort: {
        EN: "USB port:",
        FR: "TODO",
        SPN: "TODO",
        DE: "USB-Port:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Port USB:",
        IND: "TODO"
    },
    ipv4PFIntro: {
        EN: "This function allows for incoming requests on specific port numbers to reach web servers, FTP servers, mail servers, etc. so they can be accessible from the public Internet.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Diese Funktion ermöglicht die Freigabe von Portnummern auf Adressen in ihrem lokalen Netz. Damit können Sie Dienste öffentlich im Internet anbieten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    usbStorageFunction: {
        EN: "USB Network Storage Function",
        FR: "TODO",
        SPN: "TODO",
        DE: "USB-Netzwerkspeicherfunktion",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Functie USB de stocare in retea",
        IND: "TODO"
    },
    startExternalPort: {
        EN: "Start External Port",
        FR: "TODO",
        SPN: "TODO",
        DE: "Erster externer Port",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Start Port Extern",
        IND: "TODO"
    },
    dlnaMediaServerFunction: {
        EN: "DLNA Media Server Function",
        FR: "TODO",
        SPN: "TODO",
        DE: "DLNA Media Server-Funktion",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Functie Server Media DLNA",
        IND: "TODO"
    },
    endExternalPort: {
        EN: "End External Port",
        FR: "TODO",
        SPN: "TODO",
        DE: "Letzter externer Port",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Sfarsit Port Extern",
        IND: "TODO"
    },
    properties: {
        EN: "Properties",
        FR: "TODO",
        SPN: "TODO",
        DE: "Eigenschaften",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Proprietati",
        IND: "TODO"
    },
    mixedPFIPv4Table: {
        EN: "All your IPv4 port forwarding rules will be showed in this table.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ihre IPv4-Weiterleitungs-Regeln (Portforwarding IPv4) werden in dieser Tabelle angezeigt.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Toate regulile de redirectionare a porturilor IPv4 vor fi afisate in acest tabel.",
        IND: "TODO"
    },
    tblUsbConnectedDevicesTip: {
        EN: "Here you can see information about connected USB devices.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Informationen über die am USB-Anschluss verbundenen Geräte abrufen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti vedea informatii despre dispozitivile USB conectate",
        IND: "TODO"
    },
    mixedPFEditIPv4: {
        EN: "Click on this icon to edit the IPv4 rule present on this row.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Klicken Sie hier, um die Einstellungen der IPv4-Weiterleitung in dieser Spalte zu ändern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Apasa aici pentru a edita regula IPv4 prezenta pe acest rand.",
        IND: "TODO"
    },
    mixedPFRemoveIPv4: {
        EN: "Click on this icon to remove the IPv4 rule present on this row.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Klicken Sie hier, um die Einstellungen der IPv4-Weiterleitung in dieser Spalte zu löschen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Apasa aici pentru a sterge regula IPv4 prezenta pe acest rand.",
        IND: "TODO"
    },
    mixedPFAddComputerIPv4: {
        EN: "Click on this button to add connected computer's IP in the new IPv4 rule.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Klicken Sie hier, um die IP-Adresse Ihres Endgerätes der IPv4-Weiterleitung hinzuzufügen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    mixedPFAddRuleIPv4: {
        EN: "Click on this button to add a new IPv4 rule.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Neue IPv4-Weiterleitung eintragen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Apasa aici pentru a adauga o noua regula IPv4.",
        IND: "TODO"
    },
    mixedPFIPv6Table: {
        EN: "All your IPv6 port forwarding rules will be showed in this table.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ihre IPv6-Weiterleitungs-Regeln (Portforwarding IPv6) werden in dieser Tabelle angezeigt.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Toate regulile de redirectionare a porturilor IPv6 vor fi afisate in acest tabel.",
        IND: "TODO"
    },
    mixedPFEditIPv6: {
        EN: "Click on this icon to edit the IPv6 rule present on this row.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Klicken Sie hier, um die Einstellungen der IPv6-Weiterleitung in dieser Spalte zu ändern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Apasa aici pentru a edita regula IPv6 prezenta pe acest rand.",
        IND: "TODO"
    },
    mixedPFRemoveIPv6: {
        EN: "Click on this icon to remove the IPv6 rule present on this row.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Klicken Sie hier, um die Einstellungen der IPv6-Weiterleitung in dieser Spalte zu löschen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Apasa aici pentru a sterge regula IPv6 prezenta pe acest rand.",
        IND: "TODO"
    },
    mixedPFAddComputerIPv6: {
        EN: "Click on this button to add connected computer's IP in the new IPv6 rule.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Klicken Sie hier, um die IP-Adresse Ihres Endgerätes der IPv6-Weiterleitung hinzuzufügen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    mixedPFAddRuleIPv6: {
        EN: "Click on this button to add a new IPv6 rule.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Neue IPv6-Weiterleitung eintragen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Apasa aici pentru a adauga o noua regula IPv6.",
        IND: "TODO"
    },
    mixedPFUPnPTable: {
        EN: "UPnP auto created rules will be showed in this table.",
        FR: "TODO",
        SPN: "TODO",
        DE: "In dieser Aufstellung werden via UPnP automatisch freigeschaltete Port-Weiterleitungen angezeigt.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Regulile UPnP create automat vor fi afisate aici.",
        IND: "TODO"
    },
    modemRouterAdvancedTabs: {
        EN: "You can navigate through these tabs to change others advanced settings about your router/modem.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Durch klicken auf die verschiedenen Reiter können Sie erweiterte Einstellungen Ihres Gateways vornehmen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti naviga prin aceste file pentru a schimba alte setari avansate ale routerului/modemului dumneavoastra.",
        IND: "TODO"
    },
    mixedPFConfirmAddIPv4: {
        EN: "Click on this icon to save the new IPv4 rule.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Klicken Sie auf diese Schaltfläche, um diese IPv4-Weiterleitung zu speichern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Apasa aici pentru a salva noua regula IPv4.",
        IND: "TODO"
    },
    mixedPFCancelAddIPv4: {
        EN: "Click on this icon to cancel IPv4 rule addition.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Klicken Sie auf diese Schaltfläche, um die Einrichtung dieser IPv4-Weiterleitung abzubrechen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Apasa aici pentru a anula adaugarea de noi reguli IPv4.",
        IND: "TODO"
    },
    mixedPFConfirmAddIPv6: {
        EN: "Click on this icon to save the new IPv6 rule.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Klicken Sie auf diese Schaltfläche, um diese IPv6-Weiterleitung zu speichern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Apasa aici pentru a salva noua regula IPv6.",
        IND: "TODO"
    },
    mixedPFCancelAddIPv6: {
        EN: "Click on this icon to cancel IPv6 rule addition.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Klicken Sie auf diese Schaltfläche, um die Einrichtung dieser IPv6-Weiterleitung abzubrechen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Apasa aici pentru a anula adaugarea de noi reguli IPv6.",
        IND: "TODO"
    },
    invalidDescription: {
        EN: "Invalid description",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ungültige Beschreibung",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Descriere nevalida",
        IND: "TODO"
    },
    listEmpty: {
        EN: "List is empty",
        FR: "TODO",
        SPN: "TODO",
        DE: "Die Liste ist leer.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Lista este goala",
        IND: "TODO"
    },
    edit: {
        EN: "Edit",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ändern",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Editare",
        IND: "TODO"
    },
    voiceStatusTableTip: {
        EN: "General information about the voice status.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Allgemeine Informationen zur Telefonie",
        IT: "TODO",
        DA: "Generel information om telefoni status.",
        AR: "TODO",
        PT: "TODO",
        RO: "Informatii generale despre starea vocii.",
        IND: "TODO"
    },
    phoneNumber: {
        EN: "Phone Number",
        FR: "TODO",
        SPN: "TODO",
        DE: "Telefonnummer",
        IT: "TODO",
        DA: "Telefon nummer",
        AR: "TODO",
        PT: "TODO",
        RO: "Numar de telefon",
        IND: "TODO"
    },
    voiceStatusPageInfo: {
        EN: "This page displays initial status of telephony function.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Auf dieser Seite wird der Anfangsstatus der Telefoniefunktion angezeigt.",
        IT: "TODO",
        DA: "Denne side viser telefoni initial status",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta pagina afiseaza starea initiala a functiei de telefon.",
        IND: "TODO"
    },
    operational: {
        EN: "Operational",
        FR: "TODO",
        SPN: "TODO",
        DE: "Betriebsbereit",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Operational",
        IND: "TODO"
    },
    notoperational: {
        EN: "Not operational",
        FR: "TODO",
        SPN: "TODO",
        DE: "Nicht verfügbar",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Neoperational",
        IND: "TODO"
    },
    voiceSettingsTabs: {
        EN: "You can navigate through other voice settings here.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Durch klicken auf die verschiedenen Reiter können Sie weitere Einstellungen zur Telefonie einsehen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti naviga prin alte setari de voce aici.",
        IND: "TODO"
    },
    callerIdDisplay: {
        EN: "Caller ID Display",
        FR: "TODO",
        SPN: "TODO",
        DE: "Anrufer ID Anzeige",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Afisare ID apelant",
        IND: "TODO"
    },
    dateAndTime: {
        EN: "Date & Time",
        FR: "TODO",
        SPN: "TODO",
        DE: "Datum & Zeit",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Data & Ora",
        IND: "TODO"
    },
    voiceHelpDateAndTime: {
        EN: "You can enable or disable the Caller ID Date & Time here.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Rufnummernunterdrückung abgehend (CLIR) ein-/abschalten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti dezactiva ID Apelant, data si ora.",
        IND: "TODO"
    },
    management: {
        EN: "Management",
        FR: "TODO",
        SPN: "TODO",
        DE: "Verwaltung",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Management",
        IND: "TODO"
    },
    wifiScheduleTitle: {
        EN: "Wi-Fi Scheduling",
        FR: "TODO",
        SPN: "TODO",
        DE: "WLAN-Zeitschaltung",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Programare Wifi",
        IND: "TODO"
    },
    dectScheduleTitle: {
        EN: "Dect Scheduling",
        FR: "TODO",
        SPN: "TODO",
        DE: "DECT-Zeitschaltung",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Programare Dect",
        IND: "TODO"
    },
    ledsScheduleTitle: {
        EN: "Leds Scheduling",
        FR: "TODO",
        SPN: "TODO",
        DE: "LED-Zeitschaltung",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wifiScheduleEnableTip: {
        EN: "Here you can enable and disable the schedule for Wi-Fi, you can only change the schedule table when the functionality is disabled.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die WLAN-Zeitschaltung ein- bzw. ausschalten. Bitte beachten Sie, dass eine Änderung der Zeitfenster nur bei ausgeschalteter Funktion möglich ist.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti activa si dezactiva programarea WiFi. Puteti schimba programarea doar daca functionarea este dezactivata.",
        IND: "TODO"
    },
    dectScheduleEnableTip: {
        EN: "Here you can enable and disable the schedule for DECT, you can only change the schedule table when the functionality is disabled.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die DECT-Zeitschaltung ein- bzw. ausschalten. Bitte beachten Sie, dass eine Änderung der Zeitfenster nur bei ausgeschalteter Funktion möglich ist.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti activa si dezactiva programarea Dect. Puteti schimba programarea doar daca functionarea este dezactivata.",
        IND: "TODO"
    },
    notbooked: {
        EN: "Not booked",
        FR: "TODO",
        SPN: "TODO",
        DE: "Nicht gebucht",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Nerezervat",
        IND: "TODO"
    },
    ledsScheduleEnableTip: {
        EN: "Here you can enable and disable the schedule for leds, you can only change the schedule table when the functionality is disabled.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die LED-Zeitschaltung ein- bzw. ausschalten. Bitte beachten Sie, dass eine Änderung der Zeitfenster nur bei ausgeschalteter Funktion möglich ist.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wifiScheduleTableTip: {
        EN: "Here you can turn on or off access to Wi-Fi for a specific day, you can only change the schedule table when the functionality is disabled. ",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie Ihr WLAN für bestimmte Wochentage ein- bzw. ausschalten. Bitte beachten Sie, dass eine Änderung der Tage nur bei ausgeschalteter Funktion möglich ist.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti deschide si inchide accesul la WiFi pentru o anumita zi. Puteti schimba programarea doar daca functionarea este dezactivata.",
        IND: "TODO"
    },
    dectScheduleTableTip: {
        EN: "Here you can turn on or off access to DECT for a specific day.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie Ihr DECT für bestimmte Wochentage ein- bzw. ausschalten. ",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti deschide si inchide accesul la Dect pentru o anumita zi.",
        IND: "TODO"
    },
    ledsScheduleTableTip: {
        EN: "Here you can turn on or off access to leds for a specific day.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie Ihre LEDs für bestimmte Wochentage ein- bzw. ausschalten. ",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    note: {
        EN: "Note: ",
        FR: "TODO",
        SPN: "Nota:",
        DE: "Hinweis:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Nota:",
        IND: "TODO"
    },
    wifiDualConflictingTitle: {
        EN: "Warning!",
        FR: "Avertissement",
        SPN: "Advertencia",
        DE: "Achtung!",
        IT: "Avvertimento",
        DA: "Advarsel",
        AR: "تحذير  ",
        PT: "aviso",
        RO: "TODO",
        IND: "TODO"
    },
    wifiDualConflicting: {
        EN: "It's not recommended to use different pre-shared keys for identical network names (SSID). Please enter the same pre-shared key in both fields and select the same security mode or change network names (SSID) first.",
        FR: "TODO",
        SPN: "No se recomienda utilizar diferentes claves precompartidas para nombres de red idénticos (SSID). Introduzca la misma clave precompartida en ambos campos y seleccione el mismo modo de seguridad o cambie primero los nombres de red (SSID).",
        DE: "Es ist nicht empfehlenswert, unterschiedliche WLAN-Schlüssel zu verwenden, wenn die Netzwerknamen (SSID) identisch sind. Bitte verwenden sie denselben WLAN-Schlüssel in beiden Eingabefeldern und wählen Sie die gleiche Sicherheitseinstellung aus oder ändern Sie zuerst die Netzwerknamen (SSID).",
        IT: "TODO",
        DA: "Det kan ikke anbefales at anvende forskellige adgagnskoder for identiske netværksnavne (SSID). Angiv venligst den samme adgangskode i begge felter og vælg samme sikkerhed eller ændre netværksnavnet (SSID).",
        AR: "TODO",
        PT: "TODO",
        RO: "Nu este recomandata folosirea de chei pre-partajate diferite pentru nume de retea (SSID) identice. Va rog introduceti aceeasi cheie in ambele campuri sau schimbati mai intai unul din numele identice.",
        IND: "TODO"
    },
    scheduleNote: {
        EN: "Be careful when changing configuration using a wireless device, you might be disconnected.",
        FR: "Soyez prudent lors de l'activation de la planification, si la planification est entièrement désactiver les périphériques sans fil seront déconnectés.",
        SPN: "Tenga cuidado al cambiar la configuración utilizando un dispositivo inalámbrico, es posible que esté desconectado.",
        DE: "Seien Sie vorsichtig, wenn Sie die Konfiguration über ein Wireless-Gerät ändern. Möglicherweise trennen Sie die Verbindung.",
        IT: "Fai attenzione quando cambi la configurazione usando un dispositivo wireless, potresti essere disconnesso.",
        DA: "Vær forsigtig, når du ændrer konfigurationen ved hjælp af en trådløs enhed, kan du blive afbrudt.",
        AR: "TODO",
        PT: "Tenha cuidado ao mudar a configuração usando um dispositivo sem fio, você pode estar desconectado.",
        RO: "Aveți grijă când modificați configurația utilizând un dispozitiv fără fir, s-ar putea să fiți deconectat.",
        IND: "TODO"
    },
    notBooked: {
        EN: "Not Booked",
        FR: "TODO",
        SPN: "TODO",
        DE: "Nicht gebucht",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Nerezervat",
        IND: "TODO"
    },
    importContacts: {
        EN: "Import Contacts",
        FR: "TODO",
        SPN: "TODO",
        DE: "Kontakte importieren",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Import contacte",
        IND: "TODO"
    },
    staticAddr: {
        EN: "Static Address",
        FR: "Adresse statique",
        SPN: "Dirección est tica",
        DE: "Statische Adresse",
        IT: "Indirizzo statico",
        DA: "Statisk adresse",
        AR: "عنوان ثابت",
        PT: "TODO",
        RO: "Addresa statica",
        IND: "TODO"
    },
    wanIpv4AddressTip: {
        EN: "This is the IPv4 WAN Address",
        FR: "TODO",
        SPN: "TODO",
        DE: "Öffentliche IPv4-Adresse (WAN)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta este adresa WAN IPv4",
        IND: "TODO"
    },
    pbGroup: {
        EN: "Group:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Gruppe:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Grup:",
        IND: "TODO"
    },
    wanIpv4DefaultGWTip: {
        EN: "This is the IPv4 Default Gateway address",
        FR: "TODO",
        SPN: "TODO",
        DE: "Standard-Adresse des IPv4-Gateways",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta este adresa gateway IPv4 implicita",
        IND: "TODO"
    },
    noGroup: {
        EN: "No Group",
        FR: "TODO",
        SPN: "TODO",
        DE: "Keine Gruppe",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Niciun Grup",
        IND: "TODO"
    },
    wanIpv4LeaseTimeTip: {
        EN: "This is the IPv4 Lease Time",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv4-Lease auf dem öffentlichen (WAN-)Interface",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    warningMaxCount: {
        EN: "You can not import more than 255 contacts.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Der Import ist auf 255 Kontakte begrenzt.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti importa mai mult de 255 de contacte.",
        IND: "TODO"
    },
    "import": {
        EN: "Import",
        FR: "TODO",
        SPN: "TODO",
        DE: "Import",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Import",
        IND: "TODO"
    },
    noContactsImport: {
        EN: "No contacts to import.",
        FR: "Aucun contact à importer.",
        SPN: "TODO",
        DE: "Keine Kontakte importieren.",
        IT: "Non ci sono contatti da importare.",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Niciun contact de importat.",
        IND: "TODO"
    },
    helpImport: {
        EN: "If you want to import contacts from another Google account, you need to open a new tab to google.com, click on the right top icon, and logout.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Wenn Sie Kontakte eines anderen Google-Benutzerkontos importieren möchten, müssen Sie sich zunächst aus Ihrem aktuellen Google-Benutzerkonto abmelden.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Daca doriti importul de contacte dintr-un alt cont Google, trebuie sa deschideti un nou tab cu google.com, apasati pe iconita din dreapta sus si selectati deconectare.",
        IND: "TODO"
    },
    contactsWithNumber: {
        EN: "Select contacts with number only.",
        FR: "TODO",
        SPN: "Selecciona contactos con número solamente.",
        DE: "Nur Kontakte mit einer hinterlegten Telefonnumer auswählen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Selectati doar contacte cu numar de telefon.",
        IND: "TODO"
    },
    wanIpv4LeaseExpireTip: {
        EN: "This is the IPv4 Lease Expire Time",
        FR: "TODO",
        SPN: "TODO",
        DE: "Anzeige der Gültigkeitsdauer der IPv4-Adresse",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wanIpv4DNSTip: {
        EN: "These are the available IPv4 DNS Servers",
        FR: "TODO",
        SPN: "TODO",
        DE: "DHCP-Server IPv4",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Acestea sunt serverele DNS IPv4 disponibile",
        IND: "TODO"
    },
    modelName: {
        EN: "Model Name",
        FR: "TODO",
        SPN: "TODO",
        DE: "Modellbezeichnung",
        IT: "Nome del prodotto",
        DA: "TODO",
        AR: "TODO",
        RO: "Nume model",
        IND: "TODO"
    },
    natRangeStart: {
        EN: "NAT Range Start",
        FR: "TODO",
        SPN: "TODO",
        DE: "Start des NAT-Bereichs",
        IT: "Inizo dell'intervallo NAT",
        DA: "TODO",
        AR: "TODO",
        RO: "Interval de start NAT",
        IND: "TODO"
    },
    natRangeEnd: {
        EN: "NAT Range End",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ende des NAT-Bereichs",
        IT: "Fine dell'intervallo NAT",
        DA: "TODO",
        AR: "TODO",
        RO: "Interval de final NAT",
        IND: "TODO"
    },
    favoriteFrequency: {
        EN: "Favorite Frequency (Hz)",
        FR: "TODO",
        SPN: "TODO",
        DE: "Bevorzugte Frequenz (Hz)",
        IT: "TODO",
        DA: "Start frekvens (Hz)",
        AR: "TODO",
        PT: "TODO",
        RO: "Frecventa favorita (Hz)",
        IND: "TODO"
    },
    factoryResetWarning: {
        EN: "Resetting the cable modem to its factory default configuration will remove all stored parameters learned by the cable modem during prior initializations. The process to get back online from factory default condition could take from 3 to 5 minutes.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ein Zurücksetzen des Kabelmodems auf die Werkseinstellungen löscht sämtliche gespeicherten Parameter. Der Vorgang benötigt zwischen drei und fünf Minuten.",
        IT: "TODO",
        DA: "Gendan til fabriksindstillinger vil gendanne standardindstillinger , og du mister alle dine ændringer. Modemmet genstarter og det vil tage 3 til 5 minutter før modemmet er klar.",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    factoryReset: {
        EN: "Factory Reset",
        FR: "TODO",
        SPN: "TODO",
        DE: "Zurücksetzen auf Werkseinstellungen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Resetare la valorile initiale",
        IND: "TODO"
    },
    factoryResetMsg: {
        EN: "Forgot your password? Please press the 'Factory Reset' to reset your default password",
        FR: "TODO",
        SPN: "TODO",
        DE: "Passwort vergessen? Bitte klicken Sie Auf 'Zurücksetzen auf Werkseinstellungen', um das Kennwort wiederherzustellen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Ati uitat parola? Va rog apasati 'Resetare la valorile initiale' pentru a reseta parola implicita.'",
        IND: "TODO"
    },
    reboot: {
        EN: "Reboot",
        FR: "TODO",
        SPN: "TODO",
        DE: "Neustart",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Repornire",
        IND: "TODO"
    },
    adminAccount: {
        EN: "Admin Account",
        FR: "TODO",
        SPN: "TODO",
        DE: "Administratorkonto",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Cont Administrator",
        IND: "TODO"
    },
    diagnostics: {
        EN: "Diagnostics",
        FR: "TODO",
        SPN: "TODO",
        DE: "Diagnose",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Diagnosticare",
        IND: "TODO"
    },
    forceChangePasswordtitle: {
        EN: "Change password.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Passwort ändern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Schimba Parola.",
        IND: "TODO"
    },
    defaultPasswordTip: {
        EN: "Note: The default username is 'admin' and the default password is 'password'",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hinweis: Der Standardbenutzername ist 'admin' und das Standardkennwort ist 'password'",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        RO: "Nota: Numele de utilizator initial este 'admin' si parola initiala este 'password''",
        IND: "TODO"
    },
    forceChangePassword: {
        EN: "Please change the default password.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Bitte ändern Sie das Standardkennwort.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "va rog schimbati parola initiala.",
        IND: "TODO"
    },
    wmm: {
        EN: "WMM",
        FR: "TODO",
        SPN: "TODO",
        DE: "WMM",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "WMM",
        IND: "TODO"
    },
    infoWmm: {
        EN: "This page allows configuration of the Wi-Fi Multimedia QoS.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Auf dieser Seite können Sie QoS für WLAN-Multimedia konfigurieren.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wmmSupport: {
        EN: "WMM Support:",
        FR: "TODO",
        SPN: "TODO",
        DE: "WMM-Unterstützung:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Suport WMM:",
        IND: "TODO"
    },
    wmmPowerSaveSupport: {
        EN: "Power Save Support:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Energiesparfunktion:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Suport Salvare Energie:",
        IND: "TODO"
    },
    wmmEnable24: {
        EN: "Here you can enable the Wi-Fi multimedia support for 2.4 GHz.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Betriebsart WiFi-Multimedia (MWW) für das 2,4GHz-WLAN aktivieren zur Bevorzugung von Streaming-Diensten und VoIP im WLAN.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa suportul WiFi multimedia 2.4 GHz.",
        IND: "TODO"
    },
    wmmEnable5: {
        EN: "Here you can enable the Wi-Fi multimedia support for 5 GHz.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Betriebsart WiFi-Multimedia (MWW) für das 5GHz-WLAN aktivieren zur Bevorzugung von Streaming-Diensten und VoIP im WLAN.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa suportul WiFi multimedia 5 GHz.",
        IND: "TODO"
    },
    wmmPowerSave24: {
        EN: "Here you can enable the Wi-Fi multimedia power save support for 2.4 GHz.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Energiespar-Betrieb für das 2,4GHz-WLAN zulassen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa economisirea energiei pentru suportul WiFi multimedia 2.4 GHz.",
        IND: "TODO"
    },
    wmmPowerSave5: {
        EN: "Here you can enable the Wi-Fi multimedia power save support for 5 GHz.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Energiespar-Betrieb für das 5GHz-WLAN zulassen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa economisirea energiei pentru suportul WiFi multimedia 5 GHz.",
        IND: "TODO"
    },
    inProcess: {
        EN: "In process",
        FR: "TODO",
        SPN: "TODO",
        DE: "In Vorbereitung",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "In curs",
        IND: "TODO"
    },
    cmSignal: {
        EN: "Signal",
        FR: "TODO",
        SPN: "TODO",
        DE: "Signale",
        IT: "TODO",
        DA: "Signal",
        AR: "TODO",
        PT: "TODO",
        RO: "Semnal",
        IND: "TODO"
    },
    noSignalData: {
        EN: "No signal data available.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Kein Daten Signal verfügbar",
        IT: "TODO",
        DA: "Ingen signal data tilgængelig.",
        AR: "TODO",
        PT: "TODO",
        RO: "Semnal indisponibil",
        IND: "TODO"
    },
    cableModemSignal: {
        EN: "In this table you can check the status of signal data.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Informationen zur Signalqualität der DOCSIS-Verbindung.",
        IT: "TODO",
        DA: "I denne tabel kan du checke status på signal data.",
        AR: "TODO",
        PT: "TODO",
        RO: "In acest table puteti verifica starea datelor de semnal.",
        IND: "TODO"
    },
    bandMode24: {
        EN: "Band Mode 2.4 GHz",
        FR: "TODO",
        SPN: "TODO",
        DE: "Frequenzband-Modus 2.4 GHz",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Mod banda 2.4 GHz",
        IND: "TODO"
    },
    bandMode5: {
        EN: "Band Mode 5 GHz",
        FR: "TODO",
        SPN: "TODO",
        DE: "Frequenzband-Modus 5 GHz",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Mod banda 5 GHz",
        IND: "TODO"
    },
    wpsDescription: {
        EN: "Wi-Fi Protected Setup allows users to setup secure wireless network easily.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Mit der Option WPS (Wi-Fi Protected Setup) können Sie einfach eine verschlüsselte WLAN-Verbindung aufbauen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ipv6EnableFirewall: {
        EN: "Enable IPv6 Firewall",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv6 Firewall aktivieren",
        IT: "TODO",
        DA: "Aktiver IPv6 Firewall",
        AR: "TODO",
        PT: "TODO",
        RO: "Activati protectia firewall IPv6",
        IND: "TODO"
    },
    lanIPv6AddressSettings: {
        EN: "LAN IPv6 Address Settings",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv6-Adresseinstellungen für Ihr lokales Netzwerk",
        IT: "TODO",
        DA: "LAN IPv6 adresse indstillinger",
        AR: "TODO",
        PT: "TODO",
        RO: "Setari adrese LAN IPv6",
        IND: "TODO"
    },
    enableDHCPPd: {
        EN: "Enable DHCP-Pd",
        FR: "TODO",
        SPN: "TODO",
        DE: "DHCP-PC aktivieren",
        IT: "TODO",
        DA: "Aktiver DHCP-Pd",
        AR: "TODO",
        PT: "TODO",
        RO: "Activati DHCP-Pd",
        IND: "TODO"
    },
    lanIPv6LinkLocalAddress: {
        EN: "LAN IPv6 Link-Local Address",
        FR: "TODO",
        SPN: "TODO",
        DE: "Lokale Adresse IPv6-Link",
        IT: "TODO",
        DA: "LAN IPv6 Link-Local Adresse",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    addressAutoconfigSettings: {
        EN: "Address Autoconfiguration Settings",
        FR: "TODO",
        SPN: "TODO",
        DE: "Einstellungen automatische Adressvergabe",
        IT: "TODO",
        DA: "Adresse autokonfigurations indstillinger",
        AR: "TODO",
        PT: "TODO",
        RO: "Setari autoconfigurare LAN IPv6",
        IND: "TODO"
    },
    enableAutoIPv6Assignment: {
        EN: "Enable automatic IPv6 address assignment",
        FR: "TODO",
        SPN: "TODO",
        DE: "Automatische IPv6-Adressvergabe aktivieren",
        IT: "TODO",
        DA: "Aktiver automatisk IPv6 adresse tildeling",
        AR: "TODO",
        PT: "TODO",
        RO: "Activati asignarea automata de adrese IPv6",
        IND: "TODO"
    },
    ipv6AddressRangeStart: {
        EN: "Ipv6 Address Range (Start):",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv6 Adressbereich (Anfang):",
        IT: "TODO",
        DA: "IPv6 adresse område (start):",
        AR: "TODO",
        PT: "TODO",
        RO: "Interval adrese IPv6 (Start):",
        IND: "TODO"
    },
    ipv6AddressRangeEnd: {
        EN: "Ipv6 Address Range (End):",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv6 Adressbereich (Ende):",
        IT: "TODO",
        DA: "IPv6 adresse område (slut):",
        AR: "TODO",
        PT: "TODO",
        RO: "Interval adrese IPv6 (End):",
        IND: "TODO"
    },
    ipv6AddressLifetime: {
        EN: "Ipv6 Address Lifetime:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Gültigkeitsdauer IPv6-Adresse:",
        IT: "TODO",
        DA: "Ipv6 adresse livstid:",
        AR: "TODO",
        PT: "TODO",
        RO: "Durata de functionare adresa IPv6:",
        IND: "TODO"
    },
    lanIpv6EnableDhcpTip: {
        EN: "Here you can enable or disable DHCP-PD.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie DHCP-PD ein- oder ausschalten.",
        IT: "TODO",
        DA: "Her kan du aktivere eller deaktivere DHCP-PD.",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa si dezactiva DHCP-PD.",
        IND: "TODO"
    },
    lanIpv6DhcpAddressTip: {
        EN: "Here you can see the DHCP address and change it.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie den DHCP-Adressbereich einsehen und ändern.",
        IT: "TODO",
        DA: "Her kan du se DHCP-adressen og ændre den.",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti vedea si schimba adresa DHCP.",
        IND: "TODO"
    },
    lanIpv6LinkLocalTip: {
        EN: "Here you can see the LAN IPv6 Link-Local address.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie den IPV6-Link der lokalen Adresse einsehen.",
        IT: "TODO",
        DA: "Her kan du se LAN IPv6 Link-Lokal adresse.",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    lanIpv6EnableAutoIpv6Tip: {
        EN: "Here you can enable or disable the auto IPv6 address assignment.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die automatische IPv6-Adresszuweisung ein- oder ausschalten.",
        IT: "TODO",
        DA: "Her kan du aktivere eller deaktivere den automatiske IPv6-adressetildeling.",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa si dezactiva asignarea automata a adresei IPv6.",
        IND: "TODO"
    },
    ipv6EnableFirewallTip: {
        EN: "Here you can enable or disable the IPv6 firewall.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die IPv6-Firewall ein- oder ausschalten.",
        IT: "TODO",
        DA: "Her kan du aktivere eller deaktivere IPv6 firewall.",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa si dezactiva protectia firewall pentru IPv6.",
        IND: "TODO"
    },
    usbMediaServer: {
        EN: "DLNA Media Server",
        FR: "TODO",
        SPN: "TODO",
        DE: "Media-Server",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Server media DLNA",
        IND: "TODO"
    },
    infoUsbMediaServer: {
        EN: "This page allows to configure the settings of media server running in your cable home gateway.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Auf dieser Seite werden die Konfiguration und das Durchsuchen des Media-Servers des Kabelrouters gesteuert.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    mediaServer: {
        EN: "Media Server",
        FR: "TODO",
        SPN: "TODO",
        DE: "Media-Server",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Server media",
        IND: "TODO"
    },
    mediaServerName: {
        EN: "Media Server Name",
        FR: "TODO",
        SPN: "TODO",
        DE: "Name des Media-Servers",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Nume server media",
        IND: "TODO"
    },
    mediaServerNameTip: {
        EN: "Here you can see the name of your media server.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Anzeige des Freigabe-Namens ihres DNLA-Medien-Servers.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti vedea numele serverului media.",
        IND: "TODO"
    },
    eventLog: {
        EN: "Event Log",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ereignisprotokoll",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Jurnal de evenimente",
        IND: "TODO"
    },
    wifiLog: {
        EN: "Wi-Fi Log",
        FR: "TODO",
        SPN: "TODO",
        DE: "WLAN-Ereignisse",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Jurnal WiFi",
        IND: "TODO"
    },
    wifiLogTip: {
        EN: "Here you can see the Wi-Fi log.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Anzeige des Protokolls der WLAN-Ereignisse",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti vedea jurnalul WiFi.",
        IND: "TODO"
    },
    refreshTip: {
        EN: "You can refresh the Wi-Fi log by clicking on refresh button.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ereignisliste aktualisieren",
        IT: "TODO",
        DA: "Opdater venligst denne side efter aktivering eller deaktivering af Bridge Mode.",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti actualiza jurnalul WiFi apasand pe butonul de reimprospatare.",
        IND: "TODO"
    },
    channelMap: {
        EN: "Channel Map",
        FR: "TODO",
        SPN: "TODO",
        DE: "Netzwerkübersicht WLAN",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Lista canalului",
        IND: "TODO"
    },
    channelMap24: {
        EN: "Channel Map 2.4GHz",
        FR: "TODO",
        SPN: "TODO",
        DE: "Netzwerkübersicht 2.4GHz WLAN",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Lista canalului 2.4Ghz",
        IND: "TODO"
    },
    channelMap5: {
        EN: "Channel Map 5GHz",
        FR: "TODO",
        SPN: "TODO",
        DE: "Netzwerkübersicht 2.4GHz WLAN",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Lista canalului 5Ghz",
        IND: "TODO"
    },
    wifiCount: {
        EN: "Number of Wi-Fi networks",
        FR: "TODO",
        SPN: "TODO",
        DE: "Anzahl der drahtlosen Netzwerke (WLAN)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Numarul de retele WiFi",
        IND: "TODO"
    },
    dynDnsInfo: {
        EN: "This page allows you to provide Internet users with an Internet address (domain name or URL) instead of an IP address to access your virtual servers. This device supports dynamic DNS services from different providers. Please register this service at these providers first.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Auf dieser Seite können Sie eine Internetadresse (Domain-Name oder URL) anstelle einer IP-Adresse definieren, über die Nutzer aus dem Internet auf Ihre virtuellen Server zugreifen können. Dieses Gerät unterstützt dynamische DNS-Dienste von verschiedenen Anbietern. Bitte registrieren Sie sich zuerst bei dem jeweiligen Anbieter für diesen Dienst.",
        IT: "TODO",
        DA: "Denne side tillader internet brugere med en internet adresse (domæne navn eller URL) i stedet for en IP adresse for adgang til din virtuelle server. Dette modem understøtter dynamisk DNS tjenester fra forskellige udbydere. Registrer venligst først DynDNS tjenesten ved disse udbydere.",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta pagina va permite s? oferiti utilizatorilor de Internet cu o adresa de Internet (nume de domeniu sau URL-ul) Œn locul unei adrese IP pentru a avea acces la serverele virtuale. Acest aparat suporta servicii DNS dinamice de la diferi?i furnizori. V? rugam ca in primul rand sa inregistrati acest serviciu la acesti furnizori.",
        IND: "TODO"
    },
    adminAccountInfo: {
        EN: "This page allows you to change the password of the admin account (used for logging in to the modem).",
        FR: "TODO",
        SPN: "TODO",
        DE: "Auf dieser Seite können Sie das Kennwort des Adminstratorkontos ändern, das zum Anmelden an den Kabelrouter erforderlich ist.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta pagina va permite sa schimbati parola contului de administrator (utilizat pentru conectarea la modem).",
        IND: "TODO"
    },
    encryption: {
        EN: "Encryption:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Verschlüsselung:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Criptare:",
        IND: "TODO"
    },
    publicWifi: {
        EN: "Public Wi-Fi",
        FR: "TODO",
        SPN: "TODO",
        DE: "Öffentliches WLAN",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "WiFi public",
        IND: "TODO"
    },
    publicWifiSettings: {
        EN: "Settings",
        FR: "Réglages",
        SPN: "Settings",
        DE: "Einstellungen",
        IT: "Configurazione",
        DA: "Indstillinger",
        AR: "الإعدادات",
        PT: "Ferramentas",
        RO: "TODO",
        IND: "TODO"
    },
    publicWifiACl: {
        EN: "ACl",
        FR: "TODO",
        SPN: "TODO",
        DE: "ACL (Zugriffsliste)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "ACl",
        IND: "TODO"
    },
    publicWifiAutomatedACl: {
        EN: "Automated ACl",
        FR: "TODO",
        SPN: "TODO",
        DE: "Automatische ACL (AccessControlList - Zugriffsliste)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "ACL automatizat",
        IND: "TODO"
    },
    publicWifiEventLog: {
        EN: "Event Log",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ereignisprotokoll",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Jurnal de evenimente",
        IND: "TODO"
    },
    aclMode: {
        EN: "ACL Mode",
        FR: "TODO",
        SPN: "TODO",
        DE: "ACL-Mode (Zugriffslisten-Steuerung)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Mod ACl",
        IND: "TODO"
    },
    macAddresses: {
        EN: "MAC Addresses",
        FR: "TODO",
        SPN: "TODO",
        DE: "MAC-Adressen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Adrese MAC",
        IND: "TODO"
    },
    wifiVlanTip: {
        EN: "Here you can set the VLAN.",
        FR: "TODO",
        SPN: "TODO",
        DE: "VLAN-Einstellungen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Setari Wireless",
        IND: "TODO"
    },
    invalidVlan: {
        EN: "Invalid VLAN",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ungültiges VLAN",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "VLAN invalid",
        IND: "TODO"
    },
    aclEnable: {
        EN: "Automated Filling of ACL:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Automatische Vergabe der ACL (Zugriffsliste)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Alocarea automat? a ACL (lista de control al accesului)",
        IND: "TODO"
    },
    sourceSSId: {
        EN: "Source SSId",
        FR: "TODO",
        SPN: "TODO",
        DE: "Quell-SSID (abgehende WLAN-Kennung)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "SSID-surs? (WLAN identificator de ie?ire)",
        IND: "TODO"
    },
    targetSSId: {
        EN: "Target SSId",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ziel-SSID (gesuchtes WLAN)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "SSID-?int? (WLAN c?utat)",
        IND: "TODO"
    },
    noWifi: {
        EN: "No Wi-Fi networks available",
        FR: "TODO",
        SPN: "TODO",
        DE: "Keine WLAN-Netzwerke in Reichweite",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Nu exista retele WiFi disponibile.",
        IND: "TODO"
    },
    pubWifiAclTip1: {
        EN: "You are editing this network.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Zum Ändern gewähltes Netzwerk",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "In prezent editati aceasta retea.",
        IND: "TODO"
    },
    pubWifiAclTip2: {
        EN: "You can choose the ACL mode.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Bitte wählen sie den ACL-Modus",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aveti posibilitatea de a alege modul de ACL.",
        IND: "TODO"
    },
    pubWifiAclTip3: {
        EN: "You can add more devices with this field.",
        FR: "TODO",
        SPN: "TODO",
        DE: "In dieses Feld können mehrere Geräte eingetragen werden",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Puteti adauga mai multe dispozitive cu acest domeniu.",
        IND: "TODO"
    },
    pubWifiAclTip4: {
        EN: "List with affected devices.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Liste der passenden Geräte",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Lista cu dispozitive afectate.",
        IND: "TODO"
    },
    pubWifiAclTip5: {
        EN: "This is a list with the available networks for Public Wi-Fi at the moment. You can click on 'Edit' for more options.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Liste der derzeit verfügbaren öffentlichen WLANs. Beim 'Bearbeiten' erhalten Sie Detailinformationen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta este o lista cu retelele de WiFi public disponibile in acest moment. Puteti apasa pe butonul 'Edit' pentru mai multe optiuni.'",
        IND: "TODO"
    },
    pubWifiSettings: {
        EN: "List with the public Wi-Fi SSIDs and VLANs.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Liste der passenden Geräte",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    infoParentalControl: {
        EN: "Select a device for showing parental control planning.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Wählen Sie ein Endgerät aus, um sich die Zugriffssteuerung für dieses anzeigen zu lassen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Selectati un dispozitiv pentru afisarea planificarii controlului parental.",
        IND: "TODO"
    },
    wpa_wpa2_personal: {
        EN: "WPA2/WPA Personal",
        FR: "TODO",
        SPN: "TODO",
        DE: "WPA2/WPA Personal",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "WPA2/WPA Personal",
        IND: "TODO"
    },
    wpa2_personal: {
        EN: "WPA2 Personal",
        FR: "TODO",
        SPN: "TODO",
        DE: "WPA2 Personal",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "WPA2 Personal",
        IND: "TODO"
    },
    wpa_personal: {
        EN: "WPA Personal",
        FR: "TODO",
        SPN: "TODO",
        DE: "WPA Personal",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "WPA Personal",
        IND: "TODO"
    },
    wpawpa2enterprise: {
        EN: "WPA / WPA2 - Enterprise",
        FR: "TODO",
        SPN: "Empresa - WPA / WPA2",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    wpa_wpa2_enterprise: {
        EN: "WPA2/WPA Enterprise",
        FR: "TODO",
        SPN: "TODO",
        DE: "WPA2/WPA Enterprise",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "WPA2/WPA Enterprise",
        IND: "TODO"
    },
    wpa2_enterprise: {
        EN: "WPA2 Enterprise",
        FR: "TODO",
        SPN: "TODO",
        DE: "WPA2 Enterprise",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "WPA2 Enterprise",
        IND: "TODO"
    },
    wpa_enterprise: {
        EN: "WPA Enterprise",
        FR: "TODO",
        SPN: "TODO",
        DE: "WPA Enterprise",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "WPA Enterprise",
        IND: "TODO"
    },
    "wpa2/wpa personal": {
        EN: "WPA2/WPA Personal",
        FR: "TODO",
        SPN: "Personal WPA2/WPA",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    "wpa2 personal": {
        EN: "WPA2 Personal",
        FR: "TODO",
        SPN: "Personal WPA2",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    "wpa personal": {
        EN: "WPA Personal",
        FR: "TODO",
        SPN: "Personal WPA",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    "wpa2/wpa enterprise": {
        EN: "WPA2/WPA Enterprise",
        FR: "TODO",
        SPN: "Empresa WPA2/WPA",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    "wpa2 enterprise": {
        EN: "WPA2 Enterprise",
        FR: "TODO",
        SPN: "Empresa WPA2",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    "wpa enterprise": {
        EN: "WPA Enterprise",
        FR: "TODO",
        SPN: "Empresa WPA",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    wep_64: {
        EN: "WEP-64",
        FR: "TODO",
        SPN: "TODO",
        DE: "WEP-64",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "WEP-64",
        IND: "TODO"
    },
    wep_128: {
        EN: "WEP-128",
        FR: "TODO",
        SPN: "TODO",
        DE: "WEP-128",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "WEP-128",
        IND: "TODO"
    },
    obtainDns: {
        EN: "Obtain DNS Automatically",
        FR: "TODO",
        SPN: "TODO",
        DE: "DNS automatisch beziehen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Obtinere DNS automat",
        IND: "TODO"
    },
    noPortForwarding: {
        EN: "There are no port forwarding rules",
        FR: "Aucune règles de redirection de ports",
        SPN: "TODO",
        DE: "Es wurden keine Port-Weiterleitungsregeln eingerichtet",
        IT: "TODO",
        DA: "Der er ikke oprettet nogen port forwarding regler",
        AR: "TODO",
        PT: "TODO",
        RO: "Nu exista reguli de redirectionare a porturilor",
        IND: "TODO"
    },
    manualDns: {
        EN: "Manually Specify DNS",
        FR: "TODO",
        SPN: "TODO",
        DE: "DNS manuell einrichten",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "DNS completat manual",
        IND: "TODO"
    },
    noPortTriggering: {
        EN: "There are no port triggering rules",
        FR: "Aucune règles port triggering",
        SPN: "TODO",
        DE: "Es wurden keine Port-Erkennungsregeln eingerichtet",
        IT: "TODO",
        DA: "Der er ingen port trigger regler",
        AR: "TODO",
        PT: "TODO",
        RO: "Nu exista reguli de declansare a porturilor",
        IND: "TODO"
    },
    noURLFiltering: {
        EN: "There are no url filtering rules",
        FR: "Aucune règles de filtrage url",
        SPN: "TODO",
        DE: "Es wurden keine Filter für den URL-Zugriff eingerichtet (Internetseitenfilter)",
        IT: "TODO",
        DA: "Der er ingen url filter regler",
        AR: "TODO",
        PT: "TODO",
        RO: "Nu exista reguli de filtrare URl",
        IND: "TODO"
    },
    noReservedAddress: {
        EN: "There are no reserved addresses",
        FR: "Aucune adresses reservées",
        SPN: "TODO",
        DE: "Es wurden keine Adressreservierungen eingerichtet",
        IT: "TODO",
        DA: "Der er ingen adresse reservationer",
        AR: "TODO",
        PT: "TODO",
        RO: "Nu exista adrese rezervate",
        IND: "TODO"
    },
    noSystemLogs: {
        EN: "There are no system logs",
        FR: "TODO",
        SPN: "TODO",
        DE: "Keine System-Logs verfügbar",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    hostnameTip: {
        EN: "Here your can see the hostname of your gateway.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie den Hostnamen Ihres Gateways sehen.",
        IT: "TODO",
        DA: "Her kan du se værtsnavnet på din gateway.",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti veedea numele de gazda a modemului.",
        IND: "TODO"
    },
    ddnsStatusTip: {
        EN: "Here you see the Dynamic DNS Client status.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier sehen Sie den Status für den dynamischen DNS Client.",
        IT: "TODO",
        DA: "Dynamisk DNS klient",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti vedea statusul clientului DNS dinamic.",
        IND: "TODO"
    },
    addressingTypeTip: {
        EN: "Here you can change the Addressing Type.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie den Adressierungs-Typ ändern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti schimba tipul de adresare.",
        IND: "TODO"
    },
    wirelessNetwork: {
        EN: "Wireless network",
        FR: "TODO",
        SPN: "TODO",
        DE: "Drahtloses Netzwerk (WLAN)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Retea Wireless",
        IND: "TODO"
    },
    ipv4Tip: {
        EN: "Here your can change the IPv4 address.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die IPv4-Adresse ändern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti schimba adresa IPv4.",
        IND: "TODO"
    },
    neighboraps: {
        EN: "Neighbor APs",
        FR: "TODO",
        SPN: "TODO",
        DE: "Benachbarte APs",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "AP-uri din vecinatate",
        IND: "TODO"
    },
    nearbyWirelessAp: {
        EN: "Nearby Wireless Access Points",
        FR: "TODO",
        SPN: "TODO",
        DE: "Drahtlose Basisstationen (WLAN-APs) in der Nähe",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Punctele de acces Wireless din apropiere.",
        IND: "TODO"
    },
    neighborapsDescription: {
        EN: "This page shows the nearby APs.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Auf dieser Seite werden die benachbarten APs angezeigt.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta pagina arata AP-urile din apropiere.",
        IND: "TODO"
    },
    wifiNeighborApsTip1: {
        EN: "Here you start scan your neighbor APs.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie eine Suche nach benachbarten APs durchführen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici porniti scanarea AP-urilor vecine.",
        IND: "TODO"
    },
    wifiNeighborApsTip2: {
        EN: "Here you see the neighbor APs found.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier sehen Sie die gefundenen APs in der Nähe",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici vezi Ap-urile vecine gasite.",
        IND: "TODO"
    },
    neighborAps24: {
        EN: "Neighbor APs 2.4 GHz",
        FR: "TODO",
        SPN: "TODO",
        DE: "Benachbarte APs 2.4 GHz",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "AP vecin 2.4 GHz",
        IND: "TODO"
    },
    neighborAps5: {
        EN: "Neighbor APs 5 GHz",
        FR: "TODO",
        SPN: "TODO",
        DE: "Benachbarte APs 5 GHz",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "AP vecin 5 GHz",
        IND: "TODO"
    },
    maskIpv4: {
        EN: "Here your can change the mask of IPv4 address.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die IPv4 Adressmaske ändern.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti schimba masca de adresa IPv4.",
        IND: "TODO"
    },
    gatewayIpv4: {
        EN: "Here your can change the gateway's IPv4 address.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die IPv4-Adresse Ihres Gateways ändern",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti schimba adresa de gateway IPv4.",
        IND: "TODO"
    },
    dns1Ipv4: {
        EN: "Here your can change the first IPv4 DNS Server.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die IPv4-Adresse des ersten DNS-Servers einrichten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti schimba primul server DNS IPv4.",
        IND: "TODO"
    },
    dns2Ipv4: {
        EN: "Here your can change the second IPv4 DNS Server.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die IPv4-Adresse des zweiten DNS-Servers einrichten.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti schimba al doilea server DNS IPv4.",
        IND: "TODO"
    },
    deviceHostnameTip: {
        EN: "Here you can see the hostname of your device.",
        FR: "TODO",
        SPN: "Aquí la pueden ver el nombre de host del dispositivo.",
        DE: "Hier können Sie den Hostnamen Ihres Gerätes einsehen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti vedea numele dispozitivului tau.",
        IND: "TODO"
    },
    signalStrengthTip: {
        EN: "This is the signal strength in dBM.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Dies ist die Signalstärke in dBm (Dezibel Milliwatt)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta este puterea de semnal in dBM.",
        IND: "TODO"
    },
    signalRateTip: {
        EN: "This is the signal rate in Mbps.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Dies ist die Signalübertragungsrate in Mbps (Megabit pro Sekunde)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aceasta este rata de semnal in Mbps.",
        IND: "TODO"
    },
    deviceMacAddressTip: {
        EN: "Here you can see the device MAC address.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier sehen Sie die MAC-Adresse Ihres Gerätes.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti vedea adresa MAC a dispozitivului.",
        IND: "TODO"
    },
    deviceIPAddressTip: {
        EN: "Here you can see the device IP address.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier sehen Sie die IP-Adresse Ihres Gerätes.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti vedea adresa IP a dispozitivului.",
        IND: "TODO"
    },
    reserveIPTip: {
        EN: "Here you can add the IP to reserved IP list.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die IP-Adresse zur Liste der reservierten IP-Adressen hinzufügen.",
        IT: "TODO",
        DA: "Her kan du tilføje IP adressen til listen med reserverede IP adresser",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti adauga IP-ul listei cu IP-uri rezervate.",
        IND: "TODO"
    },
    cancelReserveIPTip: {
        EN: "Here you can remove the IP from reserved IP list.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die IP-Adresse von der Liste der reservierten IP-Adressen entfernen.",
        IT: "TODO",
        DA: "Her kan du fjerne IP adressen fra listen med reserverede IP adresser",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti sterge IP-ul din lista cu IP-uri rezervate.",
        IND: "TODO"
    },
    deviceManufacturerTip: {
        EN: "Here you can see the device manufacturer.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier sehen Sie den Hersteller des Gerätes.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti vedea producatorul dispozitivului.",
        IND: "TODO"
    },
    phyMode: {
        EN: "PHY-Mode",
        FR: "TODO",
        SPN: "TODO",
        DE: "PHY-Modus",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Modul PHY",
        IND: "TODO"
    },
    outOfService: {
        EN: "Out of service",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ausser Betrieb",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "In afara serviciului",
        IND: "TODO"
    },
    stateless: {
        EN: "Stateless",
        FR: "TODO",
        SPN: "TODO",
        DE: "Stateless",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Fara status",
        IND: "TODO"
    },
    stateful: {
        EN: "Stateful",
        FR: "TODO",
        SPN: "TODO",
        DE: "Stateful",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    dnsType: {
        EN: "Here you can choose the DNS mode.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie den DNS-Modus auswählen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti selecta modul DNS.",
        IND: "TODO"
    },
    index: {
        EN: "Index",
        FR: "TODO",
        SPN: "TODO",
        DE: "Index",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Index",
        IND: "TODO"
    },
    responseToPingTip: {
        EN: "Here you can enable the ping from WAN.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die Funktion Ping aus dem Internet aktivieren.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti activa ping-ul din WAN",
        IND: "TODO"
    },
    state: {
        EN: "State",
        FR: "TODO",
        SPN: "TODO",
        DE: "Status",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Stare",
        IND: "TODO"
    },
    pfServiceTip: {
        EN: "Here you can select one of the available services.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie einen der verfügbaren Dienste auswählen.",
        IT: "TODO",
        DA: "Her kan du vælge en af de tilgængelige services",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici poti selecta unul din dispozitivele disponibile.",
        IND: "TODO"
    },
    dataRate: {
        EN: "Data rated (Kbps)",
        FR: "TODO",
        SPN: "TODO",
        DE: "Datenrate (in Kbps : Kilobit pro Sekunde)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Rata de date (Mbps)",
        IND: "TODO"
    },
    pfExternalHostTip: {
        EN: "Here you can type the external host to rule.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die Regel für den externen Host benennen.",
        IT: "TODO",
        DA: "Indtast ekstern Host IP adresse",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    pfInternalHostTip: {
        EN: "Here you can type the internal host to rule.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die Regel für den internen Host benennen.",
        IT: "TODO",
        DA: "Indtast intern Host IP adresse",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    pfProtocolTip: {
        EN: "Here you can select one of the protocols.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie eines der verfügbaren Protokolle auswählen.",
        IT: "TODO",
        DA: "Her kan du vælge en protokol",
        AR: "TODO",
        PT: "TODO",
        RO: "Aici puteti selecta unul din protocoale.",
        IND: "TODO"
    },
    pfExternalPortTip: {
        EN: "Here you can type the external port to rule.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die Regel für den externen Port benennen.",
        IT: "TODO",
        DA: "Indtast ekstern Host port nummer",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    pfInternalPortTip: {
        EN: "Here you can type the internal port to rule.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die Regel für den internen Port benennen.",
        IT: "TODO",
        DA: "Indtast intern Host port nummer",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    noEventWifiLog: {
        EN: "No Wi-Fi event log.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Kein Eintrag im WLAN-Log",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Niciun jurnal de evenimente WiFi.",
        IND: "TODO"
    },
    failed: {
        EN: "Failed",
        FR: "TODO",
        SPN: "TODO",
        DE: "Fehlgeschlagen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    networkDeviceNameTip: {
        EN: "Here you configure the name of usb network storage device",
        FR: "Here you insert a description for the NAT Mapping rule.",
        SPN: "TODO",
        DE: "Hier können Sie den Namen für den am USB angeschlossenen Massenspeicher vergeben",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    workgroupNameTip: {
        EN: "Here you configure the workgroup name used to share files on the network.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie den Namen der Arbeitsgruppe für Dateifreigaben innerhalb Ihres Netzwerkes vergeben.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    connectivity: {
        EN: "Connectivity",
        FR: "TODO",
        SPN: "Conectividad",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    radiusReservedIp: {
        EN: "Radius Server IP:",
        FR: "TODO",
        SPN: "TODO",
        DE: "IP-Adresse des Radius-Servers:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    addClient: {
        EN: "Add Client",
        FR: "TODO",
        SPN: "TODO",
        DE: "Client hinzufügen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    radiusServerPort: {
        EN: "Radius Server Port:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Port des Radius-Servers:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    clientConfig: {
        EN: "Client Configuration",
        FR: "TODO",
        SPN: "TODO",
        DE: "Client-Konfiguration",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    radiusServerPassword: {
        EN: "Radius Server Password:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Passwort des Radius-Servers:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    method: {
        EN: "Method:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Methode:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    groupKeyUpdatePeriod: {
        EN: "Group Key Update Period:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Aktualisierungsintervall für den Gruppenschlüssel",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    invalidGroupKey: {
        EN: "This value must be between 0 and 86400",
        FR: "TODO",
        SPN: "TODO",
        DE: "Dieser Wert muss zwischen 0 und 86400 liegen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    secondaryRadiusServerIP: {
        EN: "Secondary Radius Server IP:",
        FR: "TODO",
        SPN: "TODO",
        DE: "IP-Adresse des zweiten Radius-Servers",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    secondaryRadiusServerPort: {
        EN: "Secondary Radius Server Port:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Port des zweiten Radius-Servers",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    secondaryRadiusServerPassword: {
        EN: "Secondary Radius Server Password:",
        FR: "TODO",
        SPN: "TODO",
        DE: "Passwort des zweiten Radius-Servers:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    externalAddress: {
        EN: "External Address",
        FR: "TODO",
        SPN: "TODO",
        DE: "Externe Adresse",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    pushButtonConfiguration: {
        EN: "Push Button Configuration (PBC)",
        FR: "TODO",
        SPN: "TODO",
        DE: "WPS-PBC-Konfiguration (Verbindung Ihres drahtlosen Endgerätes mittels WPS-Tastendruck)",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    confirmRemoveIPAddress: {
        EN: "Do you really want to remove this IP address?",
        FR: "TODO",
        SPN: "TODO",
        DE: "Wollen Sie diese IP-Adresse wirklich löschen?",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    usbDeviceForceEjectTip: {
        EN: "Here you can check if you want force to eject device.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie auswählen, ob das Entfernen eines angeschlossenen Gerätes erzwungen werden soll.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    showPasswordTip: {
        EN: "Here you can check if you want show the passwords.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie auswählen, ob Passwörter im Klartext angezeigt werden sollen.",
        IT: "TODO",
        DA: "Vis adgangskoden under indtastning",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    rescanTip: {
        EN: "Here you can rescan and update your shared contents.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die Ansicht für freigegebene Inhalte aktualisieren.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    noSsids: {
        EN: "No SSIDs enabled.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Keine SSIDs aktiviert.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    frequency: {
        EN: "Frequency",
        FR: "TODO",
        SPN: "TODO",
        DE: "Frequenz",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "Frequência",
        RO: "TODO"
    },
    adhoc: {
        EN: "AdHoc",
        FR: "TODO",
        SPN: "TODO",
        DE: "ad hoc",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    infrastructure: {
        EN: "Infrastructure",
        FR: "TODO",
        SPN: "TODO",
        DE: "Infrastruktur",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    wep: {
        EN: "WEP",
        FR: "TODO",
        SPN: "TODO",
        DE: "WEP",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    wpa: {
        EN: "WPA",
        FR: "TODO",
        SPN: "TODO",
        DE: "WPA",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    wpa2: {
        EN: "WPA2",
        FR: "TODO",
        SPN: "TODO",
        DE: "WPA2",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    wpa_wpa2: {
        EN: "WPA/WPA2",
        FR: "TODO",
        SPN: "TODO",
        DE: "WPA/WPA2",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    emailAddress: {
        EN: "Address for email notification",
        FR: "Adresse email",
        SPN: "TODO",
        DE: "Adresse für Email-Benachrichtigung",
        IT: "Indirizzo email per la notifica",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    defaultEmail: {
        EN: "Set as default email",
        FR: "Utiliser par défaut",
        SPN: "TODO",
        DE: "Als Standard-Adresse verwenden",
        IT: "Imposta come email predefinita",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    mailServerSettings: {
        EN: "Mailserver settings",
        FR: "Configuration serveur mail",
        SPN: "TODO",
        DE: "Einstellungen Mail-Server",
        IT: "Configurazione server email",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    mailBoxSettings: {
        EN: "Mailbox settings",
        FR: "Configuration mailbox",
        SPN: "TODO",
        DE: "Einstellungen Mailbox",
        IT: "Configurazione mailbox",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    mailServerSsl: {
        EN: "Use SSl",
        FR: "Utiliser SSl",
        SPN: "TODO",
        DE: "SSL nutzen",
        IT: "Usa SSl",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    mailServerTip1: {
        EN: "Here you can enable the mail server.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie den Mail-Server aktivieren",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    mailServerTip2: {
        EN: "This is the name of the mail server.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Dies ist der Name des zu verwendenden Mail-Servers",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    mailServerTip3: {
        EN: "This is the port of the mail server.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Dies ist der zu verwendende Port des Mail-Servers",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    mailServerTip4: {
        EN: "Here you can enable the SSL of the mail server.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie SSL für den Mail-Server aktivieren",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    mailServerTip5: {
        EN: "This is the login of the mail server.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Bitte tragen Sie hier den Benutznamen/Ihre Benutzerkennung zur Anmeldung am Mail-Server ein",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    mailServerTip6: {
        EN: "This is the password of the mail server.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Bitte tragen Sie hier das Passwort zur Anmeldung am Mail-Server ein",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    forwardToPhone: {
        EN: "to Phone",
        FR: "vers Téléphone",
        SPN: "TODO",
        DE: "Telefon",
        IT: "Numero",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    forwardToVoicemail: {
        EN: "to Voicemail",
        FR: "vers Répondeur",
        SPN: "TODO",
        DE: "Anrufbeantworter",
        IT: "Segreteria telefonica",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    amsNoLinesEnabled: {
        EN: "No phone line is enabled.",
        FR: "Aucune ligne téléphonique n'est activée.",
        SPN: "TODO",
        DE: "Keine Telefonleitung aktiviert.",
        IT: "Nessuna linea telefonica è attiva.",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    walledGarden1: {
        EN: "Here you enable or disable the Walled Garden configuration.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Hier können Sie die Konfiguration zum Walled Garden aktivieren bzw. deaktivieren",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    maxWifiDevicesFilterWarning: {
        EN: "The maximum number of devices is 256.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Die maximale Anzahl an Geräten beträgt 256.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    unsupportedUsb: {
        EN: "Unsupported",
        FR: "TODO",
        SPN: "TODO",
        DE: "nicht unterstützt",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    enableDefaultRange: {
        EN: "Default Range Address",
        FR: "TODO",
        SPN: "TODO",
        DE: "Standard Adressbereich",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    listPortRanges: {
        EN: "List of all available port ranges",
        FR: "TODO",
        SPN: "TODO",
        DE: "Liste aller zur Verfügung stehenden Port-Bereiche",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    lanIPv6MinAddress: {
        EN: "Min Address",
        FR: "TODO",
        SPN: "TODO",
        DE: "Kleinste Adresse",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    lanIPv6MaxAddress: {
        EN: "Max Address",
        FR: "TODO",
        SPN: "TODO",
        DE: "Größte Adresse",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    textPortRanges: {
        EN: "Your gateway is configured to work with mapping of address and port using translation (MAP-T) and your port forwarding rules must respect the avaliable port ranges below.",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ihr Gateway ist so konfiguriert, dass es eine Zuordnung der Adresse und des Ports nutzt (per MAP-T). Die eingestellten Portweiterleitungsregeln müssen daher die unten aufgeführten verfügbaren Portbereiche berücksichtigen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    dmzIPv6: {
        EN: "IPv6 DMZ",
        FR: "TODO",
        SPN: "TODO",
        DE: "IPv6 DMZ",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    dmzIPv6Tip: {
        EN: "Activate DMZ on a device to make it reachable from Internet.",
        FR: "Activer la DMZ pour un appareil pour le rendre disponible depuis Internet.",
        SPN: "Active DMZ en un dispositivo para que sea accesible desde Internet.",
        DE: "Aktivieren Sie DMZ, um einem Endgerät die direkte (und ungeschützte) Kommunikation mit dem Internet zu ermöglichen.",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    amEncryption: {
        EN: "Encryption",
        FR: "Encryption",
        SPN: "TODO",
        DE: "Verschlüsselung",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "Criptare",
        IND: "TODO"
    },
    noFile: {
        EN: "No file chosen.",
        FR: "Aucun fichier choisi.",
        SPN: "No ha elegido ningun archivo.",
        DE: "Keine Datei ausgewählt.",
        IT: "Nessun file selezionato.",
        DA: "TODO",
        AR: "TODO",
        PT: "nao escolheu ficheiro.",
        RO: "Niciun fisier ales.",
        IND: "TODO"
    },
    busyOnBusy: {
        EN: "Busy on Busy",
        FR: "TODO",
        SPN: "TODO",
        DE: "Besetzt bei besetzt",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    busyOnBusyActiveError: {
        EN: "You can't enable this Busy rule. Busy on Busy feature is enabled for this line.",
        FR: "Vous ne pouvez pas activer cette règle de type 'Occupé' car la fonction 'Busy on Busy' est activée sur la ligne.",
        DE: "Sie können diese Regeltyp 'Busy' als 'Busy on Busy' -Funktion aktivieren auf der Leitung aktiviert wird.",
        IT: "Non è possibile attivare questo tipo di regola 'occupato' come 'Busy on Busy' la funzione è attivata sulla linea.",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        SPN: "No puede habilitar esta regla ocupada. Está habilitada la característica de Ocupado en Ocupado para esta línea."
    },
    pbNumbers: {
        EN: "Telephone Numbers",
        FR: "Numéros de téléphone",
        SPN: "Números de teléfono",
        DE: "Telefonnummer",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    duplexMode: {
        EN: "Duplex mode:",
        FR: "Mode duplex:",
        SPN: "Modo dúplex:",
        DE: "Duplex-Modus:",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    powerMode: {
        EN: "Power mode",
        FR: "Puissance d'émission",
        SPN: "Modo de potencia",
        DE: "Funkleistung",
        IT: "Modalità di alimentazione",
        DA: "Strømtilstand",
        AR: "وضع الطاقة",
        PT: "Modo de alimentação",
        RO: "Modul de alimentare",
        IND: "Mode daya"
    },
    dectFullPower: {
        EN: "Full power",
        FR: "Normal",
        SPN: "Poder completo",
        DE: "Volle Sendeleistung",
        IT: "Piena potenza",
        DA: "Fuld kraft",
        AR: "السلطة الكاملة",
        PT: "Potência total",
        RO: "Toata puterea",
        IND: "Kekuatan penuh"
    },
    invalidFileFormat: {
        EN: "Invalid file format",
        FR: "Format de fichier invalide",
        SPN: "Formato de archivo no válido",
        DE: "Ungültiges Dateiformat",
        IT: "Formato di file non valido",
        DA: "Ugyldigt filformat",
        AR: "تنسيق ملف غير صالح",
        PT: "Formato de arquivo inválido",
        RO: "Formatul de fișier nevalid",
        IND: "Format file tidak valid"
    },
    dectReducedPower: {
        EN: "Reduced",
        FR: "Réduit",
        SPN: "Reducido",
        DE: "DECT Eco",
        IT: "Ridotto",
        DA: "Reduceret",
        AR: "انخفاض",
        PT: "Reduzido",
        RO: "Redus",
        IND: "Dikurangi"
    },
    connectedByMobile: {
        EN: "Connected by Mobile",
        FR: "Connecté par mobile",
        SPN: "Conectado por móvil",
        DE: "Per Mobilfunk verbunden",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    bRelayIpv6Prefix: {
        EN: "Border Relay IPv6 Prefix",
        FR: "TODO",
        SPN: "Prefijo de IPv6 de relé de frontera",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ipv6PrefixRule: {
        EN: "IPv6 Prefix Rule",
        FR: "TODO",
        SPN: "Regla de prefijo IPv6",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ipv4PrefixRule: {
        EN: "IPv4 Prefix Rule",
        FR: "TODO",
        SPN: "IPv4 prefijo regla",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    psidOffset: {
        EN: "PSID Offset",
        FR: "TODO",
        SPN: "PSID Offset",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    psidLength: {
        EN: "PSID Length",
        FR: "TODO",
        SPN: "Longitud PSId",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    psid: {
        EN: "PSId",
        FR: "TODO",
        SPN: "PSId",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    sharedIPv4Address: {
        EN: "Shared IPv4 Address",
        FR: "TODO",
        SPN: "Dirección IPv4 compartido",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    listAvailablePorts: {
        EN: "List of available ports",
        FR: "TODO",
        SPN: "Lista de puertos disponibles",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    clickHereToShow: {
        EN: "Click here to show",
        FR: "TODO",
        SPN: "Haz clic aquí para mostrar",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    txRate: {
        EN: "Tx rate",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    rxRate: {
        EN: "Rx rate",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    txRateTip: {
        EN: "Click here you can see the transmit rate.",
        FR: "TODO",
        SPN: "Haga clic aquí para ver la tasa de transmisión.",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    rxRateTip: {
        EN: "Click here you can see the received rate.",
        FR: "TODO",
        SPN: "Haga clic aquí para ver la tarifa recibida.",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    docsis: {
        EN: "DOCSIS",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    standBy: {
        EN: "Stand-by",
        FR: "Attente",
        SPN: "Colocarse",
        DE: "Bereithalten",
        IT: "Pause",
        DA: "Stå ved",
        AR: "تعليق",
        PT: "Espera",
        RO: "Așteptare",
        IND: "Bersiap"
    },
    smtp: {
        EN: "SMTP",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    smtpauth: {
        EN: "SMTP with authentication",
        FR: "SMTP avec authentification",
        SPN: "TODO",
        DE: "SMTP mit Authentifizierung",
        IT: "SMTP con autenticazione",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ssl: {
        EN: "SSl",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    usbUnrecognized: {
        EN: "Unrecognized",
        FR: "Non reconnu",
        SPN: "Poco reconocido",
        DE: "Unerkannt",
        IT: "Non riconosciuto",
        DA: "Ukendt",
        AR: "غير المعترف بها",
        PT: "Não reconhecido",
        RO: " nerecunoscută",
        IND: "Tidak dikenal"
    },
    usbUnsupported: {
        EN: "Your USB device is over-consuming. Disconnect it",
        FR: "TODO",
        SPN: "TODO",
        DE: "Ihr USB-Gerät ist übermäßig konsumiert. Trennen",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    cyphered: {
        EN: "Cyphered",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    customerConfig: {
        EN: "Customer configuration",
        FR: "Configuration client",
        SPN: "Configuración del cliente",
        DE: "Kundenkonfiguration",
        IT: "Configurazione del cliente",
        DA: "Kunde konfiguration",
        AR: "تكوين العميل",
        PT: "Configuração do cliente",
        RO: "Configurarea clientului",
        IND: "Konfigurasi pelanggan"
    },
    dynamicNAT: {
        EN: "Dynamic NAT",
        FR: "TODO",
        SPN: "NAT dinámico",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    dynamicNatAddress: {
        EN: "Dynamic Address",
        FR: "TODO",
        SPN: "Dirección dinámica",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO"
    },
    emptyLogin: {
        EN: "Login can't be empty",
        FR: "Le login ne peut pas être vide",
        SPN: "El acceso no puede estar vacío",
        DE: "Die Login kann nicht leer sein",
        IT: "l'account di accesso non può essere vuoto",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    vcivpi: {
        EN: "VCI/VPI",
        FR: "VCI/VPI",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    invalidVciVpi: {
        EN: "Invalid VCI/VPI",
        FR: "VCI/VPI invalide",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    quickSettings: {
        EN: "Quick Settings",
        FR: "TODO",
        SPN: "Configuraciones rápidas",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    "24GHzNetwork": {
        EN: "2.4 GHz Network",
        FR: "TODO",
        SPN: "Red de 2,4 GHz",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    "5GHzNetwork": {
        EN: "5 GHz Network",
        FR: "TODO",
        SPN: "Red de 5 GHz",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    samePassword: {
        EN: "Use Same Password for 5GHz",
        FR: "TODO",
        SPN: "Utilice la misma contraseña para 5GHz",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wiFiNetworkName: {
        EN: "WiFi Network Name (SSID)",
        FR: "TODO",
        SPN: "Nombre de la red WiFi (SSID)",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wiFiNetwork24: {
        EN: "WiFi Network (2.4GHz)",
        FR: "TODO",
        SPN: "Red WiFi (2.4 GHz)",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wiFiNetwork5: {
        EN: "WiFi Network (5GHz)",
        FR: "TODO",
        SPN: "Red WiFi (5 GHz)",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    securitySettings: {
        EN: "Security Settings",
        FR: "TODO",
        SPN: "Configuraciones de seguridad",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wps24: {
        EN: "WPS (2.4GHz)",
        FR: "TODO",
        SPN: "WPS (2.4 GHz)",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wps5: {
        EN: "WPS (5GHz)",
        FR: "TODO",
        SPN: "WPS (5GHz)",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    quickSetup: {
        EN: "Quick Setup",
        FR: "TODO",
        SPN: "Configuración rápida",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    save: {
        EN: "Save",
        FR: "TODO",
        SPN: "Guardar",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    attention: {
        EN: "Attention",
        FR: "TODO",
        SPN: "Atención",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    attentionWifi: {
        EN: "If you change your WiFi network names or passwords, make sure to also update your WiFi settings on any connected devices (phones, tablets and home security cameras).",
        FR: "TODO",
        SPN: "Si cambia los nombres o las contraseñas de su red WiFi, asegúrese de actualizar también su configuración de WiFi en cualquier dispositivo conectado (teléfono, tablets y cámaras domésticas).",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    quickDescription1: {
        EN: "Manage your WiFi network settings below. We recommend using the same password for your 2.4GHz and 5GHz networks.",
        FR: "TODO",
        SPN: "Administre la configuración de su red WiFi a continuación. Le recomendamos que utilice la misma contraseña para sus redes de 2.4 GHz y 5 GHz.",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    quickDescription2: {
        EN: "If you change your WiFi network names or passwords, make sure to also update your WiFi settings on any connected devices (phones, tablets and home security cameras).",
        FR: "TODO",
        SPN: "Si cambia los nombres o las contraseñas de su red WiFi, asegúrese de actualizar también la configuración WiFi en cualquier dispositivo conectado (teléfono, tabletas y cámaras domésticas).",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    needAdvSettingsDescription: {
        EN: "We only recommend you adjust these settings if you have advanced internet experience.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    needAdvSettingsTitle: {
        EN: "Need advanced settings?",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    currentSpeeds: {
        EN: "Current speeds",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    securityModeMismatch: {
        EN: "Password does not match the security mode",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    securityModeConflicting: {
        EN: "Security mode in conflict.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    restarMyRouter: {
        EN: "Restart my router",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    myInternetConnection: {
        EN: "My Internet Connection",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    telephony_dhcp: {
        EN: "Telephony DHCP",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Telefoni DHCP",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    telephony_security: {
        EN: "Telephony Security",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Telefoni sikkerhed",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    telephony_tftp: {
        EN: "Telephony TFTP",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Telefoni TFTP",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    telephony_call_server_registration: {
        EN: "Telephony Call Server Registration",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Telefoni server registrering ",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    telephony_registration_complete: {
        EN: "Telephony Registration Complete",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Telefoni server registrering komplet.",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    startupProcedure: {
        EN: "Startup Procedure",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Opstart procedure",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    callSettingsAdvanced: {
        EN: "Advanced",
        FR: "Avancé",
        SPN: "Avanzado",
        DE: "Erweitert",
        IT: "Avanzato",
        DA: "Avanceret",
        AR: "متقدم",
        PT: "avançado",
        RO: "TODO",
        IND: "TODO"
    },
    tb_lines: {
        EN: "Lines",
        FR: "Lignes",
        SPN: "Líneas",
        DE: "Leitungen",
        IT: "Linee",
        DA: "Linjer",
        AR: "خطوط",
        PT: "linhas",
        RO: "TODO",
        IND: "TODO"
    },
    tb_task: {
        EN: "Task",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "opgave",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    mtaLineState: {
        EN: "MTA Line State",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "MTA Linje Status",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    tb_hook_state: {
        EN: "Hook State",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Status på afløftning",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    tb_expiration_time: {
        EN: "Expiration Time",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Udløbstid",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    tb_re_registration: {
        EN: "Re-registration Time",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Gen-registrerings tid",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    networkParameters: {
        EN: "Network Parameters",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Netværks paremetre",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    rfParamters: {
        EN: "RF Parameters",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "RF parametre",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    mta: {
        EN: "MTA",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "MTA Linje Status",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wan_blocking: {
        EN: "Wan Blocking",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ipsec_passthrough: {
        EN: "Ipsec PassThrough",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    pptp_passthrough: {
        EN: "PPTP PassThrough",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    remote_config_management: {
        EN: "Remote Config Management",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    sip_alg: {
        EN: "SIP ALG",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    mybox_advanced_options_title: {
        EN: "Advanced - Options",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Avancerede indstillinger",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    mybox_advanced_options_description: {
        EN: "This page allows configuration of advanced features of your Residential Gateway.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Denne side tillader konfiguration af avancerede indstillinger i dit WiFimodem",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    myboxWanBlockingTip: {
        EN: "Here you can enable and disable the Wan Blocking option.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    myboxIpSecPassThroughTip: {
        EN: "Here you can enable and disable the Ipsec PassThrough option.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    myboxPPTPPassThroughTip: {
        EN: "Here you can enable and disable the PPTP PassThrough option.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    myboxRemoteConfigTip: {
        EN: "Here you can enable and disable the Remote Management option.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    myboxUpnpTip: {
        EN: "Here you can enable and disable the UPnP function.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    myboxSipAlgTip: {
        EN: "Here you can enable and disable the SIG ALG option.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    manageAdvSettings: {
        EN: "Manage advanced settings",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    bandSteeringOnAlert: {
        EN: "If you change the SSID or Security settings, the same modification will be setted on both bands (2.4G and 5G). If you want to change just the current band, you should disable 'Band steering' before.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    cyclicPrefix: {
        EN: "Cyclic Prefix",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    clientIsolation: {
        EN: "Client Isolation",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ssidIsolation: {
        EN: "SSID Isolation",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    bandSteeringOffAlert: {
        EN: "You should configure both bands (2.4G and 5G) to have the same SSID and Security settings, then you can enable the Band Steering.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Du skal anvende samme SSID og Adgangskode på begge bånd (2,4Hz og 5GHz), før du kan aktivere Band Steering",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    enableWireless: {
        EN: "Enable Wireless",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Aktiver radio",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO"
    },
    wl0: {
        EN: "wl0",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    wl1: {
        EN: "wifi0",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    PloamPassword: {
        EN: "PLOAM Password",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ploam: {
        EN: "Update ploam password, password must contain less than 10 characters",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    portScanDetection: {
        EN: "Port Scan Detection",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    help_and_support: {
        EN: "Help and Support",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ploamPasswordWarning: {
        EN: "Warning: If the PLOAM password is incorrect, there will be no communication with OLT",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    bridgeModeEnableTip: {
        EN: "Please refresh the page after enabling or disabling Bridge Mode.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Opdater venligst denne side efter aktivering eller deaktivering af Bridge Mode.",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    bridgeModeConfirmMsg: {
        EN: "Activating Bridge Mode will remove your Router abilities.<br /><br />Returning to Router mode can be done by accessing to WEB management interface at address 192.168.100.1 or by performing a factory reset.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Aktivering af Bridge Mode vil fjerne router funktionen. Retunering til Router funktion kan ske ved at tilgå WEB management interfacet på adressen 192.168.100.1 eller ved at foretage en factory reset.",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    cpuLoadDeviceInfo: {
        EN: "CPU load (1/5/15 mins) (%)",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "CPU belastning (1/5/15 mins) (%)",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    memoryUsageDeviceInfo: {
        EN: "Memory usage (%)",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Hukommelsesforbrug (%)",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    portMirror: {
        EN: "Port mirroring",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    global: {
        EN: "Global",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Global",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    voiceService: {
        EN: "Voice Service",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Telefoni ",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    sipNetwork: {
        EN: "SIP Network",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "SIP netværk",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    line1: {
        EN: "Line 1",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Linje 1",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    line2: {
        EN: "Line 2",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Linje 2",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    renew: {
        EN: "Renew",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Forny",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    MTU: {
        EN: "MTU",
        FR: "MTU",
        SPN: "MTU",
        DE: "MTU",
        IT: "MTU",
        DA: "MTU",
        AR: "MTU",
        PT: "MTU",
        RO: "TODO",
        IND: "TODO"
    },
    connectionTrigger: {
        EN: "Connection Trigger",
        FR: "Connection Trigger",
        SPN: "Connection Trigger",
        DE: "Connection Trigger",
        IT: "Connection Trigger",
        DA: "Connection Trigger",
        AR: "Connection Trigger",
        PT: "Connection Trigger",
        RO: "TODO",
        IND: "TODO"
    },
    reserveInConflict: {
        EN: "Reserve in conflict",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Reserve i konflikt",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ledModeOptionDark: {
        EN: "Dark",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Slukket",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    ledModeOptionLight: {
        EN: "Always On",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Tændt",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    GREServer: {
        EN: "GRE Server",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    GREServerBkp: {
        EN: "GRE Backup Server",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    voipMenu: {
        EN: "VOIP",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    confHomeboxBridgeMode: {
        EN: "Configure Light control, Maintenance",
        FR: "Configuration Light control, Maintenance",
        SPN: "Configure Light control, Maintenance",
        DE: "Light control, Maintenance konfigurieren",
        IT: "Configurazione Light control, Maintenance",
        DA: "Konfigurer Light control, Maintenance",
        AR: "تكوين Light control, Maintenance"
    },
    wifi5GChannelWarning: {
        EN: "The SSID may disappear to clients that do not support this channel. <br> Certain WiFi clients may not be capable of utilizing the selected channel.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wifichannelConflictBandwidth: {
        EN: "The selected channel with the current bandwidth are not compatible",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    wifiBandwidthConflictChannel: {
        EN: "The selected bandwidth with the current channel are not compatible",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    voipMngtTab: {
        EN: "Voice & Management Interface",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    invalidInterfacePing: {
        EN: "Invalid interface",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    confAccessControlBridgeMode: {
        EN: "Configure User, Advanced Options.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "Konfigurer Bruger, Avancerede Indstillinger.",
        AR: "TODO"
    },
    mptcp: {
        EN: "MPTCP",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpStatus: {
        EN: "Status",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpStatusEnabled: {
        EN: "Service enabled",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpStatusDisabled: {
        EN: "Service disabled",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpKpiInformation: {
        EN: "KPI information",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpStatistics: {
        EN: "Statistics",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    establishedSessionCount: {
        EN: "Established session count",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    additionalSubflowCount: {
        EN: "Additional subflow count",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    sessionAdditionalSubflow: {
        EN: "Session with additional subflow",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    closedSessionCount: {
        EN: "Closed session count",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpTotalBytes: {
        EN: "Total bytes (Sent/Received)",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpTotalPackets: {
        EN: "Total packets (Sent/Received)",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpTotalErrors: {
        EN: "Total errors (Sent/Received)",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpTotalDiscardPackets: {
        EN: "Total discard packets (Sent/Received)",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpTotalUnicastPackets: {
        EN: "Total unicast packets (Sent/Received)",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpTotalMulticastPackets: {
        EN: "Total multicast packets (Sent/Received)",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpTotalBroadcastPackets: {
        EN: "Total broadcast packets (Sent/Received)",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    rsrqLte: {
        EN: "RSRQ",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    rsrpLte: {
        EN: "RSRP",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    rssiLte: {
        EN: "RSSI",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    snrLte: {
        EN: "SNR",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    bandInfoLte: {
        EN: "Band Info",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    mptcpApnLte: {
        EN: "MPTCP APN",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    ApnLte: {
        EN: "APN",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    failoverpnLte: {
        EN: "FAILOVER APN",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    DTMFTransmissionMode: {
        EN: "DTMF Transmission Mode",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    otherConfiguration: {
        EN: "Other configuration:",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    routerAdvertisementConfiguration: {
        EN: "Router Advertisement configuration",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    managedConfiguration: {
        EN: "Managed configuration:",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO"
    },
    networkConfigTip1: {
        EN: "Here you configure the VPI/VCI for each ADSL service.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    networkConfigTip2: {
        EN: "Here you configure the VLAN ID for each VDSL service.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    bandwidthChannelAutoWarning24: {
        EN: "Channel may not be selected due to 2.4GHZ bandwidth set to 'Auto'.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    },
    bandwidthChannelAutoWarning5: {
        EN: "Channel may not be selected due to 5GHZ bandwidth set to 'Auto'.",
        FR: "TODO",
        SPN: "TODO",
        DE: "TODO",
        IT: "TODO",
        DA: "TODO",
        AR: "TODO",
        PT: "TODO",
        RO: "TODO",
        IND: "TODO"
    }
},
"undefined" != typeof module && module.exports && (exports.globals = $.globals);
var MINUTE = 60, HOURS = 60 * MINUTE, DAYS = 24 * HOURS, WEEKS = 7 * DAYS, INTERVAL, MASKS = ["0.0.0.0", "128.0.0.0", "192.0.0.0", "224.0.0.0", "240.0.0.0", "248.0.0.0", "252.0.0.0", "254.0.0.0", "255.0.0.0", "255.128.0.0", "255.192.0.0", "255.224.0.0", "255.240.0.0", "255.248.0.0", "255.252.0.0", "255.254.0.0", "255.255.0.0", "255.255.128.0", "255.255.192.0", "255.255.224.0", "255.255.240.0", "255.255.248.0", "255.255.252.0", "255.255.254.0", "255.255.255.0", "255.255.255.128", "255.255.255.192", "255.255.255.224", "255.255.255.240", "255.255.255.248", "255.255.255.252", "255.255.255.254", "255.255.255.255"];
$.constants = {
    masks: MASKS,
    sagemUrl: "//www.sagemcom.com",
    cssMobile: "styles/mobile/main-app.css",
    defaultGwName: "F@st XXXX",
    STATUS_ONLINE: "ONLINE",
    STATUS_OFFLINE: "OFFLINE",
    STATUS_STANDBY: "STANDBY",
    routeAvaliableMasks: MASKS,
    googleContactsBatch: 1e3,
    googleContactsClientId: "492708212151-8fui4rnlfrumna8rnqd258jvnoqvv3sv.apps.googleusercontent.com",
    googleContactsApiKey: "AIzaSyCbMx9kon10J7CLxwMxHRxaJRW0ryotIn0",
    voipDialpanPattern: /^[A-D 0-9 # \* x T | .\-\[\]]{1,32}$/,
    waitMessageTimeout: 8e4,
    guiCoreRequestLimit: 90,
    callBlockType: ["INCOMINGCALL_BLACKLIST", "OUTGOINGCALL_BLACKLIST"],
    callForwarding: {
        inconditional: "inconditional",
        busy: "busy",
        notResponding: "notResponding"
    },
    gponCountriesMap: {
        HU: "MT",
        ME: "CT",
        MK: "MKT",
        RO: "TKR",
        SK: "ST",
        GR: "OTE",
        HR: "HT"
    },
    voicemailDefaultFiles: {
        RecordingOnBusyGreeting: "default_#lang#_RecordingOnBusyGreeting.wav",
        RecordingOnNoAnswerGreeting: "default_#lang#_RecordingOnNoAnswerGreeting.wav",
        RecordingUnconditionalGreeting: "default_#lang#_RecordingUnconditionalGreeting.wav",
        SimpleOnBusyGreeting: "default_#lang#_SimpleOnBusyGreeting.wav",
        SimpleOnNoAnswerGreeting: "default_#lang#_SimpleOnNoAnswerGreeting.wav",
        SimpleUnconditionalGreeting: "default_#lang#_SimpleUnconditionalGreeting.wav"
    },
    pingInterfaceOptions: [{
        label: "WAN",
        value: "IP_DATA"
    }, {
        label: "LAN",
        value: "IP_BR_LAN"
    }],
    bridgedBlockedFeatures: [{
        state: "user.wifi",
        feature: "homeWiFiBoxes"
    }, {
        feature: "homeWiFiMerge"
    }, {
        feature: "wifiGuest5"
    }, {
        feature: "wifi24g"
    }, {
        feature: "wifi5g"
    }, {
        feature: "wifiGuest50"
    }, {
        feature: "wifiGuest24"
    }, {
        state: "user.internetConnectivity.trafficSpeed",
        feature: "trafficSpeed"
    }, {
        state: "user.mysagemcombox.deviceInfo.dhcpLeases",
        feature: "dhcpLeases"
    }, {
        state: "user.mysagemcombox.dns",
        feature: "dns"
    }, {
        state: "user.mysagemcombox.monitor",
        feature: "monitoring"
    }, {
        state: "user.mysagemcombox.dhcp",
        feature: "lanIpv4"
    }, {
        state: "user.mysagemcombox.lanIpv6",
        feature: "lanIpv6"
    }, {
        state: "user.mysagemcombox.ddns",
        feature: "dyndns"
    }, {
        state: "user.mysagemcombox.maintenance.ntp",
        feature: "ntp"
    }, {
        state: "user.accessControl.parentalControl",
        feature: "parentalControl"
    }, {
        state: "user.accessControl.portForwarding",
        feature: "portForwarding"
    }, {
        state: "user.accessControl.portTriggering",
        feature: "portTriggering"
    }, {
        state: "user.accessControl.firewall",
        feature: "firewall"
    }, {
        state: "user.accessControl.dmz",
        feature: "dmz"
    }, {
        state: "user.internetConnectivity.basic",
        feature: "internetConnectivityWanBasic"
    }, {
        state: "user.internetConnectivity.basic.ipv4",
        feature: "simpleIpv4"
    }, {
        state: "user.ethernetDevice.parentalControl",
        feature: "parentalControlDevice"
    }, {
        state: "user.ethernetDevice.portForwarding",
        feature: "portForwardingDevice"
    }, {
        state: "user.ethernetDevice.dmz",
        feature: "dmzDevice"
    }, {
        feature: "networkMapNewRule"
    }, {
        state: "user.mysagemcombox.deviceInfo.arp",
        feature: "arpTable"
    }, {
        feature: "nowifi"
    }, {
        state: "user.accessControlScheduling"
    }],
    REQUESTED: "REQUESTED",
    Unregistered: "Unregistered",
    maxWifiPower: -30,
    minWifiPower: -90,
    availableSecurityModes: ["WPA_WPA2_PERSONAL", "WPA2_PERSONAL", "WPA_PERSONAL", "WPA_WPA2_ENTERPRISE", "WPA2_ENTERPRISE", "WPA_ENTERPRISE", "WEP_64", "WEP_128", "NONE"],
    supportedChannelBandwidth: {
        "2.4GHz": "20,40,AUTO",
        "5GHz": "20,40,AUTO,80"
    },
    dropboxToken: "DROPBOX",
    dropboxResponse: ["192.168.1.1", "f5360", "sunrise.box", "yallo.box"],
    USB_ALLOWED_DEVICES: ["STORAGE", "PRINTER"],
    deviceTypes: [{
        type: "MISCELLANEOUS",
        icon: "miscellaneous"
    }, {
        type: "COMPUTER",
        icon: "pc",
        iconsvg: "images/sprite.svg?new#icon-desktop"
    }, {
        type: "PHONE",
        icon: "smartphone",
        iconsvg: "images/sprite.svg?new#icon-mobile"
    }, {
        type: "NETWORKACCESSPOINT",
        icon: "nap"
    }, {
        type: "AUDIOVIDEO",
        icon: "audiovideo"
    }, {
        type: "PERIPHERAL",
        icon: "peripheral"
    }, {
        type: "IMAGING",
        icon: "imaging"
    }, {
        type: "NOTEBOOKS",
        icon: "notebook",
        iconsvg: "images/sprite.svg?new#icon-laptop"
    }, {
        type: "GAMECONSOLE",
        icon: "game",
        iconsvg: "images/sprite.svg?new#icon-videogame"
    }, {
        type: "STORAGE",
        icon: "usb",
        iconsvg: "images/sprite.svg?new#icon-usb"
    }, {
        type: "BLACKLISTED",
        icon: "blacklisted"
    }, {
        type: "HIDDEN",
        icon: "miscellaneous"
    }, {
        type: "PRINTER",
        icon: "printer",
        iconsvg: "interface-print"
    }, {
        type: "TABLET",
        icon: "tablet",
        iconsvg: "images/sprite.svg?new#icon-tablet"
    }, {
        type: "MOBILE_PHONE",
        icon: "smartphone",
        iconsvg: "images/sprite.svg?new#icon-mobile"
    }, {
        type: "TV_DECODER",
        icon: "tv"
    }, {
        type: "WIFI_BRIDGE",
        icon: "wifibridge"
    }, {
        type: "WIFI_REPEATER",
        icon: "wifirepeater"
    }, {
        type: "PLC",
        icon: "plc",
        iconsvg: "images/sprite.svg?new#infographic-workingathome"
    }],
    deviceDiscoveryTypes: {
        Unknown: "MISCELLANEOUS",
        "Android1.5-2.1": "PHONE",
        "Android2.x": "PHONE",
        "Android3.x": "TABLET",
        "Android4.x": "PHONE",
        GenericAndroid: "PHONE",
        iPhone: "PHONE",
        MacOSX: "COMPUTER",
        BlackBerry: "PHONE",
        NokiaN95: "PHONE",
        SymbianPhone: "PHONE",
        SamsungS8000: "PHONE",
        SamsungS8500: "PHONE",
        "Sony-Ericssonw800i": "PHONE",
        LGBL40: "PHONE",
        PalmOS: "TABLET",
        Sharpphone: "MOBILE_PHONE",
        Wii: "GAMECONSOLE",
        PS3: "GAMECONSOLE",
        Xbox360: "GAMECONSOLE",
        CiscoWVC200: "AUDIOVIDEO",
        WindowsMobile: "PHONE",
        PhotoframeSPF_83V: "AUDIOVIDEO",
        GenericWindows: "COMPUTER",
        "Debian-basedLinux": "COMPUTER",
        GenericLinux: "COMPUTER",
        "RedHat/Fedora-basedLinux": "COMPUTER",
        "Ubuntu/Debian5/Knoppix6": "COMPUTER",
        WindowsXP: "COMPUTER",
        Windows7: "COMPUTER",
        Kindle: "TABLET",
        "SonyBDP-S490": "TV_DECODER",
        Windows8PC: "COMPUTER",
        WindowsPhone8: "PHONE",
        BTVision: "TV_DECODER",
        KindleFireHD: "TABLET",
        NetgearReadyNASDuo: "STORAGE",
        "QNAPTS-210TurboNAS": "WIFI_BRIDGE",
        XBoxOne: "GAMECONSOLE",
        GoogleChromecast: "AUDIOVIDEO"
    },
    blacklistedIPs: [{
        min: "0.0.0.0",
        max: "0.255.255.255"
    }, {
        min: "100.64.0.0",
        max: "100.127.255.255"
    }, {
        min: "127.0.0.0",
        max: "127.255.255.255"
    }, {
        min: "169.254.0.0",
        max: "169.254.255.255"
    }, {
        min: "192.0.0.0",
        max: "192.0.0.255"
    }, {
        min: "192.0.2.0",
        max: "192.0.2.255"
    }, {
        min: "192.88.99.0",
        max: "192.88.99.255"
    }, {
        min: "255.255.255.0",
        max: "255.255.255.255"
    }],
    predefinedIpRange: [{
        label: "172.16.0.0/12",
        ip: "172.16.0.1",
        mask: "255.240.0.0",
        prefixLength: 12
    }, {
        label: "192.168.0.0/16",
        ip: "192.168.0.1",
        mask: "255.255.0.0",
        prefixLength: 16
    }, {
        label: "10.0.0.0/8",
        ip: "10.0.0.1",
        mask: "255.0.0.0",
        prefixLength: 8
    }],
    logSeverity: [{
        level: "Debug",
        type: "debug",
        operatorType: "",
        translate: "selectDebug",
        description: "descDebug",
        val: 0
    }, {
        level: "Informational",
        type: "info",
        operatorType: "INF",
        translate: "selectInfo",
        description: "descInfo",
        val: 1
    }, {
        level: "Notice",
        type: "notice",
        operatorType: "",
        translate: "selectNotice",
        description: "descNotice",
        val: 2
    }, {
        level: "Warning",
        type: "warn",
        operatorType: "WRN",
        translate: "selectWarning",
        description: "descWarning",
        val: 3
    }, {
        level: "Error",
        type: "err",
        operatorType: "ERR",
        translate: "selectError",
        description: "descError",
        val: 4
    }, {
        level: "Critical",
        type: "crit",
        operatorType: "",
        translate: "selectCrit",
        description: "descCrit",
        val: 5
    }, {
        level: "Alert",
        type: "alert",
        operatorType: "",
        translate: "selectAlert",
        description: "descAlert",
        val: 6
    }, {
        level: "Emergency",
        type: "emergency",
        operatorType: "",
        translate: "selectEmergency",
        description: "descEmergency",
        val: 7
    }],
    telephone: {
        status: "UP",
        statusReason: "REGISTERED",
        unregistering: "UNREGISTERING",
        registering: "REGISTERING",
        callState: "INCALL",
        availble: "available",
        incall: "incall",
        disabled: "disabled",
        operational: "operational",
        notregistered: "notregistered",
        notbooked: "notbooked",
        failure: "failure",
        registered: "registered"
    },
    availableLanguages: ["EN", "FR", "SPN", "DE", "IT", "DA", "AR", "PT", "RO", "IND"],
    langNames: {
        EN: "ENGLISH",
        FR: "FRANÇAIS",
        SPN: "ESPAÑOL",
        IT: "ITALIAN",
        DE: "DEUTSCH",
        DA: "DANSKE",
        AR: "العربية",
        PT: "PORTUGUÊS",
        RO: "ROMÂNĂ",
        IND: "INDONESIAN"
    },
    supportedTwonkyLanguages: {
        EN: "en",
        FR: "fr",
        SPN: "es",
        DE: "de",
        IT: "it",
        DA: "da",
        AR: "ar",
        PT: "pt",
        RO: "ro",
        IND: "in"
    },
    guestUser: "guest",
    guestPwd: "",
    DIPLAY_METHOD: {
        table: "table",
        div: "div"
    },
    NATMAPPING_PREFIX: "NAT_",
    PORTFORWARDING_PREFIX: "PORTFW_RULE_",
    GAMES_PREFIX: "GAA_",
    ENABLED: "ENABLED",
    DISABLED: "DISABLED",
    NATMAPPING_STATUS: {
        DISABLED: "Disabled",
        ENABLED: "OK",
        ERROR_MISCONFIGURED: "Failed",
        ERROR: "Failed"
    },
    ACCESS_ENABLE: "ACCESS_ENABLE",
    ACCESS_DISABLE_NO_SECURITY: "ACCESS_DISABLE_NO_SECURITY",
    ACCESS_DISABLE: "ACCESS_DISABLE",
    ACCESS_ENABLE_ALL: "ACCESS_ENABLE_ALL",
    PIN: "PIN",
    PUSHBUTTON: "PUSHBUTTON",
    firmwareUpgrade: {
        SYSTEM: "SYSTEM",
        GUI: "GUI"
    },
    parentalControlProtocolType: ["TCP", "UDP", "TCP_UDP"],
    ping: {
        IPV4: 2,
        IPV6: "AUTO"
    },
    parentalControl: {
        BLOCKEDSITES: "blockedSites",
        BLOCKEDKEYWORDS: "blockedKeywords",
        BLOCKEDSERVICES: "blockedServices",
        DEVICESALLOWALL: "devicesAllowAll",
        DEVICESBLOCKALL: "devicesBlockAll",
        REJECT: "REJECT",
        ACCEPT: "ACCEPT",
        NONE: "NONE",
        TIMESLOT: "timeSlot",
        RESTRICTIONS: "restrictions",
        MACADDRESS: "macAddress"
    },
    daysParentalControl: ["MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY", "SUNDAY"],
    days: ["SUNDAY", "MONDAY", "TUESDAY", "WEDNESDAY", "THURSDAY", "FRIDAY", "SATURDAY"],
    daysCammel: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
    localIpConfig: {
        gatewayAddress1: "10",
        gatewayAddress2: "0",
        gatewayAddress3: "0",
        subnetMask: "255.255.255.0",
        dhcpBeginningAddress4: "2",
        dhcpEndingAddress4: "254",
        dhcpLeaseTimeAmount: "1",
        dhcpLeaseTimeMeasure: "weeks"
    },
    protocolType: ["TCP", "UDP"],
    firewall: {
        HIGH: "HIGH",
        MEDIUM: "MEDIUM",
        LOW: "LOW",
        CUSTOM: "CUSTOM",
        REJECT_FROM_LOCAL: "disallow-local",
        ACCEPT_FROM_LOCAL: "allow-local",
        REJECT_FROM_REMOTE: "disallow-remote",
        ACCEPT_FROM_REMOTE: "allow-remote",
        REJECT_BOTH: "disallow-both",
        ACCEPT_BOTH: "allow-both",
        REJECT: "REJECT",
        ACCEPT: "ACCEPT",
        interfaceBrLan: "Device/IP/Interfaces/Interface[IP_BR_LAN]",
        interfaceData: "Device/IP/Interfaces/Interface[IP_DATA]",
        interfaceBkp: "Device/IP/Interfaces/Interface[IP_BACKUP]",
        interfaceBrVoip: "Device/IP/Interfaces/Interface[IP_BR_VOIP]",
        interfaceVoip: "Device/IP/Interfaces/Interface[IP_VOIP]",
        interfaceBrMpls: "Device/IP/Interfaces/Interface[IP_BR_MPLS]",
        interfaceMpls: "Device/IP/Interfaces/Interface[IP_MPLS]"
    },
    diagnosticMaxCountPing: 10,
    diagnosticActivePing: "Active",
    diagnosticUnavailablePing: "Unavailable",
    logType: {
        LOG_TYPE_SYSTEM: {
            uid: "system",
            description: "System Logs"
        },
        LOG_TYPE_FIREWALL: {
            uid: "firewall",
            description: "Firewall Logs"
        }
    },
    leaseTimeRegex: /[\d]{4}-[\d]{2}-(.*)\+.*$/i,
    wirelessKeyRules: {
        WPA2: /^[a-zA-Z0-9+*%=\-_!]{8,63}$/i,
        WPA_PERSONAL: /^[a-zA-Z0-9+*%=\-_!]{8,63}$/i,
        WPA_ENTERPRISE: /^[a-zA-Z0-9+*%=\-_!]{8,63}$/i,
        WEP_64: /^[a-zA-Z0-9+*%=\-_!]{10}$|^[a-zA-Z0-9+*%=\-_!]{5}$/i,
        WEP_128: /^[a-zA-Z0-9+*%=\-_!]{26}$|^[a-zA-Z0-9+*%=\-_!]{13}$/i,
        WPA2_LENGTH: /^.{8,63}$/,
        WPA_PERSONAL_LENGTH: /^.{8,63}$/,
        WPA_ENTERPRISE_LENGTH: /^.{8,63}$/,
        WEP_64_LENGTH: /^.{10}$|^.{5}$/,
        WEP_128_LENGTH: /^.{26}$|^.{13}$/,
        WPA2_MIN_LENGTH: 8,
        WPA2_MAX_LENGTH: 63,
        WPA_PERSONAL_MIN_LENGTH: 8,
        WPA_PERSONAL_MAX_LENGTH: 63,
        WPA_ENTERPRISE_MIN_LENGTH: 8,
        WPA_ENTERPRISE_MAX_LENGTH: 63,
        WEP_64_MIN_LENGTH: 5,
        WEP_64_MAX_LENGTH: 10,
        WEP_128_MIN_LENGTH: 13,
        WEP_128_MAX_LENGTH: 26
    },
    dateFrame: {
        TODAY: {
            uid: "today",
            description: "Today"
        },
        YESTERDAY: {
            uid: "yesterday",
            description: "Yesterday"
        },
        LAST_WEEK: {
            uid: "lastWeek",
            description: "Last Week"
        },
        LAST_MONTH: {
            uid: "lastMonth",
            description: "Last Month"
        },
        LAST_90_DAYS: {
            uid: "last90Days",
            description: "Last 90 Days"
        }
    },
    logsPerPage: 10,
    maxPortRange: 65535,
    minPortRange: 0,
    wanOperatingModes: ["ROUTED", "BRIDGED"],
    remoteManagementModes: ["http", "https", "telnet", "ssh"],
    supportedServices: ["FTP", "FTP-DATA", "SSH", "TELNET", "DNS", "NTP", "NNTP", "HTTP", "HTTPS", "POP3", "POP3S", "IMAP", "IMAPS", "TFTP", "ICMP", "TRACEROUTE", "SNMP-TCP", "SNMP-UDP", "SYSLOG", "NETBIOS", "IPSEC", "SMTP", "SSMTP", "SMTP-AUTH", "L2TP", "H323", "SIP", "ICA", "MS-Remote-Desktop", "VNC", "PPTP", "OpenVPN", "Video2Protect"],
    checkHostTime: 3e4,
    defaultLogin: "admin",
    defaultPass: "gvt12345",
    availableMasks: MASKS.slice(1, 31),
    xdslStandards: {
        G_992_1_ANNEX_A: "ADSL",
        G_992_1_ANNEX_B: "ADSL",
        G_992_1_ANNEX_C: "ADSL",
        T1_413: "ADSL",
        T1_413I2: "ADSL",
        ETSI_101_388: "ADSL",
        G_992_2: "ADSL",
        G_992_3_ANNEX_A: "ADSL2",
        G_992_3_ANNEX_B: "ADSL2",
        G_992_3_ANNEX_C: "ADSL2",
        G_992_3_ANNEX_I: "ADSL2",
        G_992_3_ANNEX_J: "ADSL2",
        G_992_3_ANNEX_L: "ADSL2",
        G_992_3_ANNEX_M: "ADSL2",
        G_992_4: "ADSL2",
        G_992_5_ANNEX_A: "ADSL2+",
        G_992_5_ANNEX_B: "ADSL2+",
        G_992_5_ANNEX_C: "ADSL2+",
        G_992_5_ANNEX_I: "ADSL2+",
        G_992_5_ANNEX_J: "ADSL2+",
        G_992_5_ANNEX_M: "ADSL2+",
        G_993_1: "VDSL",
        G_993_1_ANNEX_A: "VDSL",
        G_993_2_ANNEX_A: "VDSL2",
        G_993_2_ANNEX_B: "VDSL2",
        G_993_2_ANNEX_C: "VDSL2"
    },
    operatingSpeeds: {
        b: {
            "20MHZ": [1, 2, 5.5, 11]
        },
        g: {
            "20MHZ": [6, 9, 12, 18, 24, 36, 48, 54]
        },
        n: {
            "20MHZ": [7.2, 14.4, 21.7, 28.9, 43.3, 57.8, 65],
            "40MHZ": [15, 30, 45, 60, 90, 120, 135]
        },
        a: {
            "20MHZ": [87.6],
            "40MHZ": [200]
        },
        c: {
            "20MHZ": [87.6],
            "40MHZ": [200],
            "80MHZ": [433.3],
            "160MHZ": [866.7]
        }
    },
    forbiddenAliases: {
        dmz: "FT_API_DMZ"
    },
    forbidenServicesFirewall: {
        UNIK: !0,
        NONE: !0
    },
    services: {
        FTP: {
            name: "FTP",
            internalPort: "21",
            externalPort: "21",
            protocol: "TCP"
        },
        "FTP-DATA": {
            internalPort: "20",
            externalPort: "20",
            protocol: "TCP",
            name: "FTP-DATA"
        },
        SSH: {
            internalPort: "22",
            externalPort: "22",
            protocol: "BOTH",
            name: "SSH"
        },
        TELNET: {
            internalPort: "23",
            externalPort: "23",
            protocol: "BOTH",
            name: "TELNET"
        },
        DNS: {
            internalPort: "53",
            protocol: "BOTH",
            name: "DNS",
            externalPort: "53"
        },
        NTP: {
            internalPort: "123",
            externalPort: "123",
            protocol: "UDP",
            name: "NTP"
        },
        NNTP: {
            internalPort: "119",
            externalPort: "119",
            name: "NNTP",
            protocol: "TCP"
        },
        HTTP: {
            internalPort: "80",
            externalPort: "80",
            protocol: "TCP",
            name: "HTTP"
        },
        HTTPS: {
            externalPort: "443",
            name: "HTTPS",
            internalPort: "443",
            protocol: "TCP"
        },
        POP3: {
            protocol: "TCP",
            internalPort: "110",
            externalPort: "110",
            name: "POP3"
        },
        POP3S: {
            internalPort: "995",
            externalPort: "995",
            name: "POP3S",
            protocol: "TCP"
        },
        IMAP: {
            internalPort: "220",
            externalPort: "220",
            protocol: "BOTH",
            name: "IMAP"
        },
        TFTP: {
            internalPort: "69",
            externalPort: "69",
            name: "IMAP",
            protocol: "UDP"
        },
        SYSLOG: {
            internalPort: "514",
            name: "SYSLOG",
            externalPort: "514",
            protocol: "UDP"
        },
        SMTP: {
            internalPort: "25",
            externalPort: "25",
            protocol: "BOTH",
            name: "SMTP"
        },
        SSMTP: {
            internalPort: "26",
            externalPort: "26",
            protocol: "BOTH",
            name: "SSMTP"
        },
        IMAPS: {
            internalPort: "993",
            name: "IMAPS",
            externalPort: "993",
            protocol: "TCP"
        },
        IPSEC: {
            externalPort: "1293",
            internalPort: "1293",
            name: "IPSEC",
            protocol: "BOTH"
        },
        "SNMP-UDP": {
            protocol: "UDP",
            internalPort: "161",
            name: "SNMP-UDP",
            externalPort: "161"
        },
        ICMP: {
            internalPort: "0",
            name: "ICMP",
            externalPort: "0",
            protocol: ""
        },
        "SNMP-TCP": {
            internalPort: "587",
            name: "SNMP-TCP",
            externalPort: "587",
            protocol: "TCP"
        },
        "SMTP-AUTH": {
            internalPort: "587",
            name: "SMTP-AUTH",
            externalPort: "587",
            protocol: "TCP"
        }
    },
    wifi24: {
        operatingStandards: [{
            method: "b",
            label: "802.11b"
        }, {
            method: "g",
            label: "802.11g"
        }, {
            method: "b,g",
            label: "802.11b+g"
        }, {
            method: "n",
            label: "802.11n"
        }, {
            method: "g,n",
            label: "802.11g+n"
        }, {
            method: "b,g,n",
            label: "802.11b+g+n"
        }],
        channelBandwidth: {
            "20MHZ": "20 MHz",
            AUTO: "20/40 MHz"
        }
    },
    wifi5: {
        operatingStandards: [{
            method: "a",
            label: "802.11a"
        }, {
            method: "a,n",
            label: "802.11a+n"
        }, {
            method: "n,ac",
            label: "802.11n+ac"
        }, {
            method: "a,n,ac",
            label: "802.11a+n+ac"
        }],
        channelBandwidth: {
            "20MHZ": "20 MHz",
            "40MHZ": "20/40 MHz",
            AUTO: "20/40/80 MHz"
        }
    },
    qosMeterTypes: [{
        value: "SIMPLETOKENBUCKET",
        label: "Simple token bucket"
    }, {
        value: "SINGLERATETHREECOLOR",
        label: "Single Rate Three Color"
    }, {
        value: "TWORATETHREECOLOR",
        label: "Two Rate Three Color"
    }],
    dscpMark: [{
        label: "Default (000000)",
        value: 0
    }, {
        label: "No Change (-1)",
        value: -1
    }, {
        label: "Auto Marking (-2)",
        value: -2
    }, {
        label: "AF13 (001110)",
        value: 1110
    }, {
        label: "AF12 (001100)",
        value: 1100
    }, {
        label: "AF11 (001010)",
        value: 1010
    }, {
        label: "CS1 (1000)",
        value: 1e3
    }, {
        label: "AF23 (001000)",
        value: 1e3
    }, {
        label: "AF22 (010100)",
        value: 10100
    }, {
        label: "AF21(010010)",
        value: 10010
    }, {
        label: "CS2(010000)",
        value: 1e4
    }, {
        label: "AF33(011110)",
        value: 11110
    }, {
        label: "AF32(011100)",
        value: 11100
    }, {
        label: "AF31(011010)",
        value: 11010
    }, {
        label: "CS3(011000)",
        value: 11e3
    }, {
        label: "AF43(100110)",
        value: 100110
    }, {
        label: "AF42(100100)",
        value: 100100
    }, {
        label: "AF41(100010)",
        value: 100010
    }, {
        label: "CS4(100000)",
        value: 1e5
    }, {
        label: "EF(101110)",
        value: 101110
    }, {
        label: "CS5(101000)",
        value: 101e3
    }, {
        label: "CS6(110000)",
        value: 11e4
    }, {
        label: "CS7(111000)",
        value: 111e3
    }],
    radioStars: ["wifi24", "wifi5"],
    defaultSecKey: "ca5195959",
    defaultRekeyTime: 3600,
    etherTypes: [{
        type: 2048,
        alias: "Internet Protocol version 4 (IPv4)"
    }, {
        type: 2054,
        alias: "Address Resolution Protocol (ARP)"
    }, {
        type: 2114,
        alias: "Wake-on-LAN"
    }, {
        type: 8947,
        alias: "IETF TRILL Protocol"
    }, {
        type: 24579,
        alias: "DECnet Phase IV"
    }, {
        type: 32821,
        alias: "Reverse Address Resolution Protocol"
    }, {
        type: 32923,
        alias: "AppleTalk (Ethertalk)"
    }, {
        type: 33011,
        alias: "AppleTalk Address Resolution Protocol (AARP)"
    }, {
        type: 33024,
        alias: "VLAN-tagged frame (IEEE 802.1Q) & Shortest Path Bridging IEEE 802.1aq"
    }, {
        type: 33079,
        alias: "IPX"
    }, {
        type: 33080,
        alias: "IPX"
    }, {
        type: 33284,
        alias: "QNX Qnet"
    }, {
        type: 34525,
        alias: "Internet Protocol Version 6 (IPv6)"
    }, {
        type: 34824,
        alias: "Ethernet flow control"
    }, {
        type: 34825,
        alias: "Slow Protocols (IEEE 802.3)"
    }, {
        type: 34841,
        alias: "CobraNet"
    }, {
        type: 34887,
        alias: "MPLS unicast"
    }, {
        type: 34888,
        alias: "MPLS multicast"
    }, {
        type: 34915,
        alias: "PPPoE Discovery Stage"
    }, {
        type: 34916,
        alias: "PPPoE Session Stage"
    }, {
        type: 34928,
        alias: "Jumbo Frames"
    }, {
        type: 34939,
        alias: "HomePlug 1.0 MME"
    }, {
        type: 34958,
        alias: "EAP over LAN (IEEE 802.1X)"
    }, {
        type: 34962,
        alias: "PROFINET Protocol"
    }, {
        type: 34970,
        alias: "HyperSCSI (SCSI over Ethernet)"
    }, {
        type: 34978,
        alias: "ATA over Ethernet"
    }, {
        type: 34980,
        alias: "EtherCAT Protocol"
    }, {
        type: 34984,
        alias: "Provider Bridging (IEEE 802.1ad) & Shortest Path Bridging IEEE 802.1aq"
    }, {
        type: 34987,
        alias: "Ethernet Powerlink[citation needed]"
    }, {
        type: 35020,
        alias: "Link Layer Discovery Protocol (LLDP)"
    }, {
        type: 35021,
        alias: "SERCOS III"
    }, {
        type: 35041,
        alias: "HomePlug AV MME[citation needed]"
    }, {
        type: 35043,
        alias: "Media Redundancy Protocol (IEC62439-2)"
    }, {
        type: 35045,
        alias: "MAC security (IEEE 802.1AE)"
    }, {
        type: 35063,
        alias: "Precision Time Protocol (IEEE 1588)"
    }, {
        type: 35074,
        alias: "IEEE 802.1ag Connectivity Fault Management (CFM) Protocol / ITU-T Recommendation Y.1731 (OAM)"
    }, {
        type: 35078,
        alias: "Fibre Channel over Ethernet (FCoE)"
    }, {
        type: 35092,
        alias: "FCoE Initialization Protocol"
    }, {
        type: 35093,
        alias: "RDMA over Converged Ethernet (RoCE)"
    }, {
        type: 35119,
        alias: "High-availability Seamless Redundancy (HSR)"
    }, {
        type: 36864,
        alias: "Ethernet Configuration Testing Protocol"
    }, {
        type: 37120,
        alias: "Q-in-Q"
    }, {
        type: 51966,
        alias: "Veritas Low Latency Transport (LLT) for Veritas Cluster Server"
    }],
    phonebookImportFields: {
        name: {
            EN_GOOGLE: "Name",
            EN_GOOGLE_OUTLOOK_FORMAT: "First Name",
            BR: "Primeiro nome"
        },
        number: {
            EN_GOOGLE: "Phone 1 - Value",
            EN_GOOGLE_OUTLOOK_FORMAT: "Primary Phone",
            BR: "Telefone principal"
        },
        lastName: {
            EN_GOOGLE: "Family Name",
            EN_GOOGLE_OUTLOOK_FORMAT: "Last Name",
            BR: "Sobrenome"
        },
        homeNumber: {
            EN_GOOGLE: "Phone 2 - Value",
            EN_GOOGLE_OUTLOOK_FORMAT: "Home Phone",
            BR: "Telefone residencial"
        },
        mobileNumber: {
            EN_GOOGLE: "",
            EN_GOOGLE_OUTLOOK_FORMAT: "Mobile Phone",
            BR: "Telefone celular"
        },
        workNumber: {
            EN_GOOGLE: "",
            EN_GOOGLE_OUTLOOK_FORMAT: "Business Phone",
            BR: "Telefone comercial"
        },
        email: {
            EN_GOOGLE: "E-mail 1 - Value",
            EN_GOOGLE_OUTLOOK_FORMAT: "E-mail Address",
            BR: "E-mail Address"
        },
        city: {
            EN_GOOGLE: "Address 1 - City",
            EN_GOOGLE_OUTLOOK_FORMAT: "Home City",
            BR: "Cidade do endereço residencial"
        },
        country: {
            EN_GOOGLE: "Address 1 - Country",
            EN_GOOGLE_OUTLOOK_FORMAT: "Home Country",
            BR: "País/Região de Residência"
        },
        address: {
            EN_GOOGLE: "Address 1 - Street",
            EN_GOOGLE_OUTLOOK_FORMAT: "Home Address",
            BR: "Endereço residencial"
        },
        comment: {
            EN_GOOGLE: "",
            EN_GOOGLE_OUTLOOK_FORMAT: "",
            BR: ""
        }
    },
    securityModesLabel: {
        WPA_WPA2_PERSONAL: "WPA2/WPA Personal",
        WPA2_PERSONAL: "WPA2 Personal",
        WPA_PERSONAL: "WPA Personal",
        WPA_WPA2_ENTERPRISE: "WPA2/WPA Enterprise",
        WPA2_ENTERPRISE: "WPA2 Enterprise",
        WPA_ENTERPRISE: "WPA Enterprise",
        WEP_64: "WEP-64",
        WEP_128: "WEP-128",
        NONE: "OPEN"
    },
    encryptionMode: {
        NONE: "None",
        WPA_PERSONAL: "TKIP",
        WPA_WPA2_PERSONAL: "TKIP+AES",
        WPA2_PERSONAL: "AES",
        WPA_ENTERPRISE: "TKIP",
        WPA2_ENTERPRISE: "AES"
    },
    dslChannels: {
        ch0: "DSL0",
        ch1: "DSL1"
    },
    ipv4LeaseSelect: [3600, 82800, 86400, 259200, 604800],
    ipv4MinLease: 420,
    ipv4SelectConfig: [{
        text: "1hour",
        value: 3600
    }, {
        text: "23hours",
        value: 82800
    }, {
        text: "1day",
        value: 86400
    }, {
        text: "3days",
        value: 259200
    }, {
        text: "1week",
        value: 604800
    }],
    modeExpert: "expert",
    modeAdmin: "admin",
    channelBandwidth: {
        auto: {
            label: "AUTO",
            RESTRICTIONS_5GHZ: [116, 132, 136, 140]
        },
        20: {
            label: "20MHZ",
            RESTRICTIONS_5GHZ: []
        },
        40: {
            label: "40MHZ",
            RESTRICTIONS_5GHZ: [116, 140]
        },
        80: {
            label: "80MHZ",
            RESTRICTIONS_5GHZ: [116, 132, 136, 140]
        },
        160: {
            label: "160MHZ",
            RESTRICTIONS_5GHZ: []
        }
    },
    sipCountries: {
        BR: "BRA - Brazil",
        FR: "FRA - France",
        US: "USA - United States of America",
        DK: "DNK - Denmark"
    },
    status: {
        enabled: "ENABLED",
        up: "UP",
        notAvailable: "Not Available"
    },
    led: {
        mode: {
            autodimming: "Autodimming",
            manual: "Manual"
        },
        brightness: {
            off: "Off",
            dimming: "Dimming",
            on: "100%"
        },
        powerSaving: {
            on: "ON",
            off: "OFF",
            dimming: "DIMMING"
        },
        powerSavingMode: {
            manual: "MANUAL",
            schedule: "SCHEDULE",
            sunbased: "SUNBASED"
        }
    },
    cloudServices: {
        DROPBOX: "dropbox",
        DROPBOX_CODE: 0,
        SUGARSYNC: "Sugarsync",
        GOOGLEDRIVE: "googleDrive"
    },
    voicemailSoundFiles: ["default_DE_RecordingOnBusyGreeting.wav", "default_DE_RecordingOnNoAnswerGreeting.wav", "default_DE_RecordingUnconditionalGreeting.wav", "default_DE_SimpleOnBusyGreeting.wav", "default_DE_SimpleOnNoAnswerGreeting.wav", "default_DE_SimpleUnconditionalGreeting.wav", "default_EN_RecordingOnBusyGreeting.wav", "default_EN_RecordingOnNoAnswerGreeting.wav", "default_EN_RecordingUnconditionalGreeting.wav", "default_EN_SimpleOnBusyGreeting.wav", "default_EN_SimpleOnNoAnswerGreeting.wav", "default_EN_SimpleUnconditionalGreeting.wav", "default_FR_RecordingOnBusyGreeting.wav", "default_FR_RecordingOnNoAnswerGreeting.wav", "default_FR_RecordingUnconditionalGreeting.wav", "default_FR_SimpleOnBusyGreeting.wav", "default_FR_SimpleOnNoAnswerGreeting.wav", "default_FR_SimpleUnconditionalGreeting.wav", "default_IT_RecordingOnBusyGreeting.wav", "default_IT_RecordingOnNoAnswerGreeting.wav", "default_IT_RecordingUnconditionalGreeting.wav", "default_IT_SimpleOnBusyGreeting.wav", "default_IT_SimpleOnNoAnswerGreeting.wav", "default_IT_SimpleUnconditionalGreeting.wav", "default_NL_RecordingOnBusyGreeting.wav", "default_NL_RecordingOnNoAnswerGreeting.wav", "default_NL_RecordingUnconditionalGreeting.wav", "default_NL_SimpleOnBusyGreeting.wav", "default_NL_SimpleOnNoAnswerGreeting.wav", "default_NL_SimpleUnconditionalGreeting.wav", "default_SP_RecordingOnBusyGreeting.wav", "default_SP_RecordingOnNoAnswerGreeting.wav", "default_SP_RecordingUnconditionalGreeting.wav", "default_SP_SimpleOnBusyGreeting.wav", "default_SP_SimpleOnNoAnswerGreeting.wav", "default_SP_SimpleUnconditionalGreeting.wav"],
    protocols: {
        BOTH: "BOTH",
        TCP: "TCP",
        UDP: "UDP"
    },
    staticForbiddenPorts: [500],
    notAvailableTranslate: "notAvailable",
    IPv6DefaultGatewayDestPrefix: "::/0",
    ONEHOUR: 3600,
    restoreModes: {
        factory: "FACTORY",
        full: "FULL",
        none: "NONE",
        partial: "PARTIAL"
    },
    operational: "OPERATIONAL",
    linkLocal: "LINK_LOCAL",
    hostnameFieldsCheck: ["UserFriendlyName", "UserHostName", "HostName", "IPAddress", "PhysAddress"],
    phoneNumberStarts: ["01", "02", "03", "04", "05", "06", "07", "08", "09"],
    regionCodeStarts: ["+41", "0041"],
    regionsCode: {
        CH: 41
    },
    breadCrumbUsers: ["user", "mso"],
    loginResetLimit: 600,
    controllerIDs: ["statistics", "dhcpLease", "deviceinfo", "arp"],
    refreshStates: ["user.mysagemcombox.deviceInfo.statistics", "user.mysagemcombox.deviceInfo.dhcpLeases", "user.mysagemcombox.deviceInfo.arp", "user.mysagemcombox.deviceInfo.deviceInfo"],
    provisioningModes: {
        ipv4Only: "IPv4",
        dualStack: "DUAL-STACK",
        ipv6Only: "DSLITE"
    },
    externalIpPrefix: "::ffff:",
    wifiLogTypes: {
        privateWifi: "EVENTS_WIFI",
        publicWifi: "EVENTS_WIFI_ALL"
    },
    supportedUSBDevice: "08",
    unsupportedUsb: "unsupportedUsb",
    lanIPv6DefaultMinAddress: "0:0:0:1",
    lanIPv6DefaultMaxAddress: "0:0:0:1000",
    ipVersionPinHolling: 6,
    ipVersionDmz: 6,
    ipVersionFirewall: 4,
    pinHollingProtocolList: ["TCP", "UDP", "BOTH"],
    pinHollingDefaultAlias: "PINHOLLING-",
    amProtocols: ["SMTP", "SMTPS", "SMTP-AUTH"],
    amEncryptions: ["SSL", "TLS", "NONE"],
    phoneTypes: ["Home", "Mobile", "Work", "Fax"],
    dectPowerModes: [{
        label: "dectFullPower",
        value: "NORMAL"
    }, {
        label: "dectReducedPower",
        value: "REDUCED"
    }]
},
$.xpaths = {
    firstConnection: "Device/DeviceInfo/FirstConnection",
    adminAdvanced: {
        connectionType: 'Device/PPP/Interfaces/Interface[Alias="PPP_DATA"]/Enable',
        login: "Device/PPP/Interfaces/Interface[Alias='PPP_DATA']/Username",
        passwd: "Device/PPP/Interfaces/Interface[Alias='PPP_DATA']/Password",
        lastErrorConnPPP: "Device/PPP/Interfaces/Interface[Alias='PPP_DATA']/LastConnectionError",
        vlan: "Device/Ethernet/VLANTerminations/VLANTermination[Alias='VLAN_DATA']/VLANID",
        ip: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/IPAddress',
        mask: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/SubnetMask',
        gateway: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/IPGateway',
        dns: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/Dns',
        wanType: "Device/Managers/NetworkData/WanType",
        interfaceType: "Device/Managers/NetworkData/InterfaceType",
        addressingType: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/AddressingType',
        enableDhcp: 'Device/DHCPv4/Clients/Client[Alias="DHCLIENT_DATA"]/Enable',
        enableIpv4Forwarding: 'Device/Routing/Routers/Router[@uid="1"]/IPv4Forwardings/IPv4Forwarding[Alias="STATIC_DEFAULT"]/Enable',
        gatewayIpAddress: 'Device/Routing/Routers/Router[@uid="1"]/IPv4Forwardings/IPv4Forwarding[Alias="STATIC_DEFAULT"]/GatewayIPAddress',
        enableDnsDhcp1: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="DHCPv4_1"]/Enable',
        enableDnsDhcp2: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="DHCPv4_2"]/Enable',
        enableDnsIPCP1: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="IPCP_1"]/Enable',
        enableDnsIPCP2: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="IPCP_2"]/Enable',
        dns1Dhcp: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="DHCPv4_1"]/DNSServer',
        dns2Dhcp: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="DHCPv4_2"]/DNSServer',
        enableDnsStatic1: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC_1"]/Enable',
        enableDnsStatic2: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC_2"]/Enable',
        enableDnsStatic: "Device/Managers/UserInterface/Dns/Static",
        dns1Static: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC_1"]/DNSServer',
        dns2Static: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC_2"]/DNSServer',
        dnsIPCP1: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="IPCP_1"]/DNSServer',
        dnsIPCP2: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="IPCP_2"]/DNSServer',
        vcivpi: 'Device/ATM/Links/Link[@uid="1"]/DestinationAddress',
        PPPoePassthrough: "Device/Managers/NetworkData/PPPoePassthroughEnable",
        uptime: 'Device/PPP/Interfaces/Interface[Alias="PPP_DATA"]/LastChange',
        resetInterface: "Device/PPP/Interfaces/Interface[Alias='#alias#']/Reset",
        connectionTrigger: "Device/PPP/Interfaces/Interface[Alias='PPP_DATA']/ConnectionTrigger",
        maxMRUSize: "Device/PPP/Interfaces/Interface[Alias='PPP_DATA']/MaxMRUSize",
        ipv6CpEnable: "Device/PPP/Interfaces/Interface[Alias='PPP_DATA']/IPv6CPEnable",
        globalWanMode: "Device/Managers/NetworkData/GlobalWanMode",
        voipMngt: {
            login: "Device/PPP/Interfaces/Interface[Alias='PPP_VOIP_MNGT']/Username",
            passwd: "Device/PPP/Interfaces/Interface[Alias='PPP_VOIP_MNGT']/Password",
            vlan: "Device/Ethernet/VLANTerminations/VLANTermination[Alias='VLAN_VOIP_MNGT']/VLANID",
            addressingType: 'Device/IP/Interfaces/Interface[Alias="IP_VOIP_MNGT"]/IPv4Addresses/IPv4Address[Alias="IP_VOIP_MNGT_ADDRESS"]/AddressingType',
            dns1Dhcp: "Device/DNS/Client/Servers/Server[Alias='PRIMARY_DNS_VOIP_MGNT']/DNSServer",
            dns2Dhcp: "Device/DNS/Client/Servers/Server[Alias='SECONDARY_DNS_VOIP_MGNT']/DNSServer",
            enableDnsDhcp1: 'Device/DNS/Client/Servers/Server[Alias="PRIMARY_DNS_VOIP_MGNT"]/Enable',
            enableDnsDhcp2: 'Device/DNS/Client/Servers/Server[Alias="SECONDARY_DNS_VOIP_MGNT"]/Enable',
            enableDnsStatic1: 'Device/DNS/Client/Servers/Server[Alias="PRIMARY_DNS_VOIP_MGNT"]/Enable',
            enableDnsStatic2: 'Device/DNS/Client/Servers/Server[Alias="SECONDARY_DNS_VOIP_MGNT"]/Enable',
            dns1Static: "Device/DNS/Client/Servers/Server[Alias='PRIMARY_DNS_VOIP_MGNT']/DNSServer",
            dns2Static: "Device/DNS/Client/Servers/Server[Alias='SECONDARY_DNS_VOIP_MGNT']/DNSServer",
            ip: 'Device/IP/Interfaces/Interface[Alias="IP_VOIP_MNGT"]/IPv4Addresses/IPv4Address[Alias="IP_VOIP_MNGT_ADDRESS"]/IPAddress',
            mask: 'Device/IP/Interfaces/Interface[Alias="IP_VOIP_MNGT"]/IPv4Addresses/IPv4Address[Alias="IP_VOIP_MNGT_ADDRESS"]/SubnetMask',
            gateway: 'Device/IP/Interfaces/Interface[Alias="IP_VOIP_MNGT"]/IPv4Addresses/IPv4Address[Alias="IP_VOIP_MNGT_ADDRESS"]/IPGateway',
            dns: 'Device/IP/Interfaces/Interface[Alias="IP_VOIP_MNGT"]/IPv4Addresses/IPv4Address[Alias="IP_VOIP_MNGT_ADDRESS"]/Dns'
        },
        iptv: {
            iptvEnable: 'Device/IP/Interfaces/Interface[Alias="IP_IGMP"]/Enable',
            ipIptv: 'Device/IP/Interfaces/Interface[Alias="IP_IGMP"]/IPv4Addresses/IPv4Address[Alias="IP_IGMP_ADDRESS"]/IPAddress'
        },
        voip: {
            voipEnable: 'Device/IP/Interfaces/Interface[Alias="IP_VOIP"]/Enable',
            ipVoip: 'Device/IP/Interfaces/Interface[Alias="IP_VOIP"]/IPv4Addresses/IPv4Address[Alias="IP_VOIP_ADDRESS"]/IPAddress'
        }
    },
    greTunnel: {
        enable: "Device/GRE/Tunnels/Tunnel[@uid='1']/Enable",
        server: "Device/GRE/Tunnels/Tunnel[@uid='1']/RemoteEndpoints",
        vlanId: "Device/GRE/Vlans/Vlan[@uid='1']/VLANID"
    },
    wizard: {
        wanStatus: "Device/IP/Interfaces/Interface[Alias='IP_DATA']/Status",
        save: {
            vlanId: "Device/Ethernet/VLANTerminations/VLANTermination[@uid='1']/VLANID"
        }
    },
    neighborAps: {
        search: "Device/WiFi/NeighboringWiFiDiagnostic/DiagnosticsState",
        selectedRadio: "Device/WiFi/NeighboringWiFiDiagnostic/SelectedRadio",
        results: "Device/WiFi/NeighboringWiFiDiagnostic/Result"
    },
    wifiRestoreDefault: "Device/Managers/Network/ReinitializeWifi",
    wifiBandSteering: "Device/WiFi/BandSteering/Enable",
    singleLine: 'Device/DSL/BondingGroups/BondingGroup[@uid="1"]/Enable',
    wifi: {
        backhaul: {
            security: "Device/Managers/Network/SecurityBackHaul",
            ssid: "Device/Managers/Network/SSIDBackHaul",
            key: "Device/Managers/Network/KeyBackHaul",
            wps: "Device/Managers/Button/WpsBackHaul"
        },
        macfilter: {
            macFilterMode: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/MACFiltering/Mode',
            wifiControlList: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/MACFiltering/MACAddresses'
        },
        recommendedChannel: {
            testChannel: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/SiteSurvey/ChannelsToTest',
            subscribe: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/SiteSurvey/State',
            survey: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/SiteSurvey/ChannelSurveys'
        },
        stats: {
            status: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Status',
            packetsreceived: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/PacketsReceived',
            bytesreceived: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/BytesReceived',
            errorsreceived: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/ErrorsReceived',
            discardpacketsreceived: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/DiscardPacketsReceived',
            packetssent: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/PacketsSent',
            bytessent: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/BytesSent',
            errorssent: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/ErrorsSent',
            discardpacketssent: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/DiscardPacketsSent',
            unicastpacketssent: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/UnicastPacketsSent',
            unicastpacketsreceived: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/UnicastPacketsReceived',
            multicastpacketssent: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/MulticastPacketsSent',
            multicastpacketsreceived: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/MulticastPacketsReceived',
            broadcastpacketssent: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/BroadcastPacketsSent',
            broadcastpacketsreceived: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Stats/BroadcastPacketsReceived',
            operatingMode: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/OperatingStandards',
            channelBandwidth: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/OperatingChannelBandwidth',
            maxBitRate: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/MaxBitRate'
        },
        general: {
            enable: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/Enable',
            accessPointEnable: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Enable',
            ecoMode: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/GreenAPEnabled',
            ssidEnable: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Enable',
            broadcast: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/SSIDAdvertisementEnabled',
            ssid: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/SSID',
            bssid: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/BSSID',
            passwordWep: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/WEPKey',
            passwordKey: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/KeyPassphrase',
            securityMode: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/ModeEnabled',
            securityModesSupported: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/ModesSupported',
            wpsEnable: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/WPS/Enable',
            wpsRPC: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]',
            wpsEnrolleePin: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/WPS/EnrolleePIN',
            wpsDevicePin: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/WPS/DevicePIN',
            configMethodsEnabled: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/WPS/ConfigMethodsEnabled',
            configMethodsSupported: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/WPS/ConfigMethodsSupported',
            wmm: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/WMMEnable',
            wmmPowerSave: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/UAPSDEnable',
            supportedOperatingStandars: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/SupportedStandards',
            channel: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/Channel',
            extensionChannel: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/ExtensionChannel',
            transmitPower: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/TransmitPower',
            mac: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/MACAddress',
            frequencyBand: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/OperatingFrequencyBand',
            autoChannel: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/AutoChannelEnable',
            regulatoryDomain: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/RegulatoryDomain',
            possibleChannels: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/PossibleChannels',
            channelsInUse: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/ChannelsInUse',
            possibleSecurityMode: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/ModesSupported',
            radiusServerIp: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/RadiusServerIPAddr',
            radiusServerPort: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/RadiusServerPort',
            radiusServerPassword: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/RadiusSecret',
            groupKeyUpdatePeriod: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/RekeyingInterval',
            secondaryRadiusServerIp: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/SecondaryRadiusServerIPAddr',
            secondaryRadiusServerPort: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/SecondaryRadiusServerPort',
            secondaryRadiusServerSecret: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/SecondaryRadiusSecret',
            maxBitRate: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/MaxBitRate',
            macAddress: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/MACAddress',
            operatingStandards: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/OperatingStandards',
            channelBandwidth: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/OperatingChannelBandwidth',
            wifiNetworkEnable: "Device/Managers/Network/WifiEnable",
            wifiButton: "Device/Managers/Network/WifiButtonSet",
            mfpMode: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/ManagementFramesProtection',
            isolationEnable: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/IsolationEnable',
            ssidIsolation2G: 'Device/Bridging/Filters/Filter[Alias="BR_PORT_PRIV2G"]/Enable',
            ssidIsolation5G: 'Device/Bridging/Filters/Filter[Alias="BR_PORT_PRIV5G"]/Enable',
            backupSSID: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/BackupSSID',
            backupKeyPassphrase: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/BackupKeyPassphrase',
            backupModeEnabled: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/BackupModeEnabled'
        },
        advanced: {
            operatingStandards: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/OperatingStandards',
            channel: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/Channel',
            channelBandwidth: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/OperatingChannelBandwidth',
            extensionChannel: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/ExtensionChannel',
            transmitPower: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/TransmitPower',
            wmmEnable: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/WMMEnable',
            globalMaxClients: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/MaxAssociatedDevices',
            apsd: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/UAPSDEnable',
            regulatoryDomain: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/RegulatoryDomain',
            supportedChannelBandwidth: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/SupportedChannelBandwidth',
            securityMode: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/ModeEnabled',
            cyclicPrefix: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/GuardInterval',
            atfEnable: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/ATFEnable'
        },
        strength: {
            accessPoints: "Device/WiFi/AccessPoints",
            ipDevice: 'Device/UserAccounts/Users/User[Login="admin"]/CurrentSessions/UserSession[@SessionId="#SESSIONID#"]/RemoteAddress'
        },
        mainPage: {
            ssidStatus: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Status',
            ssidName: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/SSID',
            radioStatus: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/Status',
            pass: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/KeyPassphrase',
            passWep: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/WEPKey',
            mode: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Security/ModeEnabled',
            maxBitRate: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/MaxBitRate',
            operatingMode: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/OperatingStandards',
            channelBandwidth: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/OperatingChannelBandwidth',
            associatedDevices: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/AssociatedDevices'
        },
        status: {
            ssid: 'Device/WiFi/SSIDs/SSID[Alias="#SSID#"]/Status',
            accessPoint: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#AP#"]/Status',
            radio: 'Device/WiFi/Radios/Radio[Alias="#RADIO#"]/Status'
        },
        publicWifi: {
            publicSSIDs: "Device/Managers/PublicWiFi/SSIDs",
            ssid: 'Device/WiFi/SSIDs/SSID[Name="#SSIDRef#"]',
            accessPoint: 'Device/WiFi/AccessPoints/AccessPoint[SSIDReference="#SSIDRef#"]',
            aclMode: 'Device/WiFi/AccessPoints/AccessPoint[@uid="#"]/MACFiltering/Mode',
            aclMacAddress: 'Device/WiFi/AccessPoints/AccessPoint[@uid="#"]/MACFiltering/MACAddresses',
            vlan: "Device/Managers/PublicWiFi/SSIDs/SSID[@uid='#']/VLAN",
            publicSSID: "Device/Managers/PublicWiFi/SSIDs/SSID[@uid='#']/SSIDName",
            SSIDs: "Device/WiFi/SSIDs"
        },
        autoACL: {
            enable: "Device/Managers/Network/ACL/AutomatedFilling",
            allSSIDs: "Device/WiFi/SSIDs",
            publicSSIDs: "Device/Managers/PublicWiFi/SSIDs",
            sourceSSIDs: "Device/Managers/Network/ACL/SourceSSIDs",
            targetSSIDs: "Device/Managers/Network/ACL/TargetSSIDs",
            sourceSSIDsList: "Device/Managers/Network/ACL/SourceSSIDs/SourceSSID",
            targetSSIDsList: "Device/Managers/Network/ACL/TargetSSIDs/TargetSSID",
            sourceSSIDReference: 'Device/Managers/Network/ACL/SourceSSIDs/SourceSSID[@uid="#"]/SSIDReference',
            targetSSIDReference: 'Device/Managers/Network/ACL/TargetSSIDs/TargetSSID[@uid="#"]/SSIDReference'
        }
    },
    ssidCreation: {
        update: {
            ssid: {
                enable: "Device/WiFi/SSIDs/SSID[@uid=#]/Enable",
                lowerLayers: "Device/WiFi/SSIDs/SSID[@uid=#]/LowerLayers",
                ssid: "Device/WiFi/SSIDs/SSID[@uid=#]/SSID"
            }
        },
        insert: {
            ssid: "Device/WiFi/SSIDs",
            accessPoint: "Device/WiFi/AccessPoints"
        },
        remove: {
            ssid: 'Device/WiFi/SSIDs/SSID[Alias="#"]',
            accessPoint: 'Device/WiFi/AccessPoints/AccessPoint[Alias="#"]'
        },
        search: "Device/WiFi/SSIDs",
        accessPointSsidReferenceValue: "Device/WiFi/SSIDs/SSID[#]"
    },
    main: {
        eRouterMode: "Device/Managers/Network/WanProvisioningMode",
        cableModem: {
            status: "Device/Docsis/CableModem/Status",
            ipv4: "Device/IP/Interfaces/Interface[Alias='IP_CM']/IPv4Addresses/IPv4Address[Alias='IP_LNK_CM']/IPAddress",
            ipv6: "Device/IP/Interfaces/Interface[Alias='IP_CM']/IPv6Addresses"
        },
        ispHelpPage: "Device/UserInterface/ISPHelpPage",
        cacheable: {
            gwName: "Device/DeviceInfo/ProductClass",
            hosts: "Device/Hosts/Hosts",
            usbUnrecognizedHosts: "Device/USB/USBHosts/UnrecognizedDevice",
            overConsumptionDevice: "Device/USB/USBHosts/OverConsumptionDevice",
            overConsumptionDeviceTimeStamp: "Device/USB/USBHosts/OverConsumptionDeviceTimeStamp",
            unrecognizedDeviceTimeStamp: "Device/USB/USBHosts/UnrecognizedDeviceTimeStamp",
            usbHosts: "Device/USB/USBHosts/Hosts/Host/Devices",
            stbList: "Device/Managers/TV/SetTopBoxList",
            usbEnable: "Device/USB/Enable",
            usbLogicalVolume: "Device/Services/StorageServices/StorageService[@uid='1']/LogicalVolumes",
            mapEnable: "Device/MAP/Enable",
            dect: {
                enable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[PhyInterfaceType="DECT_FP"]/X_SAGEMCOM_DECT_FP/Enable',
                devices: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[PhyInterfaceType="DECT_PP"]',
                status: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[PhyInterfaceType="DECT_FP"]/X_SAGEMCOM_DECT_FP/Status'
            },
            quantenna: {
                MngtIPRemote: "Device/WiFi/Quantenna/MngtIPRemote",
                BootIPLocal: "Device/WiFi/Quantenna/BootIPLocal",
                BootIPRemote: "Device/WiFi/Quantenna/BootIPRemote",
                InterfacePhy: "Device/WiFi/Quantenna/InterfacePhy"
            },
            eSATA: 'Device/Services/StorageServices/StorageService/PhysicalMediums/PhysicalMedium[ConnectionType="ESATA"]',
            plcList: "Device/HomePlug/Interfaces",
            plcUpdate: {
                name: "Device/HomePlug/Interfaces/Interface[@uid='#uid#']/Name"
            }
        },
        ringTest: {
            phyInterface: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="#"]/Tests/TestState'
        },
        phones: {
            cache: {
                telephones: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines',
                contacts: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/Contacts',
                contactsNew: "Device/Contacts/Contacts",
                callLogs: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/CallControl/CallLogs',
                regionName: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Region"
            },
            splitLines: {
                uid: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line/@uid",
                LineId: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line/LineId",
                Name: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line/Name",
                DirectoryNumber: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line/DirectoryNumber",
                StatusReason: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line/StatusReason",
                Enable: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line/Enable",
                Status: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line/Status",
                CallState: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line/CallState",
                PhyReferenceList: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line/PhyReferenceList",
                MultiCallEnable: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line/CallingFeatures/MultiCallEnable",
                VoiceMail: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line/VoiceMail"
            },
            callingFeatures: {
                MultiCallEnable: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='#line#']/CallingFeatures/MultiCallEnable",
                CallWaitingEnable: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='#line#']/CallingFeatures/CallWaitingEnable",
                CallForwardOnBusyEnable: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='#line#']/CallingFeatures/CallForwardOnBusyEnable",
                VoiceMail: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='#line#']/VoiceMail"
            },
            AuthUserName: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line/SIP/AuthUserName",
            remove: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/CallControl/CallLogs/CallLog[@uid="#"]'
        },
        contacts: {
            allList: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/Contacts',
            remove: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/Contacts/Contact[@uid="#"]',
            update: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/Contacts/Contact[@uid="#"]/',
            line: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines/Line[@uid="#"]',
            number: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/Contacts/Contact[last()]/Numbers',
            callLog: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/CallControl/CallLogs/CallLog[@uid="#"]'
        },
        contactsNew: {
            allList: "Device/Contacts/Contacts",
            remove: 'Device/Contacts/Contacts/Contact[@uid="#"]',
            update: 'Device/Contacts/Contacts/Contact[@uid="#"]/',
            number: "Device/Contacts/Contacts/Contact[last()]/Numbers",
            maxEntriesExternal: "Device/Contacts/MaxEntriesExternal"
        },
        wifiLayerInterface: {
            wifi24: ["Device/WiFi/Radios/Radio[RADIO2G4]", "Device/WiFi/SSIDs/SSID[WL_PRIV]"],
            wifi24Guest: ["Device/WiFi/Radios/Radio[RADIO2G4]", "Device/WiFi/SSIDs/SSID[WL_GUEST]"],
            wifi5: ["Device/WiFi/Radios/Radio[RADIO5G]", "Device/WiFi/SSIDs/SSID[WL_VIDEO_5G]"],
            wifi5Guest: ["Device/WiFi/Radios/Radio[RADIO5G]", "Device/WiFi/SSIDs/SSID[WL_GUEST_5G]"]
        },
        usbPhysicalMedium: "Device/Services/StorageServices/StorageService[@uid='1']/PhysicalMediums/PhysicalMedium[SerialNumber=\"#\"]",
        usbPhysicalMediumUid: "Device/Services/StorageServices/StorageService[@uid='1']/PhysicalMediums/PhysicalMedium[@uid='#']",
        ripv2: {
            enable: "Device/Routing/RIP/Enable",
            network1: {
                ripIp: "Device/Routing/RIP/X_SAGEMCOM_RIPIPPrefix/X_SAGEMCOM_RIPIPPrefix[@uid='1']/RIPIP",
                ripSubnet: "Device/Routing/RIP/X_SAGEMCOM_RIPIPPrefix/X_SAGEMCOM_RIPIPPrefix[@uid='1']/RIPSubnet",
                ripDefaultGateway: "Device/Routing/RIP/X_SAGEMCOM_RIPIPPrefix/X_SAGEMCOM_RIPIPPrefix[@uid='1']/RIPDefaultGateway"
            },
            network2: {
                ripIp: "Device/Routing/RIP/X_SAGEMCOM_RIPIPPrefix/X_SAGEMCOM_RIPIPPrefix[@uid='2']/RIPIP",
                ripSubnet: "Device/Routing/RIP/X_SAGEMCOM_RIPIPPrefix/X_SAGEMCOM_RIPIPPrefix[@uid='2']/RIPSubnet",
                ripDefaultGateway: "Device/Routing/RIP/X_SAGEMCOM_RIPIPPrefix/X_SAGEMCOM_RIPIPPrefix[@uid='2']/RIPDefaultGateway"
            },
            network3: {
                ripIp: "Device/Routing/RIP/X_SAGEMCOM_RIPIPPrefix/X_SAGEMCOM_RIPIPPrefix[@uid='3']/RIPIP",
                ripSubnet: "Device/Routing/RIP/X_SAGEMCOM_RIPIPPrefix/X_SAGEMCOM_RIPIPPrefix[@uid='3']/RIPSubnet",
                ripDefaultGateway: "Device/Routing/RIP/X_SAGEMCOM_RIPIPPrefix/X_SAGEMCOM_RIPIPPrefix[@uid='3']/RIPDefaultGateway"
            }
        }
    },
    mySagemcomBox: {
        dns: {
            server: "Device/DHCPv4/Server/Pools/Pool[Alias='DEFAULT_POOL']/DNSServers",
            dynamic: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/Dns',
            notEditable: "Device/DNS/Relay/Forwardings/Forwarding[@uid='1']/Enable"
        },
        advancedOptions: {
            users: "Device/UserAccounts/Users",
            wanBlockingEnable: "Device/Firewall/WanBlocking",
            ipSecEnable: "Device/NAT/IPSecPassthroughEnable",
            pptpEnable: "Device/NAT/PPTPPassthroughEnable",
            remoteConfig: 'Device/UserAccounts/Users/User[@uid="#uid#"]/RemoteAccesses/RemoteAccess[@uid="#uidRemoteAccess#"]/WANRestriction',
            upnpEnable: "Device/UPnP/Device/Enable",
            sipAlgEnable: "Device/NAT/SIPALGEnable",
            portScanDetection: "Device/Firewall/PortScanDetection",
            remoteIPAddress: "Device/IP/Interfaces/Interface[Alias='IP_DATA']/IPv4Addresses/IPv4Address[Alias='IP_DATA_ADDRESS']/IPAddress",
            remoteServicePort: "Device/UserAccounts/Users/User[@uid='3']/RemoteAccesses/RemoteAccess[@uid='3']/Port"
        },
        bridgeMode: {
            enable: "Device/Managers/NetworkData/BridgedMode"
        },
        walledGarden: {
            enable: "Device/CaptivePortal/Enable"
        },
        ledSlider: "Device/Managers/Led/MaxBrightness",
        led: {
            ledMode: "Device/Leds/LedMode",
            frontLedPower: "Device/Managers/Led/FrontLedPowerSaving",
            switchLedPower: "Device/Managers/Led/SwitchLedPowerSaving"
        },
        ledHubLight: "Device/Managers/HubLightControl/LedEnable",
        deviceInfo: {
            deviceName1: "Device/DNS/Client/HostName",
            deviceName2: "Device/DNS/Client/LocalDomains",
            modelName: "Device/DeviceInfo/ModelName",
            modelNumber: "Device/DeviceInfo/ModelNumber",
            productClass: "Device/DeviceInfo/ProductClass",
            serialNumber: "Device/DeviceInfo/SerialNumber",
            hardwareVersion: "Device/DeviceInfo/HardwareVersion",
            softwareVersion: "Device/DeviceInfo/SoftwareVersion",
            guiVersion: "Device/DeviceInfo/GUIFirmwareVersion",
            driverVersion: "Device/WiFi/WiFiDriverInfo/DriverVersion",
            datapumpVersion: 'Device/DSL/Lines/Line[Alias="DSL0"]/FirmwareVersion',
            wanMacAddress: "Device/DeviceInfo/MACAddress",
            memoryStatus: "Device/DeviceInfo/MemoryStatus",
            memoryTotal: "Device/DeviceInfo/MemoryStatus/Total",
            memoryFree: "Device/DeviceInfo/MemoryStatus/Free",
            defaultLinkIpv6: "Device/Routing/Routers/Router[@uid='1']/IPv6Forwardings/IPv6Forwarding[Alias='IPV6_DATA_GATEWAY']/NextHop",
            dnsServerAddressIpv6: "Device/DHCPv6/Clients/Client[@uid='1']/ReceivedOptions/ReceivedOption[Tag='23']/Value",
            cpuLoadUsage: "Device/DeviceInfo/ProcessStatus/CPUUsage",
            loadAverage: "Device/DeviceInfo/ProcessStatus/LoadAverage",
            upTime: "Device/DeviceInfo/UpTime",
            localIpv4: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv4Addresses/IPv4Address[Alias="IP_BR_LAN_ADDRESS"]/IPAddress',
            localSubnetMask: "Device/DHCPv4/Server/Pools/Pool[Alias='DEFAULT_POOL']/SubnetMask",
            localEthernetMac: "Device/Ethernet/Interfaces/Interface[Alias='PHY1']/MACAddress",
            publicIpv4: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/IPAddress',
            publicIpv4MAPT: "Device/MAP/Domains/Domain[Alias='DOMAIN-MAPT']/SharedIPv4Address",
            publicSubnetMask: "Device/IP/Interfaces/Interface[Alias='IP_DATA']/IPv4Addresses/IPv4Address[Alias='IP_DATA_ADDRESS']/SubnetMask",
            ipv4Duration: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/ConnectionTime',
            defaultGateway: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address/IPGateway',
            ipv4Enable: "Device/IP/IPv4Status",
            ipv6Enable: "Device/IP/IPv6Status",
            nat: "Device/Managers/Network/NatInternetService",
            primaryMode: "Device/Managers/Network/PrimaryMode",
            dns: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/Dns',
            dnsStatic1Enable: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC_1"]/Enable',
            dnsStatic2Enable: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC_2"]/Enable',
            dnsStatic1: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC_1"]/DNSServer',
            dnsStatic2: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC_2"]/DNSServer',
            telephones: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines',
            xdsl: {
                standard: 'Device/DSL/Lines/Line[Alias="DSL0"]/StandardUsed',
                connectionTimeDsl: 'Device/DSL/Lines/Line[@uid="1"]/LastChange',
                linkEncapsulation: 'Device/DSL/Channels/Channel[LowerLayers="Device/DSL/Lines/Line[DSL0]"]/LinkEncapsulationUsed',
                status: 'Device/DSL/Lines/Line[Alias="DSL0"]/Status',
                linkStatus: 'Device/DSL/Lines/Line[Alias="DSL0"]/LinkStatus',
                lineEncoding: 'Device/DSL/Lines/Line[Alias="DSL0"]/LineEncoding',
                interfaceType: "Device/Managers/NetworkData/InterfaceType",
                profile: 'Device/DSL/Lines/Line[Alias="DSL0"]/CurrentProfile',
                numeric: {
                    actualRateDown: 'Device/DSL/Channels/Channel[@uid="1"]/DownstreamCurrRate',
                    actualRateUp: 'Device/DSL/Channels/Channel[@uid="1"]/UpstreamCurrRate',
                    maximumRateDown: 'Device/DSL/Lines/Line[Alias="DSL0"]/DownstreamMaxBitRate',
                    maximumRateUp: 'Device/DSL/Lines/Line[Alias="DSL0"]/UpstreamMaxBitRate',
                    noiseMarginDown: 'Device/DSL/Lines/Line[Alias="DSL0"]/DownstreamNoiseMargin',
                    noiseMarginUp: 'Device/DSL/Lines/Line[Alias="DSL0"]/UpstreamNoiseMargin',
                    attenuationDown: 'Device/DSL/Lines/Line[Alias="DSL0"]/DownstreamAttenuation',
                    attenuationUp: 'Device/DSL/Lines/Line[Alias="DSL0"]/UpstreamAttenuation',
                    powerDown: 'Device/DSL/Lines/Line[Alias="DSL0"]/DownstreamPower',
                    powerUp: 'Device/DSL/Lines/Line[Alias="DSL0"]/UpstreamPower',
                    dataPath: 'Device/DSL/Channels/Channel[Alias="DSL0"]/LPATH',
                    dataPathus: 'Device/DSL/Channels/Channel[Alias="DSL0"]/LPATHus',
                    interLeaveDepth: 'Device/DSL/Channels/Channel[Alias="DSL0"]/INTLVDEPTH',
                    interLeaveDepthus: 'Device/DSL/Channels/Channel[Alias="DSL0"]/INTLVDEPTHus',
                    interLeaveDelay: 'Device/DSL/Channels/Channel[Alias="DSL0"]/ActualInterleavingDelay',
                    interLeaveDelayus: 'Device/DSL/Channels/Channel[Alias="DSL0"]/ActualInterleavingDelayus',
                    inp: 'Device/DSL/Channels/Channel[Alias="DSL0"]/ACTINP',
                    inpus: 'Device/DSL/Channels/Channel[Alias="DSL0"]/ACTINPus',
                    lossOfSignal: 'Device/DSL/Lines/Line[Alias="DSL0"]/SignalDownstreamAttenuation',
                    lossOfSignalus: 'Device/DSL/Lines/Line[Alias="DSL0"]/SignalUpstreamAttenuation'
                }
            },
            xdsl2: {
                datapumpVersion: 'Device/DSL/Lines/Line[Alias="DSL1"]/FirmwareVersion',
                standard: 'Device/DSL/Lines/Line[Alias="DSL1"]/StandardUsed',
                connectionTimeDsl: 'Device/DSL/Lines/Line[@uid="2"]/LastChange',
                linkEncapsulation: 'Device/DSL/Channels/Channel[LowerLayers="Device/DSL/Lines/Line[DSL1]"]/LinkEncapsulationUsed',
                status: 'Device/DSL/Lines/Line[Alias="DSL1"]/Status',
                linkStatus: 'Device/DSL/Lines/Line[Alias="DSL1"]/LinkStatus',
                lineEncoding: 'Device/DSL/Lines/Line[Alias="DSL1"]/LineEncoding',
                interfaceType: "Device/Managers/Network/InterfaceType",
                profile: 'Device/DSL/Lines/Line[Alias="DSL1"]/CurrentProfile',
                numeric: {
                    actualRateDown: 'Device/DSL/Channels/Channel[@uid="2"]/DownstreamCurrRate',
                    actualRateUp: 'Device/DSL/Channels/Channel[@uid="2"]/UpstreamCurrRate',
                    maximumRateDown: 'Device/DSL/Lines/Line[Alias="DSL1"]/DownstreamMaxBitRate',
                    maximumRateUp: 'Device/DSL/Lines/Line[Alias="DSL1"]/UpstreamMaxBitRate',
                    noiseMarginDown: 'Device/DSL/Lines/Line[Alias="DSL1"]/DownstreamNoiseMargin',
                    noiseMarginUp: 'Device/DSL/Lines/Line[Alias="DSL1"]/UpstreamNoiseMargin',
                    attenuationDown: 'Device/DSL/Lines/Line[Alias="DSL1"]/DownstreamAttenuation',
                    attenuationUp: 'Device/DSL/Lines/Line[Alias="DSL1"]/UpstreamAttenuation',
                    powerDown: 'Device/DSL/Lines/Line[Alias="DSL1"]/DownstreamPower',
                    powerUp: 'Device/DSL/Lines/Line[Alias="DSL1"]/UpstreamPower',
                    dataPath: 'Device/DSL/Channels/Channel[Alias="DSL1"]/LPATH',
                    dataPathus: 'Device/DSL/Channels/Channel[Alias="DSL1"]/LPATHus',
                    interLeaveDepth: 'Device/DSL/Channels/Channel[Alias="DSL1"]/INTLVDEPTH',
                    interLeaveDepthus: 'Device/DSL/Channels/Channel[Alias="DSL1"]/INTLVDEPTHus',
                    interLeaveDelay: 'Device/DSL/Channels/Channel[Alias="DSL1"]/ActualInterleavingDelay',
                    interLeaveDelayus: 'Device/DSL/Channels/Channel[Alias="DSL1"]/ActualInterleavingDelayus',
                    inp: 'Device/DSL/Channels/Channel[Alias="DSL1"]/ACTINP',
                    inpus: 'Device/DSL/Channels/Channel[Alias="DSL1"]/ACTINPus',
                    lossOfSignal: 'Device/DSL/Lines/Line[Alias="DSL1"]/SignalDownstreamAttenuation',
                    lossOfSignalus: 'Device/DSL/Lines/Line[Alias="DSL1"]/SignalUpstreamAttenuation'
                }
            },
            globalLinkIpv6: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv6Addresses',
            linkLocalIpv6: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv6Addresses/IPv6Address[Alias="LINK_LOCAL"]/IPAddress',
            wan: {
                conexionStatus: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/Status',
                conexionIpv6Status: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Addresses/IPv6Address[IPAddressStatus="PREFERRED" and Origin="DHCPV6"]/Status',
                wanStatus: 'Device/Ethernet/Interfaces/Interface[Role="WAN"]/Status',
                bitrate: 'Device/Ethernet/Interfaces/Interface[Role="WAN"]/Diagnostics/CurrentBitRate',
                connectionTime: 'Device/Ethernet/Interfaces/Interface[Role="WAN"]/LastChange',
                connectionUpTime: "Device/Ethernet/Links/Link[Alias='FTTH_DATA']/ConnectionTime"
            },
            sfp: {
                sfpStatus: 'Device/SFP/Interfaces/Interface[Alias="SFP0"]/Status'
            },
            wifi24: {
                ssid: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/SSID',
                status: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/Status',
                upTime: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/ConnectionTime',
                maxBitRate: 'Device/WiFi/Radios/Radio[Alias="RADIO2G4"]/MaxBitRate',
                macAddress: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/MACAddress',
                operatingMode: 'Device/WiFi/Radios/Radio[Alias="RADIO2G4"]/OperatingStandards',
                channelBandwidth: 'Device/WiFi/Radios/Radio[Alias="RADIO2G4"]/OperatingChannelBandwidth',
                securityMode: 'Device/WiFi/AccessPoints/AccessPoint[Alias="PRIV0"]/Security/ModeEnabled'
            },
            wifi5: {
                ssid: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/SSID',
                status: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/Status',
                upTime: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/ConnectionTime',
                macAddress: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/MACAddress',
                operatingMode: 'Device/WiFi/Radios/Radio[Alias="RADIO5G"]/OperatingStandards',
                maxBitRate: 'Device/WiFi/Radios/Radio[Alias="RADIO5G"]/MaxBitRate',
                channelBandwidth: 'Device/WiFi/Radios/Radio[Alias="RADIO5G"]/OperatingChannelBandwidth',
                securityMode: 'Device/WiFi/AccessPoints/AccessPoint[Alias="VID1"]/Security/ModeEnabled'
            },
            wifi24Guest: {
                ssid: 'Device/WiFi/SSIDs/SSID[Alias="WL_GUEST"]/SSID',
                status: 'Device/WiFi/SSIDs/SSID[Alias="WL_GUEST"]/Status',
                upTime: 'Device/WiFi/SSIDs/SSID[Alias="WL_GUEST"]/ConnectionTime',
                macAddress: 'Device/WiFi/SSIDs/SSID[Alias="WL_GUEST"]/MACAddress',
                operatingMode: 'Device/WiFi/Radios/Radio[Alias="RADIO2G4"]/OperatingStandards',
                maxBitRate: 'Device/WiFi/Radios/Radio[Alias="RADIO2G4"]/MaxBitRate',
                channelBandwidth: 'Device/WiFi/Radios/Radio[Alias="RADIO2G4"]/OperatingChannelBandwidth',
                securityMode: 'Device/WiFi/AccessPoints/AccessPoint[Alias="GUEST1"]/Security/ModeEnabled'
            },
            wifi5Guest: {
                ssid: 'Device/WiFi/SSIDs/SSID[Alias="WL_GUEST_5G"]/SSID',
                status: 'Device/WiFi/SSIDs/SSID[Alias="WL_GUEST_5G"]/Status',
                upTime: 'Device/WiFi/SSIDs/SSID[Alias="WL_GUEST_5G"]/ConnectionTime',
                macAddress: 'Device/WiFi/SSIDs/SSID[Alias="WL_GUEST_5G"]/MACAddress',
                operatingMode: 'Device/WiFi/Radios/Radio[Alias="RADIO5G"]/OperatingStandards',
                maxBitRate: 'Device/WiFi/Radios/Radio[Alias="RADIO5G"]/MaxBitRate',
                channelBandwidth: 'Device/WiFi/Radios/Radio[Alias="RADIO5G"]/OperatingChannelBandwidth',
                securityMode: 'Device/WiFi/AccessPoints/AccessPoint[Alias="GUEST3"]/Security/ModeEnabled'
            },
            docsis: {
                publicIpv4: 'Device/IP/Interfaces/Interface[Alias="IP_CM_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_CM_DATA_ADDRESS"]/IPAddress',
                publicSubnetMask: 'Device/IP/Interfaces/Interface[Alias="IP_CM_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_CM_DATA_ADDRESS"]/SubnetMask',
                defaultGateway: 'Device/IP/Interfaces/Interface[Alias="IP_CM_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_CM_DATA_ADDRESS"]/IPGateway',
                macAddress: 'Device/Ethernet/Links/Link[Alias="ETHLNK_CM"]/MACAddress',
                cableModemStatus: "Device/Docsis/CableModem/Status",
                networkAccessStatus: "Device/Docsis/CableModem/NACO",
                standardSpecification: "Device/Docsis/CableModem/StandardSpecificationCompliant",
                cmCertificates: "Device/Docsis/CableModem/Certificates",
                timeServer: "Device/Docsis/CableModem/TimeServerIPAddress"
            },
            forcePasswordChange: "Device/UserAccounts/Users/User[Login='#login#']/ForcePasswordChange"
        },
        massStorage: {
            usb: "Device/USB/Enable",
            dlna: "Device/UPnP/Device/UPnPMediaServer",
            dlnaMediaName: "Device/UPnP/Settings/UPnPMediaServer/FriendlyName",
            routerModelName: "Device/DeviceInfo/ModelName",
            macAddress: "Device/DeviceInfo/MACAddress",
            samba: {
                enable: 'Device/Services/StorageServices/StorageService[@uid="1"]/NetworkServer/SMBEnable',
                host: "Device/DNS/Client/HostName",
                ip: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv4Addresses/IPv4Address[Alias="IP_BR_LAN_ADDRESS"]/IPAddress',
                localDomains: "Device/DNS/Client/LocalDomains"
            }
        },
        route: {
            remove: 'Device/Routing/Routers/Router[@uid="1"]/IPv4Forwardings/IPv4Forwarding[@uid="#"]',
            removeFromRoute2: 'Device/Routing/Routers/Router[@uid="2"]/IPv4Forwardings/IPv4Forwarding[@uid="#"]',
            staticRoute: {
                ipv4: 'Device/Routing/Routers/Router[@uid="1"]/IPv4Forwardings',
                ipv4Route2: 'Device/Routing/Routers/Router[@uid="2"]/IPv4Forwardings',
                ipv6: 'Device/Routing/Routers/Router[@uid="1"]/IPv6Forwardings',
                interfaces: "Device/IP/Interfaces"
            }
        },
        dhcp: {
            dnsServer: "Device/DHCPv4/Server/Pools/Pool[Alias='DEFAULT_POOL']/DNSServers",
            dnsServerPoolTv: "Device/DHCPv4/Server/Pools/Pool[Alias='MLTV_DEVICES_POOL']/DNSServers",
            guestDnsServer: "Device/DHCPv4/Server/Pools/Pool[Alias='GUEST_POOL']/DNSServers",
            IPReservation: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL"]/StaticAddresses',
            IPReservationGuest: 'Device/DHCPv4/Server/Pools/Pool[Alias="GUEST_POOL"]/StaticAddresses',
            host: "Device/DNS/Client/HostName",
            enable: "Device/DHCPv4/Server/Enable",
            subnetMaskDefault: "Device/DHCPv4/Server/Pools/Pool[Alias='DEFAULT_POOL']/SubnetMask",
            subnetMaskMlTv: "Device/DHCPv4/Server/Pools/Pool[Alias='MLTV_DEVICES_POOL']/SubnetMask",
            subnetMaskDsl: "Device/DHCPv4/Server/Pools/Pool[Alias='DEFAULT_POOL_DSLFORUM']/SubnetMask",
            subnetMaskMlTvDsl: "Device/DHCPv4/Server/Pools/Pool[Alias='MLTV_DEVICES_POOL_DSLFORUM']/SubnetMask",
            subnetMaskMlTvStb: "Device/DHCPv4/Server/Pools/Pool[Alias='STB_MLTV_POOL']/SubnetMask",
            subnetMask: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv4Addresses/IPv4Address[Alias="IP_BR_LAN_ADDRESS"]/SubnetMask',
            dhcpv4LeaseTime: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL"]/LeaseTime',
            dhcpv4LeaseTimeNew: "Device/Managers/Network/DhcpLanLeaseTime",
            dhcpv4LeaseTimeDSLForum: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL_DSLFORUM"]/LeaseTime',
            dhcpv4LeaseTimeTv1: 'Device/DHCPv4/Server/Pools/Pool[Alias="MLTV_DEVICES_POOL"]/LeaseTime',
            dhcpv4LeaseTimeTv2: 'Device/DHCPv4/Server/Pools/Pool[Alias="MLTV_DEVICES_POOL_DSLFORUM"]/LeaseTime',
            dhcpv4LeaseTimeTv3: 'Device/DHCPv4/Server/Pools/Pool[Alias="STB_MLTV_POOL"]/LeaseTime',
            ipv4Address: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv4Addresses/IPv4Address[Alias="IP_BR_LAN_ADDRESS"]/IPAddress',
            ipv4AddressNew: "Device/Managers/Network/IpLan",
            ipv4PoolTvIP: "Device/DHCPv4/Server/Pools/Pool[Alias='MLTV_DEVICES_POOL']/IPRouters",
            ipv4PoolDslIP: "Device/DHCPv4/Server/Pools/Pool[Alias='DEFAULT_POOL_DSLFORUM']/IPRouters",
            ipv4PoolTvDslIP: "Device/DHCPv4/Server/Pools/Pool[Alias='MLTV_DEVICES_POOL_DSLFORUM']/IPRouters",
            ipv4PoolTvStbIP: "Device/DHCPv4/Server/Pools/Pool[Alias='STB_MLTV_POOL']/IPRouters",
            natSourceIp: "Device/NAT/InterfaceSettings/InterfaceSetting/SourceIP",
            ipv4PoolStart: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL"]/MinAddress',
            ipv4PoolEnd: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL"]/MaxAddress',
            ipv4PoolStartNew: "Device/Managers/Network/DhcpLanMinAddress",
            ipv4PoolEndNew: "Device/Managers/Network/DhcpLanMaxAddress",
            ipv4PoolStartDSLForum: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL_DSLFORUM"]/MinAddress',
            ipv4PoolEndDSLForum: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL_DSLFORUM"]/MaxAddress',
            ipv4PoolTvEnable1: 'Device/DHCPv4/Server/Pools/Pool[Alias="MLTV_DEVICES_POOL"]/Enable',
            ipv4PoolTvEnable2: 'Device/DHCPv4/Server/Pools/Pool[Alias="MLTV_DEVICES_POOL_DSLFORUM"]/Enable',
            ipv4PoolTvEnable3: 'Device/DHCPv4/Server/Pools/Pool[Alias="STB_MLTV_POOL"]/Enable',
            ipv4PoolTvPoolStart1: 'Device/DHCPv4/Server/Pools/Pool[Alias="MLTV_DEVICES_POOL"]/MinAddress',
            ipv4PoolTvPoolEnd1: 'Device/DHCPv4/Server/Pools/Pool[Alias="MLTV_DEVICES_POOL"]/MaxAddress',
            ipv4PoolTvPoolStart2: 'Device/DHCPv4/Server/Pools/Pool[Alias="MLTV_DEVICES_POOL_DSLFORUM"]/MinAddress',
            ipv4PoolTvPoolEnd2: 'Device/DHCPv4/Server/Pools/Pool[Alias="MLTV_DEVICES_POOL_DSLFORUM"]/MaxAddress',
            ipv4PoolTvPoolStart3: 'Device/DHCPv4/Server/Pools/Pool[Alias="STB_MLTV_POOL"]/MinAddress',
            ipv4PoolTvPoolEnd3: 'Device/DHCPv4/Server/Pools/Pool[Alias="STB_MLTV_POOL"]/MaxAddress',
            ipv4PoolIP: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL"]/IPRouters',
            ipv4TvClassID: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL"]/VendorClassID',
            preferredIPBRLANAddr: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv6Addresses/IPv6Address[IPAddressStatus="PREFERRED"]',
            preferredIPBRLANPrefix: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv6Prefixes',
            macAddress: "Device/DeviceInfo/MACAddress",
            upnp: "Device/UPnP/Device/UPnPIGD",
            natEnable: 'Device/NAT/InterfaceSettings/InterfaceSetting[@uid="1"]/Enable',
            natRange: 'Device/NAT/InterfaceSettings/InterfaceSetting[@uid="1"]/SourceIP',
            ipv6Addresses: "Device/IP/Interfaces/Interface[Alias='IP_BR_LAN']/IPv6Addresses",
            ipv6Prefixes: "Device/IP/Interfaces/Interface[Alias='IP_BR_LAN']/IPv6Prefixes",
            macAddressLanSettings: "Device/Ethernet/Links/Link[Alias='ETHLNK_BR_LAN']/MACAddress"
        },
        dhcpv6: {
            autoConfigType: "Device/RouterAdvertisement/InterfaceSettings/InterfaceSetting[@uid='1']/AdvManagedFlag",
            startAddress: "Device/Managers/Network/Dhcpv6LanPrefix",
            numberOfAddresses: "Device/Managers/Network/Dhcpv6NumberofAdresses",
            validLifetime: "Device/Managers/Network/Dhcpv6ValidLifeTime",
            advertisementLifetime: "Device/RouterAdvertisement/InterfaceSettings/InterfaceSetting[@uid='1']/AdvDefaultLifetime",
            minRouterAdvInterval: "Device/RouterAdvertisement/InterfaceSettings/InterfaceSetting[@uid='1']/MinRtrAdvInterval",
            maxRouterAdvInterval: "Device/RouterAdvertisement/InterfaceSettings/InterfaceSetting[@uid='1']/MaxRtrAdvInterval"
        },
        lanIPv6: {
            dhcpv6Enable: "Device/DHCPv6/Server/Enable",
            enableDHCPPD: "Device/DHCPv6/Server/Pools/Pool[Alias='DEFAULT_POOL']/IAPDEnable",
            rangeMinAddress: "Device/DHCPv6/Server/Pools/Pool[Alias='DEFAULT_POOL']/RangeMinIPv6Address",
            rangeMaxAddress: "Device/DHCPv6/Server/Pools/Pool[Alias='DEFAULT_POOL']/RangeMaxIPv6Address",
            lanIPv6: "Device/IP/Interfaces/Interface[Alias='IP_BR_LAN']/IPv6Addresses/IPv6Address[@uid='2']/IPAddress",
            lanIPv6LinkLocal: "Device/IP/Interfaces/Interface[Alias='IP_BR_LAN']/IPv6Addresses/IPv6Address[Alias='LINK_LOCAL']/IPAddress",
            enableAutoIPv6Assignment: "Device/RouterAdvertisement/Enable",
            enableAutoIPv6Assignment1: "Device/RouterAdvertisement/InterfaceSettings/InterfaceSetting[@uid='1']/AdvOtherConfigFlag",
            typeLan6Autoconfig: "Device/RouterAdvertisement/InterfaceSettings/InterfaceSetting[@uid='1']/AdvManagedFlag",
            lanIPv6HighestIndex: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv6Addresses',
            ianaEnable: "Device/DHCPv6/Server/Pools/Pool[@uid='1']/IANAEnable",
            ianaManualPrefixes: "Device/DHCPv6/Server/Pools/Pool[@uid='1']/IANAManualPrefixes",
            wanDhcpv6UserClassOption: "Device/DHCPv6/Clients/Client[Alias='DHCLIENT6_DATA']/SentOptions/SentOption[Alias='user-class']/Value",
            ulaIPv6Enabled: "Device/IP/Interfaces/Interface[@uid='1']/ULAEnable"
        },
        upnp: {
            status: "Device/UPnP/Device/UPnPIGD",
            adTTL: "Device/UPnP/Settings/UPnPIGD/AdvertisementTTL",
            adPeriod: "Device/UPnP/Settings/UPnPIGD/AdvertisementInterval"
        },
        dynDns: {
            enable: 'Device/Services/DynamicDNS/Clients/Client[@uid="1"]/Enable',
            status: 'Device/Services/DynamicDNS/Clients/Client[@uid="1"]/Status',
            client: 'Device/Services/DynamicDNS/Clients/Client[@uid="1"]',
            services: "Device/Services/DynamicDNS/Services",
            ipv4Address: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/IPAddress',
            username: 'Device/Services/DynamicDNS/Clients/Client[@uid="1"]/Username',
            password: 'Device/Services/DynamicDNS/Clients/Client[@uid="1"]/Password',
            hostname: 'Device/Services/DynamicDNS/Clients/Client[@uid="1"]/Hostnames/Hostname[@uid="1"]/Name',
            serviceReference: 'Device/Services/DynamicDNS/Clients/Client[@uid="1"]/ServiceReference',
            serviceQuery: "Device/Services/DynamicDNS/Services/Service[Name='#']",
            customServer: 'Device/Services/DynamicDNS/Services/Service[Name="Custom"]/Server',
            customPort: 'Device/Services/DynamicDNS/Services/Service[Name="Custom"]/ServerPort',
            customRequest: 'Device/Services/DynamicDNS/Services/Service[Name="Custom"]/Request',
            customAuthentication: 'Device/Services/DynamicDNS/Services/Service[Name="Custom"]/Authentication',
            customRetry: 'Device/Services/DynamicDNS/Services/Service[Name="Custom"]/RetryInterval',
            customMax: 'Device/Services/DynamicDNS/Services/Service[Name="Custom"]/MaxRetries',
            customUpdate: 'Device/Services/DynamicDNS/Services/Service[Name="Custom"]/UpdateInterval'
        },
        maintenance: {
            firmwareVersion: "Device/DeviceInfo/ExternalFirmwareVersion",
            intFirmwareVersion: "Device/DeviceInfo/InternalFirmwareVersion",
            modelName: "Device/DeviceInfo/ModelName",
            logs: "Device/DeviceInfo/SimpleLogs/SystemLog",
            securityLog: "Device/DeviceInfo/SimpleLogs/FirewallLog",
            logLevel: "Device/DeviceInfo/Logging/LogLevel",
            saveRestore: {
                save: 'Device/DeviceInfo/VendorConfigFiles/VendorConfigFile[Alias="DEVICE_CONFIG"]',
                restore: "Device/DeviceInfo/VendorConfigFiles/VendorConfigFile[Alias='DEVICE_CONFIG']"
            },
            ntp: {
                firstServer: "Device/Time/NTPServer1",
                secondServer: "Device/Time/NTPServer2",
                timeZoneName: "Device/Time/LocalTimeZoneName",
                timeZone: "Device/Time/LocalTimeZone",
                status: "Device/Time/Status",
                localTime: "Device/Time/CurrentLocalTime"
            },
            tr69: {
                enable: "Device/ManagementServer/EnableCWMP",
                url: "Device/ManagementServer/URL",
                username: "Device/ManagementServer/Username",
                password: "Device/ManagementServer/Password",
                informEnable: "Device/ManagementServer/PeriodicInformEnable",
                informInterval: "Device/ManagementServer/PeriodicInformInterval",
                connectionRequestUrl: "Device/ManagementServer/ConnectionRequestURL",
                connectionRequestUsername: "Device/ManagementServer/ConnectionRequestUsername",
                connectionRequestPassword: "Device/ManagementServer/ConnectionRequestPassword",
                SslAuthenticationEnable: "Device/ManagementServer/TR69InternalData/Settings/SslAuthenticationEnable"
            }
        },
        fon: {
            globalInfo: {
                status: "Device/Services/FonHotspotService/Status",
                extStatus: "Device/Services/TLSHotspotServices/TLSHotspotService[@uid='1']/ExtendedStatus"
            },
            ssidsList: {
                ssidName: "Device/WiFi/SSIDs/SSID[Alias='#WL_BUB_ALIAS#']/SSID",
                ssidStatus: "Device/WiFi/SSIDs/SSID[Alias='#WL_BUB_ALIAS#']/Status",
                connectedUsers: "Device/WiFi/AccessPoints/AccessPoint[SSIDReference='Device/WiFi/SSIDs/SSID[#WL_BUB_ALIAS#]']/AssociatedDevices"
            }
        },
        firewall: {
            ipv4: {
                config: "Device/Firewall/ipv4Config",
                fragIPPackect: "Device/Firewall/blockIPv4FragmentedIPPackets",
                ipFloodDetect: "Device/Firewall/IPv4FloodDetection",
                portScanDetect: "Device/Firewall/IPv4PortScanDetection"
            },
            ipv6: {
                config: "Device/Firewall/ipv6Config",
                fragIPPackect: "Device/Firewall/blockIPv6FragmentedIPPackets",
                ipFloodDetect: "Device/Firewall/IPv6FloodDetection",
                portScanDetect: "Device/Firewall/IPv6PortScanDetection"
            },
            provisioningMode: "Device/Managers/Network/WanProvisioningMode"
        },
        fastLineStatus: 'Device/FAST/Lines/Line[@uid="1"]/Status',
        networkConfiguration: {
            atmLinks: "Device/ATM/Links",
            ethernetLinks: "Device/Ethernet/VLANTerminations",
            update: {
                destinationAddress: "Device/ATM/Links/Link[Alias='#']/DestinationAddress",
                vlanid: "Device/Ethernet/VLANTerminations/VLANTermination[Alias='#']/VLANID"
            }
        }
    },
    cableModem: {
        data: {
            connection: {
                upstream: "Device/Docsis/CableModem/Upstreams",
                downstream: "Device/Docsis/CableModem/Downstreams"
            },
            configuration: {
                favoriteFrequency: "Device/Docsis/CableModem/ForceScanFreq"
            }
        },
        save: {
            favoriteFrequency: "Device/Docsis/CableModem/ForceScanFreq"
        }
    },
    accessControl: {
        natMapping: {
            blacklisted: {
                ripDefaultGateways: "Device/Routing/RIP/X_SAGEMCOM_RIPIPPrefix/X_SAGEMCOM_RIPIPPrefix/RIPDefaultGateway"
            },
            natMappings: "Device/NAT/InterfaceSettings",
            update: {
                Enable: "Device/NAT/InterfaceSettings/InterfaceSetting[@uid=#]/Enable",
                ExernelAdressNAT: "Device/NAT/InterfaceSettings/InterfaceSetting[@uid=#]/ExernelAdressNAT",
                SourceIP: "Device/NAT/InterfaceSettings/InterfaceSetting[@uid=#]/SourceIP",
                Alias: "Device/NAT/InterfaceSettings/InterfaceSetting[@uid=#]/Alias"
            },
            remove: "Device/NAT/InterfaceSettings/InterfaceSetting[@uid=#]"
        },
        portForwarding: {
            portRangeConfig: {
                psid: 'Device/MAP/Domains/Domain[Alias="DOMAIN-MAPT"]/PSID',
                offset: 'Device/MAP/Domains/Domain[Alias="DOMAIN-MAPT"]/PSIDOffset',
                psidLength: 'Device/MAP/Domains/Domain[Alias="DOMAIN-MAPT"]/PSIDLength'
            },
            validationData: {
                tr69: "Device/ManagementServer/TR69InternalData/Settings/Port",
                subnet: "Device/DHCPv4/Server/Pools/Pool[Alias='DEFAULT_POOL']/SubnetMask",
                lanIp: "Device/IP/Interfaces/Interface[Alias='IP_BR_LAN']/IPv4Addresses/IPv4Address[Alias='IP_BR_LAN_ADDRESS']/IPAddress"
            },
            portmappings: "Device/NAT/PortMappings",
            connectedMac: 'Device/Hosts/Hosts/Host[IPAddress="#"]/PhysAddress',
            uid: "Device/NAT/PortMappings/PortMapping[@uid=#]",
            update: {
                Enable: "Device/NAT/PortMappings/PortMapping[@uid=#]/Enable",
                Protocol: "Device/NAT/PortMappings/PortMapping[@uid=#]/Protocol",
                Description: "Device/NAT/PortMappings/PortMapping[@uid=#]/Description",
                RemoteHost: "Device/NAT/PortMappings/PortMapping[@uid=#]/RemoteHost",
                ExternalAddress: "Device/NAT/PortMappings/PortMapping[@uid=#]/ExternalAddress",
                InternalClient: "Device/NAT/PortMappings/PortMapping[@uid=#]/InternalClient",
                ExternalPortEndRange: "Device/NAT/PortMappings/PortMapping[@uid=#]/ExternalPortEndRange",
                InternalPort: "Device/NAT/PortMappings/PortMapping[@uid=#]/InternalPort",
                ExternalPort: "Device/NAT/PortMappings/PortMapping[@uid=#]/ExternalPort",
                Service: "Device/NAT/PortMappings/PortMapping[@uid=#]/Service",
                Alias: "Device/NAT/PortMappings/PortMapping[@uid=#]/Alias"
            },
            ipv6: {
                rulesLow: 'Device/Firewall/Chains/Chain[Name="Low"]/Rules/Rule[IPVersion="6"]',
                rulesHigh: 'Device/Firewall/Chains/Chain[Name="High"]/Rules/Rule[IPVersion="6"]',
                remove: "Device/Firewall/Chains/Chain[Name='#level#']/Rules/Rule[@uid='#']",
                save: {
                    list: "Device/Firewall/Chains/Chain[Name='#level#']/Rules",
                    Enable: "Device/Firewall/Chains/Chain[Name='#level#']/Rules/Rule[@uid='#']/Enable",
                    Description: "Device/Firewall/Chains/Chain[Name='#level#']/Rules/Rule[@uid='#']/Description",
                    DestIP: "Device/Firewall/Chains/Chain[Name='#level#']/Rules/Rule[@uid='#']/DestIP",
                    MacId: "Device/Firewall/Chains/Chain[Name='#level#']/Rules/Rule[@uid='#']/MacId",
                    Protocol: "Device/Firewall/Chains/Chain[Name='#level#']/Rules/Rule[@uid='#']/Protocol",
                    SourcePort: "Device/Firewall/Chains/Chain[Name='#level#']/Rules/Rule[@uid='#']/SourcePort",
                    SourcePortRangeMax: "Device/Firewall/Chains/Chain[Name='#level#']/Rules/Rule[@uid='#']/SourcePortRangeMax",
                    DestPort: "Device/Firewall/Chains/Chain[Name='#level#']/Rules/Rule[@uid='#']/DestPort",
                    DestPortRangeMax: "Device/Firewall/Chains/Chain[Name='#level#']/Rules/Rule[@uid='#']/DestPortRangeMax"
                }
            },
            upnpRules: "Device/NAT/PortMappings/PortMapping[Creator='UPNP']",
            pcpEnable: 'Device/PCP/Clients/Client[Alias="cpe-1"]/Servers/Server[Alias="cpe-1"]/Enable',
            pcpMappings: 'Device/PCP/Clients/Client[Alias="cpe-1"]/Servers/Server[Alias="cpe-1"]/InboundMappings',
            externalIpDSLite: 'Device/PCP/Clients/Client[Alias="cpe-1"]/Servers/Server[Alias="cpe-1"]/ExternalIPAddress',
            externalIpIPv4Dual: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[1]/IPAddress'
        },
        firewall: {
            protocolCapability: 'Device/Firewall/Chains/Chain[@uid="4"]/Rules/Rule/Protocol',
            serviceCapability: 'Device/Firewall/Chains/Chain[@uid="4"]/Rules/Rule/Service',
            customRules: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules',
            orderList: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule/Order',
            lastRule: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[last()]',
            lowRules: 'Device/Firewall/Chains/Chain[Name="Low"]/Rules',
            mediumRules: 'Device/Firewall/Chains/Chain[Name="Medium"]/Rules',
            highRules: 'Device/Firewall/Chains/Chain[Name="High"]/Rules',
            config: "Device/Firewall/Config",
            respondToPing: "Device/Firewall/RespondToPing",
            defaultPolicy: 'Device/Firewall/Levels/Level[Name="Custom"]/DefaultPolicy',
            oneRule: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid=#]',
            iprouter: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL"]/IPRouters',
            subnetmask: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL"]/SubnetMask',
            rangestart: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL"]/MinAddress',
            rangeend: 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL"]/MaxAddress',
            update: {
                Enable: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/Enable',
                Order: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/Order',
                Alias: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/Alias',
                Description: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/Description',
                Target: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/Target',
                SourceInterface: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/SourceInterface',
                DestInterface: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/DestInterface',
                DestIP: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/DestIP',
                DestMask: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/DestMask',
                SourceIP: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/SourceIP',
                SourceMask: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/SourceMask',
                Protocol: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/Protocol',
                DestPort: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/DestPort',
                DestPortRangeMax: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/DestPortRangeMax',
                SourcePort: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/SourcePort',
                SourcePortRangeMax: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/SourcePortRangeMax',
                Service: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/Service',
                IPVersion: 'Device/Firewall/Chains/Chain[Name="Custom"]/Rules/Rule[@uid="#"]/IPVersion'
            }
        },
        ipv6Pinholling: {
            rules: "Device/Firewall/Chains/Chain/Rules",
            oneRule: "Device/Firewall/Chains/Chain/Rules/Rule[Alias=#]",
            update: {
                Enable: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/Enable',
                Order: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/Order',
                Alias: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/Alias',
                Description: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/Description',
                Target: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/Target',
                SourceInterface: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/SourceInterface',
                DestInterface: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/DestInterface',
                DestIP: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/DestIP',
                DestMask: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/DestMask',
                SourceIP: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/SourceIP',
                SourceMask: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/SourceMask',
                Protocol: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/Protocol',
                DestPort: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/DestPort',
                DestPortRangeMax: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/DestPortRangeMax',
                SourcePort: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/SourcePort',
                SourcePortRangeMax: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/SourcePortRangeMax',
                IPVersion: 'Device/Firewall/Chains/Chain/Rules/Rule[Alias="#"]/IPVersion'
            }
        },
        dmzIPv6: {
            rules: "Device/Firewall/Chains/Chain/Rules/Rule[Alias='DMZ']",
            insert: "Device/Firewall/Chains/Chain/Rules",
            update: {
                DestIP: "Device/Firewall/Chains/Chain/Rules/Rule[Alias='DMZ']/DestIP"
            }
        },
        parentalControl: {
            websitefilter: {
                insert: "Device/WebAccesses/WebRestriction",
                remove: 'Device/WebAccesses/WebRestriction/WebAccess[@uid="#"]',
                update: {
                    enable: 'Device/WebAccesses/WebRestriction/WebAccess[@uid="#"]/Enable',
                    site: 'Device/WebAccesses/WebRestriction/WebAccess[@uid="#"]/WebPage'
                }
            },
            controlPlanning: {
                hostBlacklisted1: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/Blacklisted',
                hostBlacklisted2: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistStatus',
                insert: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule',
                remove: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule',
                removeOne: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]',
                update: {
                    Child: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]',
                    Hours0: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours0',
                    Hours1: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours1',
                    Hours2: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours2',
                    Hours3: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours3',
                    Hours4: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours4',
                    Hours5: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours5',
                    Hours6: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours6',
                    Hours7: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours7',
                    Hours8: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours8',
                    Hours9: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours9',
                    Hours10: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours10',
                    Hours11: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours11',
                    Hours12: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours12',
                    Hours13: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours13',
                    Hours14: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours14',
                    Hours15: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours15',
                    Hours16: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours16',
                    Hours17: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours17',
                    Hours18: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours18',
                    Hours19: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours19',
                    Hours20: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours20',
                    Hours21: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours21',
                    Hours22: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours22',
                    Hours23: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/Hours23',
                    DayIndex: 'Device/Hosts/Hosts/Host[@uid="#uidhost#"]/BlacklistedSchedule/ManagementDay[@uid="#"]/@DayIndex'
                }
            },
            control: {
                list: "Device/Services/ParentalControl/Categories",
                profiles: "Device/Services/ParentalControl/Categories/UserProfiles/Profiles/Profile",
                hosts: "Device/Services/ParentalControl/Categories/UserProfiles/Hosts"
            },
            activeService: "Device/Services/ParentalControl/Categories/ActiveService"
        },
        parentalControlNew: {
            enable: "Device/Services/ParentalControl/Enable",
            enableRules: "Device/Services/ParentalControl/Rules/Rule[Enable='true']",
            parentalControl: "Device/Services/ParentalControl",
            rule: "Device/Services/ParentalControl/Rules/Rule[@uid='#']",
            timeSlotList: "Device/Services/ParentalControl/TimeSlotLists/TimeSlotList[@uid='#']",
            macAddressList: "Device/Services/ParentalControl/MACAddressLists/MACAddressList[@uid='#']",
            add: {
                rule: "Device/Services/ParentalControl/Rules",
                timeSlotList: "Device/Services/ParentalControl/TimeSlotLists",
                timeSlot: "Device/Services/ParentalControl/TimeSlotLists/TimeSlotList[last()]/TimeSlots",
                macAddressList: "Device/Services/ParentalControl/MACAddressLists",
                timeSlotChild: "Device/Services/ParentalControl/TimeSlotLists/TimeSlotList[@uid='#']/TimeSlots"
            },
            update: {
                enable: "Device/Services/ParentalControl/Rules/Rule[@uid='#']/Enable",
                ruleTimeslot: "Device/Services/ParentalControl/Rules/Rule[@uid='#']/TimeSlots",
                macAddressList: "Device/Services/ParentalControl/Rules/Rule[@uid='#']/MACAddresses"
            }
        },
        portTriggering: {
            list: "Device/WebAccesses/PortTrigger",
            deletePath: 'Device/WebAccesses/PortTrigger/PortTrigger[@uid="#"]',
            update: {
                enable: 'Device/WebAccesses/PortTrigger/PortTrigger[@uid="#"]/Enable',
                serviceName: 'Device/WebAccesses/PortTrigger/PortTrigger[@uid="#"]/ServiceName',
                openPortStart: 'Device/WebAccesses/PortTrigger/PortTrigger[@uid="#"]/Open/DstPortStart',
                openPortEnd: 'Device/WebAccesses/PortTrigger/PortTrigger[@uid="#"]/Open/DstPortEnd',
                openProtocol: 'Device/WebAccesses/PortTrigger/PortTrigger[@uid="#"]/Open/Protocol',
                triggerPortStart: 'Device/WebAccesses/PortTrigger/PortTrigger[@uid="#"]/Trigger/DstPortStart',
                triggerPortEnd: 'Device/WebAccesses/PortTrigger/PortTrigger[@uid="#"]/Trigger/DstPortEnd',
                triggerProtocol: 'Device/WebAccesses/PortTrigger/PortTrigger[@uid="#"]/Trigger/Protocol'
            }
        },
        smartinterfaceRRM: {
            enable: "Device/Services/SmartInterface/Enable"
        }
    },
    wan: {
        settings: {
            wanProvisioningMode: "Device/Managers/Network/WanProvisioningMode",
            ipv4: {
                ipAddress: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address/IPAddress',
                leaseTime: 'Device/DHCPv4/Clients/Client[Alias="DHCLIENT"]/LeaseDuration',
                leaseTimeRemaining: 'Device/DHCPv4/Clients/Client[Alias="DHCLIENT"]/LeaseTimeRemaining',
                defaultGateway: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address/IPGateway',
                dnsServer: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/Dns'
            }
        }
    },
    internetConnectivity: {
        ppp: {
            username: "Device/PPP/Interfaces/Interface[Alias='PPP_DATA']/Username",
            password: "Device/PPP/Interfaces/Interface[Alias='PPP_DATA']/Password"
        },
        routerAdvertisement: {
            managed: "Device/RouterAdvertisement/InterfaceSettings/InterfaceSetting[@uid='1']/AdvManagedFlag",
            other: "Device/RouterAdvertisement/InterfaceSettings/InterfaceSetting[@uid='1']/AdvOtherConfigFlag"
        },
        ipv6: {
            enable: "Device/IP/IPv6Enable",
            ipStatus: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Addresses/IPv6Address[@uid="1"]/IPAddressStatus',
            ipOrigin: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Addresses/IPv6Address[@uid="1"]/Origin',
            delegatedprefix: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv6Prefixes/IPv6Prefix[Alias="ULA_LAN"]/Prefix',
            delegatedPrefixes: "Device/IP/Interfaces/Interface[Alias='IP_DATA']/IPv6Prefixes",
            lanIPv6: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv6Addresses/IPv6Address[Alias="LINK_LOCAL"]/IPAddress',
            wanIPv6: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Addresses',
            lanIPv6GUA: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv6Addresses',
            wanIPv6Internal: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Addresses',
            enableDnsDhcp1: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="DHCPv6_1"]/Enable',
            enableDnsDhcp2: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="DHCPv6_2"]/Enable',
            dns1Dhcp: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="DHCPv6_1"]/DNSServer',
            dns2Dhcp: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="DHCPv6_2"]/DNSServer',
            enableDnsStatic1: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC6_1"]/Enable',
            enableDnsStatic2: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC6_2"]/Enable',
            dns1Static: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC6_1"]/DNSServer',
            dns2Static: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC6_2"]/DNSServer',
            preferedIPDATAAddr: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Addresses/IPv6Address[IPAddressStatus="PREFERRED"]',
            wanLinkLocal: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Addresses/IPv6Address[Alias="LINK_LOCAL"]/IPAddress',
            dnsV6: 'Device/DNS/Relay/Forwardings/Forwarding[Status="ENABLED"]/DNSServer',
            defaultGateway: 'Device/Routing/Routers/Router[Alias="EROUTER"]',
            DSLiteStatus: 'Device/DSLite/InterfaceSettings/InterfaceSetting[Alias="DSLITE0"]/Status',
            AFTRFQDN: 'Device/DSLite/InterfaceSettings/InterfaceSetting[Alias="DSLITE0"]/EndpointName',
            AFTRAddress: 'Device/DSLite/InterfaceSettings/InterfaceSetting[Alias="DSLITE0"]/EndpointAddressInUse',
            macAddress: 'Device/Ethernet/Links/Link[Alias="ETHLNK_DATA"]/MACAddress',
            enableFirewall: "Device/Firewall/Firewallv6Enable",
            leaseTime: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Prefixes/IPv6Prefix[@uid="1"]/ValidLifetime',
            serverLeaseExpire: "Device/DHCPv6/Clients/Client[Alias='DHCLIENT6_DATA']/Servers/Server[last()]",
            lifeTime: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Addresses/IPv6Address[@uid="1"]/ValidLifetime',
            vlan: "Device/Ethernet/VLANTerminations/VLANTermination[Alias='VLAN_DATA']/VLANID",
            bridgeMode: "Device/Managers/NetworkData/BridgedMode"
        },
        wan: {
            vlanTerminations: "Device/Ethernet/VLANTerminations",
            ethernetWanInterfaces: 'Device/Ethernet/Interfaces/Interface[Role="WAN"]',
            availableLines: "Device/DSL/Lines",
            availableBonding: "Device/DSL/BondingGroups",
            relatedChannel: 'Device/DSL/Channels/Channel[LowerLayers="Device/DSL/Lines/Line[#]"]',
            globalWanMode: "Device/Managers/NetworkData/GlobalWanMode",
            dslWanInterfaces: {
                standardUsed: 'Device/DSL/Lines/Line[Alias="DSL0"]/StandardUsed',
                enable: 'Device/DSL/Lines/Line[@uid="#"]/Enable',
                currentProfile: 'Device/DSL/Lines/Line[@uid="#"]/CurrentProfile',
                standardsSupported: 'Device/DSL/Lines/Line[@uid="#"]/StandardsSupported',
                UpStream: 'Device/DSL/Channels/Channel[@uid="#"]/ActualInterleavingDelayus',
                DownStream: 'Device/DSL/Channels/Channel[@uid="#"]/ActualInterleavingDelay',
                bondingEnable: 'Device/DSL/BondingGroups/BondingGroup[@uid="#"]/Enable'
            },
            PPPoE: {
                search: {
                    pppInterfaces: "Device/PPP/Interfaces",
                    ipInterfaces: "Device/IP/Interfaces",
                    ethLinks: "Device/Ethernet/Links",
                    dhcpClients: "Device/DHCPv4/Clients"
                },
                save: {
                    IfcName: "Device/PPP/Interfaces/Interface[Alias='#']/IfcName",
                    Enable: "Device/PPP/Interfaces/Interface[Alias='#']/Enable",
                    TransportType: "Device/PPP/Interfaces/Interface[Alias='#']/TransportType",
                    Username: "Device/PPP/Interfaces/Interface[Alias='#']/Username",
                    Password: "Device/PPP/Interfaces/Interface[Alias='#']/Password",
                    AuthenticationProtocol: "Device/PPP/Interfaces/Interface[Alias='#']/AuthenticationProtocol",
                    LowerLayers: "Device/PPP/Interfaces/Interface[Alias='#']/LowerLayers",
                    MaxMRUSize: "Device/PPP/Interfaces/Interface[Alias='#']/MaxMRUSize",
                    ServiceName: "Device/PPP/Interfaces/Interface[Alias='#']/PPPoE/ServiceName",
                    IPAddress: "Device/IP/Interfaces/Interface[Alias='#']/IPv4Addresses/IPv4Address[@uid='1']/IPAddress",
                    SubnetMask: "Device/IP/Interfaces/Interface[Alias='#']/IPv4Addresses/IPv4Address[@uid='1']/SubnetMask",
                    IPGateway: "Device/IP/Interfaces/Interface[Alias='#']/IPv4Addresses/IPv4Address[@uid='1']/IPGateway",
                    AddressingType: "Device/IP/Interfaces/Interface[Alias='#']/IPv4Addresses/IPv4Address[@uid='1']/AddressingType",
                    VLANID: "Device/Ethernet/VLANTerminations/VLANTermination[Alias='#']/VLANID"
                }
            },
            IPoE: {
                search: {
                    ipInterfaces: "Device/IP/Interfaces",
                    pppInterfaces: "Device/PPP/Interfaces",
                    ethLinks: "Device/Ethernet/Links",
                    dhcpClients: "Device/DHCPv4/Clients"
                },
                save: {
                    Enable: "Device/IP/Interfaces/Interface[Alias='#']/Enable",
                    IfcName: "Device/IP/Interfaces/Interface[Alias='#']/IfcName",
                    LowerLayers: "Device/IP/Interfaces/Interface[Alias='#']/LowerLayers",
                    IPAddress: "Device/IP/Interfaces/Interface[Alias='#']/IPv4Addresses/IPv4Address[@uid='1']/IPAddress",
                    SubnetMask: "Device/IP/Interfaces/Interface[Alias='#']/IPv4Addresses/IPv4Address[@uid='1']/SubnetMask",
                    IPGateway: "Device/IP/Interfaces/Interface[Alias='#']/IPv4Addresses/IPv4Address[@uid='1']/IPGateway",
                    AddressingType: "Device/IP/Interfaces/Interface[Alias='#']/IPv4Addresses/IPv4Address[@uid='1']/AddressingType",
                    VLANID: "Device/Ethernet/VLANTerminations/VLANTermination[Alias='#']/VLANID",
                    optionValue: 'Device/DHCPv4/Clients/Client[Interface="#"]/SentOptions/SentOption[Alias="$"]/Value',
                    dhcpv4Client: 'Device/DHCPv4/Clients/Client[Interface="#"]/Enable'
                }
            },
            ptm: {
                availablePTMLinks: "Device/PTM/Links",
                ptmEnable: 'Device/PTM/Links/Link[Alias="#"]/Enable',
                ptmIfcName: 'Device/PTM/Links/Link[Alias="#"]/IfcName'
            },
            atm: {
                availableATMLinks: "Device/ATM/Links",
                MACAddress: "Device/Ethernet/Links/Link[LowerLayers='#']/MACAddress",
                base: 'Device/ATM/Links/Link[Alias="#"]/'
            },
            eth: {
                interfaces: 'Device/Ethernet/Interfaces/Interface[Role="WAN"]',
                links: 'Device/Ethernet/Links/Link[Status="UP"]'
            },
            sfp: {
                interfaces: "Device/SFP/Interfaces/Interface[@uid='1']"
            }
        },
        qos: {
            queue: "Device/QoS/Queues",
            schedulerAlgorithmList: 'Device/QoS/Queues/Queue[@uid="#"]/SchedulerAlgorithm',
            interfaces: {
                ethernetLinks: "Device/Ethernet/Links",
                ptmLinks: "Device/PTM/Links",
                atmLinks: "Device/ATM/Links"
            },
            update: {
                enable: 'Device/QoS/Queues/Queue[@uid="#"]/Enable',
                alias: 'Device/QoS/Queues/Queue[@uid="#"]/Alias',
                interfac: 'Device/QoS/Queues/Queue[@uid="#"]/Interface',
                precedence: 'Device/QoS/Queues/Queue[@uid="#"]/Precedence',
                weigth: 'Device/QoS/Queues/Queue[@uid="#"]/Weight',
                schedulerAlgorithm: 'Device/QoS/Queues/Queue[@uid="#"]/SchedulerAlgorithm',
                minimRate: 'Device/QoS/Queues/Queue[@uid="#"]/MinimRate',
                shapingRate: 'Device/QoS/Queues/Queue[@uid="#"]/ShapingRate',
                shapingBurstSize: 'Device/QoS/Queues/Queue[@uid="#"]/ShapingBurstSize'
            },
            remove: 'Device/QoS/Queues/Queue[@uid="#"]',
            classifications: {
                allList: "Device/QoS/Classifications",
                update: {
                    base: 'Device/QoS/Classifications/Classification[@uid="#"]/'
                },
                remove: 'Device/QoS/Classifications/Classification[@uid="#"]'
            },
            shaper: {
                allList: {
                    list: "Device/QoS/Shapers",
                    dscpMark: "Device/QoS/DefaultDSCPMark"
                },
                update: {
                    base: 'Device/QoS/Shapers/Shaper[@uid="#"]/'
                },
                remove: 'Device/QoS/Shapers/Shaper[@uid="#"]'
            },
            policer: {
                list: "Device/QoS/Policers",
                removeItem: 'Device/QoS/Policers/Policer[@uid="#"]',
                update: {
                    Enable: 'Device/QoS/Policers/Policer[@uid="#"]/Enable',
                    CommittedRate: 'Device/QoS/Policers/Policer[@uid="#"]/CommittedRate',
                    CommittedBurstSize: 'Device/QoS/Policers/Policer[@uid="#"]/CommittedBurstSize',
                    ExcessBurstSize: 'Device/QoS/Policers/Policer[@uid="#"]/ExcessBurstSize',
                    PeakRate: 'Device/QoS/Policers/Policer[@uid="#"]/PeakRate',
                    PeakBurstSize: 'Device/QoS/Policers/Policer[@uid="#"]/PeakBurstSize',
                    MeterType: 'Device/QoS/Policers/Policer[@uid="#"]/MeterType',
                    ConformingAction: 'Device/QoS/Policers/Policer[@uid="#"]/ConformingAction',
                    PartialConformingAction: 'Device/QoS/Policers/Policer[@uid="#"]/PartialConformingAction',
                    NonConformingAction: 'Device/QoS/Policers/Policer[@uid="#"]/NonConformingAction'
                }
            }
        },
        mptcp: {
            status: {
                status: "Device/Services/Mptcp/Status",
                enable: "Device/Services/Mptcp/Enable",
                showMPTCPButton: "Device/Services/Mptcp/ShowMPTCPButton",
                showMPTCPPage: "Device/Services/Mptcp/ShowMPTCPPage"
            },
            kpiInformation: {
                establishedSessionCount: "Device/Services/Mptcp/KPI_information/Established_session_count",
                additionalSubflowCount: "Device/Services/Mptcp/KPI_information/Additional_subflow_count",
                sessionAdditionalSubflow: "Device/Services/Mptcp/KPI_information/Session_with_additional_subflow",
                closedSessionCount: "Device/Services/Mptcp/KPI_information/Closed_session_count"
            },
            statistics: {
                totalBytesSent: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/BytesSent",
                totalBytesReceived: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/BytesReceived",
                totalPacketsSent: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/PacketsSent",
                totalPacketsReceived: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/PacketsReceived",
                totalErrosSent: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/ErrorsSent",
                totalErrosReceived: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/ErrorsReceived",
                totalDiscardPacketsSent: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/DiscardPacketsSent",
                totalDiscardPacketsReceived: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/DiscardPacketsReceived",
                totalUnicastPacketsSent: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/UnicastPacketsSent",
                totalUnicastPacketsReceived: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/UnicastPacketsReceived",
                totalMulticastPacketsSent: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/MulticastPacketsSent",
                totalMulticastPacketsReceived: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/MulticastPacketsReceived",
                totalBroadcastPacketsSent: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/BroadcastPacketsSent",
                totalBroadcastPacketsReceived: "Device/IP/Interfaces/Interface[Alias='IP_DATA_MPTCP']/Stats/BroadcastPacketsReceived"
            }
        },
        backup3g: {
            hsxpalte: {
                basicConfig: {
                    enable: 'Device/Services/WANBackup/Interfaces/Interface[Alias="WANBACKUP_0"]/Enable',
                    pinCode: "Device/Hsxpalte/Dongles/Dongle[@uid='1']/PIN",
                    apn: "Device/Hsxpalte/Dongles/Dongle[@uid='1']/Apn",
                    authProtocol: 'Device/PPP/Interfaces/Interface[Alias="PPP_DATA"]/AuthenticationProtocol',
                    username: 'Device/PPP/Interfaces/Interface[Alias="PPP_DATA"]/Username',
                    password: 'Device/PPP/Interfaces/Interface[Alias="PPP_DATA"]/Password'
                },
                statusInfo: {
                    state: "Device/Hsxpalte/Dongles/Dongle[@uid='1']/State",
                    connectionUptime: "Device/Hsxpalte/Dongles/Dongle[@uid='1']/ConnectionUptime",
                    signalLevel: "Device/Hsxpalte/Dongles/Dongle[@uid='1']/ModemSignal",
                    manufacturer: "Device/Hsxpalte/Dongles/Dongle[@uid='1']/Manufacturer"
                },
                advancedConfig: {
                    timeBeforeSwitch3g: 'Device/Services/WANBackup/Interfaces/Interface[Alias="WANBACKUP_0"]/ConnectionUp',
                    pukCode: "Device/Hsxpalte/Dongles/Dongle[@uid='1']/PUK"
                }
            },
            cellular: {
                basicConfig: {
                    enable: "Device/Cellular/Dongles/Dongle[@uid='1']/Enable",
                    pinCode: "Device/Cellular/Dongles/Dongle[@uid='1']/Interfaces/USIM/PIN",
                    apnList: "Device/Cellular/AccessPoints/AccessPoint",
                    puk: ""
                },
                statusInfo: {
                    state: "Device/Cellular/Dongles/Dongle[@uid='1']/State",
                    signalLevel: "Device/Cellular/Dongles/Dongle[@uid='1']/ModemSignal",
                    mobTechStatus: "Device/Cellular/Dongles/Dongle[@uid='1']/ConnectionType",
                    mtstatus: "Device/Cellular/Dongles/Dongle[@uid='1']/ModemStatus",
                    manufacturer: "Device/Cellular/Dongles/Dongle[@uid='1']/Manufacturer",
                    model: "Device/Cellular/Dongles/Dongle[@uid='1']/Model",
                    modemVersion: "",
                    internetAvailability: "Device/IP/Interfaces/Interface[Alias='IP_USB_MODEM']/Status",
                    imei: "Device/Cellular/Dongles/Dongle[@uid='1']/Imei",
                    mainWanStatus: "Device/IP/Interfaces/Interface[Alias='IP_DATA']/Status",
                    rsrq: "",
                    rsrp: "",
                    rssi: "",
                    sinr: "",
                    bandInfo: "",
                    snr: "",
                    mptcpEnable: "",
                    mptcpValue: "",
                    failoverEnable: "",
                    failoverValue: ""
                },
                advancedConfig: {
                    timeBeforeSwitch3g: 'Device/Services/WANBackup/Interfaces/Interface[Alias="WANBACKUP_0"]/ConnectionUp'
                }
            },
            cellularSave: {
                apnEnableDifferent: 'Device/Cellular/AccessPoints/AccessPoint[Alias!="#alias#"]/Enable',
                apnGenericField: 'Device/Cellular/AccessPoints/AccessPoint[Alias="#alias#"]/#field#'
            }
        },
        mapT: {
            bRelayIpv6Prefix: "Device/MAP/Domains/Domain[Alias='DOMAIN-MAPT']/BRIPv6Prefix",
            ipv6PrefixRule: "Device/MAP/Domains/Domain[Alias='DOMAIN-MAPT']/Rules/Rule[Alias='MAPT-BMR']/IPv6Prefix",
            ipv4PrefixRule: "Device/MAP/Domains/Domain[Alias='DOMAIN-MAPT']/Rules/Rule[Alias='MAPT-BMR']/IPv4Prefix",
            psidOffset: "Device/MAP/Domains/Domain[Alias='DOMAIN-MAPT']/PSIDOffset",
            psidLength: "Device/MAP/Domains/Domain[Alias='DOMAIN-MAPT']/PSIDLength",
            psid: "Device/MAP/Domains/Domain[Alias='DOMAIN-MAPT']/PSID",
            sharedIPv4Address: "Device/MAP/Domains/Domain[Alias='DOMAIN-MAPT']/SharedIPv4Address"
        },
        vlan: {
            vlanTerminations: "Device/Ethernet/VLANTerminations",
            removeItem: 'Device/Ethernet/VLANTerminations/VLANTermination[@uid="#"]',
            update: {
                Enable: 'Device/Ethernet/VLANTerminations/VLANTermination[@uid="#"]/Enable',
                Alias: 'Device/Ethernet/VLANTerminations/VLANTermination[@uid="#"]/Alias',
                VLANID: "Device/Ethernet/VLANTerminations/VLANTermination[new_index]/VLANID",
                IngressPriorityMappings: 'Device/Ethernet/VLANTerminations/VLANTermination[@uid="#"]/IngressPriorityMappings',
                EgressPriorityMappings: 'Device/Ethernet/VLANTerminations/VLANTermination[@uid="#"]/EgressPriorityMappings'
            }
        }
    },
    broadband: {
        ipv4Status: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/Status',
        uptime: 'Device/Ethernet/Interfaces/Interface[Role="WAN"]/LastChange',
        ipv6Status: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Addresses/IPv6Address[Alias="DHCPV6_2"]/Status',
        dataTransferedSent: "TBD",
        dataTransferedReceived: "TBD",
        ipv4Address: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/IPAddress',
        ipv6Address: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Addresses/IPv6Address[Alias="DHCPV6_2"]/IPAddress',
        primaryDns: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC_1"]/DNSServer',
        secondaryDns: 'Device/DNS/Relay/Forwardings/Forwarding[Alias="STATIC_2"]/DNSServer',
        ipv6AddressServer: "TBD",
        pvcInfo: "TBD",
        type: "TBD",
        ppp: {
            username: 'Device/PPP/Interfaces/Interface[Alias="PPP_DATA"]/Username',
            password: 'Device/PPP/Interfaces/Interface[Alias="PPP_DATA"]/Password',
            mode: "TBD"
        }
    },
    ethernet: {
        port1: {
            status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Status',
            connectionSpeed: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/MaxBitRate',
            duplexMode: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Diagnostics/CurrentDuplexMode',
            packetsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/PacketsReceived',
            bytesreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/BytesReceived',
            errorsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/ErrorsReceived',
            discardpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/DiscardPacketsReceived',
            packetssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/PacketsSent',
            bytessent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/BytesSent',
            errorssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/ErrorsSent',
            discardpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/DiscardPacketsSent',
            unicastpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/UnicastPacketsSent',
            unicastpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/UnicastPacketsReceived',
            multicastpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/MulticastPacketsSent',
            multicastpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/MulticastPacketsReceived',
            broadcastpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/BroadcastPacketsSent',
            broadcastpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/BroadcastPacketsReceived',
            currentBitRate: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Diagnostics/CurrentBitRate'
        },
        port2: {
            status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Status',
            connectionSpeed: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/MaxBitRate',
            duplexMode: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Diagnostics/CurrentDuplexMode',
            packetsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/PacketsReceived',
            bytesreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/BytesReceived',
            errorsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/ErrorsReceived',
            discardpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/DiscardPacketsReceived',
            packetssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/PacketsSent',
            bytessent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/BytesSent',
            errorssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/ErrorsSent',
            discardpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/DiscardPacketsSent',
            unicastpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/UnicastPacketsSent',
            unicastpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/UnicastPacketsReceived',
            multicastpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/MulticastPacketsSent',
            multicastpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/MulticastPacketsReceived',
            broadcastpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/BroadcastPacketsSent',
            broadcastpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/BroadcastPacketsReceived',
            currentBitRate: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Diagnostics/CurrentBitRate'
        },
        port3: {
            status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Status',
            connectionSpeed: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/MaxBitRate',
            duplexMode: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Diagnostics/CurrentDuplexMode',
            packetsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/PacketsReceived',
            bytesreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/BytesReceived',
            errorsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/ErrorsReceived',
            discardpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/DiscardPacketsReceived',
            packetssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/PacketsSent',
            bytessent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/BytesSent',
            errorssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/ErrorsSent',
            discardpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/DiscardPacketsSent',
            unicastpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/UnicastPacketsSent',
            unicastpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/UnicastPacketsReceived',
            multicastpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/MulticastPacketsSent',
            multicastpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/MulticastPacketsReceived',
            broadcastpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/BroadcastPacketsSent',
            broadcastpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/BroadcastPacketsReceived',
            currentBitRate: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Diagnostics/CurrentBitRate'
        },
        port4: {
            status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Status',
            connectionSpeed: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/MaxBitRate',
            duplexMode: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Diagnostics/CurrentDuplexMode',
            packetsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/PacketsReceived',
            bytesreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/BytesReceived',
            errorsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/ErrorsReceived',
            discardpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/DiscardPacketsReceived',
            packetssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/PacketsSent',
            bytessent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/BytesSent',
            errorssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/ErrorsSent',
            discardpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/DiscardPacketsSent',
            unicastpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/UnicastPacketsSent',
            unicastpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/UnicastPacketsReceived',
            multicastpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/MulticastPacketsSent',
            multicastpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/MulticastPacketsReceived',
            broadcastpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/BroadcastPacketsSent',
            broadcastpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/BroadcastPacketsReceived',
            currentBitRate: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Diagnostics/CurrentBitRate'
        }
    },
    ethernetDevice: {
        devicesList: 'Device/Hosts/Hosts/Host[@uid="#"]',
        localDomain: "Device/DNS/Relay/LocalDomains"
    },
    dhcpLeases: {
        dhcpLeasesList: 'Device/Hosts/Hosts/Host[AddressSource="DHCP"]'
    },
    stats: {
        connectivity: {
            addressingType: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/AddressingType'
        },
        sfp: {
            stats: "Device/SFP/Interfaces/Interface/Stats",
            status: "Device/SFP/Interfaces/Interface/Status",
            sfpStatus: 'Device/SFP/Interfaces/Interface[Alias="SFP0"]/Status',
            sfpCurrentSpeed: 'Device/SFP/Interfaces/Interface[Alias="SFP0"]/CurrentSpeed'
        },
        ptm: "Device/PTM/Links",
        atm: "Device/ATM/Links",
        ppp: "Device/PPP/Interfaces",
        lan: {
            eth1: {
                packetsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/PacketsReceived',
                bytesreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/BytesReceived',
                errorsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/ErrorsReceived',
                discardpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/DiscardPacketsReceived',
                packetssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/PacketsSent',
                bytessent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/BytesSent',
                errorssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/ErrorsSent',
                discardpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Stats/DiscardPacketsSent',
                status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Status'
            },
            eth2: {
                packetsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/PacketsReceived',
                bytesreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/BytesReceived',
                errorsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/ErrorsReceived',
                discardpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/DiscardPacketsReceived',
                packetssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/PacketsSent',
                bytessent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/BytesSent',
                errorssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/ErrorsSent',
                discardpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Stats/DiscardPacketsSent',
                status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Status'
            },
            eth3: {
                packetsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/PacketsReceived',
                bytesreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/BytesReceived',
                errorsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/ErrorsReceived',
                discardpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/DiscardPacketsReceived',
                packetssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/PacketsSent',
                bytessent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/BytesSent',
                errorssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/ErrorsSent',
                discardpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Stats/DiscardPacketsSent',
                status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Status'
            },
            eth4: {
                packetsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/PacketsReceived',
                bytesreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/BytesReceived',
                errorsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/ErrorsReceived',
                discardpacketsreceived: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/DiscardPacketsReceived',
                packetssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/PacketsSent',
                bytessent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/BytesSent',
                errorssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/ErrorsSent',
                discardpacketssent: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Stats/DiscardPacketsSent',
                status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Status'
            },
            wl0: {
                packetsreceived: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/Stats/PacketsReceived',
                bytesreceived: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/Stats/BytesReceived',
                errorsreceived: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/Stats/ErrorsReceived',
                discardpacketsreceived: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/Stats/DiscardPacketsReceived',
                packetssent: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/Stats/PacketsSent',
                bytessent: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/Stats/BytesSent',
                errorssent: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/Stats/ErrorsSent',
                discardpacketssent: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/Stats/DiscardPacketsSent',
                status: 'Device/WiFi/SSIDs/SSID[Alias="WL_PRIV"]/Status'
            },
            wifi0: {
                packetsreceived: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/Stats/PacketsReceived',
                bytesreceived: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/Stats/BytesReceived',
                errorsreceived: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/Stats/ErrorsReceived',
                discardpacketsreceived: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/Stats/DiscardPacketsReceived',
                packetssent: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/Stats/PacketsSent',
                bytessent: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/Stats/BytesSent',
                errorssent: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/Stats/ErrorsSent',
                discardpacketssent: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/Stats/DiscardPacketsSent',
                status: 'Device/WiFi/SSIDs/SSID[Alias="WL_VIDEO_5G"]/Status'
            }
        },
        wan: {
            conexionStatus: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/Status',
            conexionIpv6Status: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Addresses/IPv6Address[IPAddressStatus="PREFERRED" and Origin="DHCPV6"]/Status',
            backupUSBStatus: 'Device/IP/Interfaces/Interface[Alias="IP_USB_MODEM"]/Status',
            backupWanStatus: 'Device/IP/Interfaces/Interface[Alias="IP_BACKUP"]/Status',
            wanStatus: 'Device/Ethernet/Interfaces/Interface[Role="WAN"]/Status',
            connectionTime: 'Device/Ethernet/Interfaces/Interface[Role="WAN"]/LastChange',
            ethernetBitRate: 'Device/Ethernet/Interfaces/Interface[Role="WAN"]/Diagnostics/CurrentBitRate',
            stats: "Device/IP/Interfaces",
            dslStatus: 'Device/DSL/Lines/Line[Enable="true"]/Status'
        },
        xdsl: {
            erroredSeconds: "Device/DSL/Lines/Line[Alias='DSL0']/Stats/Total/ErroredSecs",
            severelyErroredSecs: "Device/DSL/Lines/Line[Alias='DSL0']/Stats/Total/SeverelyErroredSecs",
            reSynchronisations: "Device/DSL/Lines/Line[Alias='DSL0']/Stats/Total/Retries",
            standard: 'Device/DSL/Lines/Line[Alias="DSL0"]/StandardUsed',
            linkEncapsulation: 'Device/DSL/Channels/Channel[LowerLayers="Device/DSL/Lines/Line[DSL0]"]/LinkEncapsulationUsed',
            status: 'Device/DSL/Lines/Line[Alias="DSL0"]/Status',
            linkStatus: 'Device/DSL/Lines/Line[Alias="DSL0"]/LinkStatus',
            lineEncoding: 'Device/DSL/Lines/Line[Alias="DSL0"]/LineEncoding',
            dslDownstream: 'Device/DSL/Channels/Channel[@uid="1"]/DownstreamCurrRate',
            dslUpstream: 'Device/DSL/Channels/Channel[@uid="1"]/UpstreamCurrRate',
            connectionTimeDsl: 'Device/DSL/Lines/Line[@uid="1"]/LastChange',
            numeric: {
                lossOfFraming: 'Device/DSL/Channels/Channel[@uid="1"]/Stats/Showtime/LossOfFraming',
                XTURFECErrors: 'Device/DSL/Channels/Channel[@uid="1"]/Stats/Showtime/XTURFECErrors',
                XTUCFECErrors: 'Device/DSL/Channels/Channel[@uid="1"]/Stats/Showtime/XTUCFECErrors',
                XTURCRCErrors: 'Device/DSL/Channels/Channel[@uid="1"]/Stats/Showtime/XTURCRCErrors',
                XTUCCRCErrors: 'Device/DSL/Channels/Channel[@uid="1"]/Stats/Showtime/XTUCCRCErrors',
                packetsReceived: 'Device/DSL/Lines/Line[Alias="DSL0"]/Stats/PacketsReceived',
                packetsSent: 'Device/DSL/Lines/Line[Alias="DSL0"]/Stats/PacketsSent',
                bytesReceived: 'Device/DSL/Lines/Line[Alias="DSL0"]/Stats/BytesReceived',
                bytesSent: 'Device/DSL/Lines/Line[Alias="DSL0"]/Stats/BytesSent',
                actualRateDown: 'Device/DSL/Channels/Channel[@uid="1"]/DownstreamCurrRate',
                actualRateUp: 'Device/DSL/Channels/Channel[@uid="1"]/UpstreamCurrRate',
                actualRateDown2: 'Device/DSL/Channels/Channel[@uid="2"]/DownstreamCurrRate',
                actualRateUp2: 'Device/DSL/Channels/Channel[@uid="2"]/UpstreamCurrRate'
            }
        }
    },
    voice: {
        answeringMachine: {
            lineLink: "Device/Services/VoiceServices/VoiceService[@uid='1']/CallControl/Mailboxs/Mailbox[#]",
            mailbox: "Device/Services/VoiceServices/VoiceService[@uid=1]/CallControl/Mailboxs",
            oneMailbox: 'Device/Services/VoiceServices/VoiceService[@uid=1]/CallControl/Mailboxs/Mailbox[@uid="#uid#"]',
            messages: "Device/Services/VoiceServices/VoiceService[@uid=1]/Messages",
            oneMessage: 'Device/Services/VoiceServices/VoiceService[@uid=1]/Messages/Message[@uid="#uid#"]',
            updateMailbox: {
                Alias: 'Device/Services/VoiceServices/VoiceService[@uid=1]/CallControl/Mailboxs/Mailbox[@uid="#"]/Alias',
                Enable: 'Device/Services/VoiceServices/VoiceService[@uid=1]/CallControl/Mailboxs/Mailbox[@uid="#"]/Enable',
                MaxMessageTime: 'Device/Services/VoiceServices/VoiceService[@uid=1]/CallControl/Mailboxs/Mailbox[@uid="#"]/MaxMessageTime',
                Mode: 'Device/Services/VoiceServices/VoiceService[@uid=1]/CallControl/Mailboxs/Mailbox[@uid="#"]/Mode',
                SimpleUnconditionalGreeting: 'Device/Services/VoiceServices/VoiceService[@uid=1]/CallControl/Mailboxs/Mailbox[@uid="#"]/SimpleGreetings/UnconditionalGreeting',
                SimpleOnBusyGreeting: 'Device/Services/VoiceServices/VoiceService[@uid=1]/CallControl/Mailboxs/Mailbox[@uid="#"]/SimpleGreetings/OnBusyGreeting',
                SimpleNoAnswerGreeting: 'Device/Services/VoiceServices/VoiceService[@uid=1]/CallControl/Mailboxs/Mailbox[@uid="#"]/SimpleGreetings/OnNoAnswerGreeting',
                RecordingUnconditionalGreeting: 'Device/Services/VoiceServices/VoiceService[@uid=1]/CallControl/Mailboxs/Mailbox[@uid="#"]/RecordingGreetings/UnconditionalGreeting',
                RecordingOnBusyGreeting: 'Device/Services/VoiceServices/VoiceService[@uid=1]/CallControl/Mailboxs/Mailbox[@uid="#"]/RecordingGreetings/OnBusyGreeting',
                RecordingNoAnswerGreeting: 'Device/Services/VoiceServices/VoiceService[@uid=1]/CallControl/Mailboxs/Mailbox[@uid="#"]/RecordingGreetings/OnNoAnswerGreeting',
                EMailAddress: "Device/Services/VoiceServices/VoiceService[@uid='1']/CallControl/Mailboxs/Mailbox[@uid='#']/EMailAddress"
            },
            mailServer: {
                Enable: "Device/Services/SendMail/Enable",
                Server: "Device/Services/SendMail/Server",
                Port: "Device/Services/SendMail/Port",
                Encryption: "Device/Services/SendMail/Encryption",
                Protocol: "Device/Services/SendMail/Protocol",
                Login: "Device/Services/SendMail/Login",
                Password: "Device/Services/SendMail/Password"
            }
        },
        sip: {
            general: "Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles",
            voiceStatus: {
                dhcp: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceStatus/TelephonyDhcp",
                security: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceStatus/TelephonySecurity",
                tftp: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceStatus/TelephonyTftp",
                callServerReg: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceStatus/TelephonyCallServerReg",
                regComplete: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceStatus/TelephonyRegComplete"
            },
            phyInterfaces: "Device/Services/VoiceServices/VoiceService[@uid=1]/PhyInterfaces",
            endPoints: {
                Description: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="#idEndPoint#"]/Description',
                ForceDTMFInband: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="#idEndPoint#"]/ForceDTMFInband',
                FlashhookEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="#idEndPoint#"]/FlashhookEnable'
            },
            profile: {
                enable: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Enable',
                type: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/SignalingProtocol',
                localSelection: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Region',
                voipDialpan: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/DigitMap',
                sipProxyPort: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/SIP/ProxyServerPort',
                sipRegisterPort: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/SIP/RegistrarServerPort',
                sipUserAgentAddress: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/SIP/UserAgentDomain',
                sipUserAgentPort: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/SIP/UserAgentPort',
                sipOutboundAddress: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/SIP/OutboundProxy',
                sipOutboundPort: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/SIP/OutboundProxyPort',
                sipOutboundInternalAddress: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/SIP/OutboundProxyInternal',
                enableT38: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/FaxT38/Enable',
                enableV18: "",
                registrationExpireTimeout: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/SIP/RegisterExpires',
                dscpSIP: "",
                dscpRTP: "",
                dtmfRelay: "",
                hookFlashRelay: "",
                sipTrasportProtocol: "",
                cidSignalProtocol: "",
                enableSipTagMatching: "",
                musicServer: "",
                musicServerPort: ""
            },
            line: {
                enable: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/Enable',
                authName: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/SIP/AuthUserName',
                directoryNumber: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/DirectoryNumber',
                authPassword: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/SIP/AuthPassword',
                preferredPeriod: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/Codec/Lists/List[@uid="#codec#"]/PreferredPacketisationPeriod',
                preferredCodecs: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/Codec/Lists/List[@uid="#codec#"]/Codec',
                priority: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/Codec/Lists/List[@uid="#codec#"]/Priority',
                enableCodec: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/Codec/Lists/List[@uid="#codec#"]/Enable',
                callWaiting: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallWaitingEnable',
                mwi: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/MWIEnable',
                uri: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/SIP/URI',
                VoiceMail: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/VoiceMail',
                DTMF: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/DTMFMethod',
                callBarring: "",
                callBarringPin: "",
                callBarringDigitMap: "",
                warmLine: "",
                warmLineNumber: "",
                anonymousCallBlocking: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/AnonymousCallBlockEnable',
                anonymousCalling: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/AnonymousCalEnable',
                dnd: 'Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/DoNotDisturbEnable',
                CallerIDEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallerIDEnable',
                CallerIDNameEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallerIDNameEnable',
                CallerIDName: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallerIDName',
                ConferenceCallingStatus: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/ConferenceCallingStatus',
                ConferenceCallingSessionCount: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/ConferenceCallingSessionCount',
                CallWaitingEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallWaitingEnable',
                CallWaitingStatus: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallWaitingStatus',
                CallParkingEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallParkingEnable',
                CallParkingTimeout: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallParkingTimeout',
                AnonymousCallBlockEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/AnonymousCallBlockEnable',
                AnonymousCalEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/AnonymousCalEnable',
                DoNotDisturbEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/DoNotDisturbEnable',
                OutgoingCallEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/OutgoingCallEnable',
                MessageWaiting: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/MessageWaiting'
            },
            callFowarding: {
                callForwardUncondicionalEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallForwardUnconditionalEnable',
                callForwardUncondicionalNumber: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallForwardUnconditionalNumber',
                callForwardOnBusyEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallForwardOnBusyEnable',
                callForwardOnBusyNumber: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallForwardOnBusyNumber',
                callForwardOnNoAnswerEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallForwardOnNoAnswerEnable',
                callForwardOnNoAnswerNumber: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallForwardOnNoAnswerNumber',
                callForwardOnNoAnswerRingCount: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="#profile#"]/Lines/Line[@uid="#line#"]/CallingFeatures/CallForwardOnNoAnswerRingCount'
            },
            simple: {
                callerIdDateTime: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface/X_SAGEMCOM_FXS/CallerIdDateTimeEnable',
                callerIdDateTime1st: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="1"]/X_SAGEMCOM_FXS/CallerIdDateTimeEnable',
                callerIdDateTime2nd: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="2"]/X_SAGEMCOM_FXS/CallerIdDateTimeEnable'
            }
        },
        sipBasic: {
            transmitCodec: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='1']/Codec/TransmitCodec"
        },
        extraCodecPktPeriod: {
            line1: {
                codec1: "Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid=1]/Lines/Line[Name='Line1']/Codec/Lists/List[@uid=1]/PreferredPacketisationPeriod",
                codec2: "Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid=1]/Lines/Line[Name='Line1']/Codec/Lists/List[@uid=2]/PreferredPacketisationPeriod",
                codec3: "Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid=1]/Lines/Line[Name='Line1']/Codec/Lists/List[@uid=3]/PreferredPacketisationPeriod"
            },
            line2: {
                codec1: "Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid=1]/Lines/Line[Name='Line2']/Codec/Lists/List[@uid=1]/PreferredPacketisationPeriod",
                codec2: "Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid=1]/Lines/Line[Name='Line2']/Codec/Lists/List[@uid=2]/PreferredPacketisationPeriod",
                codec3: "Device/Services/VoiceServices/VoiceService[@uid=1]/VoiceProfiles/VoiceProfile[@uid=1]/Lines/Line[Name='Line2']/Codec/Lists/List[@uid=3]/PreferredPacketisationPeriod"
            }
        },
        callBlocking: {
            digitMapsAll: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/DigitMaps',
            digitMapsDelete: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/DigitMaps/DigitMap[@uid="#"]',
            digitMapsEnable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/DigitMaps/DigitMap[@uid="#"]/Enable',
            digitMapsType: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/DigitMaps/DigitMap[@uid="#"]/Type',
            digitMapsRule: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/DigitMaps/DigitMap[@uid="#"]/DigitMap',
            anonymousCallBlock: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines/Line/CallingFeatures/AnonymousCallBlockEnable',
            doNotDisturb: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines/Line/CallingFeatures/DoNotDisturbEnable'
        },
        phoneHotline: {
            callWaitingEnable: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='#line#']/CallingFeatures/CallWaitingEnable",
            hotLineWarmLineURI: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='#line#']/CallingFeatures/HotLineWarmLineURI",
            hotLineEnable: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='#line#']/CallingFeatures/HotLineEnable"
        },
        phoneMatrix: {
            lines: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines',
            phyInterfaces: "Device/Services/VoiceServices/VoiceService[@uid=1]/PhyInterfaces",
            linePhyReferenceList: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile/Lines/Line[@uid="#"]/PhyReferenceList',
            save: {
                interfacesOutGoingLine: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="#"]/OutGoingLine',
                outGoingValue: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='#']"
            }
        },
        hotmail: {
            callingFeatures: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='1']/CallingFeatures",
            warmLineEnable: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='1']/CallingFeatures/WarmLineEnable",
            hotLineWarmLineURI: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='1']/CallingFeatures/HotLineWarmLineURI",
            warmLineTimeout: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='1']/CallingFeatures/WarmLineTimeout"
        },
        sipGlobal: {
            enable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Enable',
            sipProxyServer: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/SIP/ProxyServer',
            sipUserAgentDomain: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/SIP/UserAgentDomain',
            sipOutboundProxy: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/SIP/OutboundProxy',
            sipServerRegister: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/SIP/RegistrarServer",
            line1Enable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines/Line[@uid="1"]/Enable',
            line1DirectoryNumber: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines/Line[@uid="1"]/DirectoryNumber',
            line1AuthName: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines/Line[@uid="1"]/SIP/AuthUserName',
            line1AuthPassword: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines/Line[@uid="1"]/SIP/AuthPassword',
            line2Enable: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines/Line[@uid="2"]/Enable',
            line2DirectoryNumber: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines/Line[@uid="2"]/DirectoryNumber',
            line2AuthName: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines/Line[@uid="2"]/SIP/AuthUserName',
            line2AuthPassword: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid="1"]/Lines/Line[@uid="2"]/SIP/AuthPassword'
        }
    },
    gateway: {
        connection: {
            status: {
                localipnetwork: {
                    ipv4address: "Device/IP/Interfaces/Interface[Alias='IP_BR_LAN']/IPv4Addresses/IPv4Address[Alias='IP_BR_LAN_ADDRESS']/IPAddress",
                    subnetmask: "Device/IP/Interfaces/Interface[Alias='IP_BR_LAN']/IPv4Addresses/IPv4Address[Alias='IP_BR_LAN_ADDRESS']/SubnetMask",
                    dhcpv4server: "Device/DHCPv4/Server/Enable",
                    dhcpv4leasetime: "Device/DHCPv4/Server/Pools/Pool[Alias='DEFAULT_POOL']/LeaseTime",
                    linklocalgatewayipv6: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv6Addresses/IPv6Address[Alias="LINK_LOCAL"]/IPAddress',
                    globalGatewayIpv6: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv6Addresses/IPv6Address[IPAddressStatus="PREFERRED" and Origin="DHCPV6"]/IPAddress',
                    delegatedprefix: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv6Prefixes/IPv6Prefix[Alias="LINK_LOCAL"]/Prefix',
                    dhcpipv6leasetime: "TBD",
                    ipv6dns: "TBD",
                    serverStatus: "Device/DHCPv6/Server/Enable",
                    noofclientsconnected: null,
                    dhcpBeginningAddress: "Device/DHCPv4/Server/Pools/Pool[Alias='DEFAULT_POOL']/MinAddress",
                    dhcpEndingAddress: "Device/DHCPv4/Server/Pools/Pool[Alias='DEFAULT_POOL']/MaxAddress"
                }
            }
        }
    },
    advanced: {
        localUsers: {
            usersList: "Device/Services/StorageServices/StorageService[@uid='1']/UserAccounts"
        },
        deviceDiscovery: {
            uPnP: "Device/UPnP/Device/UPnPIGD",
            advertisementPeriod: "Device/UPnP/Settings/UPnPIGD/AdvertisementInterval",
            zeroConfig: "Device/UPnP/Device/Enable",
            qoSForUPnP: "Device/UPnP/Device/UPnPQoSDevice"
        },
        mediaSharing: {
            dlna: {
                settings: "Device/UPnP/Device/UPnPMediaServer"
            }
        },
        dynamicDns: {
            clientList: "Device/Services/DynamicDNS/Clients",
            serviceProviderBase: "Device/Services/DynamicDNS/Services"
        },
        userSession: "Device/UserAccounts/Users/User[Login='#login#']/CurrentSessions/UserSession[@SessionId='#session#']",
        userRole: "Device/UserAccounts/Users/User[Login='#']/Role",
        remoteManagement: {
            users: {
                uid: "Device/UserAccounts/Users/User/@uid",
                enable: "Device/UserAccounts/Users/User/Enable",
                firstName: "Device/UserAccounts/Users/User/FirstName",
                lastName: "Device/UserAccounts/Users/User/LastName",
                login: "Device/UserAccounts/Users/User/Login",
                password: "Device/UserAccounts/Users/User/Password",
                clearTextPassword: "Device/UserAccounts/Users/User/ClearTextPassword"
            },
            usersAdd: "Device/UserAccounts/Users",
            usersDelete: 'Device/UserAccounts/Users/User[@uid="#"]',
            usersUpdate: {
                enable: 'Device/UserAccounts/Users/User[@uid="#"]/Enable',
                firstName: 'Device/UserAccounts/Users/User[@uid="#"]/FirstName',
                lastName: 'Device/UserAccounts/Users/User[@uid="#"]/LastName',
                login: 'Device/UserAccounts/Users/User[@uid="#"]/Login',
                password: 'Device/UserAccounts/Users/User[@uid="#"]/Password',
                clearTextPassword: 'Device/UserAccounts/Users/User[@uid="#"]/ClearTextPassword'
            },
            ipv4Address: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/IPAddress',
            ipv6Address: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv6Addresses/IPv6Address[Alias="DHCPV6_2"]/IPAddress',
            voipAddress: 'Device/IP/Interfaces/Interface[Alias="IP_VOIP_MNGT"]/IPv4Addresses/IPv4Address[Alias="IP_VOIP_MNGT_ADDRESS"]/IPAddress',
            httpEnable: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTP"]/Enabled',
            httpsEnable: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTPS"]/Enabled',
            telnetEnable: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="TELNET"]/Enabled',
            sshEnable: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="SSH"]/Enabled',
            telnetWan: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="TELNET"]/WANRestriction',
            sshWan: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="SSH"]/WANRestriction',
            httpLan: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTP"]/LANRestriction',
            httpsLan: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTPS"]/LANRestriction',
            httpWan: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTP"]/WANRestriction',
            httpsWan: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTPS"]/WANRestriction',
            telnetLan: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="TELNET"]/LANRestriction',
            sshLan: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="SSH"]/LANRestriction',
            httpWifi: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTP"]/WiFiRestriction',
            httpsWifi: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTPS"]/WiFiRestriction',
            httpsVoip: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTPS"]/MNGRestriction',
            telnetWifi: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="TELNET"]/WiFiRestriction',
            sshWifi: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="SSH"]/WiFiRestriction',
            httpPort: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTP"]/Port',
            httpsPort: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTPS"]/Port',
            telnetPort: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="TELNET"]/Port',
            sshPort: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="SSH"]/Port',
            remoteHostsHttp: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTP"]/HostRestrictions',
            remoteHostsHttps: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="HTTPS"]/HostRestrictions',
            remoteHostsTelnet: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="TELNET"]/HostRestrictions',
            remoteHostsSsh: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess[@Service="SSH"]/HostRestrictions',
            remoteHostsEnable: 'Device/UserAccounts/Users/User[Login="#"]/RemoteAccesses/RemoteAccess/HostRestrictions/HostRestriction/Enable',
            allUsers: {
                httpEnable: "Device/Services/RemoteAccess/HTTPEnable",
                httpsEnable: "Device/Services/RemoteAccess/HTTPSEnable",
                trustedIPs: "Device/Services/RemoteAccess/TrustedDomains"
            },
            remoteAccessSimpleData: {
                userPassword: 'Device/UserAccounts/Users/User[Login="#user#"]/Password',
                clearTextPassword: 'Device/UserAccounts/Users/User[Login="#user#"]/ClearTextPassword',
                httpsEnable: 'Device/UserAccounts/Users/User[Login="#user#"]/RemoteAccesses/RemoteAccess[@Service="#service#"]/Enabled',
                httpsPort: 'Device/UserAccounts/Users/User[Login="#user#"]/RemoteAccesses/RemoteAccess[@Service="#service#"]/Port',
                ipv4Address: 'Device/IP/Interfaces/Interface[Alias="IP_DATA"]/IPv4Addresses/IPv4Address[Alias="IP_DATA_ADDRESS"]/IPAddress',
                expirationEnable: 'Device/UserAccounts/Users/User[Login="#user#"]/RemoteAccesses/RemoteAccess[@Service="#service#"]/ExpirationEnable',
                expirationTime: 'Device/UserAccounts/Users/User[Login="#user#"]/RemoteAccesses/RemoteAccess[@Service="#service#"]/ExpirationTime'
            }
        }
    },
    runlevel: "Device/Managers/NetworkData/RunLevel",
    management: {
        tr69InternalDataPort: "Device/ManagementServer/TR69InternalData/Settings/Port",
        mobileLinks: {
            google: "Device/UserInterface/GooglePlayLink",
            apple: "Device/UserInterface/AppStoreLink"
        },
        language: "Device/UserInterface/CurrentLanguage",
        country: "Device/DeviceInfo/Country",
        accountSettings: {
            uid: 'Device/UserAccounts/Users/User[Login="#"]/@uid',
            connectionType: 'Device/UserAccounts/Users/User[Login="#"]/CurrentSessions/UserSession[@SessionId=$]/ConnectionType',
            currentSessionIp: 'Device/UserAccounts/Users/User[Login="#"]/CurrentSessions/UserSession[@SessionId=$]/RemoteAddress',
            SessionTimeout: "Device/UserInterface/Httpd/SessionTimeout",
            SessionTimeoutMSO: "Device/Managers/Network/ServiceHttpTimeout"
        },
        twonky: {
            language: "Device/UPnP/Settings/UPnPMediaServer/Language",
            AllName: "Device/UPnP/Settings/UPnPMediaServer/AllName",
            MusicNode1: "Device/UPnP/Settings/UPnPMediaServer/MusicNodes/MusicNode[@uid='1']/Attributes",
            MusicNode2: "Device/UPnP/Settings/UPnPMediaServer/MusicNodes/MusicNode[@uid='2']/Attributes",
            MusicNode3: "Device/UPnP/Settings/UPnPMediaServer/MusicNodes/MusicNode[@uid='3']/Attributes",
            MusicNode4: "Device/UPnP/Settings/UPnPMediaServer/MusicNodes/MusicNode[@uid='4']/Attributes",
            MusicNode5: "Device/UPnP/Settings/UPnPMediaServer/MusicNodes/MusicNode[@uid='5']/Attributes",
            AllTracks: "Device/UPnP/Settings/UPnPMediaServer/AllTracks",
            AllRadio: "Device/UPnP/Settings/UPnPMediaServer/AllRadio",
            PlaylistLastPlayed: "Device/UPnP/Settings/UPnPMediaServer/PlaylistLastPlayed",
            PlaylistMostPlayed: "Device/UPnP/Settings/UPnPMediaServer/PlaylistMostPlayed",
            Playlists: "Device/UPnP/Settings/UPnPMediaServer/Playlists",
            InternetRadio: "Device/UPnP/Settings/UPnPMediaServer/InternetRadio",
            RootMusic: "Device/UPnP/Settings/UPnPMediaServer/RootMusic",
            PictureNode1: "Device/UPnP/Settings/UPnPMediaServer/PictureNodes/PictureNode[@uid='1']/Attributes",
            PictureNode2: "Device/UPnP/Settings/UPnPMediaServer/PictureNodes/PictureNode[@uid='2']/Attributes",
            PictureNode3: "Device/UPnP/Settings/UPnPMediaServer/PictureNodes/PictureNode[@uid='3']/Attributes",
            AllPictures: "Device/UPnP/Settings/UPnPMediaServer/AllPictures",
            RootPicture: "Device/UPnP/Settings/UPnPMediaServer/RootPicture",
            TagsPicture: "Device/UPnP/Settings/UPnPMediaServer/TagsPicture",
            VideoNode1: "Device/UPnP/Settings/UPnPMediaServer/VideoNodes/VideoNode[@uid='1']/Attributes",
            VideoNode2: "Device/UPnP/Settings/UPnPMediaServer/VideoNodes/VideoNode[@uid='2']/Attributes",
            VideoNode3: "Device/UPnP/Settings/UPnPMediaServer/VideoNodes/VideoNode[@uid='3']/Attributes",
            AllVideos: "Device/UPnP/Settings/UPnPMediaServer/AllVideos",
            RootVideo: "Device/UPnP/Settings/UPnPMediaServer/RootVideo"
        }
    },
    mymedia: {
        name: "Device/UPnP/Settings/UPnPMediaServer/FriendlyName",
        agregation: "Device/UPnP/Settings/UPnPMediaServer/Aggregation",
        upnpMediaServerPort: "Device/UPnP/Settings/UPnPMediaServer/UPnPMediaServerPort",
        dlna: "Device/UPnP/Device/UPnPMediaServer",
        samba: {
            enable: 'Device/Services/StorageServices/StorageService[@uid="1"]/NetworkServer/SMBEnable',
            host: "Device/DNS/Client/HostName",
            localDomains: "Device/DNS/Client/LocalDomains",
            ip: 'Device/IP/Interfaces/Interface[Alias="IP_BR_LAN"]/IPv4Addresses/IPv4Address[Alias="IP_BR_LAN_ADDRESS"]/IPAddress',
            share: "Device/Services/StorageServices/StorageService[@uid='1']/LogicalVolumes/LogicalVolume[@uid='#']/Enable"
        },
        logicalVolumes: 'Device/Services/StorageServices/StorageService[@uid="1"]/LogicalVolumes/LogicalVolume[Status="ONLINE"]'
    },
    myCloud: {
        accountCloud: "Device/Services/CloudStorage/DropBox/Accounts",
        dropboxCloudUid: "Device/Services/CloudStorage/DropBox/Accounts/*",
        rootCloud: "Device/Services/CloudStorage",
        authUri: "Device/Services/CloudStorage/DropBox/AuthorizationUri"
    },
    checkFeaturesAvailable: {
        homePhoneFlat: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/Contacts/Contact/HomePhoneNumber',
        mobilePhoneFlat: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/Contacts/Contact/MobilePhoneNumber',
        workPhoneFlat: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/Contacts/Contact/WorkPhoneNumber',
        myMedia: "Device/UPnP/Settings/UPnPMediaServer/UPnPMediaServerPort",
        myCloud: "Device/Services/CloudStorage/DropBox/AuthorizationUri",
        phonebook: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/Contacts',
        phonebookNew: "Device/Contacts/Contacts",
        sip: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/VoiceProfiles/VoiceProfile[@uid=1]/Enable',
        telephoneMatrix: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface/OutGoingLine',
        wifi5g: 'Device/WiFi/Radios/Radio[Alias="RADIO5G"]/Enable',
        usb: "Device/USB/Enable",
        voicePorts: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/Lines/Line[@uid='1']/Enable",
        qos: "Device/QoS/DefaultDSCPMark",
        bridgeMode: "Device/Managers/NetworkData/BridgedMode",
        parentalControlOlfeo: "Device/Services/ParentalControl/Categories/ServiceOlfeo/Enable",
        parentalControlPrivate: "Device/WebAccesses/WebRestriction",
        lanIpv4TvPool: "Device/DHCPv4/Server/Pools/Pool[Alias='DEFAULT_POOL']/SubnetMask",
        monitoring: "Device/Managers/BandwidthMonitoring/Enable",
        tr69: "Device/ManagementServer/PeriodicInformInterval",
        route: 'Device/Routing/Routers/Router[@uid="1"]/IPv4Forwardings',
        globalWanMode: "Device/Managers/NetworkData/GlobalWanMode",
        dect: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[PhyInterfaceType="DECT_FP"]',
        wifiGuest24: 'Device/WiFi/AccessPoints/AccessPoint[Alias="GUEST1"]/Status',
        wifiGuest50: 'Device/WiFi/AccessPoints/AccessPoint[Alias="GUEST3"]/Status',
        callSettingsAdvanced: "Device/Services/VoiceServices/VoiceService[@uid='1']/VoiceProfiles/VoiceProfile[@uid='1']/SIP",
        led: "Device/Managers/Led/FrontLedPowerSaving",
        operatorlog: "Device/DeviceInfo/VendorLogFiles/VendorLogFile[@uid='1']",
        gpon: "Device/Optical/G988/EquipmentManagement/OnuG/SerialNumber",
        autodimming: "Device/Managers/Led/LedPowerSaving",
        hardwareVersion: "Device/DeviceInfo/HardwareVersion",
        wanBackupUpTime: "Device/Services/WANBackup/Interfaces/Interface[Alias='WANBACKUP_0']/ConnectionUp",
        wifi24Schedule: 'Device/Services/Schedulers/Schedulers/Scheduler[Alias="wifi_24"]/Enabled',
        wifi5Schedule: 'Device/Services/Schedulers/Schedulers/Scheduler[Alias="wifi_5"]/Enabled',
        dectSchedule: 'Device/Services/Schedulers/Schedulers/Scheduler[Alias="dect"]/Enabled',
        networkMode: "Device/Managers/Network/Mode",
        provisioningMode: "Device/Managers/Network/WanProvisioningMode",
        mapEnable: "Device/MAP/Enable",
        wifiTV: "Device/WiFi/AccessPoints/AccessPoint[Alias='Sunrise_TV']",
        dyndns: 'Device/Services/DynamicDNS/Clients/Client[@uid="1"]/Enable',
        mctcp: "Device/Services/Mptcp/ShowMPTCPPage"
    },
    Device: {
        NAT: {
            PortMappings: {
                DMZ: {
                    Enable: 'Device/NAT/PortMappings/PortMapping[Service="DMZ"]/Enable',
                    InternalClient: 'Device/NAT/PortMappings/PortMapping[Service="DMZ"]/InternalClient',
                    insert: "Device/NAT/PortMappings",
                    remove: 'Device/NAT/PortMappings/PortMapping[Service="DMZ"]'
                }
            }
        },
        Managers: {
            NetworkData: {
                EnableMirroring: "Device/Managers/NetworkData/EnableMirroring"
            }
        }
    },
    forbiddenIps: {
        ips: {
            upnpHost: 'Device/UPnP/Discovery/Devices/Device[@uid="1"]/Host',
            dataModels: "Device/DeviceInfo/SupportedDataModels/SupportedDataModel/URL",
            openWifiInterface: 'Device/DHCPv4/Server/Pools/Pool[Alias="GUEST_POOL"]/IPInterface',
            openWifiMinAddress: 'Device/DHCPv4/Server/Pools/Pool[Alias="GUEST_POOL"]/MinAddress',
            openWifiMaxAddress: 'Device/DHCPv4/Server/Pools/Pool[Alias="GUEST_POOL"]/MaxAddress',
            openWifiSubnetMask: 'Device/DHCPv4/Server/Pools/Pool[Alias="GUEST_POOL"]/SubnetMask',
            openWifiIpInterface: 'Device/IP/Interfaces/Interface[Alias="IP_BR_GUEST"]/IPv4Addresses/IPv4Address[Alias="IP_BR_GUEST_ADDRESS"]/IPAddress',
            openWifiIpSubnet: 'Device/IP/Interfaces/Interface[Alias="IP_BR_GUEST"]/IPv4Addresses/IPv4Address[Alias="IP_BR_GUEST_ADDRESS"]/SubnetMask',
            pppDslDataLocalIp: 'Device/PPP/Interfaces/Interface[Alias="PPP_DATA"]/IPCP/LocalIPAddress',
            pppDslDataRemoteIp: 'Device/PPP/Interfaces/Interface[Alias="PPP_DATA"]/IPCP/RemoteIPAddress',
            pppFtthDataLocalIp: 'Device/PPP/Interfaces/Interface[Alias="PPP_FTTH_DATA"]/IPCP/LocalIPAddress',
            pppFtthDataRemoteIp: 'Device/PPP/Interfaces/Interface[Alias="PPP_FTTH_DATA"]/IPCP/RemoteIPAddress',
            quantennaBootIpLocal: "Device/WiFi/Quantenna/BootIPLocal",
            quantennaBootIPRemote: "Device/WiFi/Quantenna/BootIPRemote",
            quantennaMngtIPLocal: "Device/WiFi/Quantenna/MngtIPLocal",
            quantennaMngtIPRemote: "Device/WiFi/Quantenna/MngtIPRemote"
        },
        validations: {
            pppDslStatus: 'Device/PPP/Interfaces/Interface[Alias="PPP_DATA"]/IPCP/Status',
            pppFtthStatus: 'Device/PPP/Interfaces/Interface[Alias="PPP_FTTH_DATA"]/IPCP/Status'
        }
    },
    dect: {
        phyInterfaceTests: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="#"]/Tests/TestState',
        basic: {
            dock: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[PhyInterfaceType="DECT_FP"]',
            devices: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[PhyInterfaceType="DECT_PP"]'
        },
        capabilities: {
            standard: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="1"]/X_SAGEMCOM_DECT_FP/Standard'
        },
        rpc: {
            pairing: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[PhyInterfaceType="DECT_FP"]/X_SAGEMCOM_DECT_FP',
            test: 'Device/Services/VoiceServices/VoiceService/PhyInterfaces/PhyInterface[Alias="DECTFP"]/X_SAGEMCOM_DECT_FP',
            unPair: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="#"]/X_SAGEMCOM_DECT_PP'
        },
        handset: {
            device: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="#"]',
            save: {
                Description: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="#"]/Description',
                IPUI: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="#"]/X_SAGEMCOM_DECT_PP/InternationalPortableUserIdentity',
                SubscriptionTime: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="#"]/X_SAGEMCOM_DECT_PP/SubscriptionTime',
                HandsetType: 'Device/Services/VoiceServices/VoiceService[@uid="1"]/PhyInterfaces/PhyInterface[@uid="#"]/X_SAGEMCOM_DECT_PP/HandsetType'
            }
        }
    },
    healthCheck: {
        interfaceType: "Device/Managers/NetworkData/InterfaceType",
        port1: {
            status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Status',
            diagnostics: {
                cableStatus: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Diagnostics/CableStatus',
                cableLength: 'Device/Ethernet/Interfaces/Interface[Alias="PHY1"]/Diagnostics/CableLength'
            }
        },
        port2: {
            status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Status',
            diagnostics: {
                cableStatus: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Diagnostics/CableStatus',
                cableLength: 'Device/Ethernet/Interfaces/Interface[Alias="PHY2"]/Diagnostics/CableLength'
            }
        },
        port3: {
            status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Status',
            diagnostics: {
                cableStatus: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Diagnostics/CableStatus',
                cableLength: 'Device/Ethernet/Interfaces/Interface[Alias="PHY3"]/Diagnostics/CableLength'
            }
        },
        port4: {
            status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Status',
            diagnostics: {
                cableStatus: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Diagnostics/CableStatus',
                cableLength: 'Device/Ethernet/Interfaces/Interface[Alias="PHY4"]/Diagnostics/CableLength'
            }
        },
        portwan: {
            status: 'Device/Ethernet/Interfaces/Interface[Alias="PHY6_WAN"]/Status',
            diagnostics: {
                cableStatus: 'Device/Ethernet/Interfaces/Interface[Alias="PHY6_WAN"]/Diagnostics/CableStatus',
                cableLength: 'Device/Ethernet/Interfaces/Interface[Alias="PHY6_WAN"]/Diagnostics/CableLength'
            }
        }
    },
    leds: {
        ledPowerSaving: "Device/Managers/Led/LedPowerSaving",
        ledPowerSavingMode: "Device/Managers/Led/LedPowerSavingMode"
    },
    gpon: {
        SerialNumber: "Device/Optical/G988/EquipmentManagement/OnuG/SerialNumber",
        GponState: "Device/Optical/G988/GponState",
        TransmitOpticalLevel: 'Device/Optical/Interfaces/Interface[@uid="1"]/TransmitOpticalLevel',
        OpticalSignalLevel: 'Device/Optical/Interfaces/Interface[@uid="1"]/OpticalSignalLevel',
        Temperature: 'Device/Optical/Interfaces/Interface[@uid="1"]/Temperature',
        Voltage: 'Device/Optical/Interfaces/Interface[@uid="1"]/Voltage',
        LogicalPassword: "Device/Optical/G988/EquipmentManagement/OnuG/LogicalPassword",
        EncryptedLogicalPassword: "Device/Optical/G988/EquipmentManagement/OnuG/EncryptedLogicalPassword",
        BIASCurrent: 'Device/Optical/Interfaces/Interface[@uid="1"]/BIASCurrent'
    },
    availability: {
        enable: "Device/WiFi/Availability/Enable",
        sunday: {
            from: "Device/WiFi/Availability/SundayFrom",
            to: "Device/WiFi/Availability/SundayTo"
        },
        monday: {
            from: "Device/WiFi/Availability/MondayFrom",
            to: "Device/WiFi/Availability/MondayTo"
        },
        tuesday: {
            from: "Device/WiFi/Availability/TuesdayFrom",
            to: "Device/WiFi/Availability/TuesdayTo"
        },
        wednesday: {
            from: "Device/WiFi/Availability/WednesdayFrom",
            to: "Device/WiFi/Availability/WednesdayTo"
        },
        thursday: {
            from: "Device/WiFi/Availability/ThursdayFrom",
            to: "Device/WiFi/Availability/ThursdayTo"
        },
        friday: {
            from: "Device/WiFi/Availability/FridayFrom",
            to: "Device/WiFi/Availability/FridayTo"
        },
        saturday: {
            from: "Device/WiFi/Availability/SaturdayFrom",
            to: "Device/WiFi/Availability/SaturdayTo"
        }
    },
    scheduling: {
        main: "Device/Services/Schedulers/Schedulers",
        enable: 'Device/Services/Schedulers/Schedulers/Scheduler[Alias="#alias#"]/Enabled',
        insert: 'Device/Services/Schedulers/Schedulers/Scheduler[Alias="#alias#"]/TimeSlots',
        remove: 'Device/Services/Schedulers/Schedulers/Scheduler[Alias="#alias#"]/TimeSlots/*'
    },
    trafficStats: {
        rpc: "Device"
    },
    technicalLogFast: {
        dataRateDown: "Device/FAST/Lines/Line/TestParams/DownstreamCurrRate",
        dataRateUp: "Device/FAST/Lines/Line/TestParams/UpstreamCurrRate",
        dataSent: 'Device/FAST/Lines/Line[@uid="1"]/Stats/BytesSent',
        dataReceived: 'Device/FAST/Lines/Line[@uid="1"]/Stats/BytesReceived'
    },
    rpc: {
        voiceService: "Device/Services/VoiceServices/VoiceService[@uid='1']",
        user: "Device/UserAccounts/Users/User[Login='#']",
        logicalVolume: "Device/Services/StorageServices/StorageService[@uid='1']/LogicalVolumes/LogicalVolume[@uid='#']",
        logId: "Device/DeviceInfo/VendorLogFiles/VendorLogFile[@uid='#']",
        logAlias: "Device/DeviceInfo/VendorLogFiles/VendorLogFile[Alias='#']",
        upnpLog: "Device/UPnP",
        accessPoint: "Device/WiFi/AccessPoints/AccessPoint[Alias='#']",
        usbPort: "Device/USB/Ports/Port[SysfsId='#']",
        pppInterface: "Device/PPP/Interfaces/Interface[Alias='PPP_DATA']"
    },
    XORCryptKey: "Device/EncryptionKey",
    splashScreen: "Device/UserInterface/RedirectionReason"
};
var hexcase = 0
  , b64pad = ""
  , chrsz = 8
  , sboxMobile = angular.module("sboxMobile", ["ngCookies", "ngSanitize", "ngRoute", "ui.router", "pascalprecht.translate", "ngAnimate", "accessModule", "ja.qr"]);
sboxMobile.config(function($stateProvider, $urlRouterProvider, $routeProvider, $locationProvider, $httpProvider, RoutingConfigProvider) {
    var access = RoutingConfigProvider.accessLevels;
    $.xmo.init(),
    $.mobile = $.extend($.mobile || {}, {
        documentUrl: location.href.replace(/\/gui\/.*$/, "/gui/")
    }),
    $.xmo.restoreFromCookie(),
    $urlRouterProvider.when("/", "/mobile"),
    $urlRouterProvider.when("/mobile/mySagemcomBox/route", "/mobile/mySagemcomBox/route/static"),
    $urlRouterProvider.when("/mobile/mySagemcomBox/dns", "/mobile/mySagemcomBox/dns/server"),
    $urlRouterProvider.when("/mobile/access-control/port-forwarding", "/mobile/access-control/port-forwarding/add-rule"),
    $urlRouterProvider.when("/mobile/access-control/parental-control", "/mobile/access-control/parental-control/planning"),
    $urlRouterProvider.when("/mobile/sip-settings", "/mobile/sip-settings/settings"),
    $urlRouterProvider.when("/mobile/internetConnectivity", "/mobile/internetConnectivity/wan"),
    $urlRouterProvider.when("/mobile/device/:layer/:uid/port-forwarding", "/mobile/device/:layer/:uid/port-forwarding/add-rule"),
    $urlRouterProvider.when("/mobile/internetConnectivity/qos", "/mobile/internetConnectivity/qos/configuration"),
    $urlRouterProvider.when("/mobile/mySagemcomBox/monitor", "/mobile/mySagemcomBox/monitor/quickView"),
    $urlRouterProvider.when("/mobile/phonebook", "/mobile/phonebook/contacts"),
    $urlRouterProvider.when("/mobile/mycloud", "/mobile/mycloud/dropbox"),
    $urlRouterProvider.when("/mobile/wifi/:radio", "/mobile/wifi/:radio/basic"),
    $stateProvider.state("public", {
        "abstract": !0,
        templateUrl: "views-mobile/base.html",
        data: {
            access: access["public"]
        }
    }).state("public.404", {
        url: "/mobile/404/",
        templateUrl: "404.html"
    }),
    $stateProvider.state("anon", {
        "abstract": !0,
        template: "<ui-view/>",
        data: {
            access: access.anon
        }
    }).state("anon.autologin", {
        url: "/mobile/autologin/",
        template: "&nbsp;",
        controller: "LoginController"
    }).state("anon.login", {
        url: "/mobile/login/:user",
        templateUrl: "views-mobile/login.html",
        controller: "LoginController"
    }),
    $stateProvider.state("user", {
        "abstract": !0,
        templateUrl: "views-mobile/base.html",
        data: {
            access: access.guest
        }
    }).state("user.homefirst", {
        url: "/mobile/firstAccess",
        templateUrl: "views-mobile/first-access.html"
    }).state("user.homefirst.user", {
        url: "/user",
        templateUrl: "views-mobile/first-access.user.html",
        controller: "AccessControlUserController"
    }).state("user.homefirst.connection", {
        url: "/connection",
        templateUrl: "views-mobile/first-access.connection.html",
        controller: "ConnectedDevicesController"
    }).state("user.homefirst.ppp", {
        url: "/ppp",
        templateUrl: "views-mobile/first-access.ppp.html",
        controller: "PPPController"
    }).state("user.homefirst.wifi", {
        url: "/wifi/:radio",
        templateUrl: "views-mobile/first-access.wifi.html",
        controller: "WiFiBasicController"
    }).state("user.homefirst.end", {
        url: "/finish",
        templateUrl: "views-mobile/first-access.end.html"
    }).state("user.home", {
        url: "/mobile",
        templateUrl: "views-mobile/main.html"
    }).state("user.networkmap", {
        url: "/mobile/networkmap",
        templateUrl: "views-mobile/networkmap-app.html",
        controller: "ConnectedDevicesController",
        data: {
            parentState: "user.home"
        }
    }).state("user.parentalControl", {
        url: "/mobile/parentalControl",
        templateUrl: "views-mobile/parental-control.html",
        controller: "ParentalControllerPlanning",
        data: {
            parentState: "user.home"
        }
    }).state("user.statusSettings", {
        url: "/mobile/statusSettings",
        templateUrl: "views-mobile/status-settings.main.html",
        data: {
            parentState: "user.home"
        }
    }).state("user.status", {
        url: "/mobile/status",
        templateUrl: "views-mobile/status-statistics.main.html"
    }).state("user.status.status", {
        url: "/network",
        templateUrl: "views-mobile/status-statistics.status.html",
        controller: "DeviceInformationController",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.status.statistics", {
        url: "/statistics",
        templateUrl: "views-mobile/status-statistics.statistics.html",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.mymedia", {
        url: "/mobile/myMedia",
        templateUrl: "views-mobile/my.media.html",
        controller: "MyMediaController",
        data: {
            parentState: "user.home"
        }
    }).state("user.ethernetDevice", {
        url: "/mobile/device/:layer/:uid",
        templateUrl: "views-mobile/ethernet-device.main.html",
        controller: "EthernetDeviceMainController",
        data: {
            parentState: "user.networkmap"
        }
    }).state("user.ethernetDevice.deviceInfo", {
        url: "/device-info",
        templateUrl: "views-mobile/ethernet-device.device-info.html",
        controller: "EthernetDeviceController",
        data: {
            parentState: "user.networkmap"
        }
    }).state("user.ethernetDevice.parentalControl", {
        url: "/parental-control",
        templateUrl: "views-mobile/parental-control.html",
        controller: "ParentalControllerPlanning",
        data: {
            parentState: "user.networkmap"
        }
    }).state("user.wifiStrength", {
        url: "/wifiStrength",
        templateUrl: "views-mobile/wifi-strength.html",
        controller: "WifiStrengthController",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.wifi", {
        url: "/mobile/wifi/:radio",
        templateUrl: "views-mobile/status-settings.wifi.main.html",
        controller: "WifiMainController",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.wifi.basic", {
        url: "/basic",
        templateUrl: "views-mobile/status-settings.wifi.basic.html",
        controller: "WiFiBasicController"
    }).state("user.wifi.wps", {
        url: "/wps",
        templateUrl: "views-mobile/status-settings.wifi.wps.html",
        controller: "WiFiWPSController",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.wifi.scheduling", {
        url: "/scheduling",
        templateUrl: "views-mobile/status-settings.wifi.sched.html",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.maintenance", {
        url: "/mobile/maintenance",
        templateUrl: "views-mobile/maintenance.main.html"
    }).state("user.maintenance.reset", {
        url: "/reset",
        templateUrl: "views-mobile/maintenance.reset.html",
        controller: "MaintenanceResetController",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.maintenance.bkpRestore", {
        url: "/reset",
        templateUrl: "views-mobile/maintenance.bkpRestore.html",
        controller: "MaintenanceResetController",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.maintenance.firmwareUpdate", {
        url: "/firmware-update",
        templateUrl: "views-mobile/maintenance.firmware-update.html",
        controller: "MaintenanceResetController",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.maintenance.ntp", {
        url: "/ntp",
        templateUrl: "views-mobile/maintenance.ntp.html",
        controller: "NTPController",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.maintenance.tr69", {
        url: "/tr69",
        templateUrl: "views-mobile/maintenance.tr69.html",
        controller: "MaintenanceTr69Controller",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.maintenance.systemlog", {
        url: "/system-log",
        templateUrl: "views-mobile/maintenance.system-log.html",
        controller: "MaintenanceSystemLogController",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.maintenance.internetUtilities", {
        url: "/internet-utilities",
        templateUrl: "views-mobile/maintenance.internet-utilities.html",
        controller: "MaintenanceInternetUtilitiesController",
        data: {
            parentState: "user.statusSettings"
        }
    }).state("user.voiceDevice", {
        url: "/mobile/voice-device-info/:uid",
        templateUrl: "views-mobile/voice.device-info.html",
        controller: "VoiceDeviceController",
        data: {
            parentState: "user.networkmap"
        }
    }).state("user.usbDeviceInfo", {
        url: "/mobile/usb-devices/:uid",
        templateUrl: "views-mobile/usb-device.device-info.html",
        controller: "UsbDeviceController",
        data: {
            parentState: "user.networkmap"
        }
    }).state("user.guestAccess", {
        url: "/mobile/guestAccess",
        templateUrl: "views-mobile/guest-access.html",
        data: {
            parentState: "user.home"
        }
    }).state("user.qrCode", {
        url: "/mobile/qrcode",
        templateUrl: "views-mobile/qr-code.html",
        controller: "QrCodeWifiController",
        data: {
            parentState: "user.home"
        }
    }).state("user.answeringMachine", {
        url: "/mobile/answeringMachine",
        templateUrl: "views-mobile/answering-machine.html",
        controller: "AnsweringMachineMessagesController",
        data: {
            parentState: "user.home"
        }
    }),
    $stateProvider.state("admin", {
        "abstract": !0,
        templateUrl: "views-mobile/base.html",
        data: {
            access: access.admin
        }
    }),
    $stateProvider.state("onu", {
        "abstract": !0,
        templateUrl: "views-mobile/base.html",
        data: {
            access: access.admin
        }
    }),
    $stateProvider.state("internal", {
        "abstract": !0,
        templateUrl: "views-mobile/base.html",
        data: {
            access: access.internal
        }
    }),
    $stateProvider.state("poweruser", {
        "abstract": !0,
        templateUrl: "views-mobile/base.html",
        data: {
            access: access.internal
        }
    }),
    $urlRouterProvider.otherwise("/mobile/404"),
    $urlRouterProvider.rule(function($injector, $location) {
        if ("file" !== $location.protocol()) {
            var params, path = $location.path(), search = $location.search();
            if ("/" !== path[path.length - 1])
                return 0 === Object.keys(search).length ? path + "/" : (params = [],
                angular.forEach(search, function(v, k) {
                    params.push(k + "=" + v)
                }),
                path + "/?" + params.join("&"))
        }
    }),
    $httpProvider.interceptors.push(["$q", "$location", function($q, $location) {
        return {
            responseError: function(response) {
                return (401 === response.status || 403 === response.status) && $location.path("/mobile/login"),
                $q.reject(response)
            }
        }
    }
    ])
});
var sboxDesktop = angular.module("sboxDesktop", ["ngDragDrop", "ngCookies", "ngSanitize", "ngRoute", "ui.router", "pascalprecht.translate", "accessModule", "ja.qr", "rzModule"])
  , DinamicRouter = {};
DinamicRouter.hasCustomRoute = function(routeName) {
    return !!routeName && !!$.config.dynamicRoute && !!$.config.dynamicRoute[routeName]
}
,
DinamicRouter.getCustomRoute = function(routeName) {
    return DinamicRouter.hasCustomRoute(routeName) ? $.config.dynamicRoute[routeName] : []
}
,
DinamicRouter.proccessCustomRoute = function(CheckFeature, routeName, defaultUrl, fn) {
    var selectedRoute;
    return fn || (fn = function(route) {
        return CheckFeature.go(route.feature)
    }
    ),
    DinamicRouter.hasCustomRoute(routeName) && $.each($.config.dynamicRoute[routeName], function(i, route) {
        return fn(route) ? (selectedRoute = route,
        !1) : void 0
    }),
    selectedRoute ? selectedRoute : {
        url: defaultUrl
    }
}
,
DinamicRouter.internetConnectivity = function(Auth, CheckFeature, RouteChecker) {
    if (Auth.isLoggedIn()) {
        if (DinamicRouter.hasCustomRoute("internetConnectivity")) {
            var route = DinamicRouter.proccessCustomRoute(CheckFeature, "internetConnectivity", "/404");
            return route.url
        }
        if (CheckFeature.go("internetConnectivityWanAdvanced"))
            return "/internetConnectivity/wan";
        if (!CheckFeature.go("internetConnectivityWanBasic"))
            return CheckFeature.go("simpleIPv6Main") ? "/internetConnectivity/simpleIPv6" : CheckFeature.go("trafficSpeed") ? "/internetConnectivity/trafficSpeed" : CheckFeature.go("gpon") ? "/internetConnectivity/gpon" : "/";
        if ($.config.checkMapEnable !== !0)
            return "/internetConnectivity/basic";
        if (CheckFeature.mapEnable)
            return "/internetConnectivity/basic/mapT";
        if (CheckFeature.go("simpleIpv4"))
            return "/internetConnectivity/basic/ipv4";
        if (CheckFeature.go("simpleIpv6"))
            return "/internetConnectivity/basic/simpleIpv6"
    }
}
,
DinamicRouter.accessControl = function(Auth, CheckFeature) {
    if (Auth.isLoggedIn()) {
        if (DinamicRouter.hasCustomRoute("accessControl")) {
            var route = DinamicRouter.proccessCustomRoute(CheckFeature, "accessControl", "/404");
            return route.url
        }
        return CheckFeature.go("parentalControlTimeslot") ? "/access-control/parental-control/planning-timeslot" : CheckFeature.go("parentalControl") ? "/access-control/parental-control/planning" : CheckFeature.go("portForwarding") ? "/access-control/port-forwarding/add-rule" : CheckFeature.go("portTriggering") ? "/access-control/port-triggering" : CheckFeature.go("firewall") ? "/access-control/firewall" : CheckFeature.go("dmz") ? "/access-control/dmz" : "/"
    }
}
,
DinamicRouter.sip = function(Auth, CheckFeature) {
    if (Auth.isLoggedIn()) {
        if (DinamicRouter.hasCustomRoute("sip")) {
            var route = DinamicRouter.proccessCustomRoute(CheckFeature, "sip", "/sip-settings/settings");
            return route.url
        }
        return CheckFeature.go("telephoneMatrix") && CheckFeature.go("showTabTelephoneMatrix") ? "/sip-settings/telephones-matrix" : CheckFeature.go("callSettings") ? "/sip-settings/call-settings" : CheckFeature.go("globalSip") ? "/sip-settings/global" : "/sip-settings/settings"
    }
}
,
DinamicRouter.log = function(Auth, CheckFeature) {
    return Auth.isLoggedIn() ? CheckFeature.go("systemLog") ? "/mybox/maintenance/log/system-log" : CheckFeature.go("logs") ? "/mybox/maintenance/log/operator-log" : "/" : void 0
}
,
DinamicRouter.routerMyNetwork = function(Auth, CheckFeature) {
    return Auth.isLoggedIn() ? CheckFeature.go("routerBasic") ? "/router/basic/lan-settings" : "/router/management/admin-account" : void 0
}
,
DinamicRouter.monitor = function(Auth, CheckFeature) {
    return Auth.isLoggedIn() ? CheckFeature.go("quickView") ? "/mybox/monitor/quickView" : "/mybox/monitor/history/trafficHistory" : void 0
}
,
DinamicRouter.wifi = ["$state", "Auth", "CheckFeature", function($state, Auth, CheckFeature) {
    if (Auth.isLoggedIn() && DinamicRouter.hasCustomRoute("wifi")) {
        var urlParams = (window.location.hash,
        /(2\.4GHz|5GHz|wifiBothBands)\/(priv|guest)/i.exec(window.location.hash) || [])
          , radio = urlParams[1] || "2.4GHz"
          , mode = urlParams[2] || "priv"
          , route = DinamicRouter.proccessCustomRoute(CheckFeature, "wifi", "/404");
        return route ? ($state.go(route.state, {
            radio: radio,
            mode: mode
        }, {
            notify: !0
        }),
        !0) : "/404"
    }
}
],
DinamicRouter.deviceInfo = function(Auth, CheckFeature) {
    if (Auth.isLoggedIn()) {
        if (DinamicRouter.hasCustomRoute("deviceInfo")) {
            var route = DinamicRouter.proccessCustomRoute(CheckFeature, "deviceInfo", "/404");
            return route.url
        }
        return CheckFeature.go("tabGeneral") ? "/mybox/deviceInfo/deviceInfo" : "/mybox/deviceInfo/statistics"
    }
}
,
sboxDesktop.config(function($provide, $stateProvider, $urlRouterProvider, $routeProvider, $locationProvider, $httpProvider, RoutingConfigProvider) {
    var access = RoutingConfigProvider.accessLevels;
    $.xmo.init(),
    $.mobile = $.extend($.mobile || {}, {
        documentUrl: location.href.replace(/\/gui\/.*$/, "/gui/")
    }),
    $.xmo.restoreFromCookie(),
    $urlRouterProvider.when("/mybox/dns", "/mybox/dns/server"),
    $urlRouterProvider.when("/mybox/route", "/mybox/route/static"),
    $urlRouterProvider.when("/access-control/port-forwarding", "/access-control/port-forwarding/add-rule"),
    $urlRouterProvider.when("/mybox/maintenance", "/mybox/maintenance/reset"),
    $urlRouterProvider.when("/mybox/deviceInfo", DinamicRouter.deviceInfo),
    $urlRouterProvider.when("/access-control/parental-control", "/access-control/parental-control/planning"),
    $urlRouterProvider.when("/device/:layer/:uid/port-forwarding", "/device/:layer/:uid/port-forwarding/add-rule"),
    $urlRouterProvider.when("/internetConnectivity/qos", "/internetConnectivity/qos/configuration"),
    $urlRouterProvider.when("/internetConnectivity/mptcp", "/internetConnectivity/mptcp/status"),
    $urlRouterProvider.when("/mybox/monitor", DinamicRouter.monitor),
    $urlRouterProvider.when("/phonebook", "/phonebook/contacts"),
    $urlRouterProvider.when("/answering-machine", "/answering-machine/messages"),
    $urlRouterProvider.when("/mycloud", "/mycloud/dropbox"),
    $urlRouterProvider.when("/inTwo", "/inTwo/device"),
    $urlRouterProvider.when("/access-control/certificates", "/access-control/certificates/local"),
    $urlRouterProvider.when("/access-control/vpn", "/access-control/vpn/lt2p"),
    DinamicRouter.hasCustomRoute("internetConnectivity") ? $urlRouterProvider.when("/internetConnectivity/basic", DinamicRouter.internetConnectivity) : $urlRouterProvider.when("/internetConnectivity/basic", "/internetConnectivity/basic/ipv4"),
    $urlRouterProvider.when("/mybox", "/mybox/deviceInfo"),
    DinamicRouter.hasCustomRoute("wifi") ? ($urlRouterProvider.when("/wifidual", DinamicRouter.wifi),
    $urlRouterProvider.when("/wifi", DinamicRouter.wifi),
    $urlRouterProvider.when("/wifidual/2.4GHz/priv", DinamicRouter.wifi),
    $urlRouterProvider.when("/wifidual/5GHz/priv", DinamicRouter.wifi),
    $urlRouterProvider.when("/wifidual/2.4GHz/guest", DinamicRouter.wifi),
    $urlRouterProvider.when("/wifidual/5GHz/guest", DinamicRouter.wifi)) : ($urlRouterProvider.when("/wifi/2.4GHz", $.config.showedpages.wifiBasic.enable ? "/wifi/2.4GHz/priv/basic" : "/"),
    $urlRouterProvider.when("/wifi/5GHz", $.config.showedpages.wifiBasic.enable ? "/wifi/5GHz/priv/basic" : "/"),
    $urlRouterProvider.when("/wifi/2.4GHz/priv", $.config.showedpages.wifiBasic.enable ? "/wifi/2.4GHz/priv/basic" : "/"),
    $urlRouterProvider.when("/wifi/5GHz/priv", $.config.showedpages.wifiBasic.enable ? "/wifi/5GHz/priv/basic" : "/"),
    $urlRouterProvider.when("/wifi/2.4GHz/guest", $.config.showedpages.wifiBasic.enable ? "/wifi/2.4GHz/guest/basic" : "/"),
    $urlRouterProvider.when("/wifi/5GHz/guest", $.config.showedpages.wifiBasic.enable ? "/wifi/5GHz/guest/basic" : "/")),
    $urlRouterProvider.when("/simple/device/:layer/:uid/port-forwarding", "/simple/device/:layer/:uid/port-forwarding/add-rule"),
    $urlRouterProvider.when("/simplewifi", "/simplewifi/2.4GHz/priv/basic"),
    $urlRouterProvider.when("/simplewifi/2.4GHz", "/simplewifi/2.4GHz/priv/basic"),
    $urlRouterProvider.when("/simplewifi/2.4GHz/priv", "/simplewifi/2.4GHz/priv/basic"),
    $urlRouterProvider.when("/simplewifi/2.4GHz/guest", "/simplewifi/2.4GHz/guest/basic"),
    $urlRouterProvider.when("/simplewifi/5GHz", "/simplewifi/5GHz/priv/basic"),
    $urlRouterProvider.when("/simplewifi/5GHz/priv", "/simplewifi/5GHz/priv/basic"),
    $urlRouterProvider.when("/simplewifi/5GHz/guest", "/simplewifi/5GHz/guest/basic"),
    $urlRouterProvider.when("/internetConnectivity", DinamicRouter.internetConnectivity),
    $urlRouterProvider.when("/access-control", DinamicRouter.accessControl),
    $urlRouterProvider.when("/sip-settings", DinamicRouter.sip),
    $urlRouterProvider.when("/mybox/maintenance/log", DinamicRouter.log),
    $urlRouterProvider.when("/dect", "/dect/basic"),
    $urlRouterProvider.when("/dectHandset/:uid", "/dectHandset/:uid/handset"),
    $urlRouterProvider.when("/simpleservices", "/simpleservices/dyndns"),
    $urlRouterProvider.when("/simpleservices/traffic-monitor", "/simpleservices/traffic-monitor/quick"),
    $urlRouterProvider.when("/router/basic", DinamicRouter.routerMyNetwork),
    $urlRouterProvider.when("/router/cable-modem", "/router/cable-modem/device-info"),
    $urlRouterProvider.when("/router/usb", "/router/usb/control"),
    $urlRouterProvider.when("/router/advanced", "/router/advanced/firewall"),
    $urlRouterProvider.when("/router/management", "/router/management/admin-account"),
    $urlRouterProvider.when("/mso/public-wifi", "/mso/public-wifi/settings"),
    $urlRouterProvider.when("/internetConnectivity/docsis", "/internetConnectivity/docsis/network-parameters"),
    $urlRouterProvider.when("/wifi-backhaul", "/wifi-backhaul/basic"),
    $urlRouterProvider.when("/wizard", "/wizard/user"),
    $.config.wifiDualBasic === !0 && $urlRouterProvider.when("/wifidual/2.4GHz/priv/mac-filter", "/wifidual/2.4GHz/priv/mac-filter/basic"),
    $.config.staticUserLogin && $urlRouterProvider.when("/login", "/login/admin");
    var routes = $.routes($.config, access)
      , profileRoutes = void 0 !== $.config.routes ? $.config.routes(access) : {
        desktop: {}
    };
    $.each(routes.desktop, function(profile, states) {
        states = profileRoutes.desktop[profile] || states,
        $(states).each(function(i, config) {
            $stateProvider.state(config.name, config.state)
        })
    }),
    $urlRouterProvider.otherwise("/404"),
    $urlRouterProvider.rule(function($injector, $location) {
        if ("file" !== $location.protocol()) {
            var params, path = $location.path(), search = $location.search();
            if ("/" !== path[path.length - 1])
                return 0 === Object.keys(search).length ? path + "/" : (params = [],
                angular.forEach(search, function(v, k) {
                    params.push(k + "=" + v)
                }),
                path + "/?" + params.join("&"))
        }
    }),
    $httpProvider.interceptors.push(["$q", "$location", function($q, $location) {
        return {
            responseError: function(response) {
                return (401 === response.status || 403 === response.status) && $location.path($.config.staticUserLogin ? "/login/admin" : "/login"),
                $q.reject(response)
            }
        }
    }
    ])
});
var sboxApp;
sboxApp = $(location).attr("hash").search("mobile") > -1 || $(location).attr("search").search("mobile") > -1 ? angular.module("sboxApp", ["sboxMobile"]) : angular.module("sboxApp", ["sboxDesktop"]),
sboxApp.run(function($rootScope, $state, $timeout, $basicInfo, Auth, RouteChecker, CheckFeature) {
    $.xmo.mock || $(document).ajaxError(function(event, jqxhr) {
        "function" == typeof $rootScope.handleAjaxError && $rootScope.handleAjaxError({
            lastUrlErr: event.currentTarget.URL,
            lastMsgErr: jqxhr.statusText
        })
    }),
    $.gui.refreshPage = function() {}
    ,
    $.gui.noRefreshPage = function() {}
    ;
    var setTabsClass = function() {
        var targetState = $state.current.name
          , params = $state.params;
        $(".nav-telstra-menu > li").removeClass("active"),
        $("dd:not(.level-selector)").removeClass("active"),
        $timeout(function() {
            for ($.config.modules.hasMenuVertical && (targetState = $state.current.name); targetState; )
                targetState.indexOf("filteredUtilities") > -1 ? $('a[ui-sref="' + targetState + '"], a[ui-sref="' + targetState + "({tool:'" + params.tool + "'})\"]").parent().addClass("active") : targetState.indexOf("user.wifidual") > -1 ? $('a[ui-sref="' + targetState + '"], a[ui-sref="' + targetState + "({radio : '" + params.radio + "', mode: '" + params.mode + "'})\"]").parent().addClass("active") : targetState.indexOf("user.simple.wifi") > -1 ? $('a[ui-sref*="user.wifi.simple.basic"], a[ui-sref="' + targetState + "({radio : '" + params.radio + "', mode: '" + params.mode + "'})\"]").parent().addClass("active") : targetState.indexOf("user.wifi.") > -1 && /^user\.wifi\.(advanced|stats|wps|environment\.scan|mac\-filter)$/.test(targetState) ? ($('a[ui-sref*="' + targetState + '"], a[ui-sref="' + targetState + "({radio : '" + params.radio + "', mode: '" + params.mode + "'})\"]").parent().addClass("active"),
                $('dl.sub-tabs > dd > a:not([ui-sref="' + targetState + "({radio : '" + params.radio + "', mode: '" + params.mode + "'})\"])").parent().removeClass("active")) : targetState.indexOf("user.scheduling.control") > -1 ? $('a[ui-sref*="user.scheduling.control"], a[ui-sref="' + targetState + "({scheduleType : '" + params.scheduleType + "', mode: '" + params.mode + "'})\"]").parent().addClass("active") : targetState.indexOf("user.accessControl.parentalControl.planningTimeslot") > -1 ? $('a[ui-sref*="user.accessControl.parentalControl.planning"]').addClass("active") : targetState.indexOf("user.schedule.basic") > -1 ? $('dd.tabPrincipal-sub-basic > a[ui-sref="' + targetState + "({scheduleType : '" + params.scheduleType + "', mode: '" + params.mode + "'})\"]").parent().addClass("active") : targetState.indexOf("user.simple.services.trafficMonitor") > -1 ? ($('a[ui-sref="user.simple.services.trafficMonitor"]').parent().addClass("active"),
                $('a[href="#/simpleservices/traffic-monitor/stats/' + params.type + '"]').parent().addClass("active")) : targetState.indexOf("user.answeringMachine") > -1 ? ($('a[ui-sref="' + targetState + '"]').parent().addClass("active"),
                params.uid || (params.uid = 1),
                $($('a[ui-sref^="user.answeringMachine.settings({"]')[params.uid - 1]).parent().addClass("active")) : $('a[ui-sref="' + targetState + '"], a[ui-sref^="' + targetState + '({"]').parent().addClass("active"),
                $.config.modules.hasMenuVertical ? ($(".tabPrinc dd:not(.tabPrincipal)").hide(),
                $('a[ui-sref="' + targetState + '"], a[ui-sref^="' + targetState + '({"]').parent().nextUntil(".tabPrincipal").show(),
                $('a[ui-sref="' + targetState + '"], a[ui-sref^="' + targetState + '({"]').parent().hasClass("tabPrincipal") || $('a[ui-sref="' + targetState + '"], a[ui-sref^="' + targetState + '({"]').parent().prevUntil(".tabPrincipal").show(),
                $('a[ui-sref="' + targetState + '"], a[ui-sref^="' + targetState + '({"]').parent().show(),
                targetState = !1) : targetState = targetState.substring(0, targetState.lastIndexOf("."))
        }, 400)
    }
      , getFormSerial = function(formName) {
        return $('form[name="' + formName + '"]').serialize()
    }
      , checkForChanges = function(formName) {
        var newFormSerial = getFormSerial(formName);
        return newFormSerial !== $rootScope.formSerialStr
    }
      , mainState = $.config.simplePage ? "user.simple.home" : "user.home"
      , loginState = $.config.simpleLogin ? "anon.login.simple" : "anon.login"
      , changedToFast = !1
      , checkChangedToFast = !!$.config.changeDSLToFast
      , changeDSLToFast = function() {
        var startAsDeviceFastChannel = /^Device\/FAST\/Channels/
          , endAsUpstreamCurrRate = /\/(UpstreamCurrRate)$/i
          , endAsDownstreamCurrRate = /\/(DownstreamCurrRate)$/i
          , fastLineStatus = $.xmo.getValuesTree($.xpaths.mySagemcomBox.fastLineStatus);
        if (fastLineStatus && "UP" === fastLineStatus) {
            var _replaceXpathRecursive = function(to) {
                for (var key in to)
                    "string" === $.type(to[key]) && -1 !== to[key].indexOf("Device/DSL/") ? (to[key] = to[key].replace("Device/DSL/", "Device/FAST/"),
                    to[key] = to[key].replace('Alias="DSL0"', '@uid="1"'),
                    startAsDeviceFastChannel.test(to[key]) && endAsUpstreamCurrRate.test(to[key]) && (to[key] = $.xpaths.technicalLogFast.dataRateUp),
                    startAsDeviceFastChannel.test(to[key]) && endAsDownstreamCurrRate.test(to[key]) && (to[key] = $.xpaths.technicalLogFast.dataRateDown)) : "object" === $.type(to[key]) && _replaceXpathRecursive(to[key])
            };
            _replaceXpathRecursive($.xpaths),
            changedToFast = !0
        }
    };
    $rootScope.$on("$stateChangeStart", function(event, toState, toParams, fromState, fromParams) {
        if ($rootScope.currentRouteName = toState.name,
        $rootScope.bridgeModeEnable = !1,
        $(".owl-carousel").trigger("destroy.owl.carousel"),
        $("#confirmUnsavedDataInput").unbind().click(function() {
            $rootScope.flagWatchForm = !1,
            toParams ? $state.go(toState.name, toParams) : $state.go(toState.name)
        }),
        $.state = $state,
        -1 === toState.name.indexOf("anon.login") && -1 === fromState.name.indexOf("anon.login") && checkForChanges($rootScope.formToWatch) && $rootScope.flagWatchForm)
            return event.preventDefault(),
            $rootScope.globalWait = !1,
            setTabsClass(),
            void $("#unsavedDataInput").click();
        if (Auth.isLoggedIn(),
        toState.data && !Auth.authorize(toState.data.access) && (event.preventDefault(),
        $rootScope.globalWait = !1,
        "^" === fromState.url))
            if (Auth.isLoggedIn())
                $state.go(mainState);
            else {
                var fnGoController = function(autoLogin) {
                    autoLogin ? $state.go("anon.autologin") : $state.go(loginState, {
                        user: Auth.user.username
                    })
                };
                if ("undefined" != typeof SboxInterface) {
                    var autoLoginController = SboxInterface.IsAutoLogin();
                    void 0 === autoLoginController ? SboxInterface.IsAutoLogin(fnGoController) : fnGoController(autoLoginController)
                } else
                    fnGoController(!1)
            }
        if ($rootScope.isLoginTemplate = "LoginController" === toState.controller,
        $rootScope.isMobile = $(location).attr("hash").search("mobile") > -1 || $(location).attr("search").search("mobile") > -1,
        $rootScope.currentYear = (new Date).getFullYear(),
        $rootScope.isLandPage = toState.name.indexOf("user.landpage") > -1,
        $.cookie("modeSelected") || $.cookie("modeSelected", $.constants.modeAdmin),
        $rootScope.modeSelected = $.cookie("modeSelected"),
        Auth.isLoggedIn() || 0 === toState.name.indexOf("public") || 0 === toState.name.indexOf("anon") || 0 === toState.name.indexOf("splash-no-internet") || 0 === toState.name.indexOf("splash-firmware-upgrade")) {
            var wifiNetworkEnable = $basicInfo.getWifiNetworkEnable()
              , isRouted = "ROUTED" === $basicInfo.getNetworkMode();
            $rootScope.isSonne = $.config.showedpages.sonne && $.config.showedpages.sonne.enable,
            $rootScope.wifiNetworkEnable = wifiNetworkEnable && isRouted,
            $rootScope.isSonne && toState.name.indexOf("wifidual") > -1 && ($rootScope.wifiNetworkEnable || (event.preventDefault(),
            setTimeout(function() {
                $state.go(mainState, toParams)
            })));
            var change, countryOverride, parentState, origin = toState, bridgeMode = !1;
            if ($.util.hasFeature("bridgeModeBlockPages") && ($.util.hasFeature("bridgemode") || $.util.hasFeature("bridgemodeInternetPage"))) {
                try {
                    bridgeMode = $.xmo.getValuesTree($.xpaths.mySagemcomBox.bridgeMode.enable) === !0
                } catch (e) {
                    bridgeMode = !1
                }
                $rootScope.bridgeModeEnable = bridgeMode
            }
            if (bridgeMode === !0 && $.util.hasFeature("bridgeModeBlockPages")) {
                if (!RouteChecker.isAllowedInBridgeMode(toState.name)) {
                    parentState = origin.name.replace(/\.[a-z0-9]+$/i, ""),
                    change = parentState;
                    var dynamicRoutes = RouteChecker.getDynamicRoutes(toState.name);
                    if (dynamicRoutes && dynamicRoutes.length > 0)
                        $.each(dynamicRoutes, function(i, dynRoute) {
                            return RouteChecker.isAllowedInBridgeMode(dynRoute.state) ? (dynRoute.state !== toState.name && (change = dynRoute.state),
                            !1) : void 0
                        });
                    else {
                        var availableRoutes = RouteChecker.getSiblingRoutes(toState.name);
                        console.groupCollapsed("myRoute:" + parentState),
                        console.log("availableRoutes", availableRoutes),
                        console.groupEnd(),
                        availableRoutes && availableRoutes.length > 0 && $.each(availableRoutes, function(i, route) {
                            return RouteChecker.isAllowedInBridgeMode(route.name) ? (route.name !== toState.name && (change = route.name),
                            !1) : void 0
                        })
                    }
                    /\./.test(parentState) || change !== parentState || (change = mainState)
                }
            } else
                for (; origin.data && !CheckFeature.go(origin.data.module); ) {
                    if (parentState = origin.name.split(".").slice(0, -1).join("."),
                    !parentState || -1 === parentState.indexOf(".")) {
                        change = mainState;
                        break
                    }
                    change = parentState,
                    origin = $state.get(parentState)
                }
            if (/\.log\.operatorlog$/.test(toState.name) && !CheckFeature.go("logs") && (change = mainState),
            change && setTimeout(function() {
                $state.go(change, toParams)
            }, 200),
            $(".bottom").show(),
            $rootScope.isMainTemplate = "user.home" === toState.name || "user.simple.home" === toState.name,
            $rootScope.isSimple = toState.name.indexOf("user.simple") > -1,
            $rootScope.previousMainPage = $rootScope.isSimple ? "user.simple.home" : "user.home",
            $rootScope.mainState = mainState,
            $rootScope.isExternalHelp = toState.data && toState.data.isExternalHelp,
            $rootScope.hasExternalHelp = $.config.hasExternalHelp,
            $rootScope.disableHelp = toState.data && toState.data.disableHelp === !0,
            $rootScope.reverseHeaderControls = $.config.reverseHeaderControls,
            $rootScope.isCharter = $.config.showedpages.charter && $.config.showedpages.charter.enable,
            $rootScope.isComhem = $.config.showedpages.comhem && $.config.showedpages.comhem.enable,
            $rootScope.isCharter5280 = $.config.showedpages.charter5280 && $.config.showedpages.charter5280.enable,
            $rootScope.isCharterAll = $rootScope.isCharter || $rootScope.isCharter5280,
            $rootScope.isMyrepublic = $.config.showedpages.myrepublic && $.config.showedpages.myrepublic.enable,
            $rootScope.isTalktalk = $.config.showedpages.talktalk && $.config.showedpages.talktalk.enable,
            $rootScope.isDtagXdsl = $.config.showedpages.dtagXdsl && $.config.showedpages.dtagXdsl.enable,
            $rootScope.isMaelstromCable = $.config.showedpages.maelstromCable && $.config.showedpages.maelstromCable.enable,
            $rootScope.isGet = $.config.showedpages.get && $.config.showedpages.get.enable,
            $rootScope.isSonne = $.config.showedpages.sonne && $.config.showedpages.sonne.enable,
            $rootScope.isTeo = $.config.showedpages.teo && $.config.showedpages.teo.enable,
            $rootScope.isMasmovil = $.config.showedpages.masmovil && $.config.showedpages.masmovil.enable,
            $rootScope.isTotalplay = $.config.showedpages.totalplay && $.config.showedpages.totalplay.enable,
            $rootScope.isCable = $.config.showedpages.isCable && $.config.showedpages.isCable.enable,
            $rootScope.isSiminn = $.config.showedpages.isSiminn && $.config.showedpages.isSiminn.enable,
            $rootScope.isTelia = $.util.hasFeature("telia_eth"),
            $rootScope.masmovil = $.util.hasFeature("masmovil"),
            $rootScope.isFTTHMode = "FTTH" === $basicInfo.getNetInterfaceType(),
            $rootScope.logoWaiting = $.config.logoWaiting && $.config.logoWaiting.enable,
            $rootScope.iconRefresh = $.config.iconRefresh && $.config.iconRefresh.enable,
            $rootScope.isTeliaAir = $.config.showedpages.teliaAir && $.config.showedpages.teliaAir.enable,
            $rootScope.mapEnable = !!$.config.checkMapEnable && $basicInfo.getMapEnable(),
            $rootScope.isTim = $.config.showedpages.tim && $.config.showedpages.tim.enable,
            $rootScope.modelName = $basicInfo.getProductName(),
            $rootScope.serialNumber = $basicInfo.getSerialNumber(),
            $rootScope.wanMacAddress = $basicInfo.getWanMacAddress(),
            $rootScope.isLandPage = "user.landpage" === toState.name,
            $rootScope.displayMtpcp = $basicInfo.getMptcp(),
            $rootScope.readOnly = !1,
            $.config.disableFeaturesRunTime && $.config.disableFeaturesRunTime.length > 0) {
                for (var i = 0; i < $.config.disableFeaturesRunTime.length; i++)
                    $.config.showedpages[$.config.disableFeaturesRunTime[i]] ? $.config.showedpages[$.config.disableFeaturesRunTime[i]].enable = !1 : $.config.showedpages[$.config.disableFeaturesRunTime[i]] = {
                        enable: !1
                    };
                $.config.disableFeaturesRunTime = void 0
            }
            $.xmo.client && !$.util.isSuperUser($.xmo.client.user) || !$.xmo.client ? (countryOverride = $basicInfo.getCountry(),
            $.config.readOnlyPages && $.config.readOnlyPages.indexOf(toState.name) > -1 && ($rootScope.readOnly = !0),
            $.isEmptyObject($.config.countries) || countryOverride && $.config.countries[countryOverride.toLowerCase()] && (countryOverride = countryOverride.toLowerCase(),
            $.config = $.util.mergeRecursive($.config, $.config.countries[countryOverride]),
            $.config.countries = void 0)) : (countryOverride = $basicInfo.getCountry(),
            countryOverride = countryOverride.toLowerCase(),
            !$.isEmptyObject($.config.countries) && countryOverride && $.config.countries[countryOverride] && ($.config.countries[countryOverride].cssTheme && ($.config.cssTheme = $.config.countries[countryOverride].cssTheme),
            $.config.countries[countryOverride].cssLogin && ($.config.cssLogin = $.config.countries[countryOverride].cssLogin))),
            $.isEmptyObject($.config.replaceXpaths) || ($.config.overrideReplaceXpathsByCountry && !$.isEmptyObject($.config.countries) && Auth.isLoggedIn() && (countryOverride = $.xmo.getValuesTree($.xpaths.management.country),
            countryOverride && $.config.countries[countryOverride.toLowerCase()] && (countryOverride = countryOverride.toLowerCase(),
            $.config.replaceXpaths = $.util.mergeRecursive($.config.replaceXpaths, $.config.countries[countryOverride].replaceXpaths),
            $.config.countries = void 0)),
            $rootScope.callSettingsAdvancedLines = !1,
            $.util._replaceXpathRecursive($.config.replaceXpaths, $.xpaths),
            $.util.hasFeature("dtagXdsl") && $.config.showedpages.callSettingsAdvancedLines && !$.config.showedpages.callSettingsAdvancedLines.enable && ($rootScope.callSettingsAdvancedLines = !0))
        } else if (event.preventDefault(),
        Auth.isLoggedIn())
            toState.name ? $state.go(toState.name, toParams) : $state.go(mainState);
        else {
            var fnGo = function(autoLogin) {
                autoLogin ? $state.go("anon.autologin") : $state.go(loginState, {
                    user: Auth.user.username
                })
            };
            if ("undefined" != typeof SboxInterface) {
                var autoLogin = SboxInterface.IsAutoLogin();
                void 0 === autoLogin ? SboxInterface.IsAutoLogin(fnGo) : fnGo(autoLogin)
            } else
                fnGo(!1)
        }
        var splashStatus = $basicInfo.getSplashStatus();
        !$.config.showedpages.splashScreenNoInternet || !$.config.showedpages.splashScreenNoInternet.enable || "NOINTERNET" !== splashStatus || $rootScope.currentRouteName && $rootScope.currentRouteName === $.config.showedpages.splashScreenNoInternet.route || Auth.isLoggedIn() ? !$.config.showedpages.splashScreenFirmwareUpgrade || !$.config.showedpages.splashScreenFirmwareUpgrade.enable || "FIRMWAREUPGRADE" !== splashStatus || $rootScope.currentRouteName && $rootScope.currentRouteName === $.config.showedpages.splashScreenFirmwareUpgrade.route || Auth.isLoggedIn() || fromState.name !== $.config.showedpages.splashScreenFirmwareUpgrade.route && setTimeout(function() {
            $state.go($.config.showedpages.splashScreenFirmwareUpgrade.route)
        }, 0) : fromState.name !== $.config.showedpages.splashScreenNoInternet.route ? setTimeout(function() {
            $state.go($.config.showedpages.splashScreenNoInternet.route)
        }, 0) : localStorage.setItem("splashScreenNoInternet", !0),
        "user.accessControl.parentalControl.planning" === toState.name && CheckFeature.go("parentalControlTimeslot") && setTimeout(function() {
            $state.go("user.accessControl.parentalControl.planningTimeslot")
        }, 200),
        !changedToFast && $.xmo.loggedin() && checkChangedToFast && changeDSLToFast(),
        "user.maintenance.internetUtilities" !== toState.name || CheckFeature.go("internetUtilities") || setTimeout(function() {
            $state.go("user.home")
        }, 0),
        $rootScope.goBack = function() {
            try {
                $state.go(toState.data.parentState)
            } catch (e) {
                $state.go("user.home")
            }
        }
        ,
        $rootScope.$broadcast("updateStatusInternet")
    }),
    $rootScope.$on("$viewContentLoaded", function(event) {
        $("#helpButton").css("opacity", "1"),
        $rootScope.isMobile && (window.scrollTo(0, 0),
        "undefined" != typeof SboxInterface && "function" == typeof SboxInterface.getAppVersion && (SboxInterface.getAppVersion() ? $rootScope.appVersion = SboxInterface.getAppVersion() : SboxInterface.getAppVersion(function(version) {
            $rootScope.appVersion = version
        }))),
        setTabsClass(),
        $("#tooltip").hide(),
        $("#highlight-x").hide(),
        $.util.checkUrlParams("code") || $rootScope.$evalAsync(function() {
            $timeout(function() {
                $rootScope.globalWait = !1
            }, 1)
        }),
        $(".reveal-modal-bg").hide(),
        $(".reveal-modal").hide(),
        tl.pg.destroy();
        var langKey = $basicInfo.getLanguage();
        $timeout(function() {
            $rootScope.pg = tl.pg.init({
                custom_open_button: "#helpButton",
                auto_refresh: !0,
                refresh_interval: 150,
                close: $.globals.close[langKey],
                closeTitle: $.globals.closeGuide[langKey],
                nextTitle: $.globals.next[langKey],
                previousTitle: $.globals.previous[langKey]
            })
        }, 500),
        $rootScope.formToWatch = "",
        $rootScope.formSerialStr = "",
        $rootScope.flagWatchForm = !1
    })
}),
sboxApp.directive("messagebox", function() {
    return {
        restrict: "A",
        controller: function($rootScope, $timeout, $basicInfo) {
            $rootScope.$watch("showMessage", function(newValue, oldValue) {
                if (void 0 !== newValue && void 0 === oldValue) {
                    var selector = newValue ? ".alert-box.success" : ".alert-box.error"
                      , defaultMessage = newValue ? $.globals.saved[$basicInfo.getLanguage()] : $.globals.errorMessage[$basicInfo.getLanguage()];
                    $rootScope.changedData = !newValue,
                    $(document).scrollTop(0),
                    newValue && $rootScope.deleted ? selector += ".deleted" : $rootScope.rescan ? selector += ".rescan" : (selector += ".default",
                    $rootScope.customMessage ? $(selector + " span").html($.util.normalizeString($rootScope.customMessage, $basicInfo.getLanguage())) : $(selector + " span").html(defaultMessage)),
                    $(selector).fadeIn("fast"),
                    $timeout(function() {
                        $(selector).fadeOut("fast"),
                        $rootScope.customMessage = void 0,
                        $rootScope.deleted = void 0,
                        $rootScope.rescan = void 0,
                        $rootScope.showMessage = void 0
                    }, 3e3)
                }
            })
        },
        template: '<div data-alert class="alert-box radius success default" style="display: none;" translate="saved"></div><div data-alert class="alert-box radius success deleted" style="display: none;" translate="removed"></div><div data-alert class="alert-box radius error default" style="display: none;"><i class="fa fa-exclamation-triangle fa-center error"></i><span translate="errorMessage"></span></div><div data-alert class="alert-box radius success rescan" style="display: none;" translate="rescanMessage"></div>'
    }
}),
sboxApp.directive("accessLevel", ["Auth", function(Auth) {
    return {
        restrict: "A",
        link: function($scope, element, attrs) {
            function updateCSS() {
                userRole && accessLevel && (Auth.authorize(accessLevel, userRole) ? element.css("display", prevDisp) : element.css("display", "none"))
            }
            var userRole, accessLevel, prevDisp = element.css("display");
            $scope.user = Auth.user,
            $scope.$watch("user", function(user) {
                userRole = user.role,
                updateCSS()
            }, !0),
            attrs.$observe("accessLevel", function(al) {
                al && (accessLevel = $scope.$eval(al)),
                updateCSS()
            })
        }
    }
}
]),
sboxApp.directive("callControllerMethod", ["$rootScope", function($rootScope) {
    return {
        link: function(scope, elem, attr, ctrl) {
            attr.$observe("callControllerMethod", function(value) {
                elem.bind("click", function() {
                    var elementControllerId = $(".content .content .content").attr("id")
                      , mustCall = -1 !== $.inArray(elementControllerId, $.constants.controllerIDs)
                      , el = $(elementControllerId && mustCall ? ".content #" + elementControllerId : ".content")
                      , doClick = void 0 !== attr.forceMethod || $rootScope.needToBeSaved !== !1;
                    "disabled" !== angular.element(elem).attr("disabled") && doClick && (angular.element(el).scope()[value](),
                    angular.element(el).scope().$digest(),
                    angular.element(el).scope().$$phase || angular.element(el).scope().$digest())
                })
            })
        }
    }
}
]),
sboxApp.directive("clickLoading", ["$rootScope", "$timeout", "$window", "$state", function($rootScope, $timeout, $window, $state) {
    return {
        priority: 1,
        link: function(scope, element) {
            var leFunction = function(e) {
                if ($(this).parent().hasClass("active") && "user.home" !== $(this).attr("ui-sref"))
                    return void $(this).prop("clicked", !1);
                var self = this
                  , propTmp = $(self).prop("href")
                  , attrTmp = $(self).attr("href")
                  , theRealDeal = void 0 !== propTmp ? propTmp : attrTmp;
                if ($window.location.href !== theRealDeal && !$rootScope.changedData) {
                    var toState = $(self).attr("ui-sref");
                    return "user.home" !== toState && "user.simple.home" !== toState ? $rootScope.loading = !0 : $rootScope.globalWait = !0,
                    $rootScope.$digest(),
                    $timeout(function() {
                        theRealDeal.indexOf("/#/") === theRealDeal.length - 3 ? $state.go("user.home") : $window.location = theRealDeal
                    }, 150),
                    e.preventDefault(),
                    !1
                }
            };
            $(element).on("click", leFunction)
        }
    }
}
]),
sboxApp.directive("clickLoadingMenuVertical", ["$rootScope", "$timeout", "$window", "$state", function($rootScope, $timeout, $window, $state) {
    return {
        priority: 1,
        link: function(scope, element) {
            var leFunction = function(e) {
                var parent = $(this).parent();
                if (parent.hasClass("tabPrincipal") && "user.home" !== $(this).attr("ui-sref") && "none" !== parent.next("dd").css("display"))
                    return 0 === parent.nextUntil(".tabPrincipal").length && $(".tabPrinc dd:not(.tabPrincipal)").hide(),
                    $(this).prop("clicked", !1),
                    parent.removeClass("active"),
                    void ($rootScope.loading = !0);
                $(".tabPrincipal-sub-basic").removeClass("active");
                var self = this
                  , propTmp = $(self).prop("href")
                  , attrTmp = $(self).attr("href")
                  , theRealDeal = void 0 !== propTmp ? propTmp : attrTmp;
                if ($window.location.href !== theRealDeal && !$rootScope.changedData) {
                    var toState = $(self).attr("ui-sref");
                    return "user.home" !== toState && "user.simple.home" !== toState ? $rootScope.loading = !0 : $rootScope.globalWait = !0,
                    $rootScope.$digest(),
                    $timeout(function() {
                        theRealDeal.indexOf("/#/") === theRealDeal.length - 3 ? $state.go("user.home") : $window.location = theRealDeal
                    }, 50),
                    e.preventDefault(),
                    !1
                }
            };
            $(element).on("click", leFunction)
        }
    }
}
]),
sboxApp.directive("clearValidationOnFocus", function() {
    return {
        require: "ngModel",
        restrict: "A",
        link: function(scope, element, attr, ctrl) {
            element.bind("focus", function() {
                ctrl.$valid = !0,
                ctrl.$invalid = !1,
                scope.$digest()
            })
        }
    }
}),
sboxApp.directive("hourFormat", function() {
    return {
        link: function(scope, elem, attr, ctrl) {
            attr.$observe("hourFormat", function(interpolatedValue) {
                if (interpolatedValue) {
                    for (var array = interpolatedValue.split(":"), x = 0; x < array.length; x++)
                        1 === array[x].length && (array[x] = "0" + array[x]);
                    elem.html(array.join(":"))
                } else
                    elem.html("")
            })
        }
    }
}),
sboxApp.directive("internetConnectivity", ["$rootScope", "Statistics", "CheckFeature", function($rootScope, Statistics, CheckFeature) {
    var getCurrentTemplateUrl = function() {
        return $.config.hasRIPv2 === !0 && Statistics.isRIPv2Enable() ? "views/partials/internet-connectivity-ripv2.html" : "views/partials/internet-connectivity.html"
    }
      , updateInternetStatus = function() {
        $rootScope.connectivity = Statistics.getConnectivityStats(),
        $rootScope.connectivity.status = $rootScope.connectivity.status || $rootScope.connectivity.sfpStatus || $rootScope.connectivity.backupWanStatus || "OPERATIONAL" === $rootScope.connectivity.connectionMode,
        $rootScope.addressingType = $.config.modules.internetConnectivity.showAddressingType ? $rootScope.connectivity.addressingType : "",
        $rootScope.mapEnable = $.config.checkMapEnable === !0 && CheckFeature.mapEnable === !0
    };
    return $rootScope.$on("updateStatusInternet", updateInternetStatus),
    {
        link: function(scope, elem, attr, ctrl) {
            updateInternetStatus()
        },
        templateUrl: getCurrentTemplateUrl()
    }
}
]),
sboxApp.directive("numericErrorMessage", ["$compile", function($compile) {
    var template1 = '<span translate="invalidValueInit"></span>&nbsp;'
      , templatesGreater = [];
    templatesGreater[0] = "",
    templatesGreater[1] = '<span translate="greaterThan"></span>&nbsp;',
    templatesGreater[2] = '<span translate="greaterThanE"></span>&nbsp;';
    var templateAnd = [];
    templateAnd[0] = "",
    templateAnd[1] = '<span translate="and"></span>&nbsp;';
    var templatesLower = [];
    return templatesLower[0] = "",
    templatesLower[1] = '<span translate="lowerThan"></span>&nbsp;',
    templatesLower[2] = '<span translate="lowerThanE"></span>&nbsp;',
    {
        scope: {
            numericErrorMessage: "=",
            lower: "=",
            upper: "="
        },
        link: function(scope, elem, attr, ctrl) {
            var lower = attr.lower ? scope.$eval(attr.lower) : ""
              , upper = attr.upper ? scope.$eval(attr.upper) : ""
              , options = parseInt(scope.$eval(attr.numericErrorMessage), 10)
              , masterTemplate = template1 + templatesGreater[Math.round(options / 10)] + lower + templateAnd[Math.round(options / 10) && options % 10 ? 1 : 0] + templatesLower[options % 10] + upper;
            elem.html(masterTemplate),
            $compile(elem.contents())(scope)
        }
    }
}
]),
sboxApp.directive("updateReferenceList", function() {
    return {
        restrict: "A",
        scope: {
            baseLine: "=",
            updateReferenceList: "=",
            endPoint: "="
        },
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var _translatePhyInterfaceList = function(referenceList, current, currentSituation) {
                var result = [];
                return $.each(referenceList, function(id, status) {
                    var compare = status;
                    id === current && (compare = currentSituation),
                    compare && result.push(id)
                }),
                result.join(",")
            };
            ctrl.$parsers.unshift(function(value) {
                var existingList = scope.updateReferenceList;
                return scope.baseLine.PhyReferenceList = _translatePhyInterfaceList(existingList, elem.val(), value),
                value
            })
        }
    }
}),
sboxApp.directive("validateIp", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var isValid = function(value) {
                var valid = !0;
                if ("ignore" === attr.validateIp)
                    valid = !0;
                else if ("subnetmask" === attr.validateIp) {
                    var masksToCheck = [];
                    masksToCheck = scope.prefixLength ? MASKS.slice(scope.prefixLength) : MASKS.slice(24),
                    valid = value && $.inArray(value, masksToCheck) > -1
                } else
                    valid = "mask" === attr.validateIp ? value && $.inArray(value, MASKS) > -1 : "not.required" === attr.validateIp ? "" === value || $.util.checkIP(value) : $.util.checkIP(value);
                return ctrl.$setValidity("ip", valid || $(elem).is("select")),
                valid
            };
            ctrl.$parsers.unshift(function(value) {
                var t = isValid(value);
                return t ? value : void 0
            }),
            ctrl.$formatters.unshift(function(value) {
                if ($(elem).is("select")) {
                    var isThere = !1;
                    if ($.each(scope.activeDevices, function(i, obj) {
                        return obj.ipAddress === value && (isThere = !0),
                        !isThere
                    }),
                    !isThere)
                        return ""
                }
                return isValid(value),
                value
            }),
            attr.$observe("validateIp", function(tmp) {
                tmp && isValid(elem.val())
            })
        }
    }
}),
sboxApp.directive("validateIpList", function() {
    return {
        restrict: "A",
        scope: {
            currentList: "=",
            currentUid: "="
        },
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var isValid = function(value) {
                var valid = !0;
                return $(scope.currentList || []).each(function(i, obj) {
                    return $.util.isNumeric(scope.currentUid) && scope.currentUid === obj.uid ? !0 : obj.ip === value ? valid = !1 : void 0
                }),
                ctrl.$setValidity("ip", valid),
                valid
            };
            ctrl.$parsers.unshift(function(value) {
                var t = isValid(value);
                return t ? value : void 0
            }),
            ctrl.$formatters.unshift(function(value) {
                return isValid(value),
                value
            }),
            scope.$watch("currentUid", function() {
                isValid(elem.val())
            }, !0),
            scope.$watch("currentList", function() {
                isValid(elem.val())
            }, !0)
        }
    }
}),
sboxApp.directive("validateDhcpTvIp", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var setValidity = function(value) {
                var valid = !1;
                return attr.startIp && value && $.util.compareIp(attr.startIp, value) && (valid = !0),
                ctrl.$setValidity("dhcpTvIp", valid),
                valid
            };
            attr.$observe("startIp", function() {
                setValidity(elem.val())
            }),
            attr.$observe("watchThis", function(tmp) {
                tmp && ("true" === tmp ? setValidity(elem.val()) : ctrl.$setValidity("dhcpTvIp", !0))
            }),
            ctrl.$parsers.unshift(function(value) {
                return setValidity(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return setValidity(value),
                value
            })
        }
    }
}),
sboxApp.directive("validateLanIp", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var extraInfos = {}
              , setValidity = function(ip) {
                var valid = !1;
                return "not.required" === attr.validateLanIp && (valid = "" === ip),
                "ignore.mask" === attr.validateLanIp && (ip = ip.split("/"),
                ip = ip[0]),
                valid = valid || $.util.checkLanIp(ip, extraInfos.gateway, extraInfos.mask),
                ctrl.$setValidity("lanIp", valid || extraInfos.watchThis === !1),
                valid
            };
            scope.$watch("gatewayIp", function(gatewayIp) {
                extraInfos.gateway = gatewayIp,
                setValidity(elem.val())
            }, !0),
            attr.$observe("watchThis", function(tmp) {
                void 0 !== tmp && null !== tmp && (extraInfos.watchThis = "true" === tmp,
                setValidity(elem.val()))
            }),
            scope.$watch("subnetMask", function(subnetMask) {
                extraInfos.mask = subnetMask,
                setValidity(elem.val())
            }, !0),
            ctrl.$parsers.unshift(function(value) {
                return setValidity(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return setValidity(value),
                value
            }),
            attr.$observe("validateLanIp", function() {
                setValidity(elem.val())
            })
        }
    }
}),
sboxApp.directive("validateMac", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var isValid = function(value) {
                var valid = !1;
                return valid = "not.required" === attr.validateMac ? "" === value || $.util.checkMacAddress(value) : $.util.checkMacAddress(value)
            };
            ctrl.$parsers.unshift(function(value) {
                var valid = isValid(value);
                return ctrl.$setValidity("validMac", valid || $(elem).is("select")),
                valid ? value : void 0
            }),
            ctrl.$formatters.unshift(function(value) {
                if ($(elem).is("select")) {
                    var isThere = !1;
                    if ($.each(scope.activeDevices, function(i, obj) {
                        return obj.PhysAddress === value && (isThere = !0),
                        !isThere
                    }),
                    !isThere)
                        return ""
                }
                return ctrl.$setValidity("validMac", isValid(value)),
                value
            })
        }
    }
}),
sboxApp.directive("validateMin", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            scope.$watch(attr.validateMin, function() {
                ctrl.$setViewValue(ctrl.$viewValue)
            });
            var minValidator = function(value) {
                var min = scope.$eval(attr.validateMin) || 0;
                return value = parseInt(value, 10),
                !$.util.isEmpty(value) && min > value ? void ctrl.$setValidity("validateMin", !1) : (ctrl.$setValidity("validateMin", !0),
                value)
            };
            ctrl.$parsers.push(minValidator)
        }
    }
}),
sboxApp.directive("validateMax", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            scope.$watch(attr.validateMax, function() {
                ctrl.$setViewValue(ctrl.$viewValue)
            });
            var maxValidator = function(value) {
                var max = scope.$eval(attr.validateMax) || 1 / 0;
                return !$.util.isEmpty(value) && value > max ? void ctrl.$setValidity("validateMax", !1) : (ctrl.$setValidity("validateMax", !0),
                value)
            };
            ctrl.$parsers.push(maxValidator)
        }
    }
}),
sboxApp.directive("validateDhcpRange", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var extraInfos = {}
              , triggerName = "validate_" + attr.name;
            $.util.settingUpTrigger({
                scope: scope,
                name: triggerName
            }, function() {
                setValidity(elem.val())
            });
            var setValidity = function(ip) {
                var valid = !0;
                try {
                    ($.util.compareIp(ip, extraInfos.ipStart) || $.util.compareIp(extraInfos.ipEnd, ip)) && ip !== extraInfos.ipStart && ip !== extraInfos.ipEnd && (valid = !1)
                } catch (e) {
                    valid = !1
                }
                return ctrl.$setValidity("invalidRange", valid),
                valid
            };
            scope.$watch("ipv4PoolStart", function(ipv4PoolStart) {
                extraInfos.ipStart = ipv4PoolStart,
                setValidity(elem.val())
            }, !0),
            scope.$watch("ipv4PoolEnd", function(ipv4PoolEnd) {
                extraInfos.ipEnd = ipv4PoolEnd,
                setValidity(elem.val())
            }, !0),
            ctrl.$parsers.unshift(function(value) {
                return setValidity(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return setValidity(value),
                value
            })
        }
    }
}),
sboxApp.directive("validateUnique", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var extraInfos = {}
              , setValidity = function(value) {
                var valid = !0;
                $(scope.listMac).each(function(i) {
                    return parseInt(attr.listMacIndex, 10) === i ? valid = !0 : null !== value && (void 0 === this.Chaddr && void 0 !== this.MACAddress && (this.Chaddr = this.MACAddress),
                    "mac" === attr.validateUnique && void 0 !== this.Chaddr && void 0 !== value && this.Chaddr.toUpperCase() === value.toUpperCase() ? valid = !1 : "ip" === attr.validateUnique && this.Yiaddr === value && (valid = !1)),
                    valid
                }),
                "mac" === attr.validateUnique ? ctrl.$setValidity("invalidUniqueMac", valid) : "ip" === attr.validateUnique && (valid ? ctrl.$setValidity("invalidUniqueIp", !$.util.checkIpInUse(scope.mac, scope.hosts)) : ctrl.$setValidity("invalidUniqueIp", valid))
            };
            scope.$watch("listMac", function(listMac) {
                extraInfos.listMac = listMac,
                setValidity(elem.val())
            }, !0),
            ctrl.$parsers.unshift(function(value) {
                return setValidity(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return setValidity(value),
                value
            })
        }
    }
}),
sboxApp.directive("validateWifiPassword", function() {
    return {
        restrict: "A",
        scope: {
            securityMode: "="
        },
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var _attrSecurityMode = attr.securityMode
              , setValidPassword = function(value) {
                var valid = !0
                  , validLength = {
                    valid: !0
                };
                scope.securityMode || _attrSecurityMode || null;
                return validLength = $.util.validSpecificPasswordLength(scope.securityMode, value),
                validLength.valid && (valid = $.util.validPasswordCharacters(scope.securityMode, value)),
                ctrl.$setValidity("invalidPasswordLength", validLength.valid),
                ctrl.$setValidity("minLengthError", "minLengthError" === validLength.error ? !1 : !0),
                ctrl.$setValidity("maxLengthError", "maxLengthError" === validLength.error ? !1 : !0),
                ctrl.$setValidity("invalidPassword", valid),
                valid && validLength.valid
            };
            scope.$watch("securityMode", function(newSecurityMode) {
                setValidPassword(elem.val())
            }, !0),
            ctrl.$parsers.unshift(function(value) {
                return setValidPassword(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return setValidPassword(value),
                value
            })
        }
    }
}),
sboxApp.directive("validateAdminPassword", function() {
    return {
        restrict: "A",
        scope: {},
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var setValidPassword = function(value) {
                var valueLength = value ? value.length : 0
                  , validMax = valueLength > 32
                  , validMin = valueLength > 0 && 8 > valueLength;
                return ctrl.$setValidity("minLengthError", !validMin),
                ctrl.$setValidity("maxLengthError", !validMax),
                validMin && validMax
            };
            ctrl.$parsers.unshift(function(value) {
                return setValidPassword(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return setValidPassword(value),
                value
            })
        }
    }
}),
sboxApp.directive("validatePasswordFields", function() {
    return {
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            if ($.config.modules.wifi.dual && scope.radios) {
                var passwordRadio = attr.passwordRadio;
                ctrl.$parsers.unshift(function(value) {
                    return ctrl.$setValidity("passwordVerify", scope.radios[passwordRadio].password === value),
                    value
                }),
                scope.$watch("radios['" + passwordRadio + "'].password", function(newValue) {
                    ctrl.$setValidity("passwordVerify", scope.radios[passwordRadio].confirmPassword === newValue)
                })
            } else
                scope.user ? (ctrl.$parsers.unshift(function(value) {
                    return ctrl.$setValidity("passwordVerify", scope.user.password === value),
                    value
                }),
                scope.$watch("user.password", function(newValue) {
                    ctrl.$setValidity("passwordVerify", scope.user.confirmPassword === newValue)
                })) : (ctrl.$parsers.unshift(function(value) {
                    return ctrl.$setValidity("passwordVerify", scope.password === value),
                    value
                }),
                scope.$watch("password", function(newValue) {
                    ctrl.$setValidity("passwordVerify", scope.confirmPassword === newValue)
                }))
        }
    }
}),
sboxApp.directive("validatePin", function() {
    return {
        restrict: "A",
        scope: {
            allowEmpty: "=allowEmpty"
        },
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var validate = function(value) {
                if (void 0 !== value) {
                    var v = $.util.validatePin(value, attr.validatePin);
                    return scope.allowEmpty === !0 && (v = v || null === value || "" === value),
                    ctrl.$setValidity("pin", v),
                    v
                }
            };
            ctrl.$parsers.unshift(function(value) {
                return validate(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return validate(value),
                value
            })
        }
    }
}),
sboxApp.directive("validatePort", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var flag = !1
              , validate = function(value) {
                if (void 0 !== value) {
                    if (void 0 === flag || flag) {
                        var v = $.util.checkPort(value) || "" === value;
                        return ctrl.$setValidity("port", v),
                        v
                    }
                    return ctrl.$setValidity("port", !0),
                    !0
                }
            };
            scope.$watch(elem.attr("validate-port"), function(newValue, oldValue) {
                flag = newValue,
                validate(elem.val())
            }),
            ctrl.$parsers.unshift(function(value) {
                return validate(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return validate(value),
                value
            })
        }
    }
}),
sboxApp.directive("validatePortRange", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var flag = !1
              , validate = function(value) {
                if (void 0 !== value) {
                    if (void 0 === flag || flag) {
                        var portRange, source = value.toString().split("-"), port = source[0];
                        portRange = 2 !== source.length ? 0 : source[1];
                        var rs = !0;
                        return (!$.util.checkPort(port) || !$.util.checkPort(portRange) || parseInt(portRange, 10) > 0 && parseInt(port, 10) > parseInt(portRange, 10)) && (rs = !1),
                        ctrl.$setValidity("portRange", rs),
                        rs
                    }
                    return ctrl.$setValidity("portRange", !0),
                    !0
                }
            };
            scope.$watch(elem.attr("validate-port-range"), function(newValue, oldValue) {
                flag = newValue,
                validate(elem.val())
            }),
            ctrl.$parsers.unshift(function(value) {
                return validate(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return validate(value),
                value
            })
        }
    }
}),
sboxApp.directive("validateTrustedIp", function() {
    return {
        restrict: "A",
        scope: {
            trustedIps: "=",
            currentUid: "="
        },
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var unique = function(value) {
                if (value) {
                    var ip = value.split("/")
                      , prefix = ip[1] || 32;
                    prefix = parseInt(prefix, 10);
                    var v = void 0 !== MASKS[prefix];
                    if (!v)
                        return ctrl.$setValidity("trustedIp", v),
                        v;
                    if (v = $.util.checkIP(ip[0]),
                    !v)
                        return ctrl.$setValidity("trustedIp", v),
                        v;
                    var match = !0
                      , conflict = !1
                      , networkInfo = $.util.getNetworkInfo(ip[0], MASKS[prefix]);
                    return $.each(scope.trustedIps || [], function(j) {
                        var tValue = scope.trustedIps[j].ip.split("/");
                        if ($.util.isNumeric(scope.currentUid) && scope.currentUid === scope.trustedIps[j].uid)
                            return !0;
                        if ($.util.endsWith(tValue[0], ".0"))
                            return !0;
                        var thisInfo = $.util.getNetworkInfo(tValue[0], MASKS[tValue[1]] || MASKS[32]);
                        return thisInfo.first === networkInfo.first || thisInfo.first === networkInfo.last ? (conflict = !0,
                        !1) : thisInfo.last === networkInfo.first || thisInfo.last === networkInfo.last ? (conflict = !0,
                        !1) : ($.util.compareIp(thisInfo.first, networkInfo.last) && $.util.compareIp(networkInfo.last, thisInfo.last) && (conflict = !0),
                        !conflict)
                    }),
                    ctrl.$setValidity("trustedIp", match && !conflict),
                    match
                }
                return ctrl.$setValidity("trustedIp", "" === value),
                !1
            };
            scope.$watch("currentUid", function(currentUid) {
                unique(elem.val())
            }, !0),
            scope.$watch("trustedIps", function(trustedIps) {
                unique(elem.val())
            }, !0),
            ctrl.$parsers.unshift(function(value) {
                return unique(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return unique(value),
                value
            })
        }
    }
}),
sboxApp.directive("validateUrl", function() {
    return {
        restrict: "A",
        scope: {
            ignoreProtocol: "=",
            ignoreAll: "="
        },
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var validate = function(value) {
                if (void 0 !== value) {
                    var v = !0;
                    return "" === value || scope.ignoreAll ? v = !0 : (v = $.util.checkIP(value) || $.util.checkHostname(value) || $.util.checkUrl(value),
                    !v && scope.ignoreProtocol && (v = $.util.checkUrl("http://" + value))),
                    ctrl.$setValidity("url", v),
                    v
                }
            };
            scope.$watch("ignoreAll", function(value) {
                validate(elem.val())
            }, !0),
            ctrl.$parsers.unshift(function(value) {
                return validate(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return validate(value),
                value
            })
        }
    }
}),
sboxApp.directive("wait", function($timeout, $window, $state) {
    return {
        restrict: "A",
        link: function(scope) {
            var timeoutPromise, setScroll = function(value) {
                "top" === $.config.globalWaitPosition && (value ? $("body").css("overflow", "auto") : ($(window).scrollTop(0),
                $("body").css("overflow", "hidden")))
            };
            scope.globalWait = !1,
            scope.$watch("globalWait", function(newValue, oldValue) {
                newValue !== !0 || oldValue ? (scope.globalWait = !1,
                $timeout.cancel(timeoutPromise),
                setScroll(!0),
                $(".page-loading").length > 0 && $(".page-loading").removeClass("ng-hide")) : (setScroll(!1),
                timeoutPromise = $timeout(function() {
                    scope.globalWait = !1,
                    $window.location.href = $state.current.url,
                    setScroll(!0)
                }, $.constants.waitMessageTimeout),
                $(".page-loading").length > 0 && $(".page-loading").addClass("ng-hide"))
            })
        },
        template: '<div ng-if="globalWait"><div class="coverOperation">&nbsp;</div><div class="coverOperationMsg" style="position:fixed"><div class="coverOperationMsg1">&nbsp;</div><div class="brand" check-feature-state="logoWait">&nbsp;</div><div translate="pleaseWaitLoading" class="coverOperationMsg2">&nbsp;</div></div></div>'
    }
}),
sboxApp.directive("checkFeatureState", ["CheckFeature", "$state", "Auth", function(CheckFeature, $state, Auth) {
    return {
        link: function(scope, elem, attr, ctrl) {
            CheckFeature.updateCache();
            var rename = CheckFeature.rename(attr.checkFeatureState);
            rename && rename !== elem.text() && ($(elem).html() === $(elem).text() ? $(elem).text(rename) : $(elem).find("*").each(function() {
                $(this).html() === $(this).text() && $(this).text(rename)
            })),
            CheckFeature.go(attr.checkFeatureState) ? ($(elem).show(),
            $(elem).removeClass("ng-hide")) : ($(elem).hide(),
            $(elem).addClass("ng-hide")),
            $(elem).find("[ui-sref]:not(.headerLink)").each(function(i) {
                var state = $(this).attr("ui-sref");
                state = state.replace(/\(.*\)/, "");
                var stateObj = $state.get(state);
                (null === stateObj || stateObj && !Auth.authorize(stateObj.data.access)) && $(this).parent().hide()
            })
        }
    }
}
]),
sboxApp.directive("checkUnsaved", ["$timeout", function($timeout) {
    return {
        restrict: "A",
        controller: function($rootScope, $scope) {
            $scope.initCheckUnsaved = function(param) {
                $rootScope.formToWatch = param,
                $rootScope.formSerialStr = $('form[name="' + param + '"]').serialize(),
                $rootScope.flagWatchForm = !0
            }
        },
        link: function(scope, elem, attr) {
            $timeout(function() {
                scope.initCheckUnsaved(attr.name)
            }, 0),
            scope.$watch(attr.name + ".$pristine", function(val) {
                val && $timeout(function() {
                    scope.initCheckUnsaved(attr.name)
                }, 500)
            })
        }
    }
}
]),
sboxApp.directive("forbiddenIp", ["$timeout", function($timeout) {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attrs, ctrl) {
            var triggerName = "validate_" + attrs.name;
            $.util.settingUpTrigger({
                scope: scope,
                name: triggerName
            }, function() {
                _validate($(elem).val())
            });
            var _validatePPPDataModels = function(val) {
                var b = !0
                  , index = 0;
                for (scope.forbiddenIps.ips.dataModels = $.util.fixGetValuesTree(scope.forbiddenIps.ips.dataModels); b && index < scope.forbiddenIps.ips.dataModels.length; ) {
                    var pppDataModelIp = $.util.getIpFromDataModelUrl(scope.forbiddenIps.ips.dataModels[index]);
                    if (null !== pppDataModelIp)
                        switch (pppDataModelIp = pppDataModelIp[0],
                        attrs.range) {
                        case "start":
                            b = !$.util.ipInRange(pppDataModelIp, val, scope.ipv4PoolEnd);
                            break;
                        case "end":
                            b = !$.util.ipInRange(pppDataModelIp, scope.ipv4PoolStart, val);
                            break;
                        case "tvStart":
                            b = !$.util.ipInRange(pppDataModelIp, val, scope.ipv4TvPoolEnd);
                            break;
                        case "tvEnd":
                            b = !$.util.ipInRange(pppDataModelIp, scope.ipv4TvPoolStart, val);
                            break;
                        default:
                            b = pppDataModelIp === val == !1
                        }
                    index++
                }
                return b
            }
              , _validateOpenWifiPool = function(val) {
                var c = !0;
                return c = !(scope.forbiddenIps.ips.openWifiInterface && val === scope.forbiddenIps.ips.openWifiInterface),
                c = c && !(scope.forbiddenIps.ips.openWifiMinAddress && scope.forbiddenIps.ips.openWifiMaxAddress && $.util.ipInRange(val, scope.forbiddenIps.ips.openWifiMinAddress, scope.forbiddenIps.ips.openWifiMaxAddress))
            }
              , _validateOpenWifiInterface = function(val) {
                return !(scope.forbiddenIps.ips.openWifiIpInterface && scope.forbiddenIps.ips.openWifiIpSubnet && $.util.checkLanIp(val, scope.forbiddenIps.ips.openWifiIpInterface, scope.forbiddenIps.ips.openWifiIpSubnet))
            }
              , _validatePPPInterfaces = function(val) {
                var d = !0
                  , startField = "ipv4PoolStart"
                  , endField = "ipv4PoolEnd";
                if (attrs.range && attrs.range.indexOf("tv") > -1 && (startField = "ipv4TvPoolStart",
                endField = "ipv4TvPoolEnd"),
                scope.forbiddenIps.validations.pppDslStatus === $.constants.status.up) {
                    var isLocalIPDefined = scope.forbiddenIps.ips.pppDslDataLocalIp ? !0 : !1
                      , isRemoteIPDefined = scope.forbiddenIps.ips.pppDslDataRemoteIp ? !0 : !1;
                    attrs.range ? (d = !(isLocalIPDefined && (val === scope.forbiddenIps.ips.pppDslDataLocalIp || $.util.ipInRange(scope.forbiddenIps.ips.pppDslDataLocalIp, scope[startField], scope[endField]))),
                    d = d && !(isRemoteIPDefined && (val === scope.forbiddenIps.ips.pppDslDataRemoteIp || $.util.ipInRange(scope.forbiddenIps.ips.pppDslDataRemoteIp, scope[startField], scope[endField])))) : d = !(isLocalIPDefined && val === scope.forbiddenIps.ips.pppDslDataLocalIp || isRemoteIPDefined && val === scope.forbiddenIps.ips.pppDslDataRemoteIp)
                }
                if (scope.forbiddenIps.validations.pppFtthStatus === $.constants.status.up) {
                    var isFTTHLocalIPDefined = scope.forbiddenIps.ips.pppFtthDataLocalIp ? !0 : !1
                      , isFTTHRemoteIPDefined = scope.forbiddenIps.ips.pppFtthDataRemoteIp ? !0 : !1;
                    attrs.range ? (d = !(isFTTHLocalIPDefined && (val === scope.forbiddenIps.ips.pppFtthDataLocalIp || $.util.ipInRange(scope.forbiddenIps.ips.pppFtthDataLocalIp, scope[startField], scope[endField]))),
                    d = d && !(isFTTHRemoteIPDefined && (val === scope.forbiddenIps.ips.pppFtthDataRemoteIp || $.util.ipInRange(scope.forbiddenIps.ips.pppFtthDataRemoteIp, scope[startField], scope[endField])))) : d = !(isFTTHLocalIPDefined && val === scope.forbiddenIps.ips.pppFtthDataLocalIp || isFTTHRemoteIPDefined && val === scope.forbiddenIps.ips.pppFtthDataRemoteIp)
                }
                return d
            }
              , _validateQuantennaAndUpnp = function(val) {
                var e = !0;
                return $.each(scope.forbiddenIps.ips, function(key, value) {
                    var keyTmp = value ? key.toLowerCase() : "";
                    return !keyTmp || -1 === keyTmp.indexOf("quantenna") && -1 === keyTmp.indexOf("upnp") ? void 0 : e = !(value === val || $.util.ipInRange(value, scope.ipv4PoolStart, scope.ipv4PoolEnd) || scope.ipv4TvPoolStart && scope.ipv4TvPoolEnd && $.util.ipInRange(value, scope.ipv4TvPoolStart, scope.ipv4TvPoolEnd))
                }),
                e
            }
              , _validate = function(val) {
                var whatHappened = _validatePPPDataModels(val) && _validateOpenWifiPool(val) && _validateOpenWifiInterface(val) && _validatePPPInterfaces(val) && _validateQuantennaAndUpnp(val);
                return ctrl.$setValidity("forbiddenIp", whatHappened),
                whatHappened
            };
            ctrl.$parsers.unshift(function(value) {
                return $timeout(function() {
                    _validate(value)
                }, 1),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return void 0 !== value && _validate(value),
                value
            })
        }
    }
}
]),
sboxApp.directive("validateSsid", [function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var validate = function(val) {
                var allowedChars = /^[\x20-\x7E]+$/
                  , forbiddenChars = /[`"|$(:;ßº§äöü]/i
                  , testEmpty = val ? val.replace(/\s/g, "") : ""
                  , rs = !1;
                return $.config.modules.wifi.wifiForbiddenChars && $.config.modules.wifi.wifiForbiddenChars.test(val) ? rs = !1 : testEmpty ? $.config.modules.wifi.wifiSSIDInclusive && allowedChars.test(val) ? rs = !0 : forbiddenChars.test(val) || (rs = !0) : rs = !1,
                ctrl.$setValidity("invalidSsid", rs),
                rs
            };
            ctrl.$parsers.unshift(function(value) {
                return validate(value) ? value : void 0
            }),
            ctrl.$formatters.unshift(function(value) {
                return validate(value),
                value
            })
        }
    }
}
]),
sboxApp.directive("validateGatewayIp", function() {
    return {
        restrict: "A",
        scope: {
            networkRange: "="
        },
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var extraInfos = {}
              , setValidity = function(ip) {
                var valid = !1;
                if (extraInfos && (extraInfos.length || extraInfos.ip)) {
                    if (extraInfos instanceof Array == !1 && (extraInfos = [extraInfos]),
                    $(extraInfos).each(function(i, info) {
                        var ipToCheck = info.label.split("/");
                        return ipToCheck = ipToCheck[0],
                        valid = $.util.checkLanIp(ip, ipToCheck, info.mask),
                        !valid
                    }),
                    valid && $.config.modules.myBox.dhcp.forceMask) {
                        var initial = $.util.getNetworkInfo(ip, $.config.modules.myBox.dhcp.forceMask);
                        initial = initial.initial,
                        valid = $.util.checkLanIp(ip, initial, $.config.modules.myBox.dhcp.forceMask)
                    }
                    ctrl.$setValidity("gatewayIp", valid)
                } else
                    ctrl.$setValidity("gatewayIp", !0);
                return valid
            };
            scope.$watch("networkRange", function(networkRange) {
                extraInfos = networkRange,
                setValidity(elem.val())
            }, !0),
            ctrl.$parsers.unshift(function(value) {
                return setValidity(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return setValidity(value),
                value
            })
        }
    }
}),
sboxApp.directive("validateUri", function() {
    return {
        restrict: "A",
        scope: {
            ignoreProtocol: "="
        },
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var validate = function(value) {
                if (void 0 !== value) {
                    if ("" === value)
                        return !0;
                    var pattern = value.split("@")
                      , v = !1;
                    return pattern.length > 1 && 0 !== pattern[1].indexOf("www.") && (v = $.util.checkIP(pattern[1]) || $.util.checkHostname(pattern[1]) || $.util.checkUrl("http://" + pattern[1])),
                    ctrl.$setValidity("uri", v),
                    v
                }
            };
            ctrl.$parsers.unshift(function(value) {
                return validate(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return validate(value),
                value
            })
        }
    }
}),
sboxApp.directive("passwordStrength", [function() {
    var templateDefault = '<span style="display: none;" class="weak"></span><span style="display: none;" class="fair"></span><span style="display: none;" class="strong"></span>'
      , defaultLevels = ["weak", "fair", "strong"];
    return angular.isUndefined($.config.modules.strengthLevels) || (templateDefault = '<small style="display: none;" class="strength-msg weak" translate="weak_strength"></small><small style="display: none;" class="strength-msg fair" translate="fair_strength"></small><small style="display: none;" class="strength-msg good" translate="good_strength"></small><small style="display: none;" class="strength-msg strong" translate="strong_strength"></small>',
    defaultLevels = $.config.modules.strengthLevels),
    {
        restrict: "A",
        scope: {
            passwd: "=passwd",
            passwordElement: "=",
            securityMode: "=",
            isAdmin: "@"
        },
        link: function(scope, elem) {
            var strengths = defaultLevels
              , checkStrength = function(val) {
                var score = 0;
                if (scope.isAdmin)
                    score = $.util.calculateAdminPasswordScore(val);
                else {
                    if ($.config.modules.passwordStrength && $.config.modules.passwordStrength.additionalChecks && $.util.isFunction($.config.modules.passwordStrength.additionalChecks))
                        return $.config.modules.passwordStrength.additionalChecks(val, scope.securityMode);
                    score = $.util.calculateWifiPasswordScore(val)
                }
                return score
            }
              , getStrengthLevel = function(score) {
                var level = strengths[score];
                return score + 1 > strengths.length ? level = strengths[strengths.length - 1] : 0 > score && (level = -1),
                level
            }
              , showHideStuff = function(strength) {
                for (var selector = "." + strength, i = 0; i < strengths.length; i++)
                    if (strength === strengths[i])
                        $(elem).children(selector).css("display", "block"),
                        $(elem).children(selector).show();
                    else {
                        var tmp = "." + strengths[i];
                        $(elem).children(tmp).css("display", "none"),
                        $(elem).children(tmp).hide()
                    }
            };
            scope.$watch("passwd", function(value) {
                if (value) {
                    var score = checkStrength(value)
                      , strength = getStrengthLevel(score);
                    showHideStuff(strength),
                    scope.passwordElement && scope.passwordElement.$setValidity("password", score > -1)
                }
            })
        },
        template: templateDefault
    }
}
]),
sboxApp.directive("minRequirement", [function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            scope.block = !!$.config.modules.passwordStrength && !!$.config.modules.passwordStrength.disableButton;
            var valider = function(val) {
                if ($.config.modules.passwordStrength && $.config.modules.passwordStrength.minRequirementRegexps) {
                    for (var valide = !0, i = 0; i < $.config.modules.passwordStrength.minRequirementRegexps.length; i++)
                        valide = valide && $.config.modules.passwordStrength.minRequirementRegexps[i].test(val);
                    $.config.modules.passwordStrength.minLength && (valide = valide && val.length >= $.config.modules.passwordStrength.minLength),
                    $.config.modules.passwordStrength.maxLength && (valide = valide && val.length <= $.config.modules.passwordStrength.maxLength),
                    ctrl.$setValidity("minRequirement", valide)
                } else
                    ctrl.$setValidity("minRequirement", !0);
                return val
            };
            ctrl.$parsers.unshift(function(value) {
                return valider(value) ? value : void 0
            }),
            ctrl.$formatters.unshift(function(value) {
                return valider(value),
                value
            })
        }
    }
}
]),
sboxApp.directive("cancelWizard", ["$state", function($state) {
    return {
        restrict: "A",
        link: function(scope, elem) {
            elem.bind("click", function() {
                $state.go("user.homefirst", {}, {
                    reload: !0
                })
            })
        }
    }
}
]),
sboxApp.directive("waitLoading", function($timeout, $window, $state) {
    return {
        restrict: "A",
        link: function(scope) {
            var timeoutPromise;
            scope.$watch("loading", function(newValue, oldValue) {
                newValue !== !0 || oldValue ? ($timeout.cancel(timeoutPromise),
                $timeout(function() {
                    scope.loading = !1
                }, 2e3)) : timeoutPromise = $timeout(function() {
                    scope.loading = !1,
                    $window.location.href = $state.current.url
                }, $.constants.waitMessageTimeout)
            })
        },
        template: '<div ng-if="loading"><strong ng-if="!logoWaiting" translate="pleaseWaitLoading"></strong><div class="t-center"><div ng-if="logoWaiting" class="logo-waiting"><p translate="pleaseWaitLoading">Please wait...</p></div><img ng-if="!logoWaiting" src="images/loading.gif"></div><br/></div>'
    }
}),
sboxApp.directive("duplicatedPhoneNumber", ["$timeout", function($timeout) {
    return {
        restrict: "A",
        require: "ngModel",
        scope: {
            currentContact: "=currentContact",
            phoneNumberList: "=phoneNumbersMap"
        },
        link: function(scope, elem, attr, ctrl) {
            var currentValue, allowDuplicated = $.config.modules.phonebook.allowDuplicatedNumber === !0, hasValue = function(value) {
                return void 0 !== value && null !== value && "" !== value
            }, existsInAnotherContacts = function() {
                return hasValue(scope.phoneNumberList[currentValue]) && scope.phoneNumberList[currentValue] !== scope.currentContact.uid
            }, existsInAnotherFields = function() {
                var contact = scope.currentContact
                  , count = 0;
                for (var x in contact.Numbers) {
                    var value = contact.Numbers[x];
                    $.util.isEmpty(value.Number) || value.Number !== currentValue || count++
                }
                return count > 1
            }, checkForDuplicates = function() {
                currentValue = ctrl.$viewValue,
                allowDuplicated === !1 && hasValue(currentValue) && (existsInAnotherFields() || existsInAnotherContacts()) ? ctrl.$setValidity("phoneNumberAllowed", !1) : ctrl.$setValidity("phoneNumberAllowed", !0),
                $timeout(function() {
                    scope.$apply()
                })
            };
            scope.$watch(function() {
                return scope.currentContact
            }, function() {
                checkForDuplicates()
            }, !0)
        }
    }
}
]),
sboxApp.directive("onlyNumbers", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            ctrl.$parsers.push(function(val) {
                void 0 === val && (val = "");
                var clean = val.replace(/[^0-9]/g, "");
                return "0" === clean.charAt(0) && clean.length > 1 && (clean = clean.substr(1, clean.length - 1)),
                val !== clean && (ctrl.$setViewValue(clean),
                ctrl.$render()),
                attr.maxNumber && ctrl.$setValidity("maxNumber", parseInt(clean) <= parseInt(attr.maxNumber)),
                attr.minNumber && ctrl.$setValidity("minNumber", parseInt(clean) >= parseInt(attr.minNumber)),
                clean
            }),
            elem.bind("keypress", function(event) {
                32 === event.keyCode && event.preventDefault()
            })
        }
    }
}),
sboxApp.directive("answeringMachineIcon", function() {
    return {
        restrict: "EA",
        template: '<span class="sprite header-box-icon {{iconAnswering}}"></span>',
        controller: ["$scope", "AnsweringMachine", function($scope, AnsweringMachine) {
            AnsweringMachine.updateCache();
            var mailBoxesList = AnsweringMachine.getMailboxesList();
            $scope.iconAnswering = "icon-answering-red",
            $.each(mailBoxesList, function(i, data) {
                return data.Enable === !0 ? ($scope.iconAnswering = "icon-answering-green",
                !1) : void 0
            })
        }
        ]
    }
}),
sboxApp.directive("validateIpv6", function() {
    return {
        restrict: "AE",
        require: "ngModel",
        scope: {
            allowEmpty: "@"
        },
        link: function(scope, element, attrs, ctrl) {
            ctrl.$parsers.unshift(function(viewValue) {
                return viewValue = viewValue || "",
                "true" === scope.allowEmpty && "" === viewValue || viewValue && $.util.isValidIpv6(viewValue) ? (ctrl.$setValidity("validIpv6", !0),
                viewValue) : void ctrl.$setValidity("validIpv6", !1)
            })
        }
    }
}),
sboxApp.directive("validateVciVpi", [function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var validate = function(val) {
                var reg = /^([0-9]|[1-9][0-9]|100)\/([0-9]|[1-9][0-9]|100)$/g
                  , rs = !1;
                return reg.test(val) && (rs = !0),
                ctrl.$setValidity("invalidVciVpi", rs),
                rs
            };
            ctrl.$parsers.unshift(function(value) {
                return validate(value) ? value : void 0
            }),
            ctrl.$formatters.unshift(function(value) {
                return validate(value),
                value
            })
        }
    }
}
]),
sboxApp.directive("validateExternalIp", function() {
    return {
        restrict: "A",
        require: "ngModel",
        link: function(scope, elem, attr, ctrl) {
            var setValidity = function(ip) {
                var valid = !1;
                return valid = valid || $.util.checkExternalIp(ip, attr.validateExternalIp),
                ctrl.$setValidity("externalIp", valid),
                valid
            };
            ctrl.$parsers.unshift(function(value) {
                return setValidity(value),
                value
            }),
            ctrl.$formatters.unshift(function(value) {
                return setValidity(value),
                value
            }),
            attr.$observe("validateExternalIp", function() {
                setValidity(elem.val())
            })
        }
    }
}),
sboxApp.directive("timeCounter", ["$interval", function($interval) {
    return {
        restrict: "E",
        template: "<span ng-bind=\"time | timeFormat : ('uptimeFormat' | translate) \"></span>",
        scope: {
            time: "="
        },
        link: function(scope, elem) {
            var timeoutId = null;
            scope.time || (scope.time = 0),
            timeoutId = $interval(function() {
                scope.time++
            }, 1e3),
            elem.on("$destroy", function() {
                $interval.cancel(timeoutId)
            })
        }
    }
}
]),
sboxApp.directive("itemDebugger", [function() {
    return {
        restrict: "E",
        template: '<pre ng-bind="displayObject(obj)"></pre>',
        scope: {
            obj: "="
        },
        link: function(scope) {
            scope.displayObject = function(obj) {
                return JSON.stringify(obj, null, "  ")
            }
        }
    }
}
]),
sboxApp.filter("filterContacts", function() {
    return function(input, word) {
        var selected = [];
        return input && input.length ? word ? (word = word.toLowerCase(),
        $.each(input, function(i, obj) {
            (obj.Number.toLowerCase().indexOf(word) > -1 || obj.FirstName.toLowerCase().indexOf(word) > -1 || obj.LastName.toLowerCase().indexOf(word) > -1) && selected.push(obj)
        }),
        selected) : input : selected
    }
}),
sboxApp.filter("countActive", function() {
    return function(input, isShow) {
        if (!input || !input.length)
            return !1;
        if (isShow)
            return input.length;
        var active = 0;
        return $.each(input, function(i, obj) {
            obj.active === !0 && active++
        }),
        active
    }
}),
sboxApp.filter("deviceIcon", function() {
    return function(input, type) {
        var searchDeviceType = function(deviceType) {
            var arrayDeviceType;
            arrayDeviceType = $.config.modules.myBox.deviceTypes ? $.config.modules.myBox.deviceTypes : $.constants.deviceTypes;
            var rs = arrayDeviceType[0];
            return $(arrayDeviceType).each(function(i, obj) {
                return obj.type === deviceType ? (rs = obj,
                !1) : void 0
            }),
            rs
        }
          , selectedTypeFormat = "svg" === type ? "iconsvg" : "icon"
          , rs = searchDeviceType(input);
        return rs[selectedTypeFormat] ? rs[selectedTypeFormat] : $.constants.deviceTypes[1][selectedTypeFormat]
    }
}),
sboxApp.filter("getSelectedInterface", function() {
    return function(interfaceList) {
        var selected;
        return interfaceList && interfaceList.length ? ($.each(interfaceList, function(i, obj) {
            return "UP" === obj.status ? (selected = obj,
            !1) : void 0
        }),
        selected) : selected
    }
}),
sboxApp.filter("startFrom", function() {
    return function(input, start) {
        return input && input.length > 0 && $.isNumeric(start) ? (start = +start,
        input.slice(start)) : void 0
    }
}),
sboxApp.filter("simpleAlias", function() {
    return function(input) {
        return input ? $.util.getAliasFromXPath(input) : input
    }
}),
sboxApp.filter("shapingUnit", function() {
    return function(input) {
        return input >= 0 && 100 >= input ? 1 : input > 100 ? 101 : void 0
    }
}),
sboxApp.filter("timeFormat", function() {
    return function(secs, stringFormat) {
        var defaultValue = !1;
        stringFormat && "%hh%mm%ss" !== stringFormat || (stringFormat = "%hh%mm%ss",
        defaultValue = !0);
        var formatValues = {
            "%d": 0,
            "%h": 0,
            "%m": 0,
            "%s": 0
        }
          , time = moment.duration(secs, "seconds");
        formatValues["%d"] = parseInt(time.days(), 10),
        formatValues["%h"] = ("0" + time.hours()).slice(-2),
        formatValues["%m"] = ("0" + time.minutes()).slice(-2),
        formatValues["%s"] = ("0" + time.seconds()).slice(-2),
        formatValues["%d"] >= 1 && defaultValue && (stringFormat = "%dd" + stringFormat);
        var exp = new RegExp(Object.keys(formatValues).join("|"),"gi");
        return stringFormat = stringFormat.replace(exp, function(matched) {
            return formatValues[matched]
        })
    }
}),
sboxApp.filter("round", function() {
    return function(value) {
        return Math.round(value)
    }
}),
sboxApp.factory("WifiXpaths", function() {
    var cachedResults = {
        guest: {},
        priv: {},
        tv: {}
    }
      , WifiXpaths = {
        get: function(radio, mode, ssidAlias) {
            if (radio = radio || "2.4GHz" || "tv",
            mode = mode || "priv",
            cachedResults[mode][radio] && !ssidAlias)
                return cachedResults[mode][radio];
            var lcoChoser = {
                accessPoints: {
                    priv: {
                        "2.4GHz": "PRIV0",
                        "5GHz": "VID1",
                        tv: "Sunrise_TV"
                    },
                    guest: {
                        "2.4GHz": "GUEST1",
                        "5GHz": "GUEST3"
                    }
                },
                ssid: {
                    priv: {
                        "2.4GHz": "WL_PRIV",
                        "5GHz": "WL_VIDEO_5G",
                        tv: "Sunrise_TV"
                    },
                    guest: {
                        "2.4GHz": "WL_GUEST",
                        "5GHz": "WL_GUEST_5G"
                    }
                },
                radio: {
                    "2.4GHz": "RADIO2G4",
                    "5GHz": "RADIO5G",
                    tv: "RADIO5G"
                }
            };
            $.extend(!0, lcoChoser, $.config.modules.wifi.wifiAliases);
            var accessPoint = lcoChoser.accessPoints[mode][radio]
              , ssid = lcoChoser.ssid[mode][radio];
            ssidAlias && (ssid = ssidAlias,
            accessPoint = ssidAlias);
            var phyRadio = lcoChoser.radio[radio]
              , tmpPath = $.extend(!0, {}, $.xpaths.wifi);
            return $.each(tmpPath, function(i, midLevelPath) {
                $.each(midLevelPath, function(j, xpath) {
                    accessPoint && ssid && phyRadio ? (xpath = xpath.replace("#AP#", accessPoint),
                    xpath = xpath.replace("#SSID#", ssid),
                    xpath = xpath.replace("#RADIO#", phyRadio),
                    tmpPath[i][j] = xpath) : tmpPath[i][j] = ""
                })
            }),
            cachedResults[mode][radio] = tmpPath,
            tmpPath
        }
    };
    return WifiXpaths
}),
sboxApp.factory("XmoRequest", function() {
    var XmoRequest = {
        getNewRequest: function() {
            return $.xmo.client.newRequest()
        },
        sendRequest: function(req, options) {
            var success, err, sync = !0;
            return options && (sync = !!options.sync,
            success = options.success,
            err = options.err),
            req.send(success, err, {
                synchronous: sync
            }),
            !0
        }
    };
    return XmoRequest
}),
sboxApp.factory("ATM", function() {
    var factoryFields = ["Alias", "IfcName", "Status", "DestinationAddress", "Encapsulation", "LinkType", "LowerLayers", "Name", "Stats"]
      , factoryQoSFields = ["PeakCellRate", "QoSClass", "MaximumBurstSize", "SustainableCellRate"]
      , factoryExcludeFromSaveFields = ["Alias", "Status", "LinkType", "LowerLayers"]
      , _getLayer1 = function(lowerLayer) {
        var rs = []
          , brokenLayers = lowerLayer.split(",");
        return $.each(brokenLayers, function(i, obj) {
            $.constants.dslChannels[$.util.getAliasFromXPath(obj)] ? rs.push($.constants.dslChannels[$.util.getAliasFromXPath(obj)]) : rs.push($.util.getAliasFromXPath(obj))
        }),
        rs
    }
      , ATM = {
        populate: function() {
            var data = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.atm.availableATMLinks)
              , result = {};
            return $.each(data, function(i, obj) {
                var lePush = {};
                factoryFields.forEach(function(field) {
                    var dest = $.util.lowerCaseFirstLetter(field);
                    lePush[dest] = obj[field]
                }),
                lePush.macAddress = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.atm.MACAddress.replace("#", obj.Name)),
                lePush.QoS = {},
                factoryQoSFields.forEach(function(field) {
                    lePush.QoS[field] = obj.QoS[field]
                }),
                lePush.ifcName = lePush.ifcName ? lePush.ifcName : lePush.alias;
                var vpiVci = lePush.destinationAddress.split("/");
                lePush.VPI = parseInt(vpiVci[0], 10),
                lePush.VCI = parseInt(vpiVci[1], 10);
                var extractedAlias = _getLayer1(lePush.lowerLayers);
                extractedAlias.forEach(function(layer1) {
                    result[layer1] || (result[layer1] = []),
                    result[layer1].push(lePush)
                })
            }),
            result
        },
        save: function(data) {
            var dataMap = {};
            try {
                return $.each(data, function(lowerLayer) {
                    data[lowerLayer].forEach(function(atmInterface) {
                        return void 0 !== dataMap[$.xpaths.internetConnectivity.wan.atm.base.replace("#", atmInterface.alias) + "IfcName"] ? !0 : (atmInterface.destinationAddress = atmInterface.VPI + "/" + atmInterface.VCI,
                        factoryFields.forEach(function(field) {
                            if (factoryExcludeFromSaveFields.indexOf(field) > -1)
                                return !0;
                            var dest = $.util.lowerCaseFirstLetter(field);
                            dataMap[$.xpaths.internetConnectivity.wan.atm.base.replace("#", atmInterface.alias) + field] = atmInterface[dest]
                        }),
                        void factoryQoSFields.forEach(function(field) {
                            dataMap[$.xpaths.internetConnectivity.wan.atm.base.replace("#", atmInterface.alias) + "QoS/" + field] = atmInterface.QoS[field]
                        }))
                    })
                }),
                $.xmo.setValuesFlat(dataMap),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return ATM
}),
sboxApp.factory("PTM", function() {
    var PTM = {
        populate: function() {
            var result = {}
              , data = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.ptm.availablePTMLinks);
            for (var x in data) {
                var obj = {};
                obj.ifcName = data[x].IfcName ? data[x].IfcName : data[x].Alias,
                obj.status = data[x].Status,
                obj.alias = data[x].Alias,
                obj.name = data[x].Name,
                obj.enable = data[x].Enable,
                obj.lowerLayers = data[x].LowerLayers,
                obj.macAddress = data[x].MACAddress,
                obj.stats = data[x].Stats;
                var extractedAlias = $.util.getAliasFromXPath(data[x].LowerLayers);
                $.constants.dslChannels[extractedAlias] && (extractedAlias = $.constants.dslChannels[extractedAlias]),
                result[extractedAlias] = obj
            }
            return result
        },
        save: function(data) {
            var dataMap = {};
            try {
                for (var x in data)
                    dataMap[$.xpaths.internetConnectivity.wan.ptm.ptmEnable.replace("#", data[x].alias)] = data[x].enable,
                    dataMap[$.xpaths.internetConnectivity.wan.ptm.ptmIfcName.replace("#", data[x].alias)] = data[x].ifcName;
                return $.xmo.setValuesFlat(dataMap),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return PTM
}),
sboxApp.factory("Backup3g", function() {
    var cache = {}
      , xPathsSelected = {}
      , Backup3g = {
        getEmptyModel: function() {
            return {
                Alias: "",
                Username: "",
                Password: "",
                APN: ""
            }
        },
        updateCache: function() {
            if ("cellular" === $.config.showedpages.backup3gLTE.implementation)
                xPathsSelected = $.xpaths.internetConnectivity.backup3g.cellular,
                cache = $.xmo.getValuesTree(xPathsSelected),
                cache.basicConfig.apnList = $.util.fixGetValuesTree(cache.basicConfig.apnList);
            else if ("hsxpalte" === $.config.showedpages.backup3gLTE.implementation) {
                xPathsSelected = $.xpaths.internetConnectivity.backup3g.hsxpalte,
                cache = $.xmo.getValuesTree(xPathsSelected);
                var connectionTime = moment.duration(cache.statusInfo.connectionUptime, "seconds");
                cache.statusInfo.connectionUptime = $.util.formatLeaseTime(connectionTime)
            }
        },
        populate: function() {
            return this.updateCache(),
            cache
        },
        save: function(data, options) {
            var arrayData = {};
            for (var configMode in data)
                for (var param in data[configMode])
                    if (null !== data[configMode][param])
                        if ("cellular" === $.config.showedpages.backup3gLTE.implementation && "apnList" === param) {
                            data.basicConfig.apnList.apnLength > 1 && (arrayData[$.xpaths.internetConnectivity.backup3g.cellularSave.apnEnableDifferent.replace("#alias#", data.basicConfig.apnList.apnAlias)] = !1);
                            for (var key in data.basicConfig.apnList.apnSave)
                                arrayData[$.xpaths.internetConnectivity.backup3g.cellularSave.apnGenericField.replace("#alias#", data.basicConfig.apnList.apnAlias).replace("#field#", key)] = data.basicConfig.apnList.apnSave[key]
                        } else
                            void 0 !== xPathsSelected[configMode][param] && "" !== xPathsSelected[configMode][param] && (arrayData[xPathsSelected[configMode][param]] = data[configMode][param]);
            try {
                return $.xmo.setValuesFlat(arrayData, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        },
        theresWanBackupPath: function(options) {
            var xpath = ""
              , cache = null;
            "cellular" === $.config.showedpages.backup3gLTE.implementation ? xpath = $.xpaths.internetConnectivity.backup3g.cellular.advancedConfig.timeBeforeSwitch3g : "hsxpalte" === $.config.showedpages.backup3gLTE.implementation && (xpath = $.xpaths.internetConnectivity.backup3g.hsxpalte.advancedConfig.timeBeforeSwitch3g);
            try {
                cache = $.xmo.getValuesTree(xpath)
            } catch (e) {
                return options.error(!1),
                !1
            }
            return cache ? (options.success(!0),
            !0) : (options.error(!1),
            !1)
        }
    };
    return Backup3g
}),
sboxApp.factory("GoogleContacts", function($timeout, PhonebookContacts, $filter) {
    var end, mid, clientId = $.constants.googleContactsClientId, apiKey = $.constants.googleContactsApiKey, scopes = "https://www.googleapis.com/auth/contacts", contactList = [], categoriesList = [], contactsReturned = [], categoriesReturned = [], categoriesAll = {}, addedList = 0, maxResults = $.constants.googleContactsBatch, phonebookContacts = PhonebookContacts, GoogleContacts = {
        start: function(returnable, midCb, endCb) {
            mid = midCb,
            end = endCb;
            var retur = returnable || void 0 === returnable;
            gapi.client.setApiKey(apiKey);
            var self = this;
            gapi.auth.authorize({
                client_id: clientId,
                scope: scopes,
                immediate: retur
            }, self.handleAuthResult)
        },
        getContacts: function(groupId) {
            var x, rContactList = [];
            if (void 0 === groupId)
                for (x in contactList)
                    contactList[x].Groups || rContactList.push(contactList[x]);
            else
                for (x in contactList)
                    for (var y in contactList[x].Groups)
                        contactList[x].Groups[y].id === groupId && rContactList.push(contactList[x]);
            return rContactList
        },
        getGroups: function() {
            var arrayReturn = [];
            for (var x in categoriesList)
                arrayReturn.push(categoriesAll[categoriesList[x]]);
            return arrayReturn
        },
        saveContacts: function(allGroups, callback) {
            var result, selectedContacts = [];
            return angular.forEach(allGroups, function(group) {
                angular.forEach(group.contactsGroup, function(contact) {
                    result = $.grep(selectedContacts, function(e) {
                        return contact.$$hashKey === e.$$hashKey
                    }),
                    contact.selected && !result.length && selectedContacts.push(contact)
                })
            }),
            phonebookContacts.save(selectedContacts, function() {}, function() {}),
            callback(selectedContacts.length),
            !0
        },
        handleAuthResult: function(authResult) {
            var searchForGroups = function() {
                var url = "m8/feeds/groups/default/full?alt=json"
                  , httpRequest = gapi.client.request({
                    path: url
                });
                httpRequest.execute(function(resp) {
                    var groupId;
                    for (var x in resp.feed.entry) {
                        var leRegex = /\/base\/([a-z0-9]*)/;
                        groupId = leRegex.exec(resp.feed.entry[x].id.$t),
                        groupId = groupId[1],
                        categoriesAll[groupId] = {
                            id: groupId,
                            group: resp.feed.entry[x].content.$t
                        }
                    }
                })
            }
              , generateRequestUrl = function(resp) {
                var path = "m8/feeds/contacts/default/full?alt=json&max-results=" + maxResults;
                if (!resp)
                    return path;
                var totalAmmount = parseInt(resp.feed.openSearch$totalResults.$t, 10)
                  , first = parseInt(resp.feed.openSearch$startIndex.$t, 10);
                if (totalAmmount > addedList) {
                    var next = first + maxResults;
                    return path += "&start-index=" + next
                }
                return "function" == typeof end && (contactsReturned = contactList,
                categoriesReturned = categoriesList,
                end(addedList, contactList.length)),
                contactList = [],
                categoriesList = [],
                addedList = 0,
                ""
            }
              , parseResponse = function(resp) {
                $(resp.feed.entry).each(function(i, obj) {
                    addedList++;
                    var leRegex = /\/base\/([a-z0-9]*)/
                      , contactId = leRegex.exec(obj.id.$t);
                    if (!contactId)
                        return !0;
                    if (contactId = contactId[1],
                    phonebookContacts.search(contactId, "Category"))
                        return !0;
                    var model = phonebookContacts.getModel();
                    model.Category = contactId,
                    obj.title && (model.FirstName = obj.title.$t.substring(0, 64));
                    var numbers = [];
                    if (obj.gd$phoneNumber) {
                        var count = 0;
                        for (var z in obj.gd$phoneNumber)
                            if (obj.gd$phoneNumber[z].rel && numbers.length < 4) {
                                var duplicatedNumbers = $filter("filter")(numbers, {
                                    Number: obj.gd$phoneNumber[z].$t
                                }, !0);
                                null === obj.gd$phoneNumber[z].$t.match(/^[0-9]+$/) && "+" !== obj.gd$phoneNumber[z].$t[0] || duplicatedNumbers && 0 !== duplicatedNumbers.length || (obj.gd$phoneNumber[z].rel.indexOf("fax") > -1 && numbers.push({
                                    Number: obj.gd$phoneNumber[z].$t,
                                    Type: $.constants.phoneTypes[3]
                                }),
                                obj.gd$phoneNumber[z].rel.indexOf("#mobile") > -1 && 3 > count && (numbers.push({
                                    Number: obj.gd$phoneNumber[z].$t,
                                    Type: $.constants.phoneTypes[1]
                                }),
                                count++),
                                -1 === obj.gd$phoneNumber[z].rel.indexOf("fax") && (obj.gd$phoneNumber[z].rel.indexOf("#home") > -1 && 3 > count && (numbers.push({
                                    Number: obj.gd$phoneNumber[z].$t,
                                    Type: $.constants.phoneTypes[0]
                                }),
                                count++),
                                obj.gd$phoneNumber[z].rel.indexOf("#work") > -1 && 3 > count && (numbers.push({
                                    Number: obj.gd$phoneNumber[z].$t,
                                    Type: $.constants.phoneTypes[2]
                                }),
                                count++)))
                            }
                        if (!numbers || 0 === numbers.length)
                            return !0
                    }
                    model.Numbers = [];
                    for (var faxNumbers = [], j = 0; numbers && j < numbers.length; j++)
                        numbers[j].Type === $.constants.phoneTypes[3] ? faxNumbers.push(numbers[j]) : model.Numbers.push(numbers[j]);
                    if (faxNumbers && faxNumbers.length > 0 && (model.Numbers = model.Numbers.concat(faxNumbers)),
                    obj.gd$email && (model.Email = obj.gd$email[0].address.substring(0, 64)),
                    obj.gd$postalAddress && (model.Address = obj.gd$postalAddress[0].$t.substring(0, 128)),
                    obj.gContact$groupMembershipInfo) {
                        model.Groups = [];
                        var groupId;
                        for (var x in obj.gContact$groupMembershipInfo)
                            groupId = leRegex.exec(obj.gContact$groupMembershipInfo[x].href),
                            groupId = groupId[1],
                            -1 === $.util.inArray(groupId, categoriesList) && categoriesList.push(groupId),
                            model.Groups.push(categoriesAll[groupId])
                    }
                    contactList.push(model)
                })
            }
              , handleRequest = function(init) {
                var url = generateRequestUrl(init)
                  , httpRequest = gapi.client.request({
                    path: url
                });
                httpRequest.execute(function(resp) {
                    parseResponse(resp);
                    var nextUrl = generateRequestUrl(resp);
                    nextUrl && handleRequest(resp)
                })
            };
            authResult && !authResult.error && (searchForGroups(),
            mid(),
            $timeout(handleRequest, 500))
        }
    };
    return GoogleContacts
}),
sboxApp.factory("DnsServer", function() {
    var cache = $.xmo.getValuesTree($.xpaths.mySagemcomBox.dns)
      , DnsServer = {
        updateCache: function() {
            cache = $.xmo.getValuesTree($.xpaths.mySagemcomBox.dns)
        },
        populate: function() {
            return this.updateCache(),
            cache
        },
        save: function(data, options) {
            try {
                var arrayData = {};
                return arrayData[$.xpaths.mySagemcomBox.dns.server] = data.server,
                $.xmo.setValuesFlat(arrayData, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return DnsServer;
}),
sboxApp.factory("ParentalControlNew", function() {
    var cache = null
      , _formatWeekDays = function(n) {
        for (var s = "", x = 1; 7 >= x; x++)
            s += x === n ? "1" : "0";
        return parseInt(s, 2)
    }
      , _insertTimeSlotList = function(rule) {
        var arrayTimeSlotInsert = []
          , fullDaysNumber = 0
          , alwaysFlag = !1;
        return angular.forEach(rule.timeSlots, function(ts) {
            0 === ts.StartTime && 86400 === ts.EndTime && fullDaysNumber++
        }),
        7 === rule.timeSlots.length && 7 === fullDaysNumber && (alwaysFlag = !0),
        arrayTimeSlotInsert.push({
            TimeSlotList: {
                Always: alwaysFlag
            }
        }),
        arrayTimeSlotInsert
    }
      , _insertTimeSlotChild = function(rule) {
        var timeSlots = [];
        return angular.forEach(rule.timeSlots, function(ts) {
            timeSlots.push({
                TimeSlot: {
                    WeekDays: _formatWeekDays(ts.WeekDays),
                    StartTime: ts.StartTime,
                    EndTime: ts.EndTime
                }
            })
        }),
        timeSlots
    }
      , _insertMacAddressList = function(rule) {
        var arrayMacAddressInsert = []
          , macAddress = {
            AllDevices: !1,
            MACAddresses: rule.macAddress
        };
        return rule.ipAddress && (macAddress.IPAddress = rule.ipAddress),
        arrayMacAddressInsert.push({
            MACAddressList: macAddress
        }),
        arrayMacAddressInsert
    }
      , _insertRule = function(rule, uidTimeSlot, uidMacAddress, timeslotsChild) {
        var enable, arrayRulesInsert = [];
        return enable = timeslotsChild.length ? !0 : !1,
        arrayRulesInsert.push({
            Rule: {
                Enable: enable,
                TimeSlots: $.xpaths.accessControl.parentalControlNew.timeSlotList.replace("#", uidTimeSlot),
                MACAddresses: $.xpaths.accessControl.parentalControlNew.macAddressList.replace("#", uidMacAddress),
                WANAccess: "DROP"
            }
        }),
        arrayRulesInsert
    }
      , accessControl = {
        updateCache: function() {
            var path = $.xmo.getValuesTree($.xpaths.accessControl.parentalControlNew.parentalControl);
            path && (cache = path.ParentalControl)
        },
        getMacAddressList: function(host) {
            if (cache && cache.MACAddressLists)
                for (var x in cache.MACAddressLists)
                    if (cache.MACAddressLists[x].MACAddresses === host.PhysAddress)
                        return cache.MACAddressLists[x];
            return null
        },
        getRulesList: function(uidMacAddressList) {
            if (cache && cache.Rules)
                for (var x in cache.Rules)
                    if (cache.Rules[x].MACAddresses.indexOf($.xpaths.accessControl.parentalControlNew.macAddressList.replace("#", uidMacAddressList)) > -1)
                        return cache.Rules[x];
            return null
        },
        getTimeSlotsList: function(rule) {
            if (cache && cache.TimeSlotLists)
                for (var x in cache.TimeSlotLists)
                    if (rule.TimeSlots.indexOf("uid='" + cache.TimeSlotLists[x].uid + "'") > -1)
                        return cache.TimeSlotLists[x];
            return []
        },
        searchControlByHost: function(host) {
            this.updateCache();
            var macAddressList = this.getMacAddressList(host);
            if (macAddressList) {
                var rule = this.getRulesList(macAddressList.uid);
                if (rule) {
                    var timeslots = this.getTimeSlotsList(rule);
                    return $.util.convertTimeslotsToBoolean(timeslots.TimeSlots, timeslots.Always)
                }
            }
            return !1
        },
        searchTimeslotByHost: function(host, possibleTimeslots) {
            this.updateCache();
            var macAddressList = this.getMacAddressList(host)
              , timeslots = null;
            if (macAddressList) {
                var rule = this.getRulesList(macAddressList.uid);
                rule && (timeslots = this.getTimeSlotsList(rule))
            }
            return $.util.convertTimeslotsToNewFormat(timeslots, possibleTimeslots)
        },
        checkEnable: function() {
            try {
                var result = $.xmo.getValuesTree({
                    enableRules: $.xpaths.accessControl.parentalControlNew.enableRules,
                    enable: $.xpaths.accessControl.parentalControlNew.enable
                })
                  , dataMap = {}
                  , enableRules = null !== result.enableRules;
                enableRules !== result.enable && (dataMap[$.xpaths.accessControl.parentalControlNew.enable] = enableRules,
                $.xmo.setValuesFlat(dataMap, {
                    sync: !0,
                    success: function() {},
                    error: function() {}
                }))
            } catch (e) {
                return !1
            }
        },
        excludeMacAddressFromRule: function(rule, macUid) {
            try {
                var macAddresses = rule.MACAddresses.split(",")
                  , macAddressesList = ""
                  , comma = ""
                  , dataMap = {};
                for (var x in macAddresses)
                    -1 === macAddresses[x].indexOf($.xpaths.accessControl.parentalControlNew.macAddressList.replace("#", macUid)) && (macAddressesList += comma + macAddresses[x],
                    comma = ",");
                return macAddressesList ? (dataMap[$.xpaths.accessControl.parentalControlNew.update.macAddressList.replace("#", rule.uid)] = macAddressesList,
                $.xmo.setValuesFlat(dataMap, {
                    sync: !0,
                    success: function() {},
                    error: function() {}
                }),
                !0) : ($.xmo.delChildren([rule.TimeSlots, $.xpaths.accessControl.parentalControlNew.rule.replace("#", rule.uid)], {
                    sync: !0,
                    success: function() {},
                    error: function() {}
                }),
                !0)
            } catch (e) {
                return !1
            }
        },
        searchForEqualRule: function(theTimeSlot, timeslotList) {
            var isIt, allTimeSlots = cache.TimeSlotLists, rules = cache.Rules;
            for (var x in allTimeSlots) {
                if (isIt = !1,
                0 !== allTimeSlots[x].TimeSlots.length && allTimeSlots[x].TimeSlots.length === theTimeSlot.length) {
                    isIt = !0;
                    for (var y in theTimeSlot)
                        (allTimeSlots[x].TimeSlots[y].StartTime !== theTimeSlot[y].StartTime || allTimeSlots[x].TimeSlots[y].EndTime !== theTimeSlot[y].EndTime || allTimeSlots[x].TimeSlots[y].WeekDays !== _formatWeekDays(theTimeSlot[y].WeekDays)) && (isIt = !1)
                } else
                    timeslotList[0].TimeSlotList.Always === !0 && allTimeSlots[x].Always === !0 ? isIt = !0 : 0 === allTimeSlots[x].TimeSlots.length && 0 === theTimeSlot.length && timeslotList[0].TimeSlotList.Always === !1 && allTimeSlots[x].Always === !1 && (isIt = !0);
                if (isIt)
                    for (var z in rules)
                        if (rules[z].TimeSlots.indexOf("uid='" + allTimeSlots[x].uid + "'") > -1)
                            return rules[z]
            }
            return !1
        },
        addMacAddressIntoRule: function(rule, macUid) {
            var dataMap = {};
            return dataMap[$.xpaths.accessControl.parentalControlNew.update.macAddressList.replace("#", rule.uid)] = rule.MACAddresses + "," + $.xpaths.accessControl.parentalControlNew.macAddressList.replace("#", macUid),
            $.xmo.setValuesFlat(dataMap, {
                sync: !0,
                success: function() {},
                error: function() {}
            }),
            !0
        },
        enableDisableRule: function(rule, timeslotsChild) {
            var dataMap = {};
            timeslotsChild.length ? dataMap[$.xpaths.accessControl.parentalControlNew.update.enable.replace("#", rule.uid)] = !0 : dataMap[$.xpaths.accessControl.parentalControlNew.update.enable.replace("#", rule.uid)] = !1,
            $.xmo.setValuesFlat(dataMap, {
                sync: !0,
                success: function() {},
                error: function() {}
            })
        },
        insertControl: function(hosts, data) {
            try {
                var arrayInsert = []
                  , xpathsInsert = []
                  , self = this
                  , host = hosts[0]
                  , rule = {};
                rule.enable = !0,
                rule.macAddress = host.PhysAddress,
                rule.ipAddress = host.ipAddress,
                rule.timeSlots = $.util.convertBooleanToTimeslots(data);
                var macAddressList = self.getMacAddressList(host)
                  , timeslotList = _insertTimeSlotList(rule);
                if (!$.isEmptyObject(macAddressList)) {
                    var ruleExistent = self.getRulesList(macAddressList.uid);
                    ruleExistent && self.excludeMacAddressFromRule(ruleExistent, macAddressList.uid);
                    var resultRule = self.searchForEqualRule(rule.timeSlots, timeslotList);
                    if (resultRule)
                        return self.addMacAddressIntoRule(resultRule, macAddressList.uid),
                        self.enableDisableRule(resultRule, rule.timeSlots),
                        self.checkEnable(),
                        !0;
                    rule.uidMacAddress = macAddressList.uid
                }
                arrayInsert.push(timeslotList),
                xpathsInsert.push($.xpaths.accessControl.parentalControlNew.add.timeSlotList);
                var timeslotsChild = _insertTimeSlotChild(rule);
                return timeslotsChild.length && timeslotList[0].TimeSlotList.Always === !1 && (arrayInsert.push(timeslotsChild),
                xpathsInsert.push($.xpaths.accessControl.parentalControlNew.add.timeSlot)),
                rule.uidMacAddress || (arrayInsert.push(_insertMacAddressList(rule)),
                xpathsInsert.push($.xpaths.accessControl.parentalControlNew.add.macAddressList)),
                $.xmo.addChildrenMultiple({
                    aparent: xpathsInsert,
                    values: arrayInsert
                }, {
                    sync: !0,
                    success: function(callback) {
                        var uidMacAddress, uidTimeSlot = callback.actions[0].callbacks[0].parameters.uid;
                        uidMacAddress = rule.uidMacAddress ? rule.uidMacAddress : callback.actions[callback.actions.length - 1].callbacks[0].parameters.uid;
                        var ruleObj = _insertRule(rule, uidTimeSlot, uidMacAddress, timeslotsChild);
                        $.xmo.addChildren($.xpaths.accessControl.parentalControlNew.add.rule, ruleObj, {
                            sync: !0,
                            success: function() {},
                            error: function() {}
                        })
                    },
                    error: function() {}
                }),
                self.checkEnable(),
                !0
            } catch (e) {
                return !1
            }
        },
        updateTimeslots: function(host, data) {
            try {
                var arrayInsert = []
                  , xpathsInsert = []
                  , self = this
                  , rule = {};
                rule.enable = !0,
                rule.macAddress = host.PhysAddress,
                rule.ipAddress = host.ipAddress,
                rule.timeSlots = $.util.convertNewTimeslots(data);
                var macAddressList = self.getMacAddressList(host)
                  , timeslotList = _insertTimeSlotList(rule);
                if (!$.isEmptyObject(macAddressList)) {
                    var ruleExistent = self.getRulesList(macAddressList.uid);
                    ruleExistent && self.excludeMacAddressFromRule(ruleExistent, macAddressList.uid);
                    var resultRule = self.searchForEqualRule(rule.timeSlots, timeslotList);
                    if (resultRule)
                        return self.addMacAddressIntoRule(resultRule, macAddressList.uid),
                        self.enableDisableRule(resultRule, rule.timeSlots),
                        self.checkEnable(),
                        !0;
                    rule.uidMacAddress = macAddressList.uid
                }
                arrayInsert.push(timeslotList),
                xpathsInsert.push($.xpaths.accessControl.parentalControlNew.add.timeSlotList);
                var timeslotsChild = _insertTimeSlotChild(rule);
                return timeslotsChild.length && timeslotList[0].TimeSlotList.Always === !1 && (arrayInsert.push(timeslotsChild),
                xpathsInsert.push($.xpaths.accessControl.parentalControlNew.add.timeSlot)),
                rule.uidMacAddress || (arrayInsert.push(_insertMacAddressList(rule)),
                xpathsInsert.push($.xpaths.accessControl.parentalControlNew.add.macAddressList)),
                $.xmo.addChildrenMultiple({
                    aparent: xpathsInsert,
                    values: arrayInsert
                }, {
                    sync: !0,
                    success: function(callback) {
                        var uidMacAddress, uidTimeSlot = callback.actions[0].callbacks[0].parameters.uid;
                        uidMacAddress = rule.uidMacAddress ? rule.uidMacAddress : callback.actions[callback.actions.length - 1].callbacks[0].parameters.uid;
                        var ruleObj = _insertRule(rule, uidTimeSlot, uidMacAddress, timeslotsChild);
                        $.xmo.addChildren($.xpaths.accessControl.parentalControlNew.add.rule, ruleObj, {
                            sync: !0,
                            success: function() {},
                            error: function() {}
                        })
                    },
                    error: function() {}
                }),
                self.checkEnable(),
                !0
            } catch (e) {
                return !1
            }
        },
        updateControl: function(hosts, data) {
            return this.insertControl(hosts, data)
        },
        removeControl: function(hosts, data) {
            return this.insertControl(hosts, data)
        },
        removeOneControl: function(host, data) {
            return this.insertControl([host], data)
        }
    };
    return accessControl
}),
sboxApp.factory("ParentalControlNewDual", function() {
    var cache = null
      , _formatWeekDays = function(n) {
        for (var s = "", x = 1; 7 >= x; x++)
            s += x === n ? "1" : "0";
        return parseInt(s, 2)
    }
      , _insertTimeSlotList = function(rule) {
        var arrayTimeSlotInsert = []
          , fullDaysNumber = 0
          , alwaysFlag = !1;
        return angular.forEach(rule.timeSlots, function(ts) {
            0 === ts.StartTime && 86400 === ts.EndTime && fullDaysNumber++
        }),
        7 === rule.timeSlots.length && 7 === fullDaysNumber && (alwaysFlag = !0),
        arrayTimeSlotInsert.push({
            TimeSlotList: {
                Always: alwaysFlag
            }
        }),
        arrayTimeSlotInsert
    }
      , _insertTimeSlotChild = function(rule) {
        var timeSlots = [];
        return angular.forEach(rule.timeSlots, function(ts) {
            timeSlots.push({
                TimeSlot: {
                    WeekDays: _formatWeekDays(ts.WeekDays),
                    StartTime: ts.StartTime,
                    EndTime: ts.EndTime
                }
            })
        }),
        timeSlots
    }
      , _insertMacAddressList = function(rule) {
        var arrayMacAddressInsert = []
          , macAddress = {
            AllDevices: !1,
            MACAddresses: rule.macAddress
        };
        return rule.ipAddress && (macAddress.IPAddress = rule.ipAddress),
        arrayMacAddressInsert.push({
            MACAddressList: macAddress
        }),
        arrayMacAddressInsert
    }
      , _insertRule = function(rule, uidTimeSlot, uidMacAddress, timeslotsChild, flagRejectWanAccess) {
        var enable, arrayRulesInsert = [];
        return enable = timeslotsChild.length ? !0 : !1,
        arrayRulesInsert.push({
            Rule: {
                Enable: enable,
                TimeSlots: $.xpaths.accessControl.parentalControlNew.timeSlotList.replace("#", uidTimeSlot),
                MACAddresses: $.xpaths.accessControl.parentalControlNew.macAddressList.replace("#", uidMacAddress),
                WANAccess: flagRejectWanAccess ? "REJECT" : "DROP"
            }
        }),
        arrayRulesInsert
    }
      , accessControl = {
        updateCache: function() {
            var path = $.xmo.getValuesTree($.xpaths.accessControl.parentalControlNew.parentalControl);
            path && (cache = path.ParentalControl)
        },
        getMacAddressList: function(host) {
            if (cache && cache.MACAddressLists)
                for (var x in cache.MACAddressLists)
                    if (cache.MACAddressLists[x].MACAddresses === host.PhysAddress)
                        return cache.MACAddressLists[x];
            return null
        },
        getRulesList: function(uidMacAddressList, ruleWanAccessMode) {
            if (cache && cache.Rules)
                for (var x in cache.Rules)
                    if (cache.Rules[x].MACAddresses === $.xpaths.accessControl.parentalControlNew.macAddressList.replace("#", uidMacAddressList) && (ruleWanAccessMode && cache.Rules[x].WANAccess === ruleWanAccessMode || !ruleWanAccessMode))
                        return cache.Rules[x];
            return null
        },
        getTimeSlotsList: function(rule) {
            if (cache && cache.TimeSlotLists)
                for (var x in cache.TimeSlotLists)
                    if (rule.TimeSlots.indexOf("uid='" + cache.TimeSlotLists[x].uid + "'") > -1)
                        return cache.TimeSlotLists[x];
            return []
        },
        searchControlByHost: function(host) {
            this.updateCache();
            var macAddressList = this.getMacAddressList(host)
              , timeslotsObj = {}
              , timeslots = null;
            if (macAddressList) {
                var ruleDrop = this.getRulesList(macAddressList.uid, "DROP")
                  , ruleReject = this.getRulesList(macAddressList.uid, "REJECT");
                return ruleDrop && (timeslots = this.getTimeSlotsList(ruleDrop),
                timeslotsObj.drop = $.util.convertTimeslotsToBoolean(timeslots.TimeSlots, timeslots.Always)),
                ruleReject && (timeslots = this.getTimeSlotsList(ruleReject),
                timeslotsObj.reject = $.util.convertTimeslotsToBoolean(timeslots.TimeSlots, timeslots.Always)),
                timeslotsObj
            }
            return !1
        },
        searchTimeslotByHost: function(host, possibleTimeslots) {
            this.updateCache();
            var macAddressList = this.getMacAddressList(host)
              , timeslots = null;
            if (macAddressList) {
                var rule = this.getRulesList(macAddressList.uid);
                rule && (timeslots = this.getTimeSlotsList(rule))
            }
            return $.util.convertTimeslotsToNewFormat(timeslots, possibleTimeslots)
        },
        checkEnable: function() {
            try {
                var result = $.xmo.getValuesTree({
                    enableRules: $.xpaths.accessControl.parentalControlNew.enableRules,
                    enable: $.xpaths.accessControl.parentalControlNew.enable
                })
                  , dataMap = {}
                  , enableRules = null !== result.enableRules;
                enableRules !== result.enable && (dataMap[$.xpaths.accessControl.parentalControlNew.enable] = enableRules,
                $.xmo.setValuesFlat(dataMap, {
                    sync: !0,
                    success: function() {},
                    error: function() {}
                }))
            } catch (e) {
                return !1
            }
        },
        excludeMacAddressFromRule: function(rule, macUid) {
            try {
                var macAddresses = rule.MACAddresses.split(",")
                  , macAddressesList = ""
                  , comma = ""
                  , dataMap = {};
                for (var x in macAddresses)
                    -1 === macAddresses[x].indexOf($.xpaths.accessControl.parentalControlNew.macAddressList.replace("#", macUid)) && (macAddressesList += comma + macAddresses[x],
                    comma = ",");
                return macAddressesList ? (dataMap[$.xpaths.accessControl.parentalControlNew.update.macAddressList.replace("#", rule.uid)] = macAddressesList,
                $.xmo.setValuesFlat(dataMap, {
                    sync: !0,
                    success: function() {},
                    error: function() {}
                }),
                !0) : ($.xmo.delChildren([rule.TimeSlots, $.xpaths.accessControl.parentalControlNew.rule.replace("#", rule.uid)], {
                    sync: !0,
                    success: function() {},
                    error: function() {}
                }),
                !0)
            } catch (e) {
                return !1
            }
        },
        searchForEqualRule: function(flagRejectWanAccess) {
            var wanAccessModeCar;
            wanAccessModeCar = flagRejectWanAccess ? "REJECT" : "DROP";
            var allTimeSlots = cache.TimeSlotLists
              , rules = cache.Rules;
            for (var x in allTimeSlots)
                for (var z in rules)
                    if (rules[z].TimeSlots.indexOf("uid='" + allTimeSlots[x].uid + "'") > -1 && rules.WANAccess === wanAccessModeCar)
                        return rules[z];
            return !1
        },
        addMacAddressIntoRule: function(rule, macUid) {
            var dataMap = {};
            return dataMap[$.xpaths.accessControl.parentalControlNew.update.macAddressList.replace("#", rule.uid)] = rule.MACAddresses + "," + $.xpaths.accessControl.parentalControlNew.macAddressList.replace("#", macUid),
            $.xmo.setValuesFlat(dataMap, {
                sync: !0,
                success: function() {},
                error: function() {}
            }),
            !0
        },
        enableDisableRule: function(rule, timeslotsChild) {
            var dataMap = {};
            timeslotsChild.length ? dataMap[$.xpaths.accessControl.parentalControlNew.update.enable.replace("#", rule.uid)] = !0 : dataMap[$.xpaths.accessControl.parentalControlNew.update.enable.replace("#", rule.uid)] = !1,
            $.xmo.setValuesFlat(dataMap, {
                sync: !0,
                success: function() {},
                error: function() {}
            })
        },
        insertControl: function(hosts, data, flagRejectWanAccess) {
            this.updateCache();
            try {
                var arrayInsert = []
                  , xpathsInsert = []
                  , self = this
                  , host = hosts[0]
                  , rule = {};
                rule.enable = !0,
                rule.macAddress = host.PhysAddress,
                rule.ipAddress = host.ipAddress,
                rule.timeSlots = $.util.convertBooleanToTimeslots(data);
                var macAddressList = self.getMacAddressList(host)
                  , timeslotList = _insertTimeSlotList(rule);
                if (!$.isEmptyObject(macAddressList)) {
                    var ruleExistent;
                    ruleExistent = flagRejectWanAccess ? self.getRulesList(macAddressList.uid, "REJECT") : self.getRulesList(macAddressList.uid, "DROP"),
                    ruleExistent && (flagRejectWanAccess ? self.excludeMacAddressFromRule(ruleExistent, macAddressList.uid, "REJECT") : self.excludeMacAddressFromRule(ruleExistent, macAddressList.uid, "DROP"));
                    var resultRule = self.searchForEqualRule(flagRejectWanAccess);
                    resultRule && (self.addMacAddressIntoRule(resultRule, macAddressList.uid),
                    self.enableDisableRule(resultRule, rule.timeSlots),
                    self.checkEnable()),
                    rule.uidMacAddress = macAddressList.uid
                }
                arrayInsert.push(timeslotList),
                xpathsInsert.push($.xpaths.accessControl.parentalControlNew.add.timeSlotList);
                var timeslotsChild = _insertTimeSlotChild(rule);
                return timeslotsChild.length && timeslotList[0].TimeSlotList.Always === !1 && (arrayInsert.push(timeslotsChild),
                xpathsInsert.push($.xpaths.accessControl.parentalControlNew.add.timeSlot)),
                rule.uidMacAddress || (arrayInsert.push(_insertMacAddressList(rule)),
                xpathsInsert.push($.xpaths.accessControl.parentalControlNew.add.macAddressList)),
                $.xmo.addChildrenMultiple({
                    aparent: xpathsInsert,
                    values: arrayInsert
                }, {
                    sync: !0,
                    success: function(callback) {
                        var uidMacAddress, uidTimeSlot = callback.actions[0].callbacks[0].parameters.uid;
                        uidMacAddress = rule.uidMacAddress ? rule.uidMacAddress : callback.actions[callback.actions.length - 1].callbacks[0].parameters.uid;
                        var ruleObj = _insertRule(rule, uidTimeSlot, uidMacAddress, timeslotsChild, flagRejectWanAccess);
                        $.xmo.addChildren($.xpaths.accessControl.parentalControlNew.add.rule, ruleObj, {
                            sync: !0,
                            success: function() {},
                            error: function() {}
                        })
                    },
                    error: function() {}
                }),
                self.checkEnable(),
                !0
            } catch (e) {
                return !1
            }
        },
        updateTimeslots: function(host, data) {
            try {
                var arrayInsert = []
                  , xpathsInsert = []
                  , self = this
                  , rule = {};
                rule.enable = !0,
                rule.macAddress = host.PhysAddress,
                rule.ipAddress = host.ipAddress,
                rule.timeSlots = $.util.convertNewTimeslots(data);
                var macAddressList = self.getMacAddressList(host)
                  , timeslotList = _insertTimeSlotList(rule);
                if (!$.isEmptyObject(macAddressList)) {
                    var ruleExistent = self.getRulesList(macAddressList.uid);
                    ruleExistent && self.excludeMacAddressFromRule(ruleExistent, macAddressList.uid);
                    var resultRule = self.searchForEqualRule();
                    if (resultRule)
                        return self.addMacAddressIntoRule(resultRule, macAddressList.uid),
                        self.enableDisableRule(resultRule, rule.timeSlots),
                        self.checkEnable(),
                        !0;
                    rule.uidMacAddress = macAddressList.uid
                }
                arrayInsert.push(timeslotList),
                xpathsInsert.push($.xpaths.accessControl.parentalControlNew.add.timeSlotList);
                var timeslotsChild = _insertTimeSlotChild(rule);
                return timeslotsChild.length && timeslotList[0].TimeSlotList.Always === !1 && (arrayInsert.push(timeslotsChild),
                xpathsInsert.push($.xpaths.accessControl.parentalControlNew.add.timeSlot)),
                rule.uidMacAddress || (arrayInsert.push(_insertMacAddressList(rule)),
                xpathsInsert.push($.xpaths.accessControl.parentalControlNew.add.macAddressList)),
                $.xmo.addChildrenMultiple({
                    aparent: xpathsInsert,
                    values: arrayInsert
                }, {
                    sync: !0,
                    success: function(callback) {
                        var uidMacAddress, uidTimeSlot = callback.actions[0].callbacks[0].parameters.uid;
                        uidMacAddress = rule.uidMacAddress ? rule.uidMacAddress : callback.actions[callback.actions.length - 1].callbacks[0].parameters.uid;
                        var ruleObj = _insertRule(rule, uidTimeSlot, uidMacAddress, timeslotsChild, flagRejectWanAccess);
                        $.xmo.addChildren($.xpaths.accessControl.parentalControlNew.add.rule, ruleObj, {
                            sync: !0,
                            success: function() {},
                            error: function() {}
                        })
                    },
                    error: function() {}
                }),
                self.checkEnable(),
                !0
            } catch (e) {
                return !1
            }
        },
        updateControl: function(hosts, data, flagRejectWanAccess) {
            return this.insertControl(hosts, data, flagRejectWanAccess)
        },
        removeControl: function(hosts, data, flagRejectWanAccess) {
            return this.insertControl(hosts, data, flagRejectWanAccess)
        },
        removeOneControl: function(host, data, flagRejectWanAccess) {
            return this.insertControl([host], data, flagRejectWanAccess)
        }
    };
    return accessControl
}),
sboxApp.factory("Auth", ["$http", "$cookieStore", "RoutingConfig", function($http, $cookieStore, RoutingConfig) {
    var userRole, accessLevels = RoutingConfig.accessLevels, userRoles = RoutingConfig.userRoles, currentUser = {
        username: "",
        role: userRoles["public"]
    };
    return {
        authorize: function(accessLevel, role) {
            return void 0 === role && (role = currentUser.role),
            accessLevel.bitMask & role.bitMask
        },
        isLoggedIn: function() {
            return $.xmo.loggedin() ? (currentUser.username = $.xmo.client.user,
            userRole = $.xmo.getValuesTree($.xpaths.advanced.userRole.replace("#", $.xmo.client.user)),
            userRole && userRoles[userRole] ? currentUser.role = userRoles[userRole] : currentUser.role = userRoles[$.xmo.client.user] ? userRoles[$.xmo.client.user] : userRoles[$.constants.defaultLogin],
            !0) : !1
        },
        login: function(user, success, error) {
            try {
                if ($.config.blockedUsers && $.config.blockedUsers.length > 0 && -1 !== $.util.inArray(user.username, $.config.blockedUsers))
                    throw new Error("Invalid user");
                if ($.config.allowedUsers && $.config.allowedUsers.length > 0 && -1 === $.util.inArray(user.username, $.config.allowedUsers))
                    throw new Error("Invalid user");
                $.xmo.login(user.username, user.password),
                currentUser.username = $.xmo.client.user,
                userRole = $.xmo.getValuesTree($.xpaths.advanced.userRole.replace("#", $.xmo.client.user)),
                userRole && userRoles[userRole] ? currentUser.role = userRoles[userRole] : currentUser.role = userRoles[$.xmo.client.user] ? userRoles[$.xmo.client.user] : userRoles[$.constants.defaultLogin],
                success(user)
            } catch (e) {
                error(e)
            }
        },
        logout: function(success, error) {
            try {
                $.xmo.logout(!0),
                currentUser.username = "",
                currentUser.role = userRoles["public"],
                success()
            } catch (e) {
                error()
            }
        },
        isFirstConnection: function() {
            return $.xmo.getValuesTree($.xpaths.firstConnection)
        },
        setFirstConnection: function(first) {
            try {
                return $.xmo.setValuesTree(first, $.xpaths.firstConnection),
                !0
            } catch (e) {
                return !1
            }
        },
        accessLevels: accessLevels,
        userRoles: userRoles,
        user: currentUser
    }
}
]);
var accessModule = angular.module("accessModule", []);
accessModule.provider("RoutingConfig", function() {
    function buildRoles(roles) {
        var bitMask = "01"
          , userRoles = {};
        return $.each(roles, function(role, obj) {
            var intCode = parseInt(bitMask, 2);
            userRoles[roles[role]] = {
                bitMask: intCode,
                title: roles[role]
            },
            bitMask = (intCode << 1).toString(2)
        }),
        userRoles
    }
    function buildAccessLevels(accessLevelDeclarations, userRoles) {
        var accessLevels = {};
        return $.each(accessLevelDeclarations, function(level) {
            var resultBitMask;
            "*" === accessLevelDeclarations[level] ? (resultBitMask = "",
            $.each(userRoles, function(role) {
                resultBitMask += "1"
            }),
            accessLevels[level] = {
                bitMask: parseInt(resultBitMask, 2)
            }) : (resultBitMask = 0,
            $.each(accessLevelDeclarations[level], function(role) {
                resultBitMask |= userRoles[accessLevelDeclarations[level][role]].bitMask
            }),
            accessLevels[level] = {
                bitMask: resultBitMask
            })
        }),
        accessLevels
    }
    var config = {
        roles: ["public", "guest", "User", "admin", "onu", "internal", "poweruser", "mso", "superadmin", "meo", "sumeo", "debug", "expert", "home", "L1vt1m4eng", "voip", "1234"],
        accessLevels: {
            "public": "*",
            anon: ["public"],
            onlyAdmin: ["admin"],
            guest: ["guest", "User", "admin", "internal", "poweruser", "onu", "mso", "superadmin", "meo", "sumeo", "debug", "expert", "home", "L1vt1m4eng", "voip", "1234"],
            admin: ["admin", "internal", "poweruser", "onu", "mso", "superadmin", "meo", "sumeo", "debug", "expert", "home", "L1vt1m4eng", "voip"],
            internal: ["internal", "poweruser", "superadmin", "meo", "sumeo", "debug", "expert", "L1vt1m4eng"],
            mso: ["mso", "internal", "poweruser", "expert", "L1vt1m4eng"],
            voip: ["voip"]
        }
    }
      , builtRoles = buildRoles(config.roles);
    this.userRoles = builtRoles,
    this.accessLevels = buildAccessLevels(config.accessLevels, builtRoles),
    this.$get = function() {
        return {
            userRoles: this.userRoles,
            accessLevels: this.accessLevels
        }
    }
}),
sboxApp.provider("$basicInfo", function($windowProvider) {
    var loggedTmp = !1
      , theAllowedLanguages = $.util.getAllowedLanguages()
      , _getCorrectLanguage = function(lang) {
        if (-1 === $.inArray(lang, theAllowedLanguages)) {
            var tmpLang, navigatorLang = $windowProvider.$get().navigator.language;
            $(theAllowedLanguages).each(function(i, obj) {
                return 0 === navigatorLang.toLowerCase().indexOf(obj.toLowerCase()) ? (tmpLang = obj,
                !1) : void 0
            }),
            lang = tmpLang ? tmpLang : 0 === navigatorLang.indexOf("es") && $.inArray("SPN", theAllowedLanguages) > -1 ? "SPN" : theAllowedLanguages[0] || "EN"
        }
        return lang
    };
    this.productName = "",
    this.xmoLanguage = "",
    this.hostName = "",
    this.defaultGateway = "",
    this.defaultGatewayIPv6 = "",
    this.globalGatewayIPv6 = "",
    this.publicIpv4 = "",
    this.publicIpv6 = "",
    this.googlePlayLink = "",
    this.appleStoreLink = "",
    this.hardwareVersion = "",
    this.provisioningMode = "",
    this.networkMode = "",
    this.firmwareVersion = "",
    this.softwareVersion = "",
    this.modelName = "",
    this.wifiNetworkEnable = "",
    this.upTime = -1,
    this.ploamPassword = "",
    this.mapEnable = "",
    this.serialNumber = "",
    this.wanMacAddress = "",
    this.internetConnected = "",
    this.wifi24Status = "",
    this.wifi24SSID = "",
    this.wifi5Status = "",
    this.connectionStatus = "",
    this.splashStatus = "",
    this.wifi5SSID = "",
    this.telephonyStatus = "",
    this.country = "",
    this.mptcp = "",
    this.login = function() {
        $.xmo.loggedin() || ($.xmo.login($.constants.guestUser, $.constants.guestPwd),
        loggedTmp = !0)
    }
    ,
    this.logout = function() {
        loggedTmp && (loggedTmp = !1,
        $.xmo.logout(!0))
    }
    ,
    this.getProductName = function(override) {
        var tmpName = override || this.productName;
        return tmpName = tmpName ? tmpName.replace(/Fast/gi, "F@st ") : $.constants.defaultGwName
    }
    ,
    this._init = function() {
        try {
            if (this.login(),
            !$.xmo.loggedin())
                return;
            var xpaths = {
                language: $.xpaths.management.language,
                gwName: $.config.modules.main.xpathForProductName || $.xpaths.main.cacheable.gwName,
                hostName: $.xpaths.mymedia.samba.host,
                localDomains: $.xpaths.mymedia.samba.localDomains,
                defaultGateway: $.xpaths.mymedia.samba.ip,
                defaultGatewayIPv6: $.xpaths.internetConnectivity.ipv6.lanIPv6,
                globalGatewayIPv6: $.xpaths.gateway.connection.status.localipnetwork.globalGatewayIpv6,
                ipv4Address: $.xpaths.advanced.remoteManagement.ipv4Address,
                ipv6Address: $.xpaths.internetConnectivity.ipv6.wanIPv6,
                provisioningMode: $.xpaths.checkFeaturesAvailable.provisioningMode,
                networkMode: $.xpaths.checkFeaturesAvailable.networkMode,
                hardwareVersion: $.xpaths.checkFeaturesAvailable.hardwareVersion,
                firmwareVersion: $.xpaths.mySagemcomBox.maintenance.firmwareVersion,
                softwareVersion: $.xpaths.mySagemcomBox.deviceInfo.softwareVersion,
                wifiNetworkEnable: $.xpaths.wifi.general.wifiNetworkEnable,
                upTime: $.xpaths.mySagemcomBox.deviceInfo.upTime,
                interfaceType: $.xpaths.healthCheck.interfaceType,
                ploamPassword: $.xpaths.gpon.LogicalPassword,
                mapEnable: $.xpaths.main.cacheable.mapEnable,
                serialNumber: $.xpaths.mySagemcomBox.deviceInfo.serialNumber,
                wanMacAddress: $.xpaths.mySagemcomBox.deviceInfo.wanMacAddress,
                country: $.xpaths.management.country,
                connectionStatus: $.xpaths.mySagemcomBox.deviceInfo.docsis.cableModemStatus,
                splashStatus: $.xpaths.splashScreen,
                mptcp: $.xpaths.internetConnectivity.mptcp.status.showMPTCPPage
            };
            $.config.showedpages.headerBoxesLogin && $.config.showedpages.headerBoxesLogin.enable && (xpaths.wifi24Ssid = $.xpaths.mySagemcomBox.deviceInfo.wifi24.ssid,
            xpaths.wifi24Status = $.xpaths.mySagemcomBox.deviceInfo.wifi24.status,
            xpaths.wifi5Ssid = $.xpaths.mySagemcomBox.deviceInfo.wifi5.ssid,
            xpaths.wifi5Status = $.xpaths.mySagemcomBox.deviceInfo.wifi5.status,
            xpaths.conexionStatus = $.xpaths.stats.wan.conexionStatus,
            xpaths.conexionIpv6Status = $.xpaths.stats.wan.conexionIpv6Status,
            xpaths.sfpStatus = $.xpaths.stats.sfp.sfpStatus,
            xpaths.backupUSBStatus = $.xpaths.stats.wan.backupUSBStatus,
            xpaths.backupWanStatus = $.xpaths.stats.wan.backupWanStatus,
            xpaths.telephony = $.xpaths.main.phones.splitLines),
            $.config.showedpages.mobileLinks.enable && (xpaths.google = $.xpaths.management.mobileLinks.google,
            xpaths.apple = $.xpaths.management.mobileLinks.apple);
            var rs = $.xmo.getValuesTree(xpaths);
            if (this.defaultGateway = rs.defaultGateway,
            this.defaultGatewayIPv6 = rs.defaultGatewayIPv6,
            this.globalGatewayIPv6 = rs.globalGatewayIPv6,
            this.hostName = rs.hostName,
            this.localDomains = rs.localDomains,
            this.productName = rs.gwName,
            this.publicIpv4 = rs.ipv4Address,
            this.googlePlayLink = rs.google,
            this.appleStoreLink = rs.apple,
            this.provisioningMode = rs.provisioningMode,
            this.networkMode = rs.networkMode,
            this.hardwareVersion = rs.hardwareVersion,
            this.firmwareVersion = rs.firmwareVersion,
            this.softwareVersion = rs.softwareVersion,
            this.wifiNetworkEnable = rs.wifiNetworkEnable,
            this.upTime = rs.upTime,
            this.interfaceType = rs.interfaceType,
            this.mapEnable = rs.mapEnable,
            this.serialNumber = rs.serialNumber,
            this.wanMacAddress = rs.wanMacAddress,
            this.country = rs.country,
            this.xmoLanguage = rs.language ? rs.language.toUpperCase() : $.constants.availableLanguages[0],
            this.ploamPassword = rs.ploamPassword,
            this.wifi24Status = rs.wifi24Status,
            this.wifi24SSID = rs.wifi24Ssid,
            this.wifi5Status = rs.wifi5Status,
            this.wifi5SSID = rs.wifi5Ssid,
            this.telephonyStatus = !1,
            this.telephonyNumber = "",
            this.internetConnected = !1,
            this.connectionStatus = !1,
            "OPERATIONAL" === rs.connectionStatus && (this.connectionStatus = !0),
            this.mptcp = rs.mptcp,
            this.splashStatus = rs.splashStatus,
            $.config.showedpages.headerBoxesLogin && $.config.showedpages.headerBoxesLogin.enable) {
                rs.backupWanStatus = rs.backupWanStatus ? "UP" === rs.backupWanStatus : "UP" === rs.backupUSBStatus,
                ("ENABLED" === rs.conexionStatus || "ENABLED" === rs.conexionIpv6Status || rs.sfpStatus === !0 || $.config.showedpages.backup3gLTE && rs.backupWanStatus) && (this.internetConnected = !0);
                var devicesReturn = [];
                if (rs.telephony && rs.telephony.uid) {
                    $.isArray(rs.telephony.uid) || $.each(rs.telephony, function(field, res) {
                        rs.telephony[field] = [res]
                    });
                    var result = [];
                    $(rs.telephony.uid).each(function(i) {
                        result[i] = result[i] || {},
                        $.each(rs.telephony, function(field, res) {
                            result[i][field] = Array.isArray(res) ? res[i] : res
                        })
                    }),
                    $.each(result, function(i) {
                        if ("ENABLED" !== result[i].Enable && !all)
                            return !0;
                        var t = {};
                        t.status = result[i].StatusReason !== $.constants.telephone.statusReason ? $.constants.telephone.notregistered : $.constants.telephone.registered,
                        t.active = t.enable = "ENABLED" === result[i].Enable,
                        t.StatusReason = result[i].StatusReason,
                        t.StatusOriginal = result[i].Status,
                        t.CallState = result[i].CallState,
                        t.DirectoryNumber = result[i].DirectoryNumber,
                        result[i].Status === $.constants.telephone.status ? t.lineStatus = $.constants.telephone.operational : result[i].Status === $.constants.telephone.registering ? t.lineStatus = $.constants.telephone.notregistered : t.lineStatus = $.constants.telephone.notbooked,
                        devicesReturn.push(t)
                    })
                }
                this.telephonyStatus = $.constants.telephone.notbooked,
                this.telephonyNumber = devicesReturn[0].DirectoryNumber;
                var telStatus = rs.telephony.Status ? rs.telephony.Status : "";
                telStatus = angular.isArray(telStatus) && telStatus[0] ? telStatus[0] : telStatus,
                "pass" === telStatus.toLowerCase() && (this.telephonyStatus = $.constants.telephone.operational)
            }
            if (rs.ipv6Address && rs.ipv6Address.length > 1) {
                rs.ipv6Address = rs.ipv6Address.slice();
                var lastItem = rs.ipv6Address.pop();
                this.publicIpv6 = lastItem.IPAddress
            } else
                this.publicIpv6 = ""
        } catch (e) {
            this.xmoLanguage = $.cookie("currentLanguage") ? $.cookie("currentLanguage") : theAllowedLanguages[0]
        }
        this.logout(),
        this.xmoLanguage = _getCorrectLanguage(this.xmoLanguage),
        !$.config.modules.main.dynamicMySagemcomBoxName || !this.productName && $.config.title || ($.util.hasFeature("dtagXdsl") ? document.title = "F@st5352 VRX517 B" === this.productName ? "Speedport Plus Bonding" : "Speedport Plus" : document.title = this.getProductName())
    }
    ,
    this._init(),
    this.getInternetConnected = function() {
        return this.internetConnected
    }
    ,
    this.getWifi24Status = function() {
        return this.wifi24Status
    }
    ,
    this.getWifi24SSID = function() {
        return this.wifi24SSID
    }
    ,
    this.getWifi5Status = function() {
        return this.wifi5Status
    }
    ,
    this.getWifi5SSID = function() {
        return this.wifi5SSID
    }
    ,
    this.getTelephonyStatus = function() {
        return this.telephonyStatus
    }
    ,
    this.getTelephonyNumber = function() {
        return this.telephonyNumber
    }
    ,
    this.getProvisioningMode = function() {
        return this.provisioningMode
    }
    ,
    this.getLoggedUser = function() {
        return $.xmo.loggedin() ? $.xmo.client.user : ""
    }
    ,
    this.getNetworkMode = function() {
        return this.networkMode
    }
    ,
    this.getHardwareVersion = function() {
        return this.hardwareVersion
    }
    ,
    this.getHostname = function() {
        return this.hostName
    }
    ,
    this.getLocalDomains = function() {
        return this.localDomains
    }
    ,
    this.getGoogleLink = function() {
        return this.googlePlayLink
    }
    ,
    this.getAppleLink = function() {
        return this.appleStoreLink
    }
    ,
    this.getMapEnable = function() {
        return this.mapEnable
    }
    ,
    this.getSerialNumber = function() {
        return this.serialNumber
    }
    ,
    this.getWanMacAddress = function() {
        return this.wanMacAddress
    }
    ,
    this.getConnectionStatus = function() {
        return this.connectionStatus
    }
    ,
    this.getMptcp = function() {
        try {
            this.mptcp = $.xmo.getValuesTree($.xpaths.internetConnectivity.mptcp.status.showMPTCPPage)
        } catch (e) {}
        return this.mptcp
    }
    ,
    this.getSplashStatus = function() {
        try {
            this.splashStatus = $.xmo.getValuesTree($.xpaths.splashScreen)
        } catch (e) {}
        return this.splashStatus
    }
    ,
    this.getCountry = function() {
        return this.country
    }
    ,
    this.updateHeaderData = function() {
        ("" === this.firmwareVersion || null === this.firmwareVersion) && this._init()
    }
    ,
    this.getFirmwareVersion = function() {
        return this.firmwareVersion
    }
    ,
    this.getSoftwareVersion = function() {
        return this.softwareVersion
    }
    ,
    this.getWifiNetworkEnable = function(useCache) {
        try {
            null !== this.wifiNetworkEnable && void 0 !== this.wifiNetworkEnable && useCache || (this.wifiNetworkEnable = $.xmo.getValuesTree($.xpaths.wifi.general.wifiNetworkEnable))
        } finally {
            return this.wifiNetworkEnable
        }
    }
    ,
    this.getDefaultGateway = function() {
        return this.defaultGateway;
    }
    ,
    this.getDefaultGatewayIPv6 = function() {
        return this.defaultGatewayIPv6
    }
    ,
    this.getGlobalGatewayIPv6 = function() {
        return this.globalGatewayIPv6
    }
    ,
    this.getXmoLanguage = function() {
        return this.xmoLanguage
    }
    ,
    this.getRefreshedLanguage = function() {
        return _getCorrectLanguage(this.xmoLanguage)
    }
    ,
    this.getPublicIpv4 = function() {
        return this.publicIpv4
    }
    ,
    this.getPublicIpv6 = function() {
        return this.publicIpv6
    }
    ,
    this.getTimeLeft = function() {
        return null !== this.upTime && this.upTime >= 0 ? $.constants.loginResetLimit - this.upTime : -1
    }
    ,
    this.getNetInterfaceType = function() {
        return this.interfaceType
    }
    ,
    this.setXmoLanguage = function(lang) {
        if ($.inArray(lang, $.constants.availableLanguages) < 0)
            throw new Error("Unexisting language");
        this.login();
        var arrayChanges = {};
        arrayChanges[$.xpaths.management.language] = lang,
        $.xmo.setValuesFlat(arrayChanges),
        null !== $.xmo.getValuesTree($.xpaths.management.twonky.language) && $.config.showedpages.twonkyLink.enable && ($.constants.supportedTwonkyLanguages[lang] || (lang = "EN"),
        arrayChanges = {},
        arrayChanges[$.xpaths.management.twonky.language] = $.constants.supportedTwonkyLanguages[lang],
        arrayChanges[$.xpaths.management.twonky.AllName] = $.globals.AllName[lang],
        arrayChanges[$.xpaths.management.twonky.MusicNode1] = $.globals.MusicNode1[lang],
        arrayChanges[$.xpaths.management.twonky.MusicNode2] = $.globals.MusicNode2[lang],
        arrayChanges[$.xpaths.management.twonky.MusicNode3] = $.globals.MusicNode3[lang],
        arrayChanges[$.xpaths.management.twonky.MusicNode4] = $.globals.MusicNode4[lang],
        arrayChanges[$.xpaths.management.twonky.MusicNode5] = $.globals.MusicNode5[lang],
        arrayChanges[$.xpaths.management.twonky.AllTracks] = $.globals.AllTracks[lang],
        arrayChanges[$.xpaths.management.twonky.AllRadio] = $.globals.AllRadio[lang],
        arrayChanges[$.xpaths.management.twonky.PlaylistLastPlayed] = $.globals.PlaylistLastPlayed[lang],
        arrayChanges[$.xpaths.management.twonky.PlaylistMostPlayed] = $.globals.PlaylistMostPlayed[lang],
        arrayChanges[$.xpaths.management.twonky.Playlists] = $.globals.Playlists[lang],
        arrayChanges[$.xpaths.management.twonky.InternetRadio] = $.globals.InternetRadio[lang],
        arrayChanges[$.xpaths.management.twonky.RootMusic] = $.globals.RootMusic[lang],
        arrayChanges[$.xpaths.management.twonky.PictureNode1] = $.globals.PictureNode1[lang],
        arrayChanges[$.xpaths.management.twonky.PictureNode2] = $.globals.PictureNode2[lang],
        arrayChanges[$.xpaths.management.twonky.PictureNode3] = $.globals.PictureNode3[lang],
        arrayChanges[$.xpaths.management.twonky.AllPictures] = $.globals.AllPictures[lang],
        arrayChanges[$.xpaths.management.twonky.RootPicture] = $.globals.RootPicture[lang],
        arrayChanges[$.xpaths.management.twonky.TagsPicture] = $.globals.TagsPicture[lang],
        arrayChanges[$.xpaths.management.twonky.VideoNode1] = $.globals.VideoNode1[lang],
        arrayChanges[$.xpaths.management.twonky.VideoNode2] = $.globals.VideoNode2[lang],
        arrayChanges[$.xpaths.management.twonky.VideoNode3] = $.globals.VideoNode3[lang],
        arrayChanges[$.xpaths.management.twonky.AllVideos] = $.globals.AllVideos[lang],
        arrayChanges[$.xpaths.management.twonky.RootVideo] = $.globals.RootVideo[lang],
        $.xmo.setValuesFlat(arrayChanges)),
        this.logout(),
        this.xmoLanguage = lang
    }
    ,
    this.setMailboxLanguage = function(data) {
        var dataMap = {};
        try {
            return dataMap[$.xpaths.voice.answeringMachine.updateMailbox.SimpleUnconditionalGreeting.replace('[@uid="#"]', "")] = "default_" + data.SelectedLanguage + "_SimpleUnconditionalGreeting.wav",
            dataMap[$.xpaths.voice.answeringMachine.updateMailbox.SimpleOnBusyGreeting.replace('[@uid="#"]', "")] = "default_" + data.SelectedLanguage + "_SimpleOnBusyGreeting.wav",
            dataMap[$.xpaths.voice.answeringMachine.updateMailbox.SimpleNoAnswerGreeting.replace('[@uid="#"]', "")] = "default_" + data.SelectedLanguage + "_SimpleOnNoAnswerGreeting.wav",
            dataMap[$.xpaths.voice.answeringMachine.updateMailbox.RecordingUnconditionalGreeting.replace('[@uid="#"]', "")] = "default_" + data.SelectedLanguage + "_RecordingUnconditionalGreeting.wav",
            dataMap[$.xpaths.voice.answeringMachine.updateMailbox.RecordingOnBusyGreeting.replace('[@uid="#"]', "")] = "default_" + data.SelectedLanguage + "_RecordingOnBusyGreeting.wav",
            dataMap[$.xpaths.voice.answeringMachine.updateMailbox.RecordingNoAnswerGreeting.replace('[@uid="#"]', "")] = "default_" + data.SelectedLanguage + "_RecordingOnNoAnswerGreeting.wav",
            $.xmo.setValuesFlat(dataMap),
            !0
        } catch (e) {
            return !1
        }
    }
    ,
    this.isEmptyPloampassword = function() {
        return !this.ploamPassword || "" === this.ploamPassword.trim()
    }
    ,
    this.$get = function() {
        var self = this;
        return {
            login: function() {
                return self.login()
            },
            logout: function() {
                return self.logout()
            },
            getLanguage: function() {
                return self.getXmoLanguage()
            },
            getRefreshedLanguage: function() {
                return self.getRefreshedLanguage()
            },
            getHostname: function() {
                return self.getHostname()
            },
            getProvisioningMode: function() {
                return self.getProvisioningMode()
            },
            getNetworkMode: function() {
                return self.getNetworkMode()
            },
            getHardwareVersion: function() {
                return self.getHardwareVersion()
            },
            getApple: function() {
                return self.getAppleLink()
            },
            getMapEnable: function() {
                return self.getMapEnable()
            },
            getSerialNumber: function() {
                return self.getSerialNumber()
            },
            getWanMacAddress: function() {
                return self.updateHeaderData()
            },
            getCountry: function() {
                return self.getCountry()
            },
            updateHeaderData: function() {
                return self.updateHeaderData()
            },
            getFirmwareVersion: function() {
                return self.getFirmwareVersion()
            },
            getSoftwareVersion: function() {
                return self.getSoftwareVersion()
            },
            getWifiNetworkEnable: function(useCache) {
                return self.getWifiNetworkEnable(useCache)
            },
            getGoogle: function() {
                return self.getGoogleLink()
            },
            getProductName: function(override) {
                return self.getProductName(override)
            },
            getLocalDomains: function() {
                return self.getLocalDomains()
            },
            getDefaultGateway: function() {
                return self.getDefaultGateway()
            },
            getDefaultGatewayIPv6: function() {
                return self.getDefaultGatewayIPv6()
            },
            getGlobalGatewayIPv6: function() {
                return self.getGlobalGatewayIPv6()
            },
            setLanguage: function(lang) {
                self.setXmoLanguage(lang)
            },
            setMailboxLanguage: function(lang) {
                self.setMailboxLanguage(lang)
            },
            resetLanguage: function() {
                self._init()
            },
            getTimeLeft: function() {
                return self.getTimeLeft()
            },
            getNetInterfaceType: function() {
                return self.getNetInterfaceType()
            },
            isEmptyPloampassword: function() {
                return self.isEmptyPloampassword()
            },
            getLoggedUser: function() {
                return self.getLoggedUser()
            },
            getWifi24SSID: function() {
                return self.getWifi24SSID()
            },
            getWifi24Status: function() {
                return self.getWifi24Status()
            },
            getWifi5SSID: function() {
                return self.getWifi5SSID()
            },
            getWifi5Status: function() {
                return self.getWifi5Status()
            },
            getInternetConnected: function() {
                return self.getInternetConnected()
            },
            getTelephonyStatus: function() {
                return self.getTelephonyStatus()
            },
            getTelephonyNumber: function() {
                return self.getTelephonyNumber()
            },
            getConnectionStatus: function() {
                return self.getConnectionStatus()
            },
            getSplashStatus: function() {
                return self.getSplashStatus()
            },
            getMptcp: function() {
                return self.getMptcp()
            }
        }
    }
}),
sboxApp.config(function($translateProvider, $basicInfoProvider) {
    var language = $basicInfoProvider.getXmoLanguage();
    $.each($.constants.availableLanguages, function(index, lang) {
        $translateProvider.translations(lang, $.util.resolveArrayLanguage(lang))
    }),
    $translateProvider.preferredLanguage(language);
    var isValidHost = !1
      , hostname = $basicInfoProvider.getHostname()
      , hostnameList = [hostname]
      , localDomains = $basicInfoProvider.getLocalDomains()
      , defaultGateway = $basicInfoProvider.getDefaultGateway()
      , defaultGatewayIPv6 = $basicInfoProvider.getDefaultGatewayIPv6()
      , globalGatewayIPv6 = $basicInfoProvider.getGlobalGatewayIPv6()
      , publicIpv4 = $basicInfoProvider.getPublicIpv4()
      , publicIpv6 = $basicInfoProvider.getPublicIpv6()
      , locationHostname = window.location.hostname
      , validHosts = [defaultGateway, defaultGatewayIPv6, publicIpv4, publicIpv6, globalGatewayIPv6];
    if (localDomains) {
        var hostnameWithLocalDomain, tmp = localDomains.split(",");
        if (tmp.length > 1)
            for (var i = 0; i < tmp.length; i++)
                hostnameWithLocalDomain = hostname + "." + tmp[i],
                hostnameList.push(hostnameWithLocalDomain);
        else
            hostnameWithLocalDomain = hostname + "." + localDomains,
            hostnameList.push(hostnameWithLocalDomain)
    }
    return (validHosts.indexOf(locationHostname) > -1 || $.inArray(locationHostname, hostnameList) > -1) && (isValidHost = !0),
    $.config.showedpages.checkValidHost.enable && !isValidHost && (hostname || defaultGateway || publicIpv4 || publicIpv6) ? void (window.location.hash = "#/blockedAccess/") : void 0
}),
sboxApp.factory("ConnectedDevices", ["$http", "WiFi", "$basicInfo", "WifiXpaths", "$rootScope", function($http, WiFi, $basicInfo, WifiXpaths, $rootScope) {
    var cache, xpaths, manufacturer, _getTelephoneState = function(telephone) {
        var state = $.constants.telephone.disabled
          , tmpStatus = telephone.StatusOriginal || telephone.Status;
        return tmpStatus === $.constants.telephone.status && telephone.StatusReason === $.constants.telephone.statusReason && (state = $.constants.telephone.availble,
        telephone.CallState === $.constants.telephone.callState && (state = $.constants.telephone.incall)),
        state
    }, _getActiveIPv6Info = function(host) {
        if (host && host.IPv6Addresses && host.IPv6Addresses.length > 0)
            for (var j = 0; j < host.IPv6Addresses.length; j++) {
                var ipv6Tmp = host.IPv6Addresses[j];
                if ("" !== ipv6Tmp.IPAddress && !/^fe80/gi.test(ipv6Tmp.IPAddress) && ipv6Tmp.Active === !0)
                    return ipv6Tmp
            }
    }, _getDeviceIdentification = function() {
        cache && cache.hosts && $.each(cache.hosts, function(i) {
            cache.hosts[i].DeviceTypeAssociation && (cache.hosts[i].deviceIdentification = $.xmo.getValuesTree(cache.hosts[i].DeviceTypeAssociation))
        })
    }, _getDectLineStatus = function(outgoingLine) {
        var status = $.constants.telephone.disabled
          , tmp = /Line\[@uid=\'?(\d)*\'?\]/gi.exec(outgoingLine)
          , lineUid = tmp ? parseInt(tmp[1], 10) : null;
        if (null !== lineUid && cache.telephones)
            for (var i = 0; i < cache.telephones.length; i++)
                cache.telephones[i].uid === lineUid && (status = _getTelephoneState(cache.telephones[i]));
        return status
    }, _isStb = function(host) {
        var isStb = !1
          , ids = [];
        try {
            ids = $.config.modules.main.vendorClassIds
        } catch (err) {}
        return $(ids).each(function(index, value) {
            return isStb = host.VendorClassID.indexOf(value) > -1,
            !isStb
        }),
        !isStb && cache.stbList && (host.VendorClassID.indexOf("dslforum") > -1 ? isStb = !0 : $.each(cache.stbList, function(j) {
            return cache.stbList[j].StbMacAddress.toUpperCase() === host.PhysAddress.toUpperCase() && (isStb = !0),
            !isStb
        })),
        isStb
    }, _removeStbs = function() {
        var copy = $.extend(!0, {}, cache);
        return copy.hosts = [],
        $.each(cache.hosts, function(i) {
            _isStb(cache.hosts[i]) || copy.hosts.push(cache.hosts[i])
        }),
        copy
    }, _updateCache = function() {
        xpaths = $.xpaths.main.cacheable,
        xpaths.gwName = $.config.modules.main.xpathForProductName || $.xpaths.main.cacheable.gwName,
        $.config.modules && $.config.modules.wifi && $.config.modules.wifi.wifiBandSteeringSupport === !0 && (xpaths.bandSteeringEnable = $.xpaths.wifiBandSteering),
        xpaths.wifi24Guest = WifiXpaths.get("2.4GHz", "guest").mainPage,
        xpaths.wifi5Guest = WifiXpaths.get("5GHz", "guest").mainPage,
        xpaths.wifi24 = WifiXpaths.get("2.4GHz", "priv").mainPage,
        xpaths.wifi5 = WifiXpaths.get("5GHz", "priv").mainPage,
        xpaths.tv = WifiXpaths.get("tv", "priv").mainPage,
        xpaths.bridgeMode = $.xpaths.mySagemcomBox.bridgeMode.enable,
        $.xmo.client && $.xmo.client.user && (xpaths.forceChangePassword = $.xpaths.mySagemcomBox.deviceInfo.forcePasswordChange.replace("#login#", $.xmo.client.user)),
        cache = $.xmo.getValuesTree(xpaths),
        $.config.showedpages.dtagXdsl && (cache.gwName = "F@st5352 VRX517 B" === cache.gwName ? "Speedport Plus Bonding" : "Speedport Plus");
        var quantena = cache.quantenna
          , filteredHosts = [];
        ("" !== quantena.MngtIPRemote || "" !== quantena.BootIPLocal || "" !== quantena.BootIPRemote) && $(cache.hosts).each(function(i) {
            cache.hosts[i].IPAddress !== quantena.MngtIPRemote && cache.hosts[i].IPAddress !== quantena.BootIPLocal && cache.hosts[i].IPAddress !== quantena.BootIPRemote && filteredHosts.push(cache.hosts[i])
        }),
        cache.hosts = 0 === filteredHosts.length ? cache.hosts : filteredHosts
    }, isEthernetWifiDevice = function(device) {
        return "NONE" !== device.AddressSource && ($.util.compareLayer1Interface(device.Layer1Interface, $.xpaths.main.wifiLayerInterface.wifi24) || $.util.compareLayer1Interface(device.Layer1Interface, $.xpaths.main.wifiLayerInterface.wifi5) || "Ethernet" === device.InterfaceType)
    }, _getLayerFriendlyName = function(host) {
        var r = ""
          , hasLayer1Interface = !!host.Layer1Interface;
        return host ? (hasLayer1Interface && -1 !== host.Layer1Interface.indexOf("RADIO2G4") && (r = "wifi24"),
        hasLayer1Interface && -1 !== host.Layer1Interface.indexOf("RADIO5G") && (r = "wifi5"),
        (hasLayer1Interface && -1 !== host.Layer1Interface.indexOf("PHY") || "Ethernet" === host.InterfaceType) && (r = "ethernet"),
        r) : ""
    }, ConnectedDevices = {
        isStb: function(host) {
            return cache || _updateCache(),
            _isStb(host)
        },
        fetchManufacturers: function() {
            var promise = $http.get("js/json/manufacturer.json", {
                cache: !0
            }).then(function(response) {
                return manufacturer = response.data,
                response.data
            });
            return promise
        },
        getCache: function() {
            return cache
        },
        updateCache: function() {
            _updateCache(),
            _getDeviceIdentification()
        },
        verifyBandSteering: function() {
            return $.config.modules && $.config.modules.wifi && $.config.modules.wifi.wifiBandSteeringSupport === !0 ? cache.bandSteeringEnable === !0 : !1
        },
        verifyUSB: function() {
            return !!cache.usbEnable
        },
        verifyDect: function() {
            return !!cache.dect.enable
        },
        verifyTelephones: function() {
            return $.util.isEmptyObject(cache.telephones) ? !1 : !0
        },
        getBridgeMode: function() {
            return !!cache && cache.bridgeMode === !0
        },
        verifyWifi5: function() {
            return !!cache.wifi5.ssidStatus
        },
        verifyWifi24: function() {
            return !!cache.wifi24.ssidStatus
        },
        updateTelephonesStatus: function() {
            var xpaths = $.xpaths.main.cacheable;
            xpaths.gwName = $.config.modules.main.xpathForProductName || $.xpaths.main.cacheable.gwName,
            xpaths.forceChangePassword = $.xpaths.mySagemcomBox.deviceInfo.forcePasswordChange.replace("#login#", $.xmo.client.user),
            cache = $.xmo.getValuesTree(xpaths)
        },
        verifyMapEnable: function() {
            return cache || this.updateCache(),
            cache.mapEnable === !0
        },
        verifyStatusTelephony: function() {
            var statusTelephony = $.constants.telephone.notbooked;
            return !cache.telephones || cache.telephones && 0 === cache.telephones.length ? statusTelephony : (cache.telephones[0].StatusOriginal === $.constants.telephone.registering || cache.telephones[1] && cache.telephones[1].StatusOriginal === $.constants.telephone.registering ? statusTelephony = $.constants.telephone.failure : (cache.telephones[0].StatusOriginal === $.constants.telephone.status || cache.telephones[1] && cache.telephones[1].StatusOriginal === $.constants.telephone.status) && (statusTelephony = $.constants.telephone.operational),
            statusTelephony)
        },
        getVendorByMac: function(macAddress) {
            var vendor = macAddress.substring(0, 8);
            if (manufacturer) {
                var prefix = macAddress.substring(0, 8).replace(/:/g, "");
                vendor = manufacturer[prefix.toUpperCase()]
            }
            return vendor
        },
        getGwName: function(numberOnly) {
            var gwName = $basicInfo.getProductName(cache ? cache.gwName : void 0);
            if ("Router" === gwName)
                return "5345";
            if (numberOnly)
                try {
                    return gwName.match(/\d+/)[0]
                } catch (e) {
                    return "5360"
                }
            return gwName
        },
        getEthernetDevices: function(all) {
            var devicesReturn = [];
            if (cache.hosts && cache.hosts.length)
                for (var i = 0; i < cache.hosts.length; i++)
                    if (!cache.quantenna.InterfacePhy || cache.quantenna.InterfacePhy !== cache.hosts[i].Layer1Interface) {
                        var hostActiveIPv6Info = _getActiveIPv6Info(cache.hosts[i]);
                        if ((cache.hosts[i].Active === !0 || all) && "Ethernet" === cache.hosts[i].InterfaceType && ("" !== cache.hosts[i].IPAddress || hostActiveIPv6Info) && !cache.hosts[i].AssociatedDevice) {
                            var u = {};
                            if (u.active = cache.hosts[i].Active,
                            u.ipAddress = cache.hosts[i].IPAddress,
                            cache.hosts[i].IPv4Addresses && cache.hosts[i].IPv4Addresses.length > 0 && (u.ipv4AddressActive = cache.hosts[i].IPv4Addresses[0].Active),
                            u.ipv6Address = "",
                            hostActiveIPv6Info && (u.ipv6Address = hostActiveIPv6Info.IPAddress,
                            u.ipv6AddressActive = hostActiveIPv6Info.Active),
                            u.hostname = $.util.getHostname(cache.hosts[i]),
                            u.uid = cache.hosts[i].uid,
                            u.isStb = _isStb(cache.hosts[i]),
                            u.userDeviceType = u.isStb ? "TV_DECODER" : cache.hosts[i].UserDeviceType,
                            "MISCELLANEOUS" === u.userDeviceType && void 0 !== cache.hosts[i].deviceIdentification) {
                                var deviceIdentification = cache.hosts[i].deviceIdentification.Entry.DeviceName.replace(/\s/g, "");
                                "" !== deviceIdentification && (u.userDeviceType = $.constants.deviceDiscoveryTypes[deviceIdentification])
                            }
                            var macAddress = cache.hosts[i].PhysAddress;
                            if (u.manufacturer = this.getVendorByMac(macAddress),
                            u.InterfaceType = cache.hosts[i].InterfaceType,
                            u.Layer1Interface = _getLayerFriendlyName(cache.hosts[i]),
                            "" !== cache.hosts[i].Layer1Interface) {
                                var ethernetInterface = $.xmo.getValuesTree($.util.fixpath(cache.hosts[i].Layer1Interface));
                                u.speed = ethernetInterface.Interface.MaxBitRate,
                                $rootScope.isSonne && (u.speed = ethernetInterface.Interface.CurrentBitRate)
                            }
                            devicesReturn.push(u)
                        }
                    }
            return devicesReturn
        },
        getTelephoneDevices: function(success, all) {
            var devicesReturn = [];
            if (cache || this.updateCache(),
            cache && cache.telephones)
                return success(cache.telephones);
            var data = $.xmo.getValuesTree($.xpaths.main.phones.splitLines);
            if (data.uid) {
                $.isArray(data.uid) || $.each(data, function(field, rs) {
                    data[field] = [rs]
                });
                var result = [];
                $(data.uid).each(function(i) {
                    result[i] = result[i] || {},
                    $.each(data, function(field, rs) {
                        result[i][field] = Array.isArray(rs) ? rs[i] : rs
                    })
                }),
                $.each(result, function(i) {
                    if ("ENABLED" !== result[i].Enable && !all)
                        return !0;
                    var t = {};
                    t.uid = result[i].uid,
                    t.lineName = result[i].Name,
                    t.lineNumber = result[i].DirectoryNumber,
                    t.state = _getTelephoneState(result[i]),
                    void 0 !== $.config.showedpages.isCable && $.config.showedpages.isCable.enable === !0 ? t.status = "Operational" === result[i].Status ? $.constants.telephone.registered : $.constants.telephone.notregistered : t.status = result[i].StatusReason !== $.constants.telephone.statusReason ? $.constants.telephone.notregistered : $.constants.telephone.registered,
                    t.active = t.enable = "ENABLED" === result[i].Enable,
                    t.StatusReason = result[i].StatusReason,
                    t.StatusOriginal = result[i].Status,
                    t.CallState = result[i].CallState,
                    t.isBobEnabled = !result[i].MultiCallEnable,
                    result[i].Status === $.constants.telephone.status ? t.lineStatus = $.constants.telephone.operational : result[i].Status === $.constants.telephone.registering ? t.lineStatus = $.constants.telephone.notregistered : t.lineStatus = $.constants.telephone.notbooked,
                    devicesReturn.push(t)
                })
            }
            cache.telephones = devicesReturn,
            success(devicesReturn)
        },
        searchAssociatedDevice: function(associatedDevices, macAddress) {
            var found = !1;
            return $(associatedDevices).each(function(x, associatedDevice) {
                return associatedDevice.Active !== !0 && !$.config.showInactiveDevices || macAddress.toUpperCase() !== associatedDevice.MACAddress.toUpperCase() || (found = associatedDevice),
                found === !1
            }),
            found
        },
        hasSameAssociatedDevice: function(leType, associatedDevice) {
            return $.util.getParamAliasFromXPath(associatedDevice) === $.util.getParamAliasFromXPath(xpaths[leType].associatedDevices)
        },
        getWifiDevices: function(leType, includeStb, all) {
            var devicesReturn = []
              , associatedDevices = cache[leType].associatedDevices
              , devices = cache.hosts
              , _self = this;
            return $(devices).each(function(i) {
                var found = _self.searchAssociatedDevice(associatedDevices, devices[i].PhysAddress)
                  , sameAssociatedDevice = null;
                if (devices[i].AssociatedDevice && (sameAssociatedDevice = _self.hasSameAssociatedDevice(leType, devices[i].AssociatedDevice)),
                null !== sameAssociatedDevice && !sameAssociatedDevice || null === sameAssociatedDevice && !found)
                    return !0;
                var u = {}
                  , allow = !1;
                if (allow = allow || null !== sameAssociatedDevice && sameAssociatedDevice,
                sameAssociatedDevice && found ? (u.rxRate = found.LastDataDownlinkRate,
                u.txRate = found.LastDataUplinkRate) : (u.rxRate = 0,
                u.txRate = 0),
                allow = allow || $.util.compareLayer1Interface(devices[i].Layer1Interface, $.xpaths.main.wifiLayerInterface[leType]),
                allow = allow || cache.quantenna.InterfacePhy && devices[i].Layer1Interface === cache.quantenna.InterfacePhy,
                allow = allow || 0 === leType.indexOf("wifi5") && "" === devices[i].Layer1Interface && "WiFi" === devices[i].InterfaceType,
                allow = allow && !(0 === leType.indexOf("wifi5") && devices[i].IPAddress && $.util.endsWith(devices[i].IPAddress, ".200")),
                allow = allow && !(!includeStb && _isStb(devices[i])),
                (devices[i].Active === !0 || found.Active === !0 || all || $.config.showInactiveDevices) && allow) {
                    if (u.active = devices[i].Active || found && found.Active,
                    devices[i].IPv4Addresses && devices[i].IPv4Addresses.length > 0 && (u.ipv4AddressActive = devices[i].IPv4Addresses[0].Active),
                    u.ipv6Address = "",
                    devices[i].IPv6Addresses && devices[i].IPv6Addresses.length > 0)
                        for (var j = 0; j < devices[i].IPv6Addresses.length; j++) {
                            var ipv6Tmp = devices[i].IPv6Addresses[j];
                            "" === ipv6Tmp.IPAddress || /^fe80/gi.test(ipv6Tmp.IPAddress) || ipv6Tmp.Active !== !0 || (u.ipv6Address = ipv6Tmp.IPAddress,
                            u.ipv6AddressActive = ipv6Tmp.Active)
                        }
                    if (u.ipAddress = devices[i].IPAddress,
                    u.hostname = $.util.getHostname(devices[i]),
                    u.PhysAddress = devices[i].PhysAddress,
                    u.isStb = _isStb(devices[i]),
                    u.signalStrength = found && found.SignalStrength ? found.SignalStrength : 0,
                    u.signalRate = found && found.LastDataDownlinkRate ? found.LastDataDownlinkRate : 0,
                    u.parsedSignalStrength = found && found.SignalStrength ? $.util.calculateWifiStrength(found.SignalStrength) : 0,
                    u.parsedSignalRate = found && found.LastDataDownlinkRate ? found.LastDataDownlinkRate / 1e3 : 0,
                    u.userDeviceType = u.isStb ? "TV_DECODER" : devices[i].UserDeviceType,
                    "MISCELLANEOUS" === u.userDeviceType && void 0 !== cache.hosts[i].deviceIdentification) {
                        var deviceIdentification = cache.hosts[i].deviceIdentification.Entry.DeviceName.replace(/\s/g, "");
                        "" !== deviceIdentification && (u.userDeviceType = $.constants.deviceDiscoveryTypes[deviceIdentification])
                    }
                    u.uid = devices[i].uid,
                    u.InterfaceType = devices[i].InterfaceType,
                    u.Layer1Interface = leType;
                    var macAddress = devices[i].PhysAddress;
                    u.manufacturer = ConnectedDevices.getVendorByMac(macAddress),
                    devicesReturn.push(u)
                }
            }),
            devicesReturn
        },
        getWifiTvDevices: function() {
            var devicesReturn = []
              , associatedDevices = cache.tv.associatedDevices
              , hostsDevices = cache.hosts;
            return $(associatedDevices).each(function(i) {
                var u = {};
                if (associatedDevices[i].Active === !0) {
                    u.hostname = $.config.modules.tvBox.name ? $.config.modules.tvBox.name : $.util.getHostname(associatedDevices[i]),
                    u.PhysAddress = associatedDevices[i].MACAddress;
                    var macAssociatedDevice = parseInt(u.PhysAddress.replace(/:/g, ""), 16);
                    u.ipAddress = associatedDevices[i].IPAddress,
                    u.ipAddress || $(hostsDevices).each(function(j) {
                        var macHostDevice = parseInt(hostsDevices[j].PhysAddress.replace(/:/g, ""), 16) + 1;
                        return macHostDevice === macAssociatedDevice ? (u.ipAddress = hostsDevices[j].IPAddress,
                        !1) : void 0
                    }),
                    u.signalStrength = associatedDevices[i].SignalStrength,
                    u.signalRate = associatedDevices[i] && associatedDevices[i].LastDataDownlinkRate ? associatedDevices[i].LastDataDownlinkRate : 0,
                    u.parsedSignalRate = associatedDevices[i] && associatedDevices[i].LastDataDownlinkRate ? associatedDevices[i].LastDataDownlinkRate / 1e3 : 0,
                    u.userDeviceType = "TV_DECODER",
                    u.InterfaceType = "WiFi",
                    u.manufacturer = ConnectedDevices.getVendorByMac(associatedDevices[i].MACAddress),
                    devicesReturn.push(u)
                }
            }),
            devicesReturn
        },
        getAllDevices: function(active, humanDevice) {
            var copy = _removeStbs()
              , devicesReturn = []
              , devices = copy.hosts;
            if (devices)
                for (var i = 0; i < devices.length; i++)
                    if ((void 0 === active || devices[i].Active === active || $.config.showInactiveDevices) && (!humanDevice || isEthernetWifiDevice(devices[i])) && (!$.util.compareLayer1Interface(devices[i].Layer1Interface, $.xpaths.main.wifiLayerInterface.wifi5) || !$.util.endsWith(devices[i].IPAddress, ".200"))) {
                        var u = {}
                          , layerFriendly = _getLayerFriendlyName(devices[i]);
                        if (/^wifi/gi.test(layerFriendly) && copy && copy[layerFriendly]) {
                            var associatedDevices = copy[layerFriendly].associatedDevices
                              , found = this.searchAssociatedDevice(associatedDevices, devices[i].PhysAddress)
                              , sameAssociatedDevice = null;
                            devices[i].AssociatedDevice && (sameAssociatedDevice = this.hasSameAssociatedDevice(layerFriendly, devices[i].AssociatedDevice)),
                            sameAssociatedDevice && found ? (u.rxRate = found.LastDataDownlinkRate / 1e3,
                            u.txRate = found.LastDataUplinkRate / 1e3) : (u.rxRate = 0,
                            u.txRate = 0)
                        }
                        if ("" !== devices[i].Layer1Interface) {
                            var _interface = devices[i].Layer1Interface ? $.xmo.getValuesTree($.util.fixpath(devices[i].Layer1Interface)) : "";
                            _interface && (u.speed = "Ethernet" === devices[i].InterfaceType ? _interface.Interface.MaxBitRate : _interface.Radio.MaxBitRate,
                            devices[i].InterfaceType && "WiFi" === devices[i].InterfaceType && (u.interfaceFrequency = "2_4GHZ" === _interface.Radio.OperatingFrequencyBand ? "wifi24" : "wifi5"))
                        }
                        if (u.ipAddress = devices[i].IPAddress,
                        u.ipv6Address = "",
                        devices[i].IPv6Addresses)
                            for (var x = 0; x < devices[i].IPv6Addresses.length; x++)
                                devices[i].IPv6Addresses[x].Active && devices[i].IPv6Addresses[x].IPAddress && (u.ipv6Address = devices[i].IPv6Addresses[x].IPAddress);
                        u.PhysAddress = devices[i].PhysAddress,
                        u.hostname = $.util.getHostname(devices[i]),
                        u.uid = devices[i].uid,
                        u.InterfaceType = devices[i].InterfaceType,
                        devicesReturn.push(u)
                    }
            return devicesReturn
        },
        getActiveDevices: function() {
            return this.getAllDevices(!0, !0)
        },
        getWifiStatus: function(leType) {
            var wifiStatus = {}
              , ssidName = cache[leType].ssidName
              , ssidStatus = cache[leType].ssidStatus;
            if (wifiStatus.ssid = ssidName,
            wifiStatus.status = $.config.modules.wifi.radioOnly ? cache[leType].radioStatus : ssidStatus,
            wifiStatus.status = "UP" === wifiStatus.status ? "ON" : "OFF",
            wifiStatus.actualWifiSpeed = WiFi.getWifiSpeed(cache[leType].maxBitRate),
            cache[leType].mode) {
                var modePass = "WEP" === cache[leType].mode.substring(0, 3) ? cache[leType].passWep : cache[leType].pass;
                wifiStatus.qrString = "WIFI:S:" + ssidName + ";T:" + cache[leType].mode.substring(0, 3) + ";P:" + modePass + ";;"
            }
            return wifiStatus
        },
        getWifiTVStatus: function() {
            var wifiStatus = {}
              , ssidName = cache.tv.ssidName
              , ssidStatus = cache.tv.ssidStatus;
            return wifiStatus.ssid = ssidName,
            wifiStatus.status = "UP" === ssidStatus ? "ON" : "OFF",
            wifiStatus
        },
        getUSBInfo: function() {
            var info = {
                unrecognized: $.xpaths.main.cacheable.usbUnrecognizedHosts,
                overConsumptionDevice: $.xpaths.main.cacheable.overConsumptionDevice,
                overConsumptionDeviceTimeStamp: $.xpaths.main.cacheable.overConsumptionDeviceTimeStamp,
                unrecognizedDeviceTimeStamp: $.xpaths.main.cacheable.unrecognizedDeviceTimeStamp
            };
            return $.xmo.getValuesTree(info)
        },
        getUSBDevices: function() {
            var devicesReturn = []
              , devices = cache.hosts || []
              , usbHosts = []
              , logicalDev = cache.usbLogicalVolume;
            return cache.usbHosts = cache.usbHosts || [],
            $.each(cache.usbHosts, function(indexUsbHost, valueUsbHost) {
                if (valueUsbHost[0])
                    for (var i = 0; i < valueUsbHost.length; i++)
                        usbHosts.push(valueUsbHost[i])
            }),
            $.each(usbHosts, function(indexUsbHost, valueUsbHost) {
                var value;
                $.each(devices, function(indexDevice, valueDevice) {
                    valueDevice.PhysAddress.toLowerCase().indexOf(valueUsbHost.SerialNumber.toLowerCase()) > -1 && (value = valueDevice)
                }),
                value || (value = {
                    uid: "",
                    UserDeviceType: "",
                    UserFriendlyName: ""
                });
                var u = {};
                u.active = !0,
                u.port = "Port " + valueUsbHost.Port,
                u.sysid = valueUsbHost.SysfsId,
                u.uid = value.uid,
                u.deviceType = value.UserDeviceType;
                var serial = valueUsbHost.SerialNumber;
                if (u.name = value.UserFriendlyName || valueUsbHost.ProductClass,
                valueUsbHost.Configurations[0].Interfaces[0].InterfaceClass !== $.constants.supportedUSBDevice)
                    u.deviceType = $.constants.unsupportedUsb,
                    u.connectionType = "-";
                else if (valueUsbHost.Configurations[0].Interfaces[0].InterfaceClass === $.constants.supportedUSBDevice) {
                    var physXpath = $.xpaths.main.usbPhysicalMedium.replace("#", serial)
                      , phys = $.xmo.getValuesTree(physXpath);
                    if (!phys)
                        return !0;
                    phys = phys[0] || phys,
                    u.connectionType = phys.PhysicalMedium.ConnectionType ? phys.PhysicalMedium.ConnectionType.replace("USB_", "USB ").replace("_", ".") : "-",
                    physXpath = $.xpaths.main.usbPhysicalMediumUid.replace("#", phys.PhysicalMedium.uid);
                    var logic = [];
                    $.each(logicalDev, function(x) {
                        if (logicalDev[x].PhysicalReference === physXpath) {
                            var logicCopy = angular.copy(logicalDev[x]);
                            logicCopy.Name = "" !== logicCopy.Name ? logicCopy.Name : "-",
                            u.name = "" !== value.UserFriendlyName ? value.UserFriendlyName : logicCopy.Name,
                            u.name || (u.name = $.globals.usbDefaultDeviceLabel[$basicInfo.getLanguage()] + port.substring(2)),
                            logicCopy.Capacity = logicCopy.Capacity > 0 ? (logicCopy.Capacity / 1024).toFixed(2) + " Gb" : 0,
                            logicCopy.UsedSpace = logicCopy.UsedSpace > 0 ? (logicCopy.UsedSpace / 1024).toFixed(2) + " Gb" : 0,
                            logic.push(logicCopy)
                        }
                    }),
                    u.partition = phys.PhysicalMedium.Device,
                    u.logicDevices = logic,
                    u.status = phys.PhysicalMedium.Status === $.constants.STATUS_ONLINE ? "CONNECTED" : "DISCONNECTED"
                }
                ($.util.inArray(u.deviceType, $.constants.USB_ALLOWED_DEVICES) > -1 || u.deviceType === $.constants.unsupportedUsb) && devicesReturn.push(u);
                var vendor;
                value.PhysAddress && (vendor = value.PhysAddress.substring(0, 6),
                manufacturer && (vendor = manufacturer[vendor.toUpperCase()])),
                u.manufacturer = vendor
            }),
            devicesReturn
        },
        getESataDevice: function() {
            var eSATA = cache.eSATA
              , driver = {};
            return eSATA && (driver.active = eSATA.Active,
            driver.uid = eSATA.uid,
            driver.connectionType = eSATA.ConnectionType,
            driver.status = eSATA.Status === $.constants.STATUS_ONLINE ? "CONNECTED" : "DISCONNECTED"),
            driver
        },
        deviceList: function() {
            return cache || (cache = {}),
            cache.hosts = $.xmo.getValuesTree($.xpaths.main.cacheable.hosts),
            this.getActiveDevices()
        },
        getDeviceById: function(id) {
            this.updateCache();
            var revenant = $.map(this.getAllDevices(), function(obj) {
                return obj.uid === id ? obj : null
            });
            return revenant
        },
        getDeviceByIp: function(ip) {
            this.updateCache();
            var revenant = $.map(this.getAllDevices(), function(obj) {
                return obj.ipAddress === ip ? obj : null
            });
            return revenant
        },
        getDeviceByMac: function(mac) {
            this.updateCache();
            var revenant = $.map(this.getAllDevices(), function(obj) {
                return obj.PhysAddress === mac ? obj : null
            });
            return revenant
        },
        getStbs: function(all) {
            var devicesReturn = [];
            cache || this.updateCache();
            var self = this;
            return $(cache.hosts).each(function(i) {
                if ((cache.hosts[i].Active === !0 || all) && _isStb(cache.hosts[i])) {
                    var u = {};
                    u.ipAddress = cache.hosts[i].IPAddress,
                    u.hostname = $.util.getHostname(cache.hosts[i]),
                    u.uid = cache.hosts[i].uid,
                    u.active = cache.hosts[i].Active,
                    u.userDeviceType = "TV_DECODER",
                    u.ipAddress = cache.hosts[i].IPAddress,
                    u.PhysAddress = cache.hosts[i].PhysAddress;
                    var macAddress = cache.hosts[i].PhysAddress;
                    u.manufacturer = self.getVendorByMac(macAddress),
                    "Unknown" === cache.hosts[i].InterfaceType ? u.InterfaceType = "WiFi" : u.InterfaceType = cache.hosts[i].InterfaceType,
                    u.Layer1Interface = _getLayerFriendlyName(cache.hosts[i]),
                    devicesReturn.push(u)
                }
            }),
            devicesReturn
        },
        getPlcs: function(all) {
            var plcList = [];
            cache || this.updateCache();
            var self = this;
            return $(cache.plcList).each(function(i) {
                if ($.config.showAllPlcDevices || cache.plcList[i].Status === $.constants.status.up || all || $.config.showInactiveDevices) {
                    var plc = {};
                    plc.uid = cache.plcList[i].uid,
                    plc.Status = cache.plcList[i].Status,
                    plc.Name = cache.plcList[i].Name,
                    plc.ConnectionTime = cache.plcList[i].ConnectionTime,
                    plc.MACAddress = cache.plcList[i].MACAddress,
                    plc.hosts = self.getPlcsDevices(cache.plcList[i].AssociatedDevices, all),
                    plcList.push(plc)
                }
            }),
            plcList
        },
        getForceChangePassword: function() {
            return cache.forceChangePassword
        },
        getPlcsDevices: function(associatedDevices, all) {
            var devicesList = [];
            cache || this.updateCache();
            var self = this;
            return $(cache.hosts).each(function(i) {
                var result = $.grep(associatedDevices, function(e) {
                    return cache.hosts[i].PhysAddress.toLowerCase() === e.MACAddress.toLowerCase()
                });
                if ((cache.hosts[i].Active === !0 || all) && result.length) {
                    var host = {};
                    host.active = cache.hosts[i].Active,
                    host.ipAddress = cache.hosts[i].IPAddress,
                    host.hostname = $.util.getHostname(cache.hosts[i]),
                    host.uid = cache.hosts[i].uid,
                    host.active = cache.hosts[i].Active,
                    host.userDeviceType = cache.hosts[i].UserDeviceType,
                    host.PhysAddress = cache.hosts[i].PhysAddress,
                    host.TxPhyRate = result[0].TxPhyRate,
                    host.RxPhyRate = result[0].RxPhyRate;
                    var macAddress = cache.hosts[i].PhysAddress;
                    host.manufacturer = self.getVendorByMac(macAddress),
                    host.InterfaceType = cache.hosts[i].InterfaceType,
                    host.Layer1Interface = _getLayerFriendlyName(cache.hosts[i]),
                    devicesList.push(host)
                }
            }),
            devicesList
        },
        getPLCDeviceInfo: function(macAddress) {
            var plcInfo;
            return cache || this.updateCache(),
            $(cache.plcList).each(function(i) {
                if (!plcInfo) {
                    var result = $.grep(cache.plcList[i].AssociatedDevices, function(e) {
                        return macAddress.toLowerCase() === e.MACAddress.toLowerCase()
                    });
                    result.length && (plcInfo = result[0])
                }
            }),
            plcInfo
        },
        getDectDevices: function(updateCache, all) {
            var dectDevices = [];
            if (updateCache && this.updateCache(),
            cache.dect.devices)
                for (var i = 0; i < cache.dect.devices.length; i++) {
                    var tmp = cache.dect.devices[i].PhyInterface;
                    if ("Unregistered" !== tmp.X_SAGEMCOM_DECT_PP.Status || all) {
                        var dectModel = {
                            uid: tmp.uid,
                            active: "Unregistered" !== tmp.X_SAGEMCOM_DECT_PP.Status,
                            Alias: tmp.Alias.replace("DECTPP", ""),
                            Status: tmp.X_SAGEMCOM_DECT_PP.Status,
                            Description: tmp.Description,
                            LineStatus: _getDectLineStatus(tmp.OutGoingLine)
                        };
                        dectDevices.push(dectModel)
                    }
                }
            return dectDevices
        },
        isDectEnabled: function() {
            return "On" === cache.dect.status
        },
        geteRouterMode: function() {
            var data = $.xmo.getValuesTree($.xpaths.main.eRouterMode);
            return data ? data : ""
        },
        getCableModemStatus: function() {
            var ipv6List = []
              , data = $.xmo.getValuesTree($.xpaths.main.cableModem);
            if (!data || !data.status && !data.ipv4 && !data.ipv6)
                return !1;
            data.ipv6 && (ipv6List = $.grep(data.ipv6, function(value) {
                return value.Alias !== $.constants.linkLocal && "ENABLED" === value.Status && "PREFERRED" === value.IPAddressStatus && "DHCPV6" === value.Origin;
            }));
            var ipv6Data = ipv6List[ipv6List.length - 1];
            return data.status === $.constants.operational && (data.ipv4 && "" !== data.ipv4 || ipv6Data && "" !== ipv6Data.IPAddress) ? !0 : !1
        }
    };
    return ConnectedDevices
}
]),
sboxApp.factory("Dhcp", ["$filter", "$q", "$rootScope", "PortForwarding", function($filter, $q, $rootScope, PortForwarding) {
    var cache = $.xmo.getValuesTree($.xpaths.mySagemcomBox.dhcp)
      , Dhcp = {
        updateCache: function() {
            var xpaths = {
                dhcp: $.xpaths.mySagemcomBox.dhcp
            }
              , result = {};
            $.config.showedpages.dhcpIPv6InDHCP && $.config.showedpages.dhcpIPv6InDHCP.enable && (xpaths.ipv6 = $.xpaths.mySagemcomBox.lanIPv6),
            result = $.xmo.getValuesTree(xpaths),
            cache = result.dhcp,
            cache.ipv6 = result.ipv6 ? result.ipv6 : {}
        },
        getNatEnable: function() {
            return !!$.xmo.getValuesTree($.xpaths.mySagemcomBox.dhcp.natEnable)
        },
        setNatEnable: function(value, options) {
            var saveData = {};
            try {
                saveData[$.xpaths.mySagemcomBox.dhcp.natEnable] = value,
                $.xmo.setValuesFlat(saveData, options)
            } catch (e) {
                options.error(e)
            }
        },
        populate: function() {
            var data = {};
            if (data.enable = cache.enable,
            data.host = cache.host,
            data.subnetMask = cache.subnetMask,
            $.config.modules.useNewDHCPXpath ? (data.ipv4Address = cache.ipv4AddressNew || "",
            data.ipv4PoolStart = cache.ipv4PoolStartNew || "",
            data.ipv4PoolEnd = cache.ipv4PoolEndNew || "",
            data.ipv4Lease = cache.dhcpv4LeaseTimeNew) : (data.ipv4Address = cache.ipv4Address || "",
            data.ipv4PoolStart = cache.ipv4PoolStart || "",
            data.ipv4PoolEnd = cache.ipv4PoolEnd || "",
            data.ipv4Lease = cache.dhcpv4LeaseTime),
            data.natEnable = cache.natEnable ? !0 : !1,
            data.natRange = cache.natRange,
            data.preferredIPBRLANAddr = cache.preferredIPBRLANAddr,
            data.preferredIPBRLANPrefix = cache.preferredIPBRLANPrefix,
            data.macAddress = cache.macAddress,
            data.macAddressLanSettings = cache.macAddressLanSettings,
            data.upnp = cache.upnp,
            data.ipv4TvPoolEnable = cache.ipv4PoolTvEnable1 || cache.ipv4PoolTvEnable2 || cache.ipv4PoolTvEnable3,
            cache.ipv4PoolTvPoolStart1 ? data.ipv4TvPoolStart = cache.ipv4PoolTvPoolStart1 : cache.ipv4PoolTvPoolStart2 ? data.ipv4TvPoolStart = cache.ipv4PoolTvPoolStart2 : cache.ipv4PoolTvPoolStart3 ? data.ipv4TvPoolStart = cache.ipv4PoolTvPoolStart3 : data.ipv4TvPoolStart = "",
            cache.ipv4PoolTvPoolEnd1 ? data.ipv4TvPoolEnd = cache.ipv4PoolTvPoolEnd1 : cache.ipv4PoolTvPoolEnd2 ? data.ipv4TvPoolEnd = cache.ipv4PoolTvPoolEnd2 : cache.ipv4PoolTvPoolEnd3 ? data.ipv4TvPoolEnd = cache.ipv4PoolTvPoolEnd3 : data.ipv4TvPoolEnd = "",
            data.ipv4TvClassID = cache.ipv4TvClassID,
            $.util.hasFeature("dhcpIPv6InDHCP")) {
                data.dhcpv6Enable = cache.ipv6.dhcpv6Enable,
                data.enableDHCPPD = cache.ipv6.enableDHCPPD,
                data.ianaEnable = cache.ipv6.ianaEnable,
                data.ulaIPv6Enabled = cache.ipv6.ulaIPv6Enabled,
                data.ianaManualPrefixes = cache.ipv6.ianaManualPrefixes;
                var ipv6Addresses = $.util.filterIpV6Address(cache.ipv6.lanIPv6HighestIndex);
                data.ipv6Address = ipv6Addresses.length ? ipv6Addresses[ipv6Addresses.length - 1].IPAddress : "";
                var aliases = "" !== data.ipv6Address ? $.util.getAllAliasFromXpath(ipv6Addresses[ipv6Addresses.length - 1].Prefix) : []
                  , aliasPrefix = aliases.length ? aliases[aliases.length - 1] : ""
                  , ipv6Prefixes = $.util.filterIpV6Prefix(cache.ipv6.ipv6Prefixes, aliasPrefix);
                data.ipv6Prefix = ipv6Prefixes.length ? ipv6Prefixes[0].Prefix : "",
                $rootScope.isComhem && (data.enableAutoIPv6Assignment1 = cache.ipv6.enableAutoIPv6Assignment1)
            }
            return data
        },
        save: function(data, options) {
            var saveData = {};
            saveData[$.xpaths.mySagemcomBox.dhcp.enable] = data.enable,
            void 0 !== data.ipv4Address && ($.util.lanIpCache = {},
            $.config.modules.useNewDHCPXpath ? saveData[$.xpaths.mySagemcomBox.dhcp.ipv4AddressNew] = data.ipv4Address : (saveData[$.xpaths.mySagemcomBox.dhcp.ipv4Address] = data.ipv4Address,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolIP] = data.ipv4Address,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvIP] = data.ipv4Address,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolDslIP] = data.ipv4Address,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvDslIP] = data.ipv4Address,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvStbIP] = data.ipv4Address),
            ($.config.modules.myBox.dhcp.updateDNS === !0 && cache.dnsServer === cache.ipv4Address || $.config.modules.myBox.dhcp.updateDNS && $.config.showedpages.dtagGpon) && (saveData[$.xpaths.mySagemcomBox.dhcp.dnsServer] = data.ipv4Address),
            $.config.modules.myBox.dhcp.updateDNS === !0 && cache.dnsServerPoolTv === cache.ipv4Address && data.ipv4TvPoolEnable && (saveData[$.xpaths.mySagemcomBox.dhcp.dnsServerPoolTv] = data.ipv4Address),
            $.config.modules.myBox.dhcp.updateGuestDNS === !0 && cache.dnsServer === cache.ipv4Address && (saveData[$.xpaths.mySagemcomBox.dhcp.guestDnsServer] = data.ipv4Address)),
            data.ipv6 && !$.isEmptyObject(data.ipv6) && (saveData[$.xpaths.mySagemcomBox.lanIPv6.enableDHCPPD] = data.ipv6.enableDHCPPD,
            saveData[$.xpaths.mySagemcomBox.lanIPv6.ianaEnable] = data.ipv6.ianaEnable,
            saveData[$.xpaths.mySagemcomBox.lanIPv6.ulaIPv6Enabled] = data.ipv6.ulaIPv6Enabled,
            saveData[$.xpaths.mySagemcomBox.lanIPv6.dhcpv6Enable] = data.ipv6.dhcpv6Enable,
            saveData[$.xpaths.mySagemcomBox.lanIPv6.ianaManualPrefixes] = data.ipv6.ianaManualPrefixes,
            $.config.showedpages.charter && $.config.showedpages.charter.enable || $.config.showedpages.charter5280 && $.config.showedpages.charter5280.enable ? (saveData[$.xpaths.mySagemcomBox.lanIPv6.typeLan6Autoconfig] = data.ipv6.typeLan6Autoconfig,
            saveData[$.xpaths.mySagemcomBox.lanIPv6.rangeMinAddress] = data.ipv6.rangeMinAddress,
            saveData[$.xpaths.mySagemcomBox.lanIPv6.rangeMaxAddress] = data.ipv6.rangeMaxAddress) : (saveData[$.xpaths.mySagemcomBox.lanIPv6.lanIPv6] = data.ipv6.lanIPv6,
            saveData[$.xpaths.mySagemcomBox.lanIPv6.enableAutoIPv6Assignment] = data.ipv6.enableAutoIPv6Assignment,
            $rootScope.isComhem && (data.ipv6.enableAutoIPv6Assignment ? saveData[$.xpaths.mySagemcomBox.lanIPv6.ianaEnable] = !0 : (saveData[$.xpaths.mySagemcomBox.lanIPv6.enableAutoIPv6Assignment1] = !0,
            saveData[$.xpaths.mySagemcomBox.lanIPv6.ianaEnable] = !1)))),
            saveData[$.xpaths.mySagemcomBox.dhcp.host] = data.gatewayHostname,
            void 0 !== data.subnetMask && (saveData[$.xpaths.mySagemcomBox.dhcp.subnetMask] = data.subnetMask),
            (void 0 !== data.ipv4Address || void 0 !== data.subnetMask) && PortForwarding.clearCache(),
            $.config.modules.useNewDHCPXpath ? (saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolStartNew] = data.ipv4PoolStart,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolEndNew] = data.ipv4PoolEnd) : (saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolStart] = data.ipv4PoolStart,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolEnd] = data.ipv4PoolEnd),
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolStartDSLForum] = data.ipv4PoolStart,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolEndDSLForum] = data.ipv4PoolEnd,
            $.config.modules.useNewDHCPXpath ? saveData[$.xpaths.mySagemcomBox.dhcp.dhcpv4LeaseTimeNew] = data.ipv4Lease : saveData[$.xpaths.mySagemcomBox.dhcp.dhcpv4LeaseTime] = data.ipv4Lease,
            saveData[$.xpaths.mySagemcomBox.dhcp.dhcpv4LeaseTimeDSLForum] = data.ipv4Lease,
            saveData[$.xpaths.mySagemcomBox.dhcp.dhcpv4LeaseTimeTv1] = data.ipv4Lease,
            saveData[$.xpaths.mySagemcomBox.dhcp.dhcpv4LeaseTimeTv2] = data.ipv4Lease,
            saveData[$.xpaths.mySagemcomBox.dhcp.dhcpv4LeaseTimeTv3] = data.ipv4Lease,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvEnable1] = data.ipv4TvPoolEnable,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvEnable2] = data.ipv4TvPoolEnable,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvEnable3] = data.ipv4TvPoolEnable,
            saveData[$.xpaths.mySagemcomBox.dhcp.upnp] = data.upnp,
            data.ipv4TvPoolEnable && (saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvPoolStart1] = data.ipv4TvPoolStart,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvPoolEnd1] = data.ipv4TvPoolEnd,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvPoolStart2] = data.ipv4TvPoolStart,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvPoolEnd2] = data.ipv4TvPoolEnd,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvPoolStart3] = data.ipv4TvPoolStart,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvPoolEnd3] = data.ipv4TvPoolEnd,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4TvClassID] = data.ipv4TvClassID),
            $.config.showedpages.lanIpv4TvPool && $.config.showedpages.lanIpv4TvPool.enable === !1 && (saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvPoolStart1] = data.ipv4PoolStart,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvPoolEnd1] = data.ipv4PoolEnd,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvPoolStart2] = data.ipv4PoolStart,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvPoolEnd2] = data.ipv4PoolEnd,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvPoolStart3] = data.ipv4PoolStart,
            saveData[$.xpaths.mySagemcomBox.dhcp.ipv4PoolTvPoolEnd3] = data.ipv4PoolEnd),
            $.util.hasFeature("natSettings") && (saveData[$.xpaths.mySagemcomBox.dhcp.natEnable] = data.natEnable === !0,
            saveData[$.xpaths.mySagemcomBox.dhcp.natRange] = data.natRange),
            $.util.hasFeature("dhcpAutoUpdateNat") && data.sourceIp && /^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\/[0-9]+$/.test(data.sourceIp) && (saveData[$.xpaths.mySagemcomBox.dhcp.natSourceIp] = data.sourceIp);
            try {
                return saveData = this.checkArrayBeforeSave(saveData),
                $.isEmptyObject(saveData) ? options.success() : $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: function() {
                        Dhcp.updateCache(),
                        options.success()
                    },
                    error: function() {
                        Dhcp.updateCache(),
                        options.error()
                    }
                }),
                !0
            } catch (err) {
                return !1
            }
        },
        checkArrayBeforeSave: function(data) {
            var arrayReturn = {};
            return $.each($.xpaths.mySagemcomBox.dhcp, function(i, value) {
                null !== cache[i] && void 0 !== data[value] && null !== data[value] && data[value] !== cache[i] && (arrayReturn[value] = data[value])
            }),
            $.config.showedpages.dhcpIPv6InDHCP && $.config.showedpages.dhcpIPv6InDHCP.enable && $.each($.xpaths.mySagemcomBox.lanIPv6, function(i, value) {
                null !== cache[i] && void 0 !== data[value] && null !== data[value] && data[value] !== cache[i] && (arrayReturn[value] = data[value])
            }),
            arrayReturn
        },
        getModel: function() {
            var model = {
                Enable: !0,
                Chaddr: "",
                Yiaddr: "",
                Alias: ""
            };
            return model
        },
        getIpReservation: function(update, isGuest) {
            var mac = isGuest ? $.util.fixGetValuesTree(cache.IPReservationGuest) : $.util.fixGetValuesTree(cache.IPReservation);
            if (update) {
                var x = isGuest ? $.xpaths.mySagemcomBox.dhcp.IPReservationGuest : $.xpaths.mySagemcomBox.dhcp.IPReservation;
                mac = $.util.fixGetValuesTree($.xmo.getValuesTree(x))
            }
            return mac
        },
        removeIpReservation: function(alias, isGuest) {
            var result, pathRegular = 'Device/DHCPv4/Server/Pools/Pool[Alias="DEFAULT_POOL"]/StaticAddresses/StaticAddress[Alias="#"]', pathGuest = 'Device/DHCPv4/Server/Pools/Pool[Alias="GUEST_POOL"]/StaticAddresses/StaticAddress[Alias="#"]', path = isGuest ? pathGuest.replace("#", alias) : pathRegular.replace("#", alias);
            try {
                $.xmo.delChild(path),
                result = !0
            } catch (e) {
                result = !1
            }
            return result
        },
        saveIpReservation: function(data, options, isGuest) {
            var theXpath = isGuest ? $.xpaths.mySagemcomBox.dhcp.IPReservationGuest : $.xpaths.mySagemcomBox.dhcp.IPReservation;
            try {
                for (var objInsert = {
                    parents: [],
                    values: []
                }, objUpdate = {}, i = 0; i < data.length; i++)
                    if ("" === data[i].Alias) {
                        var arrayInsertTmp = []
                          , item = {
                            Enable: data[i].Enable,
                            Yiaddr: data[i].Yiaddr,
                            Chaddr: data[i].Chaddr.toUpperCase()
                        };
                        arrayInsertTmp.push({
                            StaticAddress: item
                        }),
                        objInsert.values.push(arrayInsertTmp),
                        objInsert.parents.push(theXpath)
                    } else {
                        var xp = theXpath + '/StaticAddress[Alias="' + data[i].Alias + '"]/';
                        objUpdate[xp + "Enable"] = data[i].Enable,
                        objUpdate[xp + "Yiaddr"] = data[i].Yiaddr,
                        objUpdate[xp + "Chaddr"] = data[i].Chaddr.toUpperCase()
                    }
                var saveData = {
                    toAdd: {
                        parent: objInsert.parents,
                        values: objInsert.values
                    },
                    toUpdate: objUpdate
                };
                $.xmo.addOrUpdate(saveData, {
                    sync: !1,
                    success: function() {
                        options.success()
                    },
                    error: function() {
                        options.error()
                    }
                })
            } catch (e) {
                options.error()
            }
        },
        getLeasedDevices: function() {
            for (var cache = $.util.fixGetValuesTree($.xmo.getValuesTree($.xpaths.dhcpLeases.dhcpLeasesList)), arrayData = [], i = 0; i < cache.length; i++)
                if (cache[i].Host.Active || $.config.showInactiveDevices) {
                    var obj = {};
                    obj.hostname = $.util.getHostname(cache[i].Host),
                    obj.mac = cache[i].Host.PhysAddress,
                    obj.ip = cache[i].Host.IPAddress,
                    obj.lease = $.util.formatLeaseTime(cache[i].Host.LeaseTimeRemaining),
                    obj.active = cache[i].Host.Active,
                    arrayData.push(obj)
                }
            return arrayData
        },
        getIPv6Info: function() {
            var _cache = $.xmo.getValuesTree($.xpaths.mySagemcomBox.lanIPv6);
            return _cache
        }
    };
    return Dhcp
}
]),
sboxApp.factory("DhcpV6", function() {
    var cache, DhcpV6 = {
        updateCache: function() {
            cache = $.xmo.getValuesTree($.xpaths.mySagemcomBox.dhcpv6)
        },
        populate: function() {
            return cache || DhcpV6.updateCache(),
            cache
        },
        save: function(data, options) {
            var saveData = {};
            saveData[$.xpaths.mySagemcomBox.dhcpv6.autoConfigType] = data.autoConfigType,
            saveData[$.xpaths.mySagemcomBox.dhcpv6.startAddress] = data.startAddress,
            saveData[$.xpaths.mySagemcomBox.dhcpv6.numberOfAddresses] = data.numberOfAddresses,
            saveData[$.xpaths.mySagemcomBox.dhcpv6.validLifetime] = data.validLifetime,
            saveData[$.xpaths.mySagemcomBox.dhcpv6.advertisementLifetime] = data.advertisementLifetime,
            saveData[$.xpaths.mySagemcomBox.dhcpv6.minRouterAdvInterval] = data.minRouterAdvInterval,
            saveData[$.xpaths.mySagemcomBox.dhcpv6.maxRouterAdvInterval] = data.maxRouterAdvInterval;
            try {
                return $.isEmptyObject(saveData) ? options.success() : $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: function() {
                        DhcpV6.updateCache(),
                        options.success()
                    },
                    error: function() {
                        options.error()
                    }
                }),
                !0
            } catch (err) {
                return !1
            }
        }
    };
    return DhcpV6
}),
sboxApp.factory("WiFiAdvanced", function(WifiXpaths) {
    var cache, _newCache, WiFiAdvanced = {
        updateCache: function(radio, mode) {
            var xpath = WifiXpaths.get(radio, mode).advanced;
            cache = $.xmo.getValuesTree(xpath)
        },
        search: function() {
            return -1 === cache.transmitPower && (cache.transmitPower = 100),
            cache
        },
        checkArrayBeforeSave: function(data, radio, mode) {
            var xpath, arrayReturn = {};
            return _newCache = $.extend({}, cache),
            cache || this.updateCache(radio),
            xpath = WifiXpaths.get(radio, mode).advanced,
            $.each(xpath, function(i, value) {
                null !== cache[i] && void 0 !== data[value] && null !== data[value] && data[value] !== cache[i] && (arrayReturn[value] = data[value],
                _newCache[i] = data[value])
            }),
            arrayReturn
        },
        save: function(data, radio, mode, options) {
            var result, xpath = WifiXpaths.get(radio, mode).advanced;
            try {
                var dataSave = {};
                dataSave[xpath.operatingStandards] = data.operatingStandards,
                dataSave[xpath.wmmEnable] = data.wmmEnable,
                dataSave[xpath.transmitPower] = data.transmitPower,
                dataSave[xpath.channelBandwidth] = data.channelBandwidth,
                dataSave[xpath.regulatoryDomain] = data.regulatoryDomain,
                dataSave[xpath.atfEnable] = data.atfEnable,
                dataSave[xpath.globalMaxClients] = data.globalMaxClients,
                $.util.hasFeature("cyclicPrefix") && (dataSave[xpath.cyclicPrefix] = data.cyclicPrefix),
                -1 === data.transmitPower ? dataSave[xpath.transmitPower] = 100 : dataSave[xpath.transmitPower] = data.transmitPower,
                "20MHZ" === data.channelBandwidth || "AUTO" === data.channelBandwidth ? dataSave[xpath.extensionChannel] = "AUTO" : dataSave[xpath.extensionChannel] = data.extensionChannel,
                data.wmmEnable ? dataSave[xpath.apsd] = data.apsd : dataSave[xpath.apsd] = !1,
                $.xmo.setValuesFlat(this.checkArrayBeforeSave(dataSave, radio, mode), {
                    sync: !1,
                    success: function() {
                        cache = $.extend({}, _newCache),
                        options.success()
                    },
                    error: options.error
                }),
                result = !0
            } catch (e) {
                result = !1
            }
            return result
        }
    };
    return WiFiAdvanced
}),
sboxApp.factory("WiFiChannel", function(WifiXpaths) {
    var idReq, WiFiChannel = {
        formatScanWifi: function(data) {
            if (!data.Channel && !data.Signal && !data.Ssid)
                return !1;
            var arrayChannel = data.Channel.split(";")
              , arraySignal = data.Signal.split(";")
              , arraySsid = data.Ssid.split(";")
              , result = [];
            for (var x in arrayChannel)
                result[arrayChannel[x]] || (result[arrayChannel[x]] = []),
                result[arrayChannel[x]].push({
                    channel: arrayChannel[x],
                    signal: arraySignal[x],
                    ssid: arraySsid[x],
                    strength: $.util.calculateWifiStrength(arraySignal[x])
                });
            return result
        },
        evaluateChannel: function(radio, mode, callback) {
            var xpaths = WifiXpaths.get(radio, mode).recommendedChannel;
            idReq = $.xmo.onPeriodicValue(xpaths.subscribe, function(value) {
                var result = !1;
                return "COMPLETED" === value && (idReq = null,
                result = !0,
                callback()),
                result
            }, null),
            $.xmo.setValuesTree("", xpaths.testChannel)
        },
        cancelEvaluateChannel: function() {
            if (idReq) {
                var req = $.xmo.client.newRequest();
                return req.deleteNotification(idReq),
                idReq = null,
                !0
            }
            return !1
        }
    };
    return WiFiChannel
}),
sboxApp.factory("WifiPublic", ["$filter", function($filter) {
    var $f = $filter("filter")
      , hasValue = function(item) {
        return void 0 !== item && null !== item && "" !== item
    }
      , indexBy = function(itemsArray, mapKey) {
        var dataMap = {};
        for (var key in itemsArray)
            hasValue(mapKey) && hasValue(itemsArray[key][mapKey]) && (dataMap[itemsArray[key][mapKey]] = itemsArray[key]);
        return dataMap
    }
      , getPropToArray = function(arr, propName) {
        var arrayResult = [];
        if (!hasValue(arr) || !hasValue(propName))
            return arrayResult;
        for (var index in arr) {
            var item = arr[index];
            hasValue(item[propName]) && arrayResult.push(item[propName])
        }
        return arrayResult
    }
      , WifiPublic = {
        getSSIDs: function() {
            var xpaths = {};
            return xpaths.publicSSIDs = $.xpaths.wifi.publicWifi.publicSSIDs,
            xpaths.ssids = $.xpaths.wifi.publicWifi.SSIDs,
            $.xmo.getValuesTree(xpaths)
        },
        populateACL: function() {
            var data = this.getSSIDs()
              , list = [];
            return angular.forEach(data.publicSSIDs, function(item) {
                if (item.Enable) {
                    var ssid = $.xmo.getValuesTree($.xpaths.wifi.publicWifi.ssid.replace("#SSIDRef#", item.SSIDReference))
                      , acl = $.xmo.getValuesTree($.xpaths.wifi.publicWifi.accessPoint.replace("#SSIDRef#", item.SSIDReference));
                    if (!ssid || !acl)
                        return;
                    var obj = {};
                    obj.SSID = ssid.SSID.SSID,
                    obj.ACLMode = acl.AccessPoint.MACFiltering.Mode,
                    obj.MACAddresses = acl.AccessPoint.MACFiltering.MACAddresses,
                    obj.apUid = acl.AccessPoint.uid,
                    list.push(obj)
                }
            }),
            list
        },
        populateAutoACL: function() {
            var xpathsToLoad = {
                enable: $.xpaths.wifi.autoACL.enable,
                ssids: $.xpaths.wifi.autoACL.allSSIDs,
                publicSSIDs: $.xpaths.wifi.autoACL.publicSSIDs,
                sourceSSIDs: $.xpaths.wifi.autoACL.sourceSSIDsList,
                targetSSIDs: $.xpaths.wifi.autoACL.targetSSIDsList
            }
              , automatedAclData = $.xmo.getValuesTree(xpathsToLoad);
            if (hasValue(automatedAclData.enable) || (automatedAclData.enable = !1),
            hasValue(automatedAclData.ssids)) {
                var ssidsEnabled = [];
                angular.forEach(automatedAclData.ssids, function(ssid) {
                    hasValue(ssid) && ssid.Enable === !0 && ssidsEnabled.push(ssid)
                }),
                automatedAclData.ssids = ssidsEnabled
            } else
                automatedAclData.ssids = [];
            hasValue(automatedAclData.publicSSIDs) || (automatedAclData.publicSSIDs = []),
            hasValue(automatedAclData.sourceSSIDs) || (automatedAclData.sourceSSIDs = []),
            hasValue(automatedAclData.targetSSIDs) || (automatedAclData.targetSSIDs = []),
            automatedAclData.sourceSSIDs = getPropToArray(automatedAclData.sourceSSIDs, "SourceSSID"),
            automatedAclData.targetSSIDs = getPropToArray(automatedAclData.targetSSIDs, "TargetSSID");
            var sourceSSIDsIndexed = indexBy(automatedAclData.sourceSSIDs, "SSIDReference")
              , targetSSIDsIndexed = indexBy(automatedAclData.targetSSIDs, "SSIDReference")
              , ssids = [];
            return angular.forEach(automatedAclData.ssids, function(ssid) {
                ssid.targetEnabled = hasValue(targetSSIDsIndexed[ssid.Name]),
                ssid.sourceEnabled = hasValue(sourceSSIDsIndexed[ssid.Name]),
                ssids.push(ssid)
            }),
            {
                ssids: ssids,
                enable: "ENABLED" === automatedAclData.enable,
                sourceSSIDs: automatedAclData.sourceSSIDs,
                targetSSIDs: automatedAclData.targetSSIDs
            }
        },
        populateSettings: function() {
            var data = this.getSSIDs()
              , list = [];
            return angular.forEach(data.publicSSIDs, function(publicSSID) {
                if (publicSSID.Enable) {
                    var ssidAlias = $.util.getAliasFromXPath(publicSSID.SSIDReference)
                      , ssid = $f(data.ssids, {
                        Alias: ssidAlias
                    }, !0);
                    if (ssid.length) {
                        var obj = {};
                        obj.uid = publicSSID.uid,
                        obj.vlan = publicSSID.VLAN,
                        obj.ssidReference = publicSSID.SSIDReference,
                        obj.ssidName = ssid[0].SSID,
                        list.push(obj)
                    }
                }
            }),
            list
        },
        saveSettings: function(wifiData, options) {
            var dataMap = {};
            angular.forEach(wifiData, function(data) {
                dataMap[$.util.fixpath(data.ssidReference) + "/SSID"] = data.ssidName,
                dataMap[$.xpaths.wifi.publicWifi.vlan.replace("#", data.uid)] = data.vlan,
                dataMap[$.xpaths.wifi.publicWifi.publicSSID.replace("#", data.uid)] = data.ssidName
            });
            try {
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (e) {
                options.error()
            }
        },
        saveACL: function(data, options) {
            try {
                var xpathAclMode = $.xpaths.wifi.publicWifi.aclMode.replace("#", data.apUid)
                  , xpathMacAddress = $.xpaths.wifi.publicWifi.aclMacAddress.replace("#", data.apUid)
                  , arrayData = {};
                arrayData[xpathAclMode] = data.ACLMode;
                var x, arrayDevices = $.util.fixGetValuesTree($.xmo.getValuesTree(xpathMacAddress)), loopCount = arrayDevices.length > data.MACAddresses.length ? arrayDevices.length : data.MACAddresses.length, finalDataToUpdate = [], finalDataToRemove = [], finalDataToAdd = [];
                for (x = 0; loopCount > x; x++)
                    arrayDevices[x] && data.MACAddresses[x] ? (arrayDevices[x].MACAddress = data.MACAddresses[x].MACAddress,
                    finalDataToUpdate.push(arrayDevices[x])) : data.MACAddresses[x] ? finalDataToAdd.push(data.MACAddresses[x]) : arrayDevices[x] && finalDataToRemove.push(arrayDevices[x]);
                var dataMap = {};
                if (finalDataToUpdate.length > 0)
                    for (x = 0; x < finalDataToUpdate.length; x++)
                        dataMap[xpathMacAddress + '/MACAddress[@uid="' + finalDataToUpdate[x].uid + '"]/MACAddress'] = finalDataToUpdate[x].MACAddress;
                $.xmo.setValuesFlat(dataMap, {
                    success: function() {},
                    error: function() {}
                });
                var del = [];
                if (finalDataToRemove.length > 0)
                    for (x = 0; x < finalDataToRemove.length; x++)
                        del.push(xpathMacAddress + '/MACAddress[@uid="' + finalDataToRemove[x].uid + '"]');
                del.length > 0 && $.xmo.delChildren(del);
                var arrayInsert = []
                  , arrayResult = {};
                if (finalDataToAdd.length > 0)
                    for (var i = 0; i < finalDataToAdd.length; i++)
                        void 0 !== finalDataToAdd[i].MACAddress && finalDataToAdd[i].MACAddress.length > 4 && (arrayResult = {
                            MACAddress: finalDataToAdd[i].MACAddress
                        },
                        arrayInsert.push({
                            MACAddress: arrayResult
                        }));
                arrayInsert.length > 0 ? $.xmo.addChildren(xpathMacAddress, arrayInsert, {
                    sync: !1,
                    success: function() {
                        $.xmo.setValuesFlat(arrayData, {
                            sync: !1,
                            success: options.success,
                            error: options.error
                        })
                    },
                    error: options.error
                }) : $.xmo.setValuesFlat(arrayData, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (e) {
                options.error()
            }
        },
        saveAutoACL: function(data, options) {
            var associateInFirstEmptySlot = function(aclArray, ssidReference) {
                for (var pos in aclArray)
                    if (!hasValue(aclArray[pos].SSIDReference)) {
                        aclArray[pos].SSIDReference = ssidReference;
                        break
                    }
            }
              , fillAssociations = function(data, dataToSave) {
                var indexedSourceSSIDs = indexBy(data.sourceSSIDs, "SSIDReference")
                  , indexedTargetSSIDs = indexBy(data.targetSSIDs, "SSIDReference")
                  , associatedSourceSSIDs = getPropToArray(indexedSourceSSIDs, "SSIDReference")
                  , associatedTargetSSIDs = getPropToArray(indexedTargetSSIDs, "SSIDReference")
                  , indexedSSIDs = indexBy(data.ssids, "Name");
                angular.forEach(indexedSSIDs, function(ssid) {
                    !ssid.sourceEnabled && associatedSourceSSIDs.indexOf(ssid.Name) > -1 && (indexedSourceSSIDs[ssid.Name].SSIDReference = ""),
                    !ssid.targetEnabled && associatedTargetSSIDs.indexOf(ssid.Name) > -1 && (indexedTargetSSIDs[ssid.Name].SSIDReference = ""),
                    ssid.sourceEnabled && associatedSourceSSIDs.indexOf(ssid.Name) < 0 && associateInFirstEmptySlot(data.sourceSSIDs, ssid.Name),
                    ssid.targetEnabled && associatedTargetSSIDs.indexOf(ssid.Name) < 0 && associateInFirstEmptySlot(data.targetSSIDs, ssid.Name)
                }),
                angular.forEach(data.sourceSSIDs, function(sourceSSID) {
                    dataToSave[$.xpaths.wifi.autoACL.sourceSSIDReference.replace("#", sourceSSID.uid)] = sourceSSID.SSIDReference
                }),
                angular.forEach(data.targetSSIDs, function(targetSSID) {
                    dataToSave[$.xpaths.wifi.autoACL.targetSSIDReference.replace("#", targetSSID.uid)] = targetSSID.SSIDReference
                })
            }
              , dataToSave = {};
            dataToSave[$.xpaths.wifi.autoACL.enable] = data.enable === !0 ? "ENABLED" : "DISABLED",
            data.enable === !0 && fillAssociations(data, dataToSave),
            $.xmo.setValuesFlat(dataToSave, {
                success: function() {
                    options.success()
                },
                error: function() {
                    options.error("fails to update ssid references")
                }
            })
        }
    };
    return WifiPublic
}
]),
sboxApp.factory("WiFi", ["$q", "WifiXpaths", "$timeout", function($q, WifiXpaths, $timeout) {
    var cache, _newCache, reverseMode = {
        guest: "priv",
        priv: "guest"
    }, _checkArrayBeforeSave = function(data, options, wifiMode) {
        var xpath, arrayReturn = {};
        return cache || (cache = updateCache(options)),
        _newCache = $.extend({}, cache),
        xpath = _fillCacheXpaths(options),
        $.each(xpath, function(j) {
            $.each(xpath[j][wifiMode], function(i, value) {
                var tmpCache = cache[j][wifiMode][i];
                "boolean" == typeof tmpCache && (tmpCache = tmpCache ? "true" : "false"),
                null !== tmpCache && void 0 !== data[value] && null !== data[value] && data[value] !== tmpCache && (arrayReturn[value] = data[value],
                _newCache[i] = data[value])
            }),
            $.each(xpath[j].guest, function(i, value) {
                var tmpCache = cache[j].guest[i];
                "boolean" == typeof tmpCache && (tmpCache = tmpCache ? "true" : "false"),
                null !== tmpCache && void 0 !== data[value] && null !== data[value] && data[value] !== tmpCache && (arrayReturn[value] = data[value],
                _newCache[i] = data[value])
            })
        }),
        arrayReturn
    }, _initializeWifiObj = function() {
        return {
            "2.4GHz": {
                guest: {},
                priv: {}
            },
            "5GHz": {
                guest: {},
                priv: {}
            }
        }
    }, _getAvailableChannels = function(radio) {
        return $.config.modules.wifi.availableChannels && radio ? $.config.modules.wifi.availableChannels[radio] : null
    }, _normalizeOptions = function(options) {
        var rs = options;
        return $.isArray(options) || (rs = [options]),
        rs
    }, _removeEmptyData = function(dataToSave) {
        var filteredData = {};
        return dataToSave ? ($.each(dataToSave, function(xpath, value) {
            return xpath && void 0 !== value && null !== value ? void (filteredData[xpath] = value) : !0
        }),
        filteredData) : filteredData
    }, _fillCacheXpaths = function(options) {
        options = _normalizeOptions(options);
        var reverseXpaths, xpaths = _initializeWifiObj();
        return $(options).each(function(i, obj) {
            !obj.radio || obj.data && obj.data.bandSteeringEnabled === !0 ? (xpaths["2.4GHz"][obj.mode] = WifiXpaths.get("2.4GHz", obj.mode).general,
            xpaths["2.4GHz"][obj.mode].wifiStatus = WifiXpaths.get("2.4GHz", obj.mode).status,
            xpaths["5GHz"][obj.mode] = WifiXpaths.get("5GHz", obj.mode).general,
            xpaths["5GHz"][obj.mode].wifiStatus = WifiXpaths.get("5GHz", obj.mode).status,
            reverseXpaths = WifiXpaths.get("2.4GHz", reverseMode[obj.mode]).general,
            xpaths["2.4GHz"][reverseMode[obj.mode]].accessPointEnable = reverseXpaths.accessPointEnable,
            xpaths["2.4GHz"][reverseMode[obj.mode]].ssidEnable = reverseXpaths.ssidEnable,
            reverseXpaths = WifiXpaths.get("5GHz", reverseMode[obj.mode]).general,
            xpaths["5GHz"][reverseMode[obj.mode]].accessPointEnable = reverseXpaths.accessPointEnable,
            xpaths["5GHz"][reverseMode[obj.mode]].ssidEnable = reverseXpaths.ssidEnable) : (xpaths[obj.radio][obj.mode] = WifiXpaths.get(obj.radio, obj.mode, obj.ssidAlias).general,
            xpaths[obj.radio][obj.mode].wifiStatus = WifiXpaths.get(obj.radio, obj.mode, obj.ssidAlias).status,
            reverseXpaths = WifiXpaths.get(obj.radio, reverseMode[obj.mode], obj.ssidAlias).general,
            xpaths[obj.radio][reverseMode[obj.mode]].accessPointEnable = reverseXpaths.accessPointEnable,
            xpaths[obj.radio][reverseMode[obj.mode]].ssidEnable = reverseXpaths.ssidEnable)
        }),
        xpaths
    }, WiFi = {
        cacheCurrentPinCode24: null,
        cacheCurrentPinCode5: null,
        updateCache: function(options) {
            var xpaths = _fillCacheXpaths(options);
            $.config.useXOREncryption && $.each(xpaths, function(radio, modes) {
                $.each(modes, function(mode) {
                    var _xpath = xpaths[radio][mode];
                    _xpath.passwordKey && (_xpath.passwordKey = _xpath.passwordKey.replace("/KeyPassphrase", "/EncryptedKeyPassphrase"))
                })
            }),
            cache = $.xmo.getValuesTree(xpaths)
        },
        getWifiSpeed: function(bitRate) {
            return bitRate
        },
        populate: function() {
            var data, revenant = _initializeWifiObj(), countRs = 0;
            return $.each(cache, function(radio, modes) {
                $.each(modes, function(mode) {
                    var _c = cache[radio][mode];
                    if (_c.accessPointEnable = null === _c.accessPointEnable ? !1 : _c.accessPointEnable,
                    _c.ssidEnable = null === _c.ssidEnable ? !1 : _c.ssidEnable,
                    "boolean" != typeof _c.enable)
                        return !0;
                    countRs++,
                    data = {},
                    data.enable = _c.enable && _c.accessPointEnable && _c.ssidEnable,
                    data.broadcast = _c.broadcast,
                    data.ssid = _c.ssid,
                    data.bssid = _c.bssid,
                    _c.autoChannel ? data.channel = null : data.channel = _c.channel,
                    data.securityMode = _c.securityMode || "",
                    -1 !== data.securityMode.indexOf("WEP") ? data.password = _c.passwordWep : ($.config.useXOREncryption && (_c.keyEnryption = $.xmo.getValuesTree($.xpaths.XORCryptKey),
                    _c.keyEnryption && (_c.passwordKey = $.util.XORCipher.decode(_c.keyEnryption, _c.passwordKey))),
                    data.password = _c.passwordKey);
                    var availableChannels = _getAvailableChannels(radio) || _c.channelsInUse || _c.possibleChannels;
                    data.availableChannels = $.util.parsePossibleChannels(availableChannels),
                    data.availableSecurityMode = $.util.parsePossibleSecurityModes(_c.possibleSecurityMode),
                    data.radiusServerIp = _c.radiusServerIp,
                    data.radiusServerPort = _c.radiusServerPort,
                    data.radiusServerPassword = _c.radiusServerPassword,
                    data.groupKeyUpdatePeriod = _c.groupKeyUpdatePeriod,
                    data.secondaryRadiusServerIp = _c.secondaryRadiusServerIp,
                    data.secondaryRadiusServerPort = _c.secondaryRadiusServerPort,
                    data.secondaryRadiusServerSecret = _c.secondaryRadiusServerSecret,
                    data.regulatoryDomain = _c.regulatoryDomain,
                    data.wifiStatus = _c.wifiStatus,
                    data.link = WiFi.getWifiSpeed(_c.maxBitRate),
                    data.macAddress = _c.macAddress,
                    data.currentChannel = _c.channel,
                    data.operatingStandards = _c.operatingStandards,
                    data.supportedOperatingStandars = _c.supportedOperatingStandars,
                    data.channelBandwidth = _c.channelBandwidth,
                    data.bssid = _c.bssid,
                    data.wpsEnable = _c.wpsEnable,
                    data.mfpMode = _c.mfpMode,
                    data.ecoMode = _c.ecoMode,
                    data.isolationEnable = _c.isolationEnable,
                    "2.4GHz" === radio ? data.ssidIsolation = _c.ssidIsolation2G : data.ssidIsolation = _c.ssidIsolation5G,
                    _c.backupSSID && _c.backupSSID.length && (data.backupSSID = _c.backupSSID),
                    _c.backupKeyPassphrase && _c.backupKeyPassphrase.length && (data.backupKeyPassphrase = _c.backupKeyPassphrase),
                    _c.backupModeEnabled && _c.backupModeEnabled.length && (data.backupModeEnabled = _c.backupModeEnabled),
                    revenant[radio][mode] = data
                })
            }),
            1 === countRs ? data : revenant
        },
        saveBasic: function(options, callback) {
            options = _normalizeOptions(options);
            var xpath, bandSteeringSupport = $.config.modules.wifi && $.config.modules.wifi.wifiBandSteeringSupport === !0, bandSteeringEnabled = bandSteeringSupport && options[0].data.bandSteeringEnabled;
            if (!cache)
                try {
                    this.updateCache(options)
                } catch (e) {
                    return !1
                }
            var saveData = {};
            $.each(options, function(i, obj) {
                var radio = obj.radio
                  , mode = obj.mode
                  , data = obj.data
                  , rootXpath = WifiXpaths.get(radio, mode);
                xpath = rootXpath.general;
                var currentCache = cache[radio][mode]
                  , reverseCache = cache[radio][reverseMode[mode]];
                $.config.modules.wifi.radioOnly ? (saveData[xpath.enable] = data.enable,
                null !== currentCache.wifiButton && data.enable === !0 && (saveData[xpath.wifiButton] = !0)) : (currentCache.enable && currentCache.accessPointEnable && currentCache.ssidEnable) !== data.enable && (saveData[xpath.accessPointEnable] = data.enable,
                saveData[xpath.ssidEnable] = data.enable,
                currentCache.enable === !1 && data.enable === !0 ? saveData[xpath.enable] = !0 : currentCache.enable === !0 && data.enable === !1 && reverseCache.accessPointEnable === !1 && (saveData[xpath.enable] = !1)),
                data.ssid && data.ssid !== currentCache.ssid && (saveData[xpath.ssid] = data.ssid),
                data.password && data.password !== currentCache.password && (saveData[xpath.passwordKey] = data.password,
                saveData[xpath.securityMode] = data.securityMode),
                data.mfpMode && data.mfpMode !== currentCache.mfpMode && (saveData[xpath.mfpMode] = data.mfpMode)
            }),
            bandSteeringSupport && options && options[0] && options[0].data && null !== options[0].data.bandSteeringEnabled && void 0 !== options[0].data.bandSteeringEnabled && options[0].data.bandSteeringEnabled !== bandSteeringEnabled && (saveData[$.xpaths.wifiBandSteering] = options[0].data.bandSteeringEnabled === !0);
            try {
                return saveData = _removeEmptyData(saveData),
                $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: function() {
                        WiFi.updateCache(options),
                        callback.success()
                    },
                    error: callback.error
                }),
                !0
            } catch (err) {
                return callback.error(),
                !1
            }
        },
        save: function(options, callback) {
            var ssidAlias = null;
            options.ssidAlias && (ssidAlias = options.ssidAlias),
            options = _normalizeOptions(options);
            var xpath;
            if (!cache)
                try {
                    this.updateCache(options)
                } catch (e) {
                    return !1
                }
            var passwordBs, ssidBs, securityBs, wifiEnableBs, saveData = {}, bandSteeringSupport = $.config.modules.wifi && $.config.modules.wifi.wifiBandSteeringSupport === !0, bandSteeringEnabled = bandSteeringSupport && options[0].data.bandSteeringEnabled, mergeWifiData = bandSteeringEnabled || !!options[0].data && options[0].data.mergeWifiData === !0, bandSteeringSplitWithSameName = options[0].data.bandSteeringSplitWithSameName ? options[0].data.bandSteeringSplitWithSameName : !1;
            mergeWifiData && (passwordBs = options[0].data.password,
            securityBs = options[0].data.securityMode,
            ssidBs = options[0].data.ssid,
            wifiEnableBs = options[0].data.enable,
            options[1] && options[1].data && (options[1].data.enable = wifiEnableBs));
            var selectedMode;
            $.each(options, function(i, obj) {
                var radio = obj.radio
                  , mode = obj.mode;
                selectedMode = mode;
                var data = obj.data
                  , rootXpath = WifiXpaths.get(radio, mode, ssidAlias);
                xpath = rootXpath.general;
                var currentCache = cache[radio][mode]
                  , reverseCache = cache[radio][reverseMode[mode]];
                if ($.config.modules.wifi.radioOnly ? (saveData[xpath.enable] = data.enable,
                null !== currentCache.wifiButton && data.enable === !0 && (saveData[xpath.wifiButton] = !0)) : (currentCache.enable && currentCache.accessPointEnable && currentCache.ssidEnable) !== data.enable && (saveData[xpath.accessPointEnable] = data.enable,
                saveData[xpath.ssidEnable] = data.enable,
                currentCache.enable === !1 && data.enable === !0 ? saveData[xpath.enable] = !0 : currentCache.enable === !0 && data.enable === !1 && reverseCache.accessPointEnable === !1 && (saveData[xpath.enable] = !1)),
                data.enable) {
                    "boolean" == typeof data.broadcast && data.broadcast !== currentCache.broadcast && (saveData[xpath.broadcast] = data.broadcast);
                    var xpath24g, xpath5g;
                    if ((mergeWifiData || data.itsWizard) && (xpath24g = WifiXpaths.get("2.4GHz", "priv", ssidAlias).general,
                    xpath5g = WifiXpaths.get("5GHz", "priv", ssidAlias).general),
                    mergeWifiData ? (saveData[xpath24g.ssid] = ssidBs,
                    data.backupSSID || (bandSteeringSplitWithSameName ? saveData[xpath5g.ssid] = ssidBs : saveData[xpath5g.ssid] = ssidBs + "-5")) : data.itsWizard ? data.ssid !== currentCache.ssid && 0 === i && (saveData[xpath24g.ssid] = data.ssid,
                    saveData[xpath5g.ssid] = data.ssid) : data.ssid !== currentCache.ssid && (saveData[xpath.ssid] = data.ssid),
                    mergeWifiData ? (saveData[xpath24g.enable] = wifiEnableBs,
                    saveData[xpath5g.enable] = wifiEnableBs) : saveData[xpath.enable] = data.enable,
                    data.securityMode && (saveData[xpath.securityMode] = data.securityMode),
                    mergeWifiData ? data.backupSSID || (saveData[xpath24g.securityMode] = securityBs,
                    saveData[xpath5g.securityMode] = securityBs) : saveData[xpath.securityMode] = data.securityMode,
                    -1 !== data.securityMode.indexOf("WEP"))
                        mergeWifiData ? data.backupSSID || (saveData[xpath24g.passwordWep] = passwordBs,
                        saveData[xpath5g.passwordWep] = passwordBs) : saveData[xpath.passwordWep] = data.password;
                    else {
                        if ($.config.useXOREncryption) {
                            var keyEnryption = $.xmo.getValuesTree($.xpaths.XORCryptKey);
                            mergeWifiData ? (xpath24g.passwordKey = xpath24g.passwordKey.replace("/KeyPassphrase", "/EncryptedKeyPassphrase"),
                            xpath5g.passwordKey = xpath5g.passwordKey.replace("/KeyPassphrase", "/EncryptedKeyPassphrase")) : xpath.passwordKey = xpath.passwordKey.replace("/KeyPassphrase", "/EncryptedKeyPassphrase"),
                            keyEnryption && (data.password = $.util.XORCipher.encode(keyEnryption, data.password))
                        }
                        mergeWifiData ? (saveData[xpath24g.passwordKey] = passwordBs,
                        saveData[xpath5g.passwordKey] = passwordBs) : saveData[xpath.passwordKey] = data.password
                    }
                    null === data.channel ? saveData[xpath.autoChannel] = !0 : (saveData[xpath.channel] = data.channel,
                    saveData[xpath.autoChannel] = !1),
                    data.mfpMode && !$.isEmptyObject(data.mfpMode) && (null === data.mfpMode ? saveData[xpath.mfpMode] = "DISABLE" : saveData[xpath.mfpMode] = data.mfpMode),
                    data.operatingStandards && currentCache.operatingStandards !== data.operatingStandards && (saveData[xpath.operatingStandards] = data.operatingStandards),
                    data.channelBandwidth && currentCache.channelBandwidth !== data.channelBandwidth && (saveData[xpath.channelBandwidth] = data.channelBandwidth),
                    data.securityMode && ((data.groupKeyUpdatePeriod || -1 !== data.securityMode.indexOf("ENTERPRISE")) && (saveData[xpath.groupKeyUpdatePeriod] = data.groupKeyUpdatePeriod),
                    -1 !== data.securityMode.indexOf("ENTERPRISE") && (saveData[xpath.radiusServerIp] = data.radiusServerIp,
                    saveData[xpath.radiusServerPort] = data.radiusServerPort,
                    saveData[xpath.radiusServerPassword] = data.radiusServerPassword,
                    saveData[xpath.secondaryRadiusServerIp] = data.secondaryRadiusServerIp,
                    saveData[xpath.secondaryRadiusServerPort] = data.secondaryRadiusServerPort,
                    saveData[xpath.secondaryRadiusServerSecret] = data.secondaryRadiusServerSecret)),
                    void 0 !== data.wpsEnable && (saveData[xpath.wpsEnable] = data.wpsEnable,
                    data.wpsEnable && (saveData[rootXpath.macfilter.macFilterMode] = "DISABLED"),
                    $.config.showedpages.wpsMode.enable && data.wpsMode && (saveData[xpath.configMethodsEnabled] = data.wpsMode)),
                    $.util.hasFeature("ecoMode") && (saveData[xpath.ecoMode] = data.ecoMode),
                    $.util.hasFeature("wifiIsolation") && (saveData[xpath.ssidIsolation2G] = data.ssidIsolation,
                    saveData[xpath.ssidIsolation5G] = data.ssidIsolation,
                    saveData[xpath.isolationEnable] = data.isolationEnable)
                } else
                    !data.enable && data.wpsEnable && (saveData[xpath.wpsEnable] = data.enable)
            });
            try {
                return this.cacheCurrentPinCode24 = null,
                this.cacheCurrentPinCode5 = null,
                saveData = _removeEmptyData(saveData),
                saveData = _checkArrayBeforeSave(saveData, options, selectedMode),
                bandSteeringSupport && options && options[0] && options[0].data && null !== options[0].data.bandSteeringEnabled && void 0 !== options[0].data.bandSteeringEnabled && options[0].data.bandSteeringEnabled === bandSteeringEnabled && (saveData[$.xpaths.wifiBandSteering] = options[0].data.bandSteeringEnabled === !0),
                $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: function() {
                        WiFi.updateCache(options),
                        callback.success()
                    },
                    error: callback.error
                }),
                !0
            } catch (err) {
                return !1
            }
        },
        updateBandwidth: function(radio, mode, bandWidth, callback) {
            var xpath, saveData = {};
            xpath = WifiXpaths.get(radio, mode).general,
            saveData[xpath.channelBandwidth] = bandWidth;
            try {
                return $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: function() {
                        var channels = $.xmo.getValuesTree(xpath.channelsInUse);
                        callback.success(channels)
                    },
                    error: callback.error
                }),
                !0
            } catch (err) {
                return !1
            }
        },
        saveStatus: function(data, radio, mode, options) {
            var ssidAlias = null;
            options.ssidAlias && (ssidAlias = options.ssidAlias);
            var xpath = WifiXpaths.get(radio, mode, ssidAlias).general
              , reverseCache = cache[radio][reverseMode[mode]]
              , _c = cache[radio][mode]
              , saveData = {}
              , neverDisable5Ghz = !!$.config.modules.wifi.neverDisableRadio5Ghz;
            if ((_c.enable && _c.accessPointEnable && _c.ssidEnable) !== data && (saveData[xpath.accessPointEnable] = data,
            saveData[xpath.ssidEnable] = data,
            _c.enable === !1 && data === !0 ? saveData[xpath.enable] = !0 : _c.enable !== !0 || data !== !1 || reverseCache.accessPointEnable !== !1 || neverDisable5Ghz && "2.4GHz" !== radio || (saveData[xpath.enable] = !1),
            $.config.modules.wifi.wifi5MasterRadio && "5GHz" === radio))
                if ("priv" !== mode || _c.enable !== !0 || data !== !1 || neverDisable5Ghz) {
                    if ("guest" === mode && data === !0 && _c.enable === !1 && (reverseCache.accessPointEnable === !1 || reverseCache.ssidEnable === !1)) {
                        var reverseXpaths = WifiXpaths.get(radio, reverseMode[mode], ssidAlias).general;
                        saveData[xpath.enable] = !0,
                        saveData[reverseXpaths.accessPointEnable] = !0,
                        saveData[reverseXpaths.ssidEnable] = !0
                    }
                } else
                    saveData[xpath.enable] = !1;
            try {
                $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: function() {
                        WiFi.updateCache({
                            radio: radio,
                            mode: mode
                        }),
                        options.success()
                    },
                    error: options.error
                })
            } catch (e) {
                options.error()
            }
        },
        changeChannel: function(data, radio, mode, options) {
            var xpath;
            if (!cache)
                try {
                    this.updateCache({
                        radio: radio,
                        mode: mode
                    })
                } catch (e) {
                    return !1
                }
            xpath = WifiXpaths.get(radio, mode).general;
            var saveData = {};
            data.channel && (saveData[xpath.channel] = data.channel,
            saveData[xpath.autoChannel] = !1);
            try {
                return this.cacheCurrentPinCode24 = null,
                this.cacheCurrentPinCode5 = null,
                $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: function() {
                        WiFi.updateCache({
                            radio: radio,
                            mode: mode
                        }),
                        options.success()
                    },
                    error: options.error
                }),
                !0
            } catch (err) {
                return options.error(),
                !1
            }
        },
        generatePinCodeWPSPromisse: function(radio) {
            var deferred = $q.defer();
            return this.cacheCurrentPinCode24 = null,
            this.cacheCurrentPinCode5 = null,
            $.xmo.generatePin(function(param) {
                deferred.resolve(param.PinCode)
            }, radio),
            deferred.promise
        },
        startPhysicalWPS: function(radio, mode, options) {
            if (this.cacheCurrentPinCode24 = null,
            this.cacheCurrentPinCode5 = null,
            !cache || $.config.modules.wifi.dual)
                try {
                    this.updateCache({
                        radio: radio,
                        mode: mode
                    })
                } catch (e) {
                    return !1
                }
            var xpath = WifiXpaths.get(radio, mode).general.wpsRPC;
            if (-1 === cache[radio][mode].configMethodsEnabled.indexOf("PushButton") && $.config.showedpages.wpsMode.enable === !1) {
                var xpathMode = WifiXpaths.get(radio, mode).general.configMethodsEnabled
                  , saveData = {};
                return cache[radio][mode].configMethodsEnabled = saveData[xpathMode] = "PushButton",
                $.xmo.setValuesFlat(saveData),
                $timeout(function() {
                    var xpath = WifiXpaths.get(radio, mode).general.wpsRPC;
                    $.xmo.startWPS(xpath, options)
                }, 5e3),
                !0
            }
            return $.xmo.startWPS(xpath, options)
        },
        startDualPhysicalWPS: function(mode, options) {
            if (!cache || $.config.modules.wifi.dual)
                try {
                    this.updateCache([{
                        radio: "2.4GHz",
                        mode: mode
                    }, {
                        radio: "5GHz",
                        mode: mode
                    }])
                } catch (e) {
                    return !1
                }
            var xpaths = [WifiXpaths.get("2.4GHz", mode).general.wpsRPC, WifiXpaths.get("5GHz", mode).general.wpsRPC];
            return $.xmo.startDualWPS(xpaths, options)
        },
        getCurrentPinCode: function(radio, mode) {
            var dataQuery = {}
              , xpath2 = "";
            if (xpath2 = "2.4GHz" === radio ? "cacheCurrentPinCode24" : "cacheCurrentPinCode5",
            this[xpath2] || (dataQuery = {
                wpsConfig: WifiXpaths.get(radio, mode).general.configMethodsSupported,
                wpsDevicePin: WifiXpaths.get(radio, mode).general.wpsDevicePin
            },
            this[xpath2] = $.xmo.getValuesTree(dataQuery)),
            this[xpath2].wpsConfig) {
                var configArray = this[xpath2].wpsConfig.toUpperCase().split(",");
                if ($.inArray($.constants.PIN, configArray) > -1)
                    return this[xpath2].wpsDevicePin
            }
        },
        setEnrolleePin: function(enrolleePin, options, radio, mode) {
            if (!cache)
                try {
                    this.updateCache({
                        radio: radio,
                        mode: mode
                    })
                } catch (e) {
                    return options.error(),
                    !1
                }
            var after = function() {
                var enrolleePinXpath = WifiXpaths.get(radio, mode).general.wpsEnrolleePin
                  , saveData = {};
                saveData[enrolleePinXpath] = enrolleePin,
                $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            };
            if (-1 === cache[radio][mode].configMethodsEnabled.indexOf("EnrolleePIN") && $.config.showedpages.wpsMode.enable === !1) {
                var xpathMode = WifiXpaths.get(radio, mode).general.configMethodsEnabled
                  , saveData = {};
                saveData[xpathMode] = "EnrolleePIN",
                $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: function() {
                        cache[radio][mode].configMethodsEnabled = saveData[xpathMode],
                        $timeout(after, 5e3)
                    },
                    error: function() {
                        $timeout(after, 5e3)
                    }
                })
            } else
                after()
        },
        getWpsStatus: function(radio, mode) {
            var data = {
                enable: ""
            }
              , xpath = WifiXpaths.get(radio, mode);
            if (data.enable = xpath.general.wpsEnable,
            data.configMethodsSelected = xpath.general.configMethodsEnabled,
            data.accessPointEnable = xpath.general.accessPointEnable,
            data.ssidEnable = xpath.general.ssidEnable,
            data.wifiIsEnable = xpath.general.enable,
            !$.config.modules.wifi.wps.overrideMethods) {
                var configMethod = $.config.modules.wifi.wps.configMethodXpath || "configMethodsSupported";
                data.configMethodsEnabled = xpath.general[configMethod]
            }
            var rs = $.xmo.getValuesTree(data);
            return rs.configMethodsEnabled = $.config.modules.wifi.wps.overrideMethods || rs.configMethodsEnabled,
            rs.accessPointEnable = null === rs.accessPointEnable ? !1 : rs.accessPointEnable,
            rs.ssidEnable = null === rs.ssidEnable ? !1 : rs.ssidEnable,
            rs.wifiIsEnable = rs.wifiIsEnable && rs.accessPointEnable && rs.ssidEnable,
            rs
        },
        setWpsBackhaul: function() {
            if ($.util.hasFeature("wifibackhaul")) {
                var dataMap = {};
                dataMap[$.xpaths.wifi.backhaul.wps] = "REQUESTED",
                $.xmo.setValuesFlat(dataMap)
            }
        },
        setWpsStatus: function(value, wpsMode, radio, mode) {
            var dataMap = {}
              , xpath = WifiXpaths.get(radio, mode);
            dataMap[xpath.general.wpsEnable] = value,
            value && (dataMap[xpath.macfilter.macFilterMode] = "DISABLED"),
            $.config.showedpages.wpsMode.enable && (dataMap[xpath.general.configMethodsEnabled] = wpsMode),
            this.cacheCurrentPinCode24 = null,
            this.cacheCurrentPinCode5 = null,
            $.xmo.setValuesFlat(dataMap)
        },
        getDeviceMac: function() {
            var sessionId = $.xmo.client._sessionId
              , deviceIp = $.xmo.getValuesTree($.xpaths.wifi.strength.ipDevice.replace("#SESSIONID#", sessionId))
              , devices = $.xmo.getValuesTree($.xpaths.main.cacheable.hosts)
              , macAddress = null;
            for (var x in devices)
                if (deviceIp === devices[x].IPAddress)
                    return macAddress = devices[x].PhysAddress;
            return null
        },
        getCurrentRadio: function(macAddress) {
            var result = !1
              , wifiInfo = {
                mode: null,
                radio: null
            }
              , acesspointList = $.xmo.getValuesTree($.xpaths.wifi.strength.accessPoints);
            for (var item in acesspointList)
                if (result = this.searchAssociatedDevice(acesspointList[item].AssociatedDevices, macAddress)) {
                    wifiInfo.mode = acesspointList[item].SSIDReference.indexOf("PRIV") > -1 ? "priv" : "guest",
                    wifiInfo.radio = acesspointList[item].SSIDReference.indexOf("5G") > -1 ? "5GHz" : "2.4GHz";
                    break
                }
            return wifiInfo
        },
        searchAssociatedDevice: function(associatedDevices, macAddress) {
            var result = !1;
            return $(associatedDevices).each(function(x, associatedDevice) {
                associatedDevice.Active === !0 && macAddress.toUpperCase() === associatedDevice.MACAddress.toUpperCase() && (result = !0)
            }),
            result
        },
        getChannelByRadio: function(radio) {
            switch (radio) {
            case "2.4GHz":
                radio = "RADIO2G4";
                break;
            case "5GHz":
                radio = "RADIO5G"
            }
            return $.xmo.getValuesTree($.xpaths.wifi.general.channel.replace("#RADIO#", radio))
        },
        restoreDefault: function(success, error) {
            var dataMap = {}
              , options = {
                sync: !1,
                success: success,
                error: error
            };
            dataMap[$.xpaths.wifiRestoreDefault] = !0,
            $.xmo.setValuesFlat(dataMap, options)
        },
        getWifiBandSteering: function() {
            return $.xmo.getValuesTree($.xpaths.wifiBandSteering)
        },
        setWifiBandSteering: function(value, options) {
            try {
                var arrayData = {};
                return arrayData[$.xpaths.wifiBandSteering] = value,
                $.xmo.setValuesFlat(arrayData, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return options.error(),
                !1
            }
        },
        isSameSettingsForBothBands: function() {
            var data = {
                ssid: {},
                securityMode: {},
                securityPasswd: {}
            }
              , xpath24g = WifiXpaths.get("2.4GHz", "priv")
              , xpath5g = WifiXpaths.get("5GHz", "priv");
            data.ssid.band24g = xpath24g.general.ssid,
            data.ssid.band5g = xpath5g.general.ssid;
            var rsSsid = $.xmo.getValuesTree(data.ssid);
            if (rsSsid.band24g !== rsSsid.band5g)
                return !1;
            data.securityMode.band24g = xpath24g.general.securityMode,
            data.securityMode.band5g = xpath5g.general.securityMode;
            var rsSecurityMode = $.xmo.getValuesTree(data.securityMode);
            if (rsSecurityMode.band24g !== rsSecurityMode.band5g)
                return !1;
            if (-1 !== rsSecurityMode.band24g.indexOf("WEP") ? (data.securityPasswd.band24g = xpath24g.general.passwordWep,
            data.securityPasswd.band5g = xpath5g.general.passwordWep) : -1 !== rsSecurityMode.band24g.indexOf("WPA") ? ($.config.useXOREncryption && (xpath24g.general.passwordKey = xpath24g.general.passwordKey.replace("/KeyPassphrase", "/EncryptedKeyPassphrase"),
            xpath5g.general.passwordKey = xpath5g.general.passwordKey.replace("/KeyPassphrase", "/EncryptedKeyPassphrase")),
            data.securityPasswd.band24g = xpath24g.general.passwordKey,
            data.securityPasswd.band5g = xpath5g.general.passwordKey) : (data.securityPasswd.band24g = "no-passwd",
            data.securityPasswd.band5g = "no-passwd"),
            "no-passwd" !== data.securityPasswd.band24g) {
                var rsPassword = $.xmo.getValuesTree(data.securityPasswd);
                if (rsPassword.band24g !== rsPassword.band5g)
                    return !1
            }
            return !0
        },
        setSameSettingsForBothBands: function(ssid, securityConf) {
            try {
                ssid = ssid || "",
                securityConf = securityConf || "";
                var arrayData = {};
                return arrayData[$.xpaths.wifiBandSteering] = value,
                $.xmo.setValuesFlat(arrayData, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return options.error(),
                !1
            }
        }
    };
    return WiFi
}
]),
sboxApp.factory("WiFiMacfilter", function(WifiXpaths) {
    var cache, radio2g = "2.4GHz", radio5g = "5GHz", WiFiMacfilter = {
        updateCache: function(radio, mode) {
            var xpath = {};
            "both" === radio ? (xpath[radio2g] = WifiXpaths.get(radio2g, mode).macfilter,
            xpath[radio5g] = WifiXpaths.get(radio5g, mode).macfilter) : xpath[radio] = WifiXpaths.get(radio, mode).macfilter,
            cache = $.xmo.getValuesTree(xpath)
        },
        populate: function(radio) {
            var data = {}
              , list = {}
              , _fillRules = function(rd, macList) {
                var device, mXpath;
                if (cache && cache[rd])
                    for (var x = 0; x < cache[rd].wifiControlList.length; x++) {
                        var macAddress = cache[rd].wifiControlList[x].MACAddress;
                        device = null,
                        mXpath = $.xpaths.main.cacheable.hosts + '/Host[PhysAddress="' + cache[rd].wifiControlList[x].MACAddress + '"]';
                        var macRule = macList[macAddress] ? macList[macAddress] : {
                            MACAddress: macAddress,
                            hostName: "",
                            uid2g: null,
                            uid5g: null
                        };
                        if (rd === radio2g && (macRule.uid2g = cache[rd].wifiControlList[x].uid),
                        rd === radio5g && (macRule.uid5g = cache[rd].wifiControlList[x].uid),
                        !macRule.hostName && (device = $.xmo.getValuesTree(mXpath),
                        null !== device && void 0 !== device)) {
                            var hostname = $.util.getHostname(device.Host);
                            macRule.hostName = hostname,
                            cache[rd].wifiControlList[x].hostName = hostname
                        }
                        macList[macAddress] || (macList[macAddress] = macRule)
                    }
            };
            "both" === radio ? (data.macFilterMode = cache[radio2g].macFilterMode,
            _fillRules(radio2g, list),
            _fillRules(radio5g, list)) : (data.macFilterMode = cache[radio].macFilterMode,
            _fillRules(radio, list));
            var listMacResult = [];
            if (list || !$.isEmptyObject(list))
                for (var key in list)
                    listMacResult.push(list[key]);
            return data.listMac = listMacResult,
            data
        },
        deleteList: function(data, radio, mode) {
            var xpath = WifiXpaths.get(radio, mode).macfilter.wifiControlList
              , del = [];
            if (data.length > 0)
                for (var x = 0; x < data.length; x++)
                    del.push(xpath + '/MACAddress[@uid="' + data[x].uid + '"]');
            del.length > 0 && $.xmo.delChildren(del)
        },
        addList: function(data, radio, mode, options) {
            var xpath = WifiXpaths.get(radio, mode).macfilter.wifiControlList
              , arrayInsert = []
              , arrayResult = {};
            if (data.length > 0)
                for (var x = 0; x < data.length; x++)
                    void 0 !== data[x].MACAddress && data[x].MACAddress.length > 4 && (arrayResult = {
                        MACAddress: data[x].MACAddress
                    },
                    arrayInsert.push({
                        MACAddress: arrayResult
                    }));
            arrayInsert.length > 0 && $.xmo.addChildren(xpath, arrayInsert, {
                sync: !1,
                success: options.success,
                error: options.error
            })
        },
        save: function(data, radio, mode, options) {
            var xpathMode, xpathList, xpathWPS, saveData = {}, xpath = WifiXpaths.get(radio, mode);
            xpathList = xpath.macfilter.wifiControlList,
            xpathMode = xpath.macfilter.macFilterMode,
            xpathWPS = xpath.general.wpsEnable;
            var cb = function(data2, param) {
                $.xmo.setValuesFlat(data2, {
                    sync: !1,
                    success: param.success,
                    error: param.error
                })
            };
            try {
                saveData[xpathMode] = "DISABLED",
                $.xmo.setValuesFlat(saveData),
                "DISABLED" !== data.macFilterMode && (saveData[xpathWPS] = !1),
                saveData[xpathMode] = data.macFilterMode;
                var arrayDevices = $.util.fixGetValuesTree($.xmo.getValuesTree(xpathList));
                WiFiMacfilter.deleteList(arrayDevices, radio, mode),
                WiFiMacfilter.addList(data.wifiControlList, radio, mode, {
                    sync: !1,
                    success: cb(saveData, options),
                    error: options.error
                })
            } catch (err) {
                options.error()
            }
        },
        getModel: function(device) {
            var model = {
                MACAddress: device.PhysAddress,
                hostName: device.hostname,
                uid: "new_" + device.PhysAddress.replace(/[^A-Za-z\s]+/g, "")
            };
            return model
        }
    };
    return WiFiMacfilter
}),
sboxApp.factory("WiFiStats", ["WiFi", "WifiXpaths", function(WiFi, WifiXpaths) {
    var WiFiStats = {
        getData: function(radio, mode) {
            var xpath = WifiXpaths.get(radio, mode).stats
              , s = $.xmo.getValuesTree(xpath);
            return s.status = "UP" === s.status ? "UP" : "DOWN",
            s.link = "",
            s.link = WiFi.getWifiSpeed(s.maxBitRate),
            s
        }
    };
    return WiFiStats
}
]),
sboxApp.factory("Ethernet", [function() {
    var Ethernet = {
        parseBytes: function(data) {
            data.bytesreceived = $.util.convertBytes(data.bytesreceived),
            data.bytessent = $.util.convertBytes(data.bytessent)
        },
        getPorts: function() {
            for (var cache = $.xmo.getValuesTree($.xpaths.ethernet), arrayReturn = [], i = 1; 5 > i; i++) {
                var objName = "port" + i
                  , obj = cache[objName];
                obj.status = "UP" === cache[objName].status ? "UP" : "DOWN",
                obj.show = "UP" === obj.status,
                obj.connectionSpeed = $.util.formatConnectionSpeed(cache[objName].connectionSpeed),
                Ethernet.parseBytes(obj),
                null !== obj.errorsreceived && arrayReturn.push(obj)
            }
            return arrayReturn
        }
    };
    return Ethernet
}
]),
sboxApp.factory("ethernetDevice", function() {
    var cache = null
      , _isAnotherDevice = function(uid) {
        return !cache || cache.devicesList.Host.uid !== parseInt(uid, 10)
    }
      , ethernetDevice = {
        updateCache: function(uid, updateCache) {
            if (updateCache || _isAnotherDevice(uid)) {
                var xpaths = {
                    devicesList: "",
                    localDomain: ""
                };
                xpaths.devicesList = $.xpaths.ethernetDevice.devicesList.replace("#", uid),
                xpaths.localDomain = $.xpaths.ethernetDevice.localDomain,
                cache = $.xmo.getValuesTree(xpaths)
            }
        },
        populate: function(uid, updateCache) {
            if (void 0 !== uid && null !== uid)
                try {
                    return this.updateCache(uid, updateCache),
                    this.getDeviceIdentification(),
                    cache
                } catch (e) {
                    return !1
                }
            return !1
        },
        getDeviceIdentification: function() {
            "" !== cache.devicesList.Host.DeviceTypeAssociation && (cache.deviceIdentification = $.xmo.getValuesTree(cache.devicesList.Host.DeviceTypeAssociation))
        },
        save: function(data, options) {
            try {
                var dataMap = {}
                  , xpath = $.xpaths.ethernetDevice.devicesList.replace("#", data.id);
                return dataMap[xpath + "/UserFriendlyName"] = data.friendlyName,
                dataMap[xpath + "/UserDeviceType"] = data.userDeviceType,
                dataMap[xpath + "/Room"] = data.room,
                $.config.modules.staticDNS && data.HostName !== cache.devicesList.Host.HostName && (dataMap[xpath + "/HostName"] = data.HostName),
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: function() {
                        cache.devicesList.Host.UserFriendlyName = data.friendlyName,
                        cache.devicesList.Host.UserDeviceType = data.userDeviceType,
                        cache.devicesList.Host.Room = data.room,
                        $.config.modules.staticDNS && data.HostName !== cache.devicesList.Host.HostName && (cache.devicesList.Host.HostName = data.HostName),
                        options.success()
                    },
                    error: options.error
                }),
                !0
            } catch (err) {
                return !1
            }
        },
        getDevicesTypeSupported: function(uid) {
            var xpath = $.xpaths.ethernetDevice.devicesList.replace("#", uid) + "/UserDeviceType"
              , list = $.xmo.getCapability(xpath)
              , result = [];
            for (var x in list.restrictions["enum-values"]) {
                var device = {
                    type: list.restrictions["enum-values"][x].name
                };
                result.push(device)
            }
            return result
        }
    };
    return ethernetDevice
}),
sboxApp.factory("Statistics", ["Auth", function(Auth) {
    var _connectivityCache, Statistics = {
        formatxDSLStats: function(xdslData) {
            var obj = {};
            for (var x in xdslData)
                null === xdslData[x] && (xdslData[x] = "");
            obj.status = "UP" === xdslData.status ? "UP" : "DOWN",
            obj.linkStatus = xdslData.linkStatus,
            "UP" === xdslData.status ? "number" != typeof xdslData.standard ? xdslData.standard && ($.constants.xdslStandards[xdslData.standard.toUpperCase()] ? obj.standard = $.constants.xdslStandards[xdslData.standard.toUpperCase()] + " (" + xdslData.standard + ") " : obj.standard = xdslData.standard.toString()) : obj.standard = xdslData.standard.toString() : obj.standard = "--",
            obj.lineEncoding = "UP" === xdslData.status ? xdslData.lineEncoding : "--",
            "UP" === xdslData.linkStatus ? obj.linkEncapsulation = -1 !== xdslData.linkEncapsulation.toUpperCase().indexOf("ATM") ? "ATM (" + xdslData.linkEncapsulation + ")" : "PTM (" + xdslData.linkEncapsulation + ")" : obj.linkEncapsulation = "--",
            obj.standard = $.util.formatLongWords(obj.standard),
            obj.linkEncapsulation = $.util.formatLongWords(obj.linkEncapsulation),
            obj.dslDownstream = parseFloat(xdslData.dslDownstream / 1e3).toFixed(1),
            obj.dslUpstream = parseFloat(xdslData.dslUpstream / 1e3).toFixed(1);
            var upTime = moment.duration(xdslData.connectionTimeDsl, "seconds");
            return obj.connectionTimeDsl = $.util.formatLeaseTime(upTime),
            obj.lossOfFraming = xdslData.numeric.lossOfFraming,
            obj.fecErrorsDownstream = xdslData.numeric.XTURFECErrors,
            obj.fecErrorsUpstream = xdslData.numeric.XTUCFECErrors,
            obj.crcErrorsDownstream = xdslData.numeric.XTURCRCErrors,
            obj.crcErrorsUpstream = xdslData.numeric.XTUCCRCErrors,
            obj.packetsReceived = xdslData.numeric.packetsReceived,
            obj.packetsSent = xdslData.numeric.packetsSent,
            obj.bytesReceived = $.util.convertBytes(xdslData.numeric.bytesReceived),
            obj.bytesSent = $.util.convertBytes(xdslData.numeric.bytesSent),
            obj.actualRateDown = xdslData.numeric.actualRateDown,
            obj.actualRateUp = xdslData.numeric.actualRateUp,
            obj.maximumRateDown = xdslData.numeric.maximumRateDown,
            obj.maximumRateUp = xdslData.numeric.maximumRateUp,
            xdslData.numeric.noiseMarginDown = xdslData.numeric.noiseMarginDown ? xdslData.numeric.noiseMarginDown : 0,
            xdslData.numeric.noiseMarginUp = xdslData.numeric.noiseMarginUp ? xdslData.numeric.noiseMarginUp : 0,
            xdslData.numeric.attenuationDown = xdslData.numeric.attenuationDown ? xdslData.numeric.attenuationDown : 0,
            xdslData.numeric.attenuationUp = xdslData.numeric.attenuationUp ? xdslData.numeric.attenuationUp : 0,
            xdslData.numeric.powerDown = xdslData.numeric.powerDown ? xdslData.numeric.powerDown : 0,
            xdslData.numeric.powerUp = xdslData.numeric.powerUp ? xdslData.numeric.powerUp : 0,
            obj.noiseMarginDown = parseFloat(.1 * xdslData.numeric.noiseMarginDown).toFixed(2),
            obj.noiseMarginUp = parseFloat(.1 * xdslData.numeric.noiseMarginUp).toFixed(2),
            obj.attenuationDown = parseFloat(.1 * xdslData.numeric.attenuationDown).toFixed(2),
            obj.attenuationUp = parseFloat(.1 * xdslData.numeric.attenuationUp).toFixed(2),
            obj.powerDown = parseFloat(.1 * xdslData.numeric.powerDown).toFixed(2),
            obj.powerUp = parseFloat(.1 * xdslData.numeric.powerUp).toFixed(2),
            obj.erroredSeconds = xdslData.erroredSeconds,
            obj.severelyErroredSecs = xdslData.severelyErroredSecs,
            obj.reSynchronisations = xdslData.reSynchronisations,
            obj
        },
        formatStats: function(dataArray, onlyUp) {
            dataArray = $.util.fixGetValuesTree(dataArray),
            void 0 === onlyUp && (onlyUp = !1);
            for (var dataReturn = {
                interfaces: [],
                wan: {}
            }, i = 0; i < dataArray.length; i++) {
                var obj = {};
                obj.ifcName = dataArray[i].IfcName,
                obj.alias = dataArray[i].Alias,
                obj.packetsreceived = dataArray[i].Stats.PacketsReceived,
                obj.bytesreceived = $.util.convertBytes(dataArray[i].Stats.BytesReceived),
                obj.errorsreceived = dataArray[i].Stats.ErrorsReceived,
                obj.discardpacketsreceived = dataArray[i].Stats.DiscardPacketsReceived,
                obj.packetssent = dataArray[i].Stats.PacketsSent,
                obj.bytessent = $.util.convertBytes(dataArray[i].Stats.BytesSent),
                obj.errorssent = dataArray[i].Stats.ErrorsSent,
                obj.discardpacketssent = dataArray[i].Stats.DiscardPacketsSent,
                obj.status = dataArray[i].Status,
                void 0 !== dataArray[i].Stats.CRCErrors && (obj.crc = dataArray[i].Stats.CRCErrors),
                void 0 !== dataArray[i].Stats.HECErrors && (obj.hec = dataArray[i].Stats.HECErrors),
                onlyUp && dataArray[i].Status && "UP" !== dataArray[i].Status || $.config.modules.myBox.statistics && $.config.modules.myBox.statistics.blacklistLayers && -1 !== $.inArray(dataArray[i].Alias, $.config.modules.myBox.statistics.blacklistLayers) || ("IP_BR_LAN" !== dataArray[i].Alias ? dataReturn.interfaces.push(obj) : dataReturn.wan = obj)
            }
            return dataReturn
        },
        formatLanStats: function(lan) {
            for (var x in lan)
                lan[x].bytesreceived = $.util.convertBytes(lan[x].bytesreceived),
                lan[x].bytessent = $.util.convertBytes(lan[x].bytessent);
            return lan
        },
        getStats: function() {
            var data = $.xmo.getValuesTree({
                wan: $.xpaths.stats.wan,
                lan: $.xpaths.stats.lan,
                atm: $.xpaths.stats.atm,
                sfpStatus: $.xpaths.stats.sfp.sfpStatus,
                ppp: $.xpaths.stats.ppp,
                ptm: $.xpaths.stats.ptm,
                xdsl: $.xpaths.stats.xdsl,
                sfp: $.xpaths.stats.sfp.stats
            })
              , formattedData = {
                lan: {},
                atm: {},
                ppp: {},
                ptm: {},
                xdsl: {},
                sfp: {}
            };
            formattedData.lan = Statistics.formatLanStats(data.lan),
            formattedData.atm = Statistics.formatStats(data.atm, !0).interfaces,
            formattedData.ptm = Statistics.formatStats(data.ptm, !0).interfaces,
            formattedData.xdsl = Statistics.formatxDSLStats(data.xdsl),
            formattedData.ppp = Statistics.formatStats(data.ppp, !0).interfaces,
            formattedData.sfp = Statistics.formatStats(data.sfp, !0).interfaces,
            formattedData.sfpStatus = "UP" === data.sfpStatus ? "UP" : "DOWN";
            var tmp = Statistics.formatStats(data.wan.stats, !1);
            formattedData.wan = tmp.wan,
            formattedData.wan.status = "UP" === data.wan.wanStatus && "ENABLED" === data.wan.conexionStatus || "UP" === data.sfpStatus ? "UP" : "DOWN",
            formattedData.wan.ethernetBitrate = $.util.formatConnectionSpeed(data.wan.ethernetBitRate);
            var upTime = moment.duration(data.wan.connectionTime, "seconds");
            return formattedData.wan.connectionTime = $.util.formatLeaseTime(upTime),
            formattedData.interfaceList = tmp.interfaces,
            formattedData
        },
        getInternetTrafficInfo: function() {
            var data = {
                totalBytessent: 0,
                totalBytesreceived: 0
            }
              , xpaths = $.xpaths.stats.wan.stats
              , interfaceList = $.xmo.getValuesTree(xpaths);
            return $.each(interfaceList, function(idx, ipInterface) {
                "IP_BR_LAN" !== ipInterface.Alias && (data.totalBytessent = data.totalBytessent + parseFloat(ipInterface.Stats.BytesSent),
                data.totalBytesreceived = data.totalBytesreceived + parseFloat(ipInterface.Stats.BytesReceived))
            }),
            data
        },
        getEthernetTrafficInfo: function() {
            var xpaths = $.xpaths.stats.lan
              , stats = $.xmo.getValuesTree(xpaths)
              , trafficFromEth1 = stats.eth1
              , trafficFromEth2 = stats.eth2
              , trafficFromEth3 = stats.eth3
              , trafficFromEth4 = stats.eth4;
            return {
                totalBytessent: parseFloat(trafficFromEth1.bytessent) + parseFloat(trafficFromEth2.bytessent) + parseFloat(trafficFromEth3.bytessent) + parseFloat(trafficFromEth4.bytessent),
                totalBytesreceived: parseFloat(trafficFromEth1.bytesreceived) + parseFloat(trafficFromEth2.bytesreceived) + parseFloat(trafficFromEth3.bytesreceived) + parseFloat(trafficFromEth4.bytesreceived)
            }
        },
        getWifiTrafficInfo: function() {
            var xpaths = {
                wl0: $.xpaths.stats.lan.wl0,
                wifi0: $.xpaths.stats.lan.wifi0
            }
              , stats = $.xmo.getValuesTree(xpaths);
            return {
                totalBytessent: parseFloat(stats.wl0.bytessent) + parseFloat(stats.wifi0.bytessent),
                totalBytesreceived: parseFloat(stats.wl0.bytesreceived) + parseFloat(stats.wifi0.bytesreceived)
            }
        },
        getTrafficInfo: function(type, options) {
            var calculate, error = !1;
            switch (type) {
            case "internet":
                calculate = this.getInternetTrafficInfo;
                break;
            case "wifi":
                calculate = this.getWifiTrafficInfo;
                break;
            case "ethernet":
                calculate = this.getEthernetTrafficInfo;
                break;
            default:
                calculate = function() {
                    options.error("unknown traffic type."),
                    error = !0
                }
            }
            try {
                var data = calculate();
                error || options.success(data)
            } catch (err) {
                options.error(err)
            }
        },
        getConnectivityStats: function(useCache) {
            var data = {};
            useCache && _connectivityCache || (_connectivityCache = $.xmo.getValuesTree({
                hostname: $.xpaths.mySagemcomBox.massStorage.samba.host,
                interfaceType: $.xpaths.healthCheck.interfaceType,
                conexionStatus: $.xpaths.stats.wan.conexionStatus,
                conexionIpv6Status: $.xpaths.stats.wan.conexionIpv6Status,
                sfpStatus: $.xpaths.stats.sfp.sfpStatus,
                sfpCurrentSpeed: $.xpaths.stats.sfp.sfpCurrentSpeed,
                backupUSBStatus: $.xpaths.stats.wan.backupUSBStatus,
                backupWanStatus: $.xpaths.stats.wan.backupWanStatus,
                dslStatus: $.xpaths.stats.wan.dslStatus,
                actualRateDown: $.xpaths.stats.xdsl.numeric.actualRateDown,
                actualRateUp: $.xpaths.stats.xdsl.numeric.actualRateUp,
                actualRateDown2: $.xpaths.stats.xdsl.numeric.actualRateDown2,
                actualRateUp2: $.xpaths.stats.xdsl.numeric.actualRateUp2,
                isPPPEnabled: $.xpaths.adminAdvanced.connectionType,
                addressingType: $.xpaths.stats.connectivity.addressingType,
                gwip: $.xpaths.mySagemcomBox.dhcp.ipv4Address,
                connectionMode: $.xpaths.mySagemcomBox.deviceInfo.docsis.cableModemStatus,
                extip: $.xpaths.adminAdvanced.ip,
                firmwareVersion: $.xpaths.mySagemcomBox.maintenance.intFirmwareVersion,
                externalFirmwareVersion: $.xpaths.mySagemcomBox.maintenance.firmwareVersion,
                upTime: $.xpaths.mySagemcomBox.deviceInfo.upTime,
                wan: $.xpaths.stats.wan
            })),
            data = _connectivityCache;
            var result = {};
            if (result.status = "ENABLED" === data.conexionStatus || "ENABLED" === data.conexionIpv6Status,
            result.conectionStatus = data.conectionStatus,
            result.connectionMode = data.connectionMode,
            result.backupWanStatus = data.backupWanStatus ? "UP" === data.backupWanStatus : "UP" === data.backupUSBStatus,
            result.isPPPEnabled = data.isPPPEnabled,
            result.interfaceType = data.interfaceType,
            result.hostname = data.hostname,
            result.dslStatus = "DORMANT" !== data.dslStatus,
            result.interfaceType = data.interfaceType,
            result.gwip = data.gwip,
            result.extip = data.extip,
            result.firmwareVersion = data.firmwareVersion,
            result.externalFirmwareVersion = data.externalFirmwareVersion,
            "UP" === data.sfpStatus || "UP" === data.wan.wanStatus && !result.dslStatus)
                result.dslStatus = null,
                result.wan = !0,
                result.sfpCurrentSpeed = data.sfpCurrentSpeed,
                result.sfpStatus = "UP" === data.sfpStatus;
            else {
                result.wan = !1;
                var actualRateDownTemp, actualRateUpTemp;
                $.config.modules.myBox.statistics.bondingAvailable === !1 ? (actualRateDownTemp = parseInt(data.actualRateDown || 0),
                actualRateUpTemp = parseInt(data.actualRateUp || 0)) : (data.actualRateDown2 = data.actualRateDown2 || 0,
                data.actualRateUp2 = data.actualRateUp2 || 0,
                actualRateDownTemp = parseInt(data.actualRateDown || 0) + parseInt(data.actualRateDown2),
                actualRateUpTemp = parseInt(data.actualRateUp || 0) + parseInt(data.actualRateUp2)),
                result.actualRateDown = parseFloat(actualRateDownTemp / 1e3).toFixed(1),
                result.actualRateUp = parseFloat(actualRateUpTemp / 1e3).toFixed(1),
                result.isUpDownStream = null !== data.actualRateDown || null !== data.actualRateUp
            }
            result.addressingType = data.addressingType;
            var tmp = Statistics.formatStats(data.wan.stats, !1);
            for (var index in tmp.interfaces)
                if ("IP_DATA" === tmp.interfaces[index].alias) {
                    result.IP_DATA = tmp.interfaces[index];
                    break
                }
            var upTime = moment.duration(data.upTime, "seconds");
            return result.upTime = $.util.formatLeaseTime(upTime),
            result
        },
        sessionTimeout: function() {
            var st = 10
              , sessioTimeoutXpath = $.xpaths.management.accountSettings.SessionTimeout;
            try {
                Auth.user.role.title === Auth.userRoles.mso.title && (sessioTimeoutXpath = $.xpaths.management.accountSettings.SessionTimeoutMSO);
                var data = $.xmo.getValuesTree({
                    SessionTimeout: sessioTimeoutXpath
                });
                data && data.SessionTimeout && (st = parseInt(data.SessionTimeout, null))
            } catch (e) {}
            return st - 1
        },
        isRIPv2Enable: function() {
            var xpathEnable = $.xpaths.main.ripv2
              , data = $.xmo.getValuesTree(xpathEnable);
            return !!data.enable
        }
    };
    return Statistics
}
]),
sboxApp.factory("Dmz", [function() {
    var cache = null
      , _updateCache = function() {
        cache = $.xmo.getValuesTree({
            Enable: $.xpaths.Device.NAT.PortMappings.DMZ.Enable,
            IpAddress: $.xpaths.Device.NAT.PortMappings.DMZ.InternalClient
        })
    }
      , Dmz = {
        updateCache: _updateCache,
        storedValues: function() {
            return _updateCache(),
            $.extend(!0, {}, cache)
        },
        save: function(data, options) {
            try {
                var dataMap = {}
                  , shouldUpdate = !1
                  , shouldDelete = !1;
                if (null !== cache.Enable)
                    dataMap[$.xpaths.Device.NAT.PortMappings.DMZ.Enable] = data.Enable,
                    data.Enable && data.IpAddress !== cache.IpAddress && (shouldUpdate = !0,
                    dataMap[$.xpaths.Device.NAT.PortMappings.DMZ.InternalClient] = data.IpAddress),
                    data.Enable === !1 && (shouldDelete = !0),
                    shouldUpdate && $.xmo.setValuesFlat(dataMap, {
                        sync: !1,
                        success: function() {
                            _updateCache(),
                            options.success()
                        },
                        error: options.error
                    }),
                    shouldDelete && $.xmo.delChild($.xpaths.Device.NAT.PortMappings.DMZ.remove, {
                        sync: !1,
                        success: function() {
                            _updateCache(),
                            options.success()
                        },
                        error: options.error
                    });
                else {
                    var dmzObj = {
                        PortMapping: {
                            Enable: !0,
                            Alias: "DMZ",
                            Service: "DMZ",
                            InternalClient: data.IpAddress,
                            Protocol: "ALL"
                        }
                    };
                    $.xmo.addChild($.xpaths.Device.NAT.PortMappings.DMZ.insert, dmzObj, {
                        sync: !1,
                        success: function() {
                            _updateCache(),
                            options.success()
                        },
                        error: options.error
                    })
                }
            } catch (err) {
                options.error()
            }
        }
    };
    return Dmz
}
]),
sboxApp.factory("Portmirror", [function() {
    var cache = null
      , _updateCache = function() {
        cache = $.xmo.getValuesTree({
            Enable: $.xpaths.Device.Managers.NetworkData.EnableMirroring
        })
    }
      , Portmirror = {
        updateCache: _updateCache,
        storedValues: function() {
            return _updateCache(),
            $.extend(!0, {}, cache)
        },
        save: function(data, options) {
            try {
                var dataMap = {};
                dataMap[$.xpaths.Device.Managers.NetworkData.EnableMirroring] = data.Enable,
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: function() {
                        _updateCache(),
                        options.success()
                    },
                    error: options.error
                })
            } catch (err) {
                options.error()
            }
        }
    };
    return Portmirror
}
]),
sboxApp.factory("DmzIPv6", [function() {
    var DmzIPv6 = {
        populate: function() {
            var content = {}
              , rules = $.xmo.getValuesTree($.xpaths.accessControl.dmzIPv6.rules);
            return rules && rules.length > 0 ? (content.Enable = !0,
            content.LocalHost = rules[0].Rule.DestIP) : (content.Enable = !1,
            content.LocalHost = ""),
            content
        },
        save: function(data, update, options) {
            try {
                if (update) {
                    var arrayUpdate = {};
                    arrayUpdate[$.xpaths.accessControl.dmzIPv6.update.DestIP] = data.LocalHost,
                    $.xmo.setValuesFlat(arrayUpdate),
                    options.success()
                } else if (data.Enable) {
                    var arrayPaths = []
                      , arrayInsertTemp = []
                      , arrayInsert = []
                      , obj = {
                        Enable: !0,
                        Alias: "DMZ",
                        Protocol: "ALL",
                        Target: "ACCEPT",
                        SourceInterface: "Device/IP/Interfaces/Interface[IP_DATA]",
                        DestInterface: "Device/IP/Interfaces/Interface[IP_BR_LAN]",
                        IPVersion: "6",
                        DestIP: data.LocalHost
                    };
                    arrayPaths.push($.xpaths.accessControl.dmzIPv6.insert),
                    arrayInsertTemp = [],
                    arrayInsertTemp.push({
                        Rule: obj
                    }),
                    arrayInsert.push(arrayInsertTemp),
                    $.xmo.addChildrenMultiple({
                        aparent: arrayPaths,
                        values: arrayInsert
                    }),
                    options.success()
                } else {
                    var delRule = [];
                    $(data).each(function() {
                        var elem = $.xpaths.accessControl.dmzIPv6.rules;
                        delRule.push(elem)
                    }),
                    $.xmo.delChildren(delRule),
                    options.success()
                }
            } catch (err) {
                options.error()
            }
        }
    };
    return DmzIPv6
}
]),
sboxApp.factory("MassStorage", ["ConnectedDevices", function(ConnectedDevices) {
    var MassStorage = {
        getData: function(uuid, os) {
            var logicVol = []
              , data = {};
            if (uuid) {
                ConnectedDevices.updateCache();
                var devices = ConnectedDevices.getUSBDevices();
                $.each(devices, function(x) {
                    parseInt(uuid, 10) === parseInt(devices[x].uid, 10) && (logicVol = devices[x].logicDevices)
                }),
                data.logicalDeviceUid = logicVol[0].uid,
                data.logicalEnable = logicVol[0].Enable
            }
            var d = $.xmo.getValuesTree($.xpaths.mySagemcomBox.massStorage);
            return data.statusUsb = d.usb,
            data.statusDLNA = d.dlna,
            data.dlnaMediaName = d.dlnaMediaName,
            data.routerModelName = d.routerModelName,
            data.macAddress = d.macAddress,
            data.statusSamba = d.samba.enable,
            data.displaySambaHost = d.samba.host,
            data.localDomains = d.samba.localDomains,
            -1 !== os.indexOf("win") ? (data.sambaIp = logicVol.length > 0 ? "\\\\" + d.samba.ip + "\\" + logicVol[0].SambaShareName : "\\\\" + d.samba.ip,
            $.config.showedpages.customMassStorageDomain && $.config.showedpages.customMassStorageDomain.enable ? data.sambaHost = logicVol.length > 0 ? "\\\\" + d.samba.host + "." + d.samba.localDomains + "\\" + logicVol[0].SambaShareName : "\\\\" + d.samba.host : data.sambaHost = logicVol.length > 0 ? "\\\\" + d.samba.host + "\\" + logicVol[0].SambaShareName : "\\\\" + d.samba.host) : (data.sambaIp = logicVol.length > 0 ? "smb://" + d.samba.ip + "/" + logicVol[0].SambaShareName : "smb://" + d.samba.ip,
            $.config.showedpages.customMassStorageDomain && $.config.showedpages.customMassStorageDomain.enable ? data.sambaHost = logicVol.length > 0 ? "smb://" + d.samba.host + "." + d.samba.localDomains + "/" + logicVol[0].SambaShareName : "smb://" + d.samba.host : data.sambaHost = logicVol.length > 0 ? "smb://" + d.samba.host + "/" + logicVol[0].SambaShareName : "smb://" + d.samba.host),
            data
        },
        saveUSBStorageConfig: function(data, options) {
            try {
                var dataSave = {};
                dataSave[$.xpaths.mySagemcomBox.massStorage.samba.host] = data.hostname,
                dataSave[$.xpaths.mySagemcomBox.massStorage.samba.localDomains] = data.localDomains,
                $.xmo.setValuesFlat(dataSave, options)
            } catch (e) {
                options.error(e)
            }
        },
        saveData: function(data, options) {
            var isEmpty = function(obj) {
                for (var prop in obj)
                    if (obj.hasOwnProperty(prop))
                        return !1;
                return !0
            };
            try {
                var dataSave = {};
                return void 0 !== data.statusUsb && null !== data.statusUsb && (dataSave[$.xpaths.mySagemcomBox.massStorage.usb] = data.statusUsb),
                void 0 !== data.statusDLNA && null !== data.statusDLNA && (dataSave[$.xpaths.mySagemcomBox.massStorage.dlna] = data.statusDLNA),
                void 0 !== data.statusSamba && null !== data.statusSamba && (dataSave[$.xpaths.mySagemcomBox.massStorage.samba.enable] = data.statusSamba),
                void 0 !== data.dlnaMediaName && null !== data.dlnaMediaName && (dataSave[$.xpaths.mySagemcomBox.massStorage.dlnaMediaName] = data.dlnaMediaName),
                isEmpty(dataSave) || $.xmo.setValuesFlat(dataSave, options),
                !0
            } catch (err) {
                return !1
            }
        }
    };
    return MassStorage
}
]),
sboxApp.factory("UPnP", function() {
    var UPnP = {
        cache: $.xmo.getValuesTree($.xpaths.mySagemcomBox.upnp),
        getUPnPData: function() {
            return $.xmo.getValuesTree($.xpaths.mySagemcomBox.upnp)
        },
        clearCache: function() {
            this.cache = null
        },
        saveUPnPData: function(upnpData, upnpList) {
            try {
                upnpList && upnpList.length > 0 && $.xmo.delChild($.xpaths.accessControl.portForwarding.upnpRules);
                var dataMap = {};
                return dataMap[$.xpaths.mySagemcomBox.upnp.status] = upnpData.status,
                dataMap[$.xpaths.mySagemcomBox.upnp.adPeriod] = upnpData.adPeriod,
                dataMap[$.xpaths.mySagemcomBox.upnp.adTTL] = upnpData.adTTL,
                $.xmo.setValuesFlat(dataMap),
                this.clearCache(),
                !0
            } catch (err) {
                return !1
            }
        }
    };
    return UPnP
}),
sboxApp.factory("PortForwarding", function() {
    var maintainExternalAddress = function() {
        return $.config.modules.portForwarding.maintainExternalAddress === !0
    }
      , _removeUPnPAndDMZ = function(rules) {
        var ya = [];
        rules = $.util.fixGetValuesTree(rules);
        for (var i = 0; i < rules.length; i++)
            "DMZ" !== rules[i].Service && "UPNP" !== rules[i].Creator && ya.push(rules[i]);
        return ya
    }
      , _getOnlyUPnP = function(rules) {
        var ye = [];
        rules = $.util.fixGetValuesTree(rules);
        for (var i = 0; i < rules.length; i++)
            "UPNP" === rules[i].Creator && ye.push(rules[i]);
        return ye
    }
      , _indexingPcpMappings = function(pcpMappings) {
        if (!pcpMappings)
            return {};
        var mappedRules = {};
        return $.each(pcpMappings, function(i, mapping) {
            /^nat\-\d+$/gi.test(mapping.Alias) && (mappedRules[mapping.Alias] = mapping)
        }),
        mappedRules
    }
      , _filterIpv6RulesHigh = function(ruleLow, rulesHigh) {
        var ruleFound = null;
        return angular.forEach(rulesHigh, function(rule) {
            rule.Rule.MacId === ruleLow.Rule.MacId && rule.Rule.DestPort === ruleLow.Rule.DestPort && rule.Rule.DestPortRangeMax === ruleLow.Rule.DestPortRangeMax && rule.Rule.Protocol === ruleLow.Rule.Protocol && (ruleFound = rule)
        }),
        ruleFound
    }
      , _filterDuplicatedRules = function(rulesLow, rulesHigh) {
        return angular.forEach(rulesLow, function(rule) {
            var ruleHigh = _filterIpv6RulesHigh(rule, rulesHigh);
            ruleHigh && (rule.Rule.levels = [{
                uid: rule.Rule.uid,
                level: "Low"
            }, {
                uid: ruleHigh.Rule.uid,
                level: "High"
            }])
        }),
        rulesLow
    }
      , _fillIPv6Rule = function(objectMap, data, level, uid) {
        objectMap[$.xpaths.accessControl.portForwarding.ipv6.save.Description.replace("#level#", level).replace("#", uid)] = data.Rule.Description,
        objectMap[$.xpaths.accessControl.portForwarding.ipv6.save.Enable.replace("#level#", level).replace("#", uid)] = data.Rule.Enable,
        objectMap[$.xpaths.accessControl.portForwarding.ipv6.save.MacId.replace("#level#", level).replace("#", uid)] = data.Rule.MacId,
        objectMap[$.xpaths.accessControl.portForwarding.ipv6.save.Protocol.replace("#level#", level).replace("#", uid)] = data.Rule.Protocol,
        objectMap[$.xpaths.accessControl.portForwarding.ipv6.save.DestPort.replace("#level#", level).replace("#", uid)] = data.Rule.DestPort,
        objectMap[$.xpaths.accessControl.portForwarding.ipv6.save.DestPortRangeMax.replace("#level#", level).replace("#", uid)] = data.Rule.DestPortRangeMax
    }
      , checkArrayBeforeSave = function(data) {
        var arrayReturn = {};
        return $.each(cache.portMappings, function(x, oldRule) {
            $.each($.xpaths.accessControl.portForwarding.update, function(attribute, xpath) {
                var baseXpath = xpath.replace("#", oldRule.uid)
                  , newValue = data[baseXpath];
                null !== oldRule[attribute] && void 0 !== newValue && null !== newValue && newValue !== oldRule[attribute] && (arrayReturn[baseXpath] = newValue)
            })
        }),
        arrayReturn
    }
      , model = $.xpaths.accessControl.portForwarding.validationData;
    model.portMappings = $.xpaths.accessControl.portForwarding.portmappings,
    model.upnpStatus = $.xpaths.mySagemcomBox.upnp.status;
    var cache, megaCache, updateCache = function(refresh) {
        return (void 0 === cache || refresh) && (cache = $.xmo.getValuesTree(model)),
        cache
    };
    updateCache();
    var PortForwarding = {
        lastRule: 0,
        data: [],
        arrayUpdate: [],
        arrayInsert: [],
        arrayInsertPaths: [],
        clearCache: function() {
            cache = void 0,
            megaCache = void 0
        },
        getValidationData: function() {
            return updateCache(),
            cache
        },
        getModel: function() {
            var model = {
                Enable: !0,
                Alias: "",
                Description: "",
                Protocol: "",
                Service: "",
                RemoteHost: "",
                InternalClient: "",
                ExternalPort: "",
                ExternalPortEndRange: "",
                InternalPort: "",
                Status: ""
            };
            return maintainExternalAddress() && (model.ExternalAddress = ""),
            model
        },
        populate: function(type, useCache) {
            updateCache(!useCache);
            var array = cache.portMappings;
            this.data = [];
            for (var i = 0; i < array.length; i++)
                type ? array[i].Alias.contains($.constants.forbiddenAliases.dmz) || array[i].Alias.contains($.constants.GAMES_PREFIX) || -1 !== $.inArray(array[i].Creator, $.config.modules.portForwarding.rulesNotDisplayed) || this.data.push(array[i]) : array[i].Alias.contains($.constants.GAMES_PREFIX) && -1 === $.inArray(array[i].Creator, $.config.modules.portForwarding.rulesNotDisplayed) && this.data.push(array[i]);
            return this.data
        },
        save: function(arrayObjects, options) {
            try {
                var data = null;
                return this.arrayUpdate = {},
                this.arrayInsert = [],
                this.lastRule = 0,
                updateCache(!0),
                $.each(arrayObjects, function(i, obj) {
                    if (data = obj,
                    !PortForwarding.saveCheckParams(data))
                        throw new Error("Invalid parameter");
                    PortForwarding.generateArraySave(data)
                }),
                !this.arrayInsert.length && $.isEmptyObject(this.arrayUpdate) ? !1 : (this.arrayUpdate = checkArrayBeforeSave(this.arrayUpdate),
                $.isEmptyObject(this.arrayUpdate) || $.xmo.setValuesFlat(this.arrayUpdate, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                this.arrayInsert.length && $.xmo.addChildrenMultiple({
                    aparent: this.arrayInsertPaths,
                    values: this.arrayInsert
                }, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !this.arrayInsert.length && $.isEmptyObject(this.arrayUpdate) && options.success(),
                !0)
            } catch (e) {
                return !1
            }
        },
        saveCheckParams: function(data) {
            return void 0 === data.Protocol || void 0 === data.Description || void 0 === data.RemoteHost || void 0 === data.InternalClient || void 0 === data.ExternalPortEndRange || void 0 === data.InternalPort || void 0 === data.ExternalPort ? !1 : !0
        },
        generateArraySave: function(data) {
            if (void 0 !== data.uid && null !== this.search({
                uid: data.uid
            }))
                this.arrayUpdate[$.xpaths.accessControl.portForwarding.update.Enable.replace("#", data.uid)] = data.Enable,
                this.arrayUpdate[$.xpaths.accessControl.portForwarding.update.Protocol.replace("#", data.uid)] = data.Protocol,
                this.arrayUpdate[$.xpaths.accessControl.portForwarding.update.Description.replace("#", data.uid)] = data.Description,
                this.arrayUpdate[$.xpaths.accessControl.portForwarding.update.RemoteHost.replace("#", data.uid)] = data.RemoteHost,
                maintainExternalAddress() && (this.arrayUpdate[$.xpaths.accessControl.portForwarding.update.ExternalAddress.replace("#", data.uid)] = data.ExternalAddress),
                this.arrayUpdate[$.xpaths.accessControl.portForwarding.update.InternalClient.replace("#", data.uid)] = data.InternalClient,
                this.arrayUpdate[$.xpaths.accessControl.portForwarding.update.ExternalPortEndRange.replace("#", data.uid)] = data.ExternalPortEndRange,
                this.arrayUpdate[$.xpaths.accessControl.portForwarding.update.InternalPort.replace("#", data.uid)] = parseInt(data.InternalPort, 10),
                this.arrayUpdate[$.xpaths.accessControl.portForwarding.update.ExternalPort.replace("#", data.uid)] = parseInt(data.ExternalPort, 10),
                this.arrayUpdate[$.xpaths.accessControl.portForwarding.update.Service.replace("#", data.uid)] = data.Service;
            else if (void 0 === data.uid) {
                var arrayPortMapping = {
                    Enable: data.Enable,
                    Service: data.Service,
                    Protocol: data.Protocol,
                    Description: data.Description,
                    RemoteHost: data.RemoteHost,
                    InternalClient: data.InternalClient,
                    ExternalPortEndRange: data.ExternalPortEndRange,
                    InternalPort: data.InternalPort,
                    ExternalPort: data.ExternalPort,
                    Alias: data.Alias ? data.Alias : this.generateNextAlias()
                }
                  , arrayInsertTemp = [];
                maintainExternalAddress() && (arrayPortMapping.ExternalAddress = data.ExternalAddress),
                arrayInsertTemp.push({
                    PortMapping: arrayPortMapping
                }),
                this.arrayInsert.push(arrayInsertTemp),
                this.arrayInsertPaths.push($.xpaths.accessControl.portForwarding.portmappings)
            }
        },
        generateNextAlias: function() {
            for (var currentRule = null, nextRule = null, array = $.util.fixGetValuesTree(cache.portMappings), i = 0; i < array.length; i++)
                currentRule = parseInt(array[i].Alias.substr($.constants.PORTFORWARDING_PREFIX.length)),
                array[i].Alias.indexOf($.constants.PORTFORWARDING_PREFIX) > -1 && currentRule > parseInt(this.lastRule) && (this.lastRule = currentRule);
            return nextRule = parseInt(this.lastRule) + 1,
            this.lastRule = nextRule,
            $.constants.PORTFORWARDING_PREFIX + nextRule
        },
        search: function(filter) {
            var result = null
              , array = cache.portMappings;
            if (filter.uid)
                for (var obj in array)
                    array[obj].uid === filter.uid && (result = array[obj]);
            if (filter.InternalClient)
                for (var item in array)
                    array[item].InternalClient === filter.InternalClient && (result = array[item]);
            return result
        },
        remove: function(pfObjs) {
            var delRule = []
              , result = !0;
            if ($.each(pfObjs, function(i, pfObj) {
                var xpath = $.xpaths.accessControl.portForwarding.uid.replace("#", pfObj.uid);
                delRule.push(xpath)
            }),
            delRule.length)
                try {
                    $.xmo.delChildren(delRule),
                    result = !0
                } catch (e) {
                    result = !1
                }
            else
                result = !1;
            return result
        },
        megaPopulate: function(useCache) {
            if (!useCache || !megaCache) {
                var dataModel = {
                    ipv4Rules: $.xpaths.accessControl.portForwarding.portmappings,
                    ipv6RulesLow: $.xpaths.accessControl.portForwarding.ipv6.rulesLow,
                    ipv6RulesHigh: $.xpaths.accessControl.portForwarding.ipv6.rulesHigh,
                    validation: $.xpaths.accessControl.portForwarding.validationData,
                    externalIpDSLite: $.xpaths.accessControl.portForwarding.externalIpDSLite,
                    externalIpIPv4Dual: $.xpaths.accessControl.portForwarding.externalIpIPv4Dual,
                    connectionType: $.xpaths.management.accountSettings.connectionType.replace("#", $.xmo.client.user).replace("$", $.xmo.client._sessionId),
                    remoteAddress: $.xpaths.management.accountSettings.currentSessionIp.replace("#", $.xmo.client.user).replace("$", $.xmo.client._sessionId),
                    pcpEnable: $.xpaths.accessControl.portForwarding.pcpEnable,
                    pcpMappings: $.xpaths.accessControl.portForwarding.pcpMappings,
                    hosts: $.xpaths.main.cacheable.hosts
                };
                megaCache = $.xmo.getValuesTree(dataModel),
                megaCache.upnpRules = _getOnlyUPnP(megaCache.ipv4Rules),
                megaCache.ipv4Rules = _removeUPnPAndDMZ(megaCache.ipv4Rules),
                megaCache.pcpMappings = _indexingPcpMappings(megaCache.pcpMappings);
                var ipv6RulesLow = $.util.fixGetValuesTree(megaCache.ipv6RulesLow)
                  , ipv6RulesHigh = $.util.fixGetValuesTree(megaCache.ipv6RulesHigh);
                megaCache.ipv6Rules = _filterDuplicatedRules(ipv6RulesLow, ipv6RulesHigh),
                "IPV6" === megaCache.connectionType ? $.each(megaCache.hosts, function(ind, obj) {
                    $.each(obj.IPv6Addresses, function(ind2, ipv6Obj) {
                        ipv6Obj.IPAddress === megaCache.remoteAddress && (megaCache.remoteAddressIPv4 = obj.IPAddress)
                    })
                }) : megaCache.remoteAddressIPv4 = megaCache.remoteAddress
            }
            return megaCache
        },
        getIpv6RuleModel: function() {
            return {
                Enable: !0,
                Description: "",
                Target: "ACCEPT",
                IPVersion: 6,
                SourceInterface: "Device/IP/Interfaces/Interface[IP_DATA]",
                DestInterface: "Device/IP/Interfaces/Interface[IP_BR_LAN]",
                DestPort: 0,
                DestPortRangeMax: 0,
                MacId: "",
                Protocol: $.constants.protocols.TCP
            }
        },
        getOnlyIPv6Rules: function() {
            var xpaths = {
                ipv6RulesLow: $.xpaths.accessControl.portForwarding.ipv6.rulesLow,
                ipv6RulesHigh: $.xpaths.accessControl.portForwarding.ipv6.rulesHigh
            }
              , cache = $.xmo.getValuesTree(xpaths)
              , ipv6RulesLow = $.util.fixGetValuesTree(cache.ipv6RulesLow)
              , ipv6RulesHigh = $.util.fixGetValuesTree(cache.ipv6RulesHigh);
            return cache.ipv6Rules = _filterDuplicatedRules(ipv6RulesLow, ipv6RulesHigh),
            cache.ipv6Rules
        },
        getOnlyIPv4Rules: function() {
            var tmp = $.xmo.getValuesTree($.xpaths.accessControl.portForwarding.portmappings);
            return _removeUPnPAndDMZ(tmp)
        },
        saveIPv6Rule: function(data, options) {
            try {
                var ruleReference, _arrayInsert = [], _arrayInsertPaths = [], arrayInsertTemp = [], _objectMap = {};
                ruleReference = this.getIpv6RuleModel();
                var levels = ["Low", "High"];
                angular.forEach(data, function(rule) {
                    rule.Rule.uid ? rule.Rule.levels ? angular.forEach(rule.Rule.levels, function(level) {
                        _fillIPv6Rule(_objectMap, rule, level.level, level.uid)
                    }) : _fillIPv6Rule(_objectMap, rule, levels[0], rule.Rule.uid) : (arrayInsertTemp = [],
                    rule.Rule.IPVersion = ruleReference.IPVersion,
                    rule.Rule.Target = ruleReference.Target,
                    rule.Rule.SourceInterface = ruleReference.SourceInterface,
                    rule.Rule.DestInterface = ruleReference.DestInterface,
                    arrayInsertTemp.push({
                        Rule: rule.Rule
                    }),
                    angular.forEach(levels, function(level) {
                        _arrayInsert.push(arrayInsertTemp),
                        _arrayInsertPaths.push($.xpaths.accessControl.portForwarding.ipv6.save.list.replace("#level#", level))
                    }))
                }),
                _arrayInsert.length > 0 && $.xmo.addChildrenMultiple({
                    aparent: _arrayInsertPaths,
                    values: _arrayInsert
                }, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                $.isEmptyObject(_objectMap) || $.xmo.setValuesFlat(_objectMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (e) {
                options.error()
            }
        },
        removeIPv6Rule: function(data, options) {
            try {
                var dataMap = [];
                data.levels ? angular.forEach(data.levels, function(level) {
                    dataMap.push($.xpaths.accessControl.portForwarding.ipv6.remove.replace("#level#", level.level).replace("#", level.uid))
                }) : dataMap.push($.xpaths.accessControl.portForwarding.ipv6.remove.replace("#level#", "Low").replace("#", data.uid)),
                $.xmo.delChildren(dataMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (e) {
                options.error()
            }
        },
        getConnectedMac: function(ip) {
            var tmp = $.util.fixGetValuesTree($.xmo.getValuesTree($.xpaths.accessControl.portForwarding.connectedMac.replace("#", ip)));
            return tmp[0]
        },
        getRangeParameters: function() {
            return $.xmo.getValuesTree($.xpaths.accessControl.portForwarding.portRangeConfig)
        }
    };
    return PortForwarding
}),
sboxApp.factory("NatMapping", function() {
    var cache, model = {
        natMappings: $.xpaths.accessControl.natMapping.natMappings,
        ripDefaultGateways: $.xpaths.accessControl.natMapping.blacklisted.ripDefaultGateways,
        wanIP: $.xpaths.mySagemcomBox.deviceInfo.publicIpv4
    }, updateCache = function(refresh) {
        return (void 0 === cache || refresh) && (cache = $.xmo.getValuesTree(model)),
        cache.natMappings
    };
    updateCache();
    var NatMapping = {
        lastRule: 0,
        data: [],
        arrayUpdate: [],
        arrayInsert: [],
        arrayInsertPaths: [],
        getModel: function() {
            var model = {
                Enable: !0,
                Alias: "",
                ExernelAdressNAT: "",
                SourceIP: ""
            };
            return model
        },
        populate: function(type, useCache) {
            return updateCache(!useCache)
        },
        getBlacklistedIPs: function() {
            return updateCache(),
            {
                ripDefaultGateways: cache.ripDefaultGateways,
                wanIP: cache.wanIP
            }
        },
        save: function(arrayObjects, options) {
            try {
                var data = null;
                return this.arrayUpdate = {},
                this.arrayInsert = [],
                this.lastRule = 0,
                updateCache(!0),
                $.each(arrayObjects, function(i, obj) {
                    if (data = obj,
                    !NatMapping.saveCheckParams(data))
                        throw new Error("Invalid parameter");
                    NatMapping.generateArraySave(data)
                }),
                !this.arrayInsert.length && $.isEmptyObject(this.arrayUpdate) ? !1 : ($.isEmptyObject(this.arrayUpdate) || $.xmo.setValuesFlat(this.arrayUpdate, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                this.arrayInsert.length && $.xmo.addChildrenMultiple({
                    aparent: this.arrayInsertPaths,
                    values: this.arrayInsert
                }, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0)
            } catch (e) {
                return !1
            }
        },
        getDynNatAddr: function() {
            var externalAdressNat = $.xmo.getValuesTree($.xpaths.accessControl.natMapping.update.ExernelAdressNAT.replace("#", "1"));
            return externalAdressNat
        },
        saveDynNatAddress: function(DynNatAddr, options) {
            this.dynNatUpdate = {},
            this.dynNatUpdate[$.xpaths.accessControl.natMapping.update.ExernelAdressNAT.replace("#", "1")] = DynNatAddr,
            this.dynNatUpdate[$.xpaths.accessControl.natMapping.update.ExernelAdressNAT.replace("#", "3")] = DynNatAddr,
            this.dynNatUpdate[$.xpaths.accessControl.natMapping.update.ExernelAdressNAT.replace("#", "4")] = DynNatAddr,
            this.dynNatUpdate[$.xpaths.accessControl.natMapping.update.ExernelAdressNAT.replace("#", "5")] = DynNatAddr;
            try {
                $.isEmptyObject(this.dynNatUpdate) || $.xmo.setValuesFlat(this.dynNatUpdate, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (e) {
                return !1
            }
        },
        saveCheckParams: function(data) {
            return void 0 === data.ExernelAdressNAT || void 0 === data.SourceIP ? !1 : !0
        },
        generateArraySave: function(data) {
            if (void 0 !== data.uid && null !== this.search({
                uid: data.uid
            }))
                this.arrayUpdate[$.xpaths.accessControl.natMapping.update.Enable.replace("#", data.uid)] = data.Enable,
                this.arrayUpdate[$.xpaths.accessControl.natMapping.update.ExernelAdressNAT.replace("#", data.uid)] = data.ExernelAdressNAT,
                this.arrayUpdate[$.xpaths.accessControl.natMapping.update.SourceIP.replace("#", data.uid)] = data.SourceIP;
            else if (void 0 === data.uid) {
                var arrayNatMapping = {
                    Enable: data.Enable,
                    ExernelAdressNAT: data.ExernelAdressNAT,
                    SourceIP: data.SourceIP,
                    Interface: "Device/IP/Interfaces/Interface[IP_DATA]",
                    Alias: data.Alias ? data.Alias : this.generateNextAlias()
                }
                  , arrayInsertTemp = [];
                arrayInsertTemp.push({
                    InterfaceSetting: arrayNatMapping
                }),
                this.arrayInsert.push(arrayInsertTemp),
                this.arrayInsertPaths.push($.xpaths.accessControl.natMapping.natMappings)
            }
        },
        generateNextAlias: function() {
            for (var currentRule = null, nextRule = null, array = $.util.fixGetValuesTree(cache.natMappings), i = 0; i < array.length; i++)
                currentRule = parseInt(array[i].Alias.substr($.constants.NATMAPPING_PREFIX.length)),
                array[i].Alias.indexOf($.constants.NATMAPPING_PREFIX) > -1 && currentRule > parseInt(this.lastRule) && (this.lastRule = currentRule);
            return nextRule = parseInt(this.lastRule) + 1,
            this.lastRule = nextRule,
            $.constants.NATMAPPING_PREFIX + nextRule
        },
        search: function(filter) {
            var result = null
              , array = cache.natMappings;
            if (filter.uid)
                for (var obj in array)
                    array[obj].uid === filter.uid && (result = array[obj]);
            return result
        },
        remove: function(pfObjs) {
            var delRule = []
              , result = !0;
            if ($.each(pfObjs, function(i, pfObj) {
                var xpath = $.xpaths.accessControl.natMapping.remove.replace("#", pfObj.uid);
                delRule.push(xpath)
            }),
            delRule.length)
                try {
                    $.xmo.delChildren(delRule),
                    result = !0
                } catch (e) {
                    result = !1
                }
            else
                result = !1;
            return result
        }
    };
    return NatMapping
}),
sboxApp.factory("DeviceInfo", ["WiFi", "Statistics", "$http", "Gpon", function(WiFi, Statistics, $http, Gpon) {
    var cacheHash = (Math.random() + "").split(".")[1]
      , _normalizeIpv6DnsServers = function(dnsServers) {
        return dnsServers || (dnsServers = "-"),
        $.isArray(dnsServers) && (dnsServers = dnsServers.join(",")),
        dnsServers = dnsServers.trim(),
        dnsServers = dnsServers.replace(/\s+/g, ","),
        dnsServers = $.map(dnsServers.split(","), $.util.simplifyIPv6).join(",")
    }
      , memoryTotal = 0
      , memoryUsage = 0
      , memoryAverage = []
      , DeviceInfo = {
        fetchUiVersion: function(callback) {
            $http.get("js/json/version.json?cacheBuster=" + cacheHash, {
                cache: !0
            }).success(callback)
        },
        getInfo: function() {
            var xpaths = $.xpaths.mySagemcomBox.deviceInfo;
            xpaths.sfpCurrentSpeed = $.xpaths.stats.sfp.sfpCurrentSpeed;
            var xmoData = $.xmo.getValuesTree(xpaths)
              , result = {};
            $.xmo.onPeriodicValue($.xpaths.mySagemcomBox.deviceInfo.memoryStatus, this.updateMemory),
            result.interfaceIpdata = $.xmo.getValuesTree($.xpaths.wizard.wanStatus),
            result.deviceName1 = xmoData.deviceName1,
            result.deviceName2 = xmoData.deviceName2,
            result.serialNumber = xmoData.serialNumber,
            result.hardwareVersion = xmoData.hardwareVersion,
            result.softwareVersion = xmoData.softwareVersion,
            result.modelName = xmoData.modelName,
            result.docsis = xmoData.docsis,
            result.guiVersion = "-",
            result.driverVersion = xmoData.driverVersion,
            result.datapumpVersion = xmoData.datapumpVersion,
            result.wanMacAddress = xmoData.wanMacAddress;
            var linkIPv6Test = xmoData.globalLinkIpv6 ? xmoData.globalLinkIpv6 : []
              , globalIpv6InterfaceArr = $.util.getGlobalWanIpv6(linkIPv6Test);
            globalIpv6InterfaceArr && globalIpv6InterfaceArr[globalIpv6InterfaceArr.length - 1] ? result.globalLinkIpv6 = globalIpv6InterfaceArr[globalIpv6InterfaceArr.length - 1].IPAddress : result.globalLinkIpv6 = "",
            result.defaultLinkIpv6 = xmoData.defaultLinkIpv6 || "-",
            xmoData.dnsServerAddressIpv6 = _normalizeIpv6DnsServers(xmoData.dnsServerAddressIpv6),
            result.dnsServerAddressIpv6 = xmoData.dnsServerAddressIpv6,
            result.linkLocalIpv6 = xmoData.linkLocalIpv6,
            memoryTotal = xmoData.memoryTotal ? xmoData.memoryTotal : 0;
            var memoryCalc = xmoData.memoryTotal ? memoryTotal - xmoData.memoryFree : 0;
            memoryUsage = memoryCalc > 0 ? memoryCalc : 0,
            result.memoryUsage = xmoData.memoryTotal ? Math.round(100 * memoryUsage / memoryTotal) + "%" : "--",
            memoryAverage.push(memoryUsage),
            result.cpuLoad = xmoData.cpuLoadUsage + "%",
            result.loadAverage = xmoData.loadAverage && xmoData.loadAverage.LoadAverage ? xmoData.loadAverage.LoadAverage : {},
            result.loadAverage.Load1 = xmoData.loadAverage && xmoData.loadAverage.LoadAverage ? xmoData.loadAverage.LoadAverage.Load1 >= 2 ? "100%" : Math.round(50 * xmoData.loadAverage.LoadAverage.Load1) + "%" : "0%",
            result.loadAverage.Load5 = xmoData.loadAverage && xmoData.loadAverage.LoadAverage ? xmoData.loadAverage.LoadAverage.Load5 >= 2 ? "100%" : Math.round(50 * xmoData.loadAverage.LoadAverage.Load5) + "%" : "0%",
            result.loadAverage.Load15 = xmoData.loadAverage && xmoData.loadAverage.LoadAverage ? xmoData.loadAverage.LoadAverage.Load15 >= 2 ? "100%" : Math.round(50 * xmoData.loadAverage.LoadAverage.Load15) + "%" : "0%";
            var upTime = moment.duration(xmoData.upTime, "seconds");
            if (result.upTime = $.util.formatLeaseTime(upTime),
            result.uptimeInSeconds = xmoData.upTime,
            result.docsis = xmoData.docsis,
            result.localIpv4 = xmoData.localIpv4,
            result.localSubnetMask = xmoData.localSubnetMask,
            result.localEthernetMac = xmoData.localEthernetMac,
            result.publicIpv4 = xmoData.publicIpv4,
            result.publicIpv4MAPT = xmoData.publicIpv4MAPT,
            result.publicSubnetMask = xmoData.publicSubnetMask,
            result.ipv4Duration = xmoData.ipv4Duration,
            result.defaultGateway = xmoData.defaultGateway,
            result.ipVersion = "",
            "ENABLED" === xmoData.ipv4Enable && (result.ipVersion = "IPv4"),
            "ENABLED" === xmoData.ipv6Enable && ("" !== result.ipVersion ? result.ipVersion = "IPv4/IPv6" : result.ipVersion = "IPv6"),
            result.nat = xmoData.nat === !0 ? "ENABLED" : "DISABLED",
            result.primaryMode = xmoData.primaryMode ? xmoData.primaryMode.replace("_", " ") : "",
            xmoData.dnsStatic1Enable)
                result.primaryDns = xmoData.dnsStatic1,
                result.secondaryDns = xmoData.dnsStatic1Enable ? xmoData.dnsStatic2 : "";
            else {
                var t = xmoData.dns ? xmoData.dns.split(",") : [];
                result.primaryDns = t[0] ? t[0] : "",
                result.secondaryDns = t[1] ? t[1] : ""
            }
            result.linkLocalIpv6 = $.util.formatLongWords(xmoData.linkLocalIpv6),
            result.linkGlobalIpv6 = $.util.formatLongWords(xmoData.globalLinkIpv6),
            result.wifi = {};
            var sufixes = ["wifi24", "wifi5", "wifi24Guest", "wifi5Guest"];
            $.each(sufixes, function(i, obj) {
                return xmoData[obj].ssid ? (result.wifi[obj] = {},
                result.wifi[obj].ssid = xmoData[obj].ssid,
                result.wifi[obj].macAddress = xmoData[obj].macAddress,
                upTime = moment.duration(xmoData.upTime - xmoData[obj].upTime, "seconds"),
                result.wifi[obj].status = "UP" === xmoData[obj].status ? "Enabled" : "Disabled",
                result.wifi[obj].uptime = "UP" === xmoData[obj].status ? $.util.formatLeaseTime(upTime) : "--",
                result.wifi[obj].operatingMode = xmoData[obj].operatingMode,
                result.wifi[obj].channelBandwidth = xmoData[obj].channelBandwidth,
                result.wifi[obj].maxSpeed = WiFi.getWifiSpeed(xmoData[obj].maxBitRate),
                void (result.wifi[obj].securityMode = $.constants.securityModesLabel[xmoData[obj].securityMode])) : !0
            }),
            result.telephones = angular.copy(xmoData.telephones),
            result.xdsl = Statistics.formatxDSLStats(xmoData.xdsl),
            xmoData.xdsl.interfaceType.contains("DSL") ? result.xdsl.wanConnectivity = !0 : result.xdsl.wanConnectivity = "ENABLED" === xmoData.wan.conexionStatus && "UP" !== xmoData.wan.wanStatus && "UP" !== xmoData.sfp.sfpStatus,
            upTime = moment.duration(xmoData.xdsl.connectionTimeDsl, "seconds"),
            result.xdsl.connectionTimeDsl = $.util.formatLeaseTime(upTime);
            var ipv4time = moment.duration(xmoData.ipv4Duration, "seconds");
            return result.ipv4Duration = $.util.formatLeaseTime(ipv4time),
            result.wanBitrate = "0",
            "UP" === xmoData.wan.wanStatus && (result.wanBitrate = xmoData.wan.bitrate),
            xmoData.sfp && "UP" === xmoData.sfp.sfpStatus && (result.wanBitrate = xmoData.sfpCurrentSpeed),
            xmoData.xdsl && xmoData.xdsl.numeric && (result.xdsl.dataPath = xmoData.xdsl.numeric.dataPath,
            result.xdsl.dataPathus = xmoData.xdsl.numeric.dataPathus,
            result.xdsl.interLeaveDepth = xmoData.xdsl.numeric.interLeaveDepth,
            result.xdsl.interLeaveDepthus = xmoData.xdsl.numeric.interLeaveDepthus,
            result.xdsl.interLeaveDelay = xmoData.xdsl.numeric.interLeaveDelay,
            result.xdsl.interLeaveDelayus = xmoData.xdsl.numeric.interLeaveDelayus,
            result.xdsl.inp = xmoData.xdsl.numeric.inp,
            result.xdsl.inpus = xmoData.xdsl.numeric.inpus,
            result.xdsl.lossOfSignal = xmoData.xdsl.numeric.lossOfSignal,
            result.xdsl.lossOfSignalus = xmoData.xdsl.numeric.lossOfSignalus,
            result.xdsl.firmwareVersion = xmoData.datapumpVersion,
            result.xdsl.currentProfile = xmoData.xdsl.profile),
            xmoData.xdsl2 && xmoData.xdsl2.numeric && (result.xdsl2 = Statistics.formatxDSLStats(xmoData.xdsl2),
            xmoData.xdsl2.interfaceType && xmoData.xdsl2.interfaceType.contains("DSL") ? result.xdsl2.wanConnectivity = !0 : result.xdsl2.wanConnectivity = "ENABLED" === xmoData.wan.conexionStatus && "UP" !== xmoData.wan.wanStatus && "UP" !== xmoData.sfp.sfpStatus,
            result.xdsl2.wanConnectivity = !0,
            upTime = moment.duration(xmoData.xdsl2.connectionTimeDsl, "seconds"),
            result.xdsl2.connectionTimeDsl = $.util.formatLeaseTime(upTime),
            result.xdsl2.dataPath = xmoData.xdsl2.numeric.dataPath,
            result.xdsl2.dataPathus = xmoData.xdsl2.numeric.dataPathus,
            result.xdsl2.interLeaveDepth = xmoData.xdsl2.numeric.interLeaveDepth,
            result.xdsl2.interLeaveDepthus = xmoData.xdsl2.numeric.interLeaveDepthus,
            result.xdsl2.interLeaveDelay = xmoData.xdsl2.numeric.interLeaveDelay,
            result.xdsl2.interLeaveDelayus = xmoData.xdsl2.numeric.interLeaveDelayus,
            result.xdsl2.inp = xmoData.xdsl2.numeric.inp,
            result.xdsl2.inpus = xmoData.xdsl2.numeric.inpus,
            result.xdsl2.lossOfSignal = xmoData.xdsl2.numeric.lossOfSignal,
            result.xdsl2.lossOfSignalus = xmoData.xdsl2.numeric.lossOfSignalus,
            result.xdsl2.firmwareVersion = xmoData.xdsl2.datapumpVersion,
            result.xdsl2.currentProfile = xmoData.xdsl2.profile),
            result.wanStatus = "ENABLED" === xmoData.wan.conexionStatus && "UP" === xmoData.wan.wanStatus || "UP" === xmoData.sfp.sfpStatus ? "Connected" : "Disconnected",
            upTime = moment.duration(xmoData.wan.connectionUpTime, "seconds"),
            result.wanConnectionTime = $.util.formatLeaseTime(upTime),
            result.gponStatus = Gpon.getData(),
            result
        },
        updateMemory: function(resp) {
            resp && "number" == typeof resp && (memoryUsage = memoryTotal && memoryTotal > 0 ? memoryTotal - resp : 0,
            memoryUsage = memoryUsage > 0 ? memoryUsage : 0,
            memoryAverage.push(memoryUsage))
        },
        getMemoryAverage: function() {
            var sumValue = 0;
            return $.each(memoryAverage, function(i, value) {
                sumValue += value
            }),
            sumValue /= memoryAverage.length,
            memoryTotal && memoryTotal > 0 ? Math.round(100 * sumValue / memoryTotal) + "%" : "--"
        },
        getMemoryUsage: function() {
            return memoryTotal && memoryTotal > 0 ? Math.round(100 * memoryUsage / memoryTotal) + "%" : "--"
        }
    };
    return DeviceInfo
}
]);
var Log = function() {
    var system = {
        severity: null,
        date: null,
        domain: null,
        module: null,
        message: null,
        description: null,
        getSeverity: function() {
            return this.severity
        },
        getDate: function() {
            return this.date
        },
        getDomain: function() {
            return this.domain
        },
        getModule: function() {
            return this.module
        },
        getDescription: function() {
            return this.description
        },
        getMessage: function() {
            return this.message
        },
        setSeverity: function(x) {
            this.severity = x
        },
        setDate: function(x) {
            this.date = x
        },
        setDomain: function(x) {
            this.domain = x
        },
        setModule: function(x) {
            this.module = x
        },
        setDescription: function(x) {
            this.description = x
        },
        setMessage: function(x) {
            this.message = x
        }
    };
    return system
};
sboxApp.factory("SystemLog", ["$http", "$q", "$filter", "Auth", function($http, $q, $filter, Auth) {
    var $f = $filter("filter")
      , _cache = function(logType) {
        switch (logType) {
        case "firewall":
            return $.xmo.getValuesTree($.xpaths.mySagemcomBox.maintenance.securityLog);
        default:
            return $.xmo.getValuesTree($.xpaths.mySagemcomBox.maintenance.logs)
        }
    }
      , _generateArrayLog = function(dataLogsArray, logType, severity, regexDate) {
        var tmpLogs = [];
        return angular.forEach(dataLogsArray, function(elem) {
            var logLine = elem;
            if ("" === logLine)
                return !0;
            var date = logLine.match(regexDate);
            null !== date && (date = date[0]);
            var logLineSplit = logLine.replace(/  /g, " ").split(" ")
              , level = ""
              , module = ""
              , domain = ""
              , message = "";
            "operator" === logType ? (level = logLineSplit[2],
            module = logLineSplit[3],
            message = logLineSplit.splice(5, logLineSplit.length - 5).join(" ")) : (level = logLineSplit[4].split(".")[1],
            void 0 === level && (level = logLineSplit[4].split(":")[1]),
            module = logLineSplit[5].substring(0, logLineSplit[5].indexOf(":")).replace(/\[.*\]/g, ""),
            domain = logLineSplit[3],
            message = logLineSplit.splice(6, logLineSplit.length - 5).join(" "));
            var leLog = new Log;
            (null === severity || void 0 === severity) && (severity = 0);
            var mSeverity = severity;
            if ("operator" === logType)
                $.each($.constants.logSeverity, function(i, elem) {
                    (elem.operatorType === level || -1 !== elem.operatorType.indexOf(level)) && (mSeverity = elem.val,
                    leLog.setSeverity(mSeverity),
                    leLog.setDescription(elem.description))
                }),
                leLog.setDate(date);
            else {
                $.each($.constants.logSeverity, function(i, elem) {
                    (elem.type === level || -1 !== elem.type.indexOf(level)) && (mSeverity = elem.val,
                    leLog.setSeverity(mSeverity),
                    leLog.setDescription(elem.description))
                });
                var leDate = moment(date, "MMM DD hh:mm:ss").format("MMM Do, h:mm:ss a");
                leLog.setDate(leDate),
                leLog.setDomain(domain)
            }
            leLog.setModule(module),
            leLog.setMessage(message),
            leLog.getSeverity() >= severity && tmpLogs.push(leLog);
        }),
        tmpLogs
    }
      , _generateWifiLog = function(log) {
        var xpaths = $.xpaths.wifi.publicWifi.SSIDs
          , ssids = $.xmo.getValuesTree(xpaths)
          , tmpLogs = []
          , regexDate = "[0-9]{4}.[0-9]{2}.[0-9]{2}T[0-9]{2}:[0-9]{2}:[0-9]{2}";
        return angular.forEach(log, function(elem) {
            var elemTmp = elem.replace(/\s+/g, "");
            if ("" === elemTmp)
                return !0;
            var logLine = elemTmp.split("|")
              , logData = {}
              , date = logLine[0].match(regexDate);
            null !== date && (logData.date = date[0]),
            logData.state = logLine[2],
            logData.macAddress = logLine[3];
            var ssidAlias = "";
            logLine[4] && (ssidAlias = $.util.getAliasFromXPath(logLine[4]));
            var tmpSsid = $f(ssids, {
                Alias: ssidAlias
            }, !0);
            logData.ssid = tmpSsid.length ? tmpSsid[0].SSID : "",
            logData.mode = logLine[5],
            logData.securityMode = logLine[6],
            logData.signal = logLine[7],
            logData.dataRate = logLine[8],
            logData.frequency = "(null)" !== logLine[9] ? logLine[9] : "",
            tmpLogs.push(logData)
        }),
        tmpLogs
    }
      , system = {
        getLogLevel: function() {
            for (var result, logLevel = $.xmo.getValuesTree($.xpaths.mySagemcomBox.maintenance.logLevel), i = 0, length = $.constants.logSeverity.length; length > i; i++)
                if (logLevel.toLowerCase() === $.constants.logSeverity[i].level.toLowerCase()) {
                    result = $.constants.logSeverity[i].val;
                    break
                }
            return result
        },
        setLogLevel: function(severity) {
            try {
                for (var result, i = 0, length = $.constants.logSeverity.length; length > i; i++)
                    if (parseInt(severity) === $.constants.logSeverity[i].val) {
                        result = $.constants.logSeverity[i].level;
                        break
                    }
                var dataMap = {};
                return dataMap[$.xpaths.mySagemcomBox.maintenance.logLevel] = result,
                $.xmo.setValuesFlat(dataMap),
                !0
            } catch (e) {
                return !1
            }
        },
        getUpnpLogs: function(success, error) {
            try {
                $.xmo.upnpLogs(function(data) {
                    var logs = data.split("\n")
                      , tmpLogs = [];
                    $(logs).each(function(i, elem) {
                        elem && tmpLogs.push(elem.replace(/^log/, ""))
                    }),
                    success(tmpLogs)
                }, function() {
                    error()
                })
            } catch (e) {
                error()
            }
        },
        getUriLog: function(logType, success, error) {
            var xpath, value;
            "eventWifi" === logType ? (xpath = $.xpaths.rpc.logAlias,
            value = Auth.user.role.title === Auth.userRoles.mso.title ? $.constants.wifiLogTypes.publicWifi : $.constants.wifiLogTypes.privateWifi) : (xpath = $.xpaths.rpc.logId,
            value = "1");
            try {
                $.xmo.getUriLog(xpath.replace("#", value), function(data) {
                    success(data)
                }, function() {
                    error()
                })
            } catch (e) {
                error()
            }
        },
        getLog: function(uri, logType, severity) {
            var deferred = $q.defer();
            return $http.get(uri).then(function(data) {
                if (data.data) {
                    var logs = data.data.split("\n")
                      , regexDate = "[0-9]{2}.[0-9]{2}.[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}"
                      , dataLogsArray = [];
                    dataLogsArray = "eventWifi" === logType ? _generateWifiLog(logs) : _generateArrayLog(logs, logType, severity, regexDate),
                    deferred.resolve(dataLogsArray)
                }
            }, function() {
                deferred.reject()
            }),
            deferred.promise
        },
        getSystemLogs: function(severity, logType) {
            var dataLogsArray = _cache(logType).split("\n")
              , regexDate = "((Jan|Feb|Mar|Apr|May|Jun|June|July|Jul|Aug|Sep|Sept|Oct|Nov|Dec)( )? ([0-3])?[0-9] ((?:(?:[0-1][0-9])|(?:[2][0-3])|(?:[0-9])):(?:[0-5][0-9])(?::[0-5][0-9])))"
              , arrayLogs = _generateArrayLog(dataLogsArray, logType, severity, regexDate);
            return arrayLogs
        }
    };
    return system
}
]),
sboxApp.factory("MaintenanceReset", function() {
    var cache = {}
      , MaintenanceReset = {
        reinitialize: function(success, error) {
            $.config.modules.reinitializeWithFactory ? $.xmo.reinitialize($.constants.restoreModes.factory, success, error) : $.xmo.reinitialize(!1, success, error)
        },
        reboot: function() {
            $.xmo.reboot()
        },
        populate: function() {
            return cache = $.xmo.getValuesTree($.xpaths.singleLine)
        },
        save: function(dataSave) {
            var saveArray = {};
            saveArray[$.xpaths.singleLine] = dataSave;
            try {
                return $.xmo.setValuesFlat(saveArray),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return MaintenanceReset
}),
sboxApp.factory("MaintenanceBackup", [function() {
    var system = {
        backupConfiguration: function() {
            $.xmo.saveConfiguration()
        },
        restoreConfiguration: function(idFile) {
            $.xmo.restoreConfiguration(idFile)
        },
        firmwareUpgrade: function(idFile, type) {
            $.xmo.firmwareUpgrade(idFile, type)
        },
        getFirmwareVersion: function() {
            return $.xmo.getValuesTree($.xpaths.mySagemcomBox.maintenance.firmwareVersion)
        }
    };
    return system
}
]),
sboxApp.factory("MaintenanceInternetUtilities", function() {
    var system = {
        ping: function(destination, numPing, type, callback, wanProvisioningMode, protocol, interfaceLan) {
            try {
                $.xmo.ping(destination, parseInt(numPing, 10), type, callback, wanProvisioningMode, protocol, interfaceLan)
            } catch (e) {
                return !1
            }
        },
        traceroute: function(address, count, callback, currentTracertProcess, wanProvisioningMode, protocol) {
            var result = {};
            try {
                $.xmo.traceroute(address, count, function(data) {
                    void 0 !== data.description && "Undefined (Action error)" === data.description ? result = {
                        EventString: "Network error",
                        Status: "Inactive"
                    } : (result.EventString = data.EventString ? data.EventString.replace(/\n/g, "<br/>") : "",
                    result.Status = "Active"),
                    callback(result, currentTracertProcess)
                }, wanProvisioningMode, protocol)
            } catch (e) {
                result = {
                    EventString: "",
                    Status: "Inactive"
                },
                callback(result)
            }
        },
        dnsquery: function(address, callback) {
            var result = {};
            try {
                $.xmo.nslookup($.util.cleanProtocol(address), function(data) {
                    result.Errors = !1,
                    result.Address = null,
                    "" === data.Address ? (result.Status = "Inactive",
                    result.Errors = !0) : (result.Status = "Active",
                    result.Address = data.Address.replace(/,/g, " ")),
                    callback(result)
                })
            } catch (e) {
                result = {
                    Errors: !0,
                    Status: "Inactive"
                },
                callback(result)
            }
        },
        dhcpServerList: function(success, error) {
            try {
                $.xmo.dhcpServerList(function(data) {
                    var ipList = data.IpServerWorks.split(";")
                      , macList = data.MacServerWorks.split(";");
                    success({
                        IpServerWorks: ipList,
                        MacServerWorks: macList
                    })
                }, function(data) {
                    error(data)
                })
            } catch (e) {
                error()
            }
        },
        arping: function(success, error) {
            try {
                $.xmo.arping(function(data) {
                    var ipList = data.IPAddress.split(";")
                      , macList = data.MACAddress.split(";")
                      , rs = {};
                    $(ipList).each(function(i, obj) {
                        rs[obj] = rs[obj] || [],
                        rs[obj].push(macList[i])
                    }),
                    success({
                        IPAddress: ipList,
                        MACAddress: macList,
                        ShowList: rs
                    })
                }, function(data) {
                    error(data)
                })
            } catch (e) {
                error()
            }
        },
        testCableResult: function(success) {
            try {
                var result = $.xmo.getValuesTree($.xpaths.healthCheck);
                success(result)
            } catch (e) {}
        }
    };
    return system
}),
sboxApp.factory("MaintenanceNtp", function() {
    var cache, cacheTimezones = null, _updateCache = function() {
        cache = $.xmo.getValuesTree($.xpaths.mySagemcomBox.maintenance.ntp)
    }, MaintenanceNtp = {
        updateCache: _updateCache,
        getTimezones: function() {
            try {
                if (!cacheTimezones) {
                    var capabilities = $.xmo.getCapability($.xpaths.mySagemcomBox.maintenance.ntp.timeZoneName);
                    capabilities = capabilities.restrictions["enum-values"],
                    $.map(capabilities, function(obj) {
                        return obj.description = obj.description.replace("Undefined (", ""),
                        obj.description = obj.description.substring(0, obj.description.length - 1),
                        obj
                    }),
                    cacheTimezones = capabilities
                }
                return cacheTimezones
            } catch (e) {
                return []
            }
        },
        populate: function() {
            return _updateCache(),
            cache
        },
        save: function(data) {
            var saveData = {};
            saveData[$.xpaths.mySagemcomBox.maintenance.ntp.firstServer] = data.firstServer,
            saveData[$.xpaths.mySagemcomBox.maintenance.ntp.secondServer] = data.secondServer,
            data.timeZoneName && (saveData[$.xpaths.mySagemcomBox.maintenance.ntp.timeZoneName] = data.timeZoneName.name),
            data.timeZone && (saveData[$.xpaths.mySagemcomBox.maintenance.ntp.timeZone] = data.timeZone);
            try {
                return $.xmo.setValuesFlat(saveData),
                !0
            } catch (err) {
                return !1
            }
        }
    };
    return MaintenanceNtp
}),
sboxApp.factory("TR69", function() {
    var TR69 = {
        checkDataPermission: function() {
            var cache = $.xmo.getValuesTree($.xpaths.mySagemcomBox.maintenance.tr69)
              , result = {
                enable: !1,
                informEnable: !1,
                informInterval: 0,
                username: "",
                password: "",
                connectionRequestUrl: "",
                connectionRequestPort: 0,
                connectionRequestUsername: "",
                connectionRequestPassword: ""
            };
            return $.each(cache, function(p) {
                return null !== cache[p] ? (result = cache,
                !1) : void 0
            }),
            result
        },
        populate: function() {
            var cache = TR69.checkDataPermission()
              , data = {};
            return data.enable = cache.enable,
            data.informEnable = cache.informEnable,
            data.informInterval = cache.informInterval,
            data.url = cache.url,
            data.username = cache.username,
            data.password = cache.password,
            data.connectionRequestUrl = cache.connectionRequestUrl,
            data.connectionRequestUsername = cache.connectionRequestUsername,
            data.connectionRequestPassword = cache.connectionRequestPassword,
            $.config.showedpages.tr069SSLAuthentication && $.config.showedpages.tr069SSLAuthentication.enable && (data.SslAuthenticationEnable = cache.SslAuthenticationEnable),
            data
        },
        save: function(data) {
            var saveData = {};
            saveData[$.xpaths.mySagemcomBox.maintenance.tr69.enable] = data.enable,
            saveData[$.xpaths.mySagemcomBox.maintenance.tr69.url] = data.url,
            saveData[$.xpaths.mySagemcomBox.maintenance.tr69.username] = data.username,
            saveData[$.xpaths.mySagemcomBox.maintenance.tr69.password] = data.password,
            saveData[$.xpaths.mySagemcomBox.maintenance.tr69.informEnable] = data.informEnable,
            saveData[$.xpaths.mySagemcomBox.maintenance.tr69.informInterval] = data.informInterval,
            saveData[$.xpaths.mySagemcomBox.maintenance.tr69.connectionRequestUsername] = data.connectionRequestUsername,
            saveData[$.xpaths.mySagemcomBox.maintenance.tr69.connectionRequestPassword] = data.connectionRequestPassword,
            $.config.showedpages.tr069SSLAuthentication && $.config.showedpages.tr069SSLAuthentication.enable && (saveData[$.xpaths.mySagemcomBox.maintenance.tr69.SslAuthenticationEnable] = data.SslAuthenticationEnable),
            $.config.showedpages.connectionRequestUrlReadOnly && $.config.showedpages.connectionRequestUrlReadOnly.enable || (saveData[$.xpaths.mySagemcomBox.maintenance.tr69.connectionRequestUrl] = data.connectionRequestUrl);
            try {
                return $.xmo.setValuesFlat(saveData),
                !0
            } catch (err) {
                return !1
            }
        }
    };
    return TR69
}),
sboxApp.factory("User", ["$q", "Auth", function($q, Auth) {
    var cache = null
      , _listAllowedUsers = function() {
        var allowedUsers = $.config.allowedUsers || [$.xmo.client.user]
          , extraUsers = $.config.modules.accessControl.user.editHierarchy[$.xmo.client.user] || [""]
          , rs = [];
        return $(allowedUsers).each(function(i, obj) {
            (obj === $.xmo.client.user || $.inArray(obj, extraUsers) > -1) && rs.push(obj)
        }),
        rs
    }
      , _updateCache = function() {
        var firstCache = $.xmo.getValuesTree($.xpaths.advanced.remoteManagement.users)
          , allowedUsers = _listAllowedUsers();
        cache = [];
        for (var x in firstCache.enable)
            $.util.inArray(firstCache.login[x], $.config.blockedUsers) > -1 || -1 === $.util.inArray(firstCache.login[x], allowedUsers) && $.util.inArray(firstCache.login[x], $.config.allowedUsers || []) > -1 || cache.push({
                uid: firstCache.uid[x],
                Enable: firstCache.enable[x],
                FirstName: firstCache.firstName[x],
                LastName: firstCache.lastName[x],
                Login: firstCache.login[x],
                Password: firstCache.password[x],
                ClearTextPassword: firstCache.clearTextPassword[x]
            })
    }
      , _clearCache = function() {
        cache = null
    }
      , User = {
        searchUsers: function() {
            return cache || _updateCache(),
            cache
        },
        insertUser: function(data, options) {
            try {
                var objSave = {
                    Enable: data.enable,
                    FirstName: "administrator",
                    LastName: data.lastName,
                    Login: data.userName,
                    Password: hexmd5(data.password),
                    ClearTextPassword: data.confirmPassword,
                    Profiles: {
                        Profile: {
                            Name: "anonymous"
                        }
                    },
                    RemoteAccesses: {
                        RemoteAccess: {
                            Enabled: !0,
                            WANRestriction: "ACCESS_DISABLE"
                        }
                    }
                };
                return $.xmo.addChild($.xpaths.advanced.remoteManagement.usersAdd, {
                    User: objSave
                }, options),
                _clearCache(),
                !0
            } catch (e) {
                return !1
            }
        },
        updateUser: function(data, options) {
            try {
                var dataMap = {};
                return dataMap[$.xpaths.advanced.remoteManagement.usersUpdate.enable.replace("#", data.uid)] = data.enable,
                dataMap[$.xpaths.advanced.remoteManagement.usersUpdate.firstName.replace("#", data.uid)] = "administrator",
                dataMap[$.xpaths.advanced.remoteManagement.usersUpdate.lastName.replace("#", data.uid)] = data.lastName,
                dataMap[$.xpaths.advanced.remoteManagement.usersUpdate.login.replace("#", data.uid)] = data.userName,
                $.xmo.setValuesFlat(dataMap, {
                    success: options.success,
                    error: options.error
                }),
                _clearCache(),
                !0
            } catch (e) {
                return !1
            }
        },
        deleteUser: function(data, options) {
            try {
                return $.xmo.delChild($.xpaths.advanced.remoteManagement.usersDelete.replace("#", data.uid)),
                _clearCache(),
                options.success(),
                !0
            } catch (e) {
                return options.error(),
                !1
            }
        },
        changePassword: function(user, oldpassword, newpassword) {
            var deferred = $q.defer();
            if ($.config.useXOREncryption) {
                var keyEnryption = $.xmo.getValuesTree($.xpaths.XORCryptKey);
                keyEnryption && (oldpassword = $.util.XORCipher.encode(keyEnryption, oldpassword),
                newpassword = $.util.XORCipher.encode(keyEnryption, newpassword))
            }
            return $.xmo.changePassword(user, oldpassword, newpassword, hexmd5(newpassword), function() {
                $.xmo.setValuesTree(!1, $.xpaths.mySagemcomBox.deviceInfo.forcePasswordChange.replace("#login#", $.xmo.client.user), {
                    success: function() {},
                    error: function() {}
                }),
                deferred.resolve(!0)
            }, function() {
                deferred.reject(!1)
            }),
            deferred.promise
        },
        getAuthorizedUserList: function() {
            var result = [];
            return $.each(Auth.userRoles, function(i, obj) {
                return "public" === obj.title ? !0 : void (obj.bitMask <= Auth.user.role.bitMask && result.push(obj.title))
            }),
            result
        },
        getLoggedUser: function() {
            return $.xmo.client.user
        }
    };
    return User
}
]),
sboxApp.factory("USBDeviceInfo", ["$q", function($q) {
    var USB = {
        save: function(data, options) {
            try {
                var dataMap = {};
                return dataMap['Device/Hosts/Hosts/Host[@uid="' + data.uid + '"]/UserFriendlyName'] = data.name,
                dataMap['Device/Hosts/Hosts/Host[@uid="' + data.uid + '"]/UserDeviceType'] = data.deviceType,
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (err) {
                return !1
            }
        },
        eject: function(data) {
            var deferred = $q.defer();
            return $.xmo.eject(data.uid, data.force, function() {
                deferred.resolve()
            }, function() {
                deferred.reject()
            }),
            deferred.promise
        }
    };
    return USB
}
]),
sboxApp.factory("DynamicDNS", function() {
    var model = {
        cacheService: $.xpaths.mySagemcomBox.dynDns.services,
        cacheClient: $.xpaths.mySagemcomBox.dynDns.client,
        ipv4Address: $.xpaths.mySagemcomBox.dynDns.ipv4Address
    }
      , cache = {}
      , system = {
        buildProviderSelect: function() {
            for (var arrayReturn = [], x = 0; x < cache.cacheService.length; x++)
                arrayReturn.push(cache.cacheService[x].Name);
            return arrayReturn
        },
        getProvider: function(serviceReference) {
            var leNom = $.util.getAliasFromXPath(serviceReference).replace("Name=", "");
            return leNom = leNom.replace(/"/g, "")
        },
        getCustomSettings: function() {
            for (var server = {
                name: "",
                port: "",
                request: "",
                authentication: "",
                max: "",
                retry: "",
                update: ""
            }, i = 0; i < cache.cacheService.length; i++)
                if ("Custom" === cache.cacheService[i].Name) {
                    server.name = cache.cacheService[i].Server,
                    server.port = cache.cacheService[i].ServerPort,
                    server.request = cache.cacheService[i].Request,
                    server.max = cache.cacheService[i].MaxRetries,
                    server.retry = cache.cacheService[i].RetryInterval,
                    server.update = cache.cacheService[i].UpdateInterval,
                    server.authentication = cache.cacheService[i].Authentication;
                    break
                }
            return server
        },
        populate: function() {
            $.config.useXOREncryption && (model.cacheClient = {
                Client: {
                    Enable: "Device/Services/DynamicDNS/Clients/Client[@uid='1']/Enable",
                    Status: "Device/Services/DynamicDNS/Clients/Client[@uid='1']/Status",
                    ServiceReference: "Device/Services/DynamicDNS/Clients/Client[@uid='1']/ServiceReference",
                    Offline: "Device/Services/DynamicDNS/Clients/Client[@uid='1']/Offline",
                    Hostnames: "Device/Services/DynamicDNS/Clients/Client[@uid='1']/Hostnames",
                    Username: "Device/Services/DynamicDNS/Clients/Client[@uid='1']/EncryptedUsername",
                    Password: "Device/Services/DynamicDNS/Clients/Client[@uid='1']/EncryptedPassword"
                }
            }),
            cache = $.xmo.getValuesTree(model);
            var arrayResult = {};
            if (cache.cacheClient && cache.cacheClient.Client) {
                if (arrayResult.enable = cache.cacheClient.Client.Enable,
                arrayResult.status = cache.cacheClient.Client.Status,
                arrayResult.ipv4Address = cache.ipv4Address,
                arrayResult.select = system.buildProviderSelect(),
                $.config.useXOREncryption) {
                    var keyEnryption = $.xmo.getValuesTree($.xpaths.XORCryptKey);
                    cache.cacheClient.Client.Username = $.util.XORCipher.decode(keyEnryption, cache.cacheClient.Client.Username),
                    cache.cacheClient.Client.Password = $.util.XORCipher.decode(keyEnryption, cache.cacheClient.Client.Password)
                }
                arrayResult.username = cache.cacheClient.Client.Username,
                arrayResult.password = cache.cacheClient.Client.Password,
                arrayResult.hostname = cache.cacheClient.Client.Hostnames[0].Name,
                arrayResult.provider = system.getProvider(cache.cacheClient.Client.ServiceReference),
                arrayResult.server = system.getCustomSettings()
            }
            return arrayResult
        },
        save: function(data, options) {
            var saveArray = {};
            if (saveArray[$.xpaths.mySagemcomBox.dynDns.enable] = data.enable,
            data.enable) {
                if (saveArray[$.xpaths.mySagemcomBox.dynDns.serviceReference] = $.xpaths.mySagemcomBox.dynDns.serviceQuery.replace("#", data.provider),
                $.config.useXOREncryption) {
                    var keyEnryption = $.xmo.getValuesTree($.xpaths.XORCryptKey);
                    data.username = $.util.XORCipher.encode(keyEnryption, data.username),
                    data.password = $.util.XORCipher.encode(keyEnryption, data.password),
                    $.xpaths.mySagemcomBox.dynDns.username = $.xpaths.mySagemcomBox.dynDns.username.replace("/Username", "/EncryptedUsername"),
                    $.xpaths.mySagemcomBox.dynDns.password = $.xpaths.mySagemcomBox.dynDns.password.replace("/Password", "/EncryptedPassword")
                }
                saveArray[$.xpaths.mySagemcomBox.dynDns.username] = data.username,
                saveArray[$.xpaths.mySagemcomBox.dynDns.password] = data.password,
                saveArray[$.xpaths.mySagemcomBox.dynDns.hostname] = data.hostname,
                "Custom" === data.provider && (saveArray[$.xpaths.mySagemcomBox.dynDns.customServer] = data.server.name,
                saveArray[$.xpaths.mySagemcomBox.dynDns.customPort] = data.server.port,
                saveArray[$.xpaths.mySagemcomBox.dynDns.customRequest] = data.server.request,
                saveArray[$.xpaths.mySagemcomBox.dynDns.customMax] = data.server.max,
                saveArray[$.xpaths.mySagemcomBox.dynDns.customUpdate] = data.server.update,
                saveArray[$.xpaths.mySagemcomBox.dynDns.customAuthentication] = data.server.authentication,
                saveArray[$.xpaths.mySagemcomBox.dynDns.customRetry] = data.server.retry)
            }
            try {
                return $.xmo.setValuesFlat(saveArray, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        },
        checkStatus: function(callback) {
            try {
                $.xmo.onPeriodicValue($.xpaths.mySagemcomBox.dynDns.status, callback, null)
            } catch (e) {
                return !1
            }
        },
        deleteNotification: function() {
            return $.xmo.deleteAllNotifications()
        }
    };
    return system
}),
sboxApp.factory("Firewall", function() {
    var dataModel = {};
    dataModel.customRules = $.xpaths.accessControl.firewall.customRules,
    dataModel.lowRules = $.xpaths.accessControl.firewall.lowRules,
    dataModel.mediumRules = $.xpaths.accessControl.firewall.mediumRules,
    dataModel.highRules = $.xpaths.accessControl.firewall.highRules,
    dataModel.level = $.xpaths.accessControl.firewall.config,
    dataModel.respondToPing = $.xpaths.accessControl.firewall.respondToPing,
    dataModel.gwIp = $.xpaths.mySagemcomBox.deviceInfo.localIpv4,
    dataModel.gwMask = $.xpaths.mySagemcomBox.deviceInfo.localSubnetMask;
    var ipGateway, protocolList, servicesList, cache = null, removeIpBackup = function(rules) {
        var rs = [];
        return $(rules).each(function(i, obj) {
            return obj.DestInterface === $.constants.firewall.interfaceBkp || obj.SourceInterface === $.constants.firewall.interfaceBkp ? !0 : void rs.push(obj)
        }),
        rs
    }, _formatIpGateway = function() {
        return ipGateway || (ipGateway = $.xmo.getValuesTree($.xpaths.accessControl.firewall.iprouter, null),
        ipGateway = ipGateway.toString().split("."),
        ipGateway[3] = "0",
        ipGateway = ipGateway.join(".")),
        ipGateway
    }, Firewall = {
        lastOrder: null,
        updateCache: function() {
            var self = this;
            cache = $.xmo.getValuesTree(dataModel),
            cache.customRules && (cache.customRules = $.map(cache.customRules, function(obj, i) {
                return self.formatRulesArray(obj, i)
            }))
        },
        updateCacheCustom: function() {
            var self = this;
            cache.customRules = $.xmo.getValuesTree(dataModel.customRules),
            cache.customRules && (cache.customRules = $.map(cache.customRules, function(obj, i) {
                return self.formatRulesArray(obj, i)
            }))
        },
        formatRulesArray: function(obj, i) {
            if (obj.DestInterface === $.constants.firewall.interfaceBkp || obj.SourceInterface === $.constants.firewall.interfaceBkp)
                return null;
            var tmpOrder = obj.Description.split("#");
            return "" === tmpOrder[0] || isNaN(tmpOrder[0]) ? 0 === obj.Order && (obj.Order = i + 1) : (obj.Order = parseInt(tmpOrder[0], 10),
            obj.Description = tmpOrder.splice(1, tmpOrder.length - 1).join("#")),
            obj
        },
        getModel: function() {
            var model = {
                Enable: !0,
                Description: "",
                Protocol: "TCP",
                Service: "",
                DestIP: "",
                SourceIP: "",
                DestPort: "",
                SourcePort: "",
                SourceInterface: "",
                Target: "disallow-local",
                Order: null
            };
            return model
        },
        getProtocolList: function() {
            protocolList || (protocolList = $.xmo.getCapability($.xpaths.accessControl.firewall.protocolCapability));
            var name, result = {};
            for (var x in protocolList[0].restrictions["enum-values"])
                name = protocolList[0].restrictions["enum-values"][x].name,
                result[name] = protocolList[0].restrictions["enum-values"][x];
            return result
        },
        getServicesList: function() {
            servicesList || (servicesList = $.xmo.getCapability($.xpaths.accessControl.firewall.serviceCapability));
            var name, result = {};
            for (var x in servicesList[0].restrictions["enum-values"])
                name = servicesList[0].restrictions["enum-values"][x].name,
                $.constants.forbidenServicesFirewall[name] || ($.constants.services[name] ? result[name] = $.constants.services[name] : result[name] = {
                    name: name
                });
            return result
        },
        populate: function() {
            return cache.mediumRules = removeIpBackup(cache.mediumRules),
            cache.highRules = removeIpBackup(cache.highRules),
            angular.copy(cache)
        },
        getPort: function(port) {
            var arrayPort = port.toString().split("-");
            return "*" === arrayPort[0] ? "0" : arrayPort[0]
        },
        setIP: function(ip, mask) {
            var ipGateway = _formatIpGateway();
            return -1 !== ip.indexOf("/") && (ip = ip.split("/")[0]),
            ip === ipGateway || "*" === ip || "0.0.0.0" === ip ? "*" : ("255.255.255.0" !== mask && -1 !== $.inArray(mask, $.constants.routeAvaliableMasks) && (ip = ip + "/" + $.inArray(mask, $.constants.routeAvaliableMasks)),
            ip)
        },
        getIP: function(ip) {
            return -1 !== ip.indexOf("/") && (ip = ip.split("/")[0]),
            "*" === ip || "" === ip ? _formatIpGateway() : ip
        },
        getGwIP: function() {
            return cache.gwIp
        },
        getGwMask: function() {
            return cache.gwMask
        },
        getMask: function(ip) {
            if ("*" === ip || "" === ip)
                return $.xmo.getValuesTree($.xpaths.accessControl.firewall.subnetmask, null);
            if (-1 !== ip.indexOf("/")) {
                var maskNum = ip.split("/")[1];
                return $.constants.routeAvaliableMasks[maskNum]
            }
            return ""
        },
        setIPDest: function(ip, mask) {
            return -1 !== ip.indexOf("/") && (ip = ip.split("/")[0]),
            "0.0.0.0" === ip || ip === _formatIpGateway() ? "*" : ("0.0.0.0" !== mask && -1 !== $.inArray(mask, $.constants.routeAvaliableMasks) && (ip = ip + "/" + $.inArray(mask, $.constants.routeAvaliableMasks)),
            ip)
        },
        getIPDest: function(ip) {
            return -1 !== ip.indexOf("/") && (ip = ip.split("/")[0]),
            "*" === ip || "" === ip ? "0.0.0.0" : ip
        },
        getMaskDest: function(ip) {
            if ("*" === ip || "" === ip)
                return "0.0.0.0";
            if (-1 !== ip.indexOf("/")) {
                var maskNum = ip.split("/")[1];
                return $.constants.routeAvaliableMasks[maskNum]
            }
            return ""
        },
        getInterface: function(target) {
            var arrayReturn = {};
            switch (target) {
            case $.constants.firewall.REJECT_FROM_LOCAL:
                arrayReturn.Target = $.constants.firewall.REJECT,
                arrayReturn.SourceInterface = $.constants.firewall.interfaceBrLan,
                arrayReturn.DestInterface = $.constants.firewall.interfaceData;
                break;
            case $.constants.firewall.REJECT_FROM_REMOTE:
                arrayReturn.Target = $.constants.firewall.REJECT,
                arrayReturn.SourceInterface = $.constants.firewall.interfaceData,
                arrayReturn.DestInterface = $.constants.firewall.interfaceBrLan;
                break;
            case $.constants.firewall.ACCEPT_FROM_LOCAL:
                arrayReturn.Target = $.constants.firewall.ACCEPT,
                arrayReturn.SourceInterface = $.constants.firewall.interfaceBrLan,
                arrayReturn.DestInterface = $.constants.firewall.interfaceData;
                break;
            case $.constants.firewall.ACCEPT_FROM_REMOTE:
                arrayReturn.Target = $.constants.firewall.ACCEPT,
                arrayReturn.SourceInterface = $.constants.firewall.interfaceData,
                arrayReturn.DestInterface = $.constants.firewall.interfaceBrLan
            }
            return arrayReturn
        },
        getOrder: function(order, clone) {
            var orderReturn = order;
            if (clone)
                orderReturn = this.lastOrder;
            else if (null === order) {
                var maxOrder = 0;
                $.each(cache.customRules, function(i, obj) {
                    parseInt(obj.Order, 10) > parseInt(maxOrder, 10) && (maxOrder = parseInt(obj.Order, 10))
                }),
                orderReturn = maxOrder + 1
            }
            return this.lastOrder = orderReturn,
            orderReturn
        },
        prepareSaveRule: function(arrayRule) {
            var data = {};
            data.Enable = arrayRule.Enable,
            data.Service = arrayRule.Service,
            data.Protocol = arrayRule.Protocol,
            data.SourcePort = this.getPort(arrayRule.SourcePort),
            data.SourcePortRangeMax = arrayRule.SourcePortRangeMax,
            data.DestPort = this.getPort(arrayRule.DestPort),
            data.DestPortRangeMax = arrayRule.DestPortRangeMax,
            data.SourceIP = this.getIP(arrayRule.SourceIP),
            data.SourceMask = this.getMask(arrayRule.SourceIP),
            data.DestIP = this.getIPDest(arrayRule.DestIP),
            data.DestMask = this.getMaskDest(arrayRule.DestIP),
            (arrayRule.Target === $.constants.firewall.REJECT_FROM_REMOTE || arrayRule.Target === $.constants.firewall.ACCEPT_FROM_REMOTE) && (data.SourceIP = this.getIPDest(arrayRule.DestIP),
            data.DestIP = this.getIP(arrayRule.SourceIP),
            data.SourceMask = this.getMaskDest(arrayRule.DestIP),
            data.DestMask = this.getMask(arrayRule.SourceIP));
            var arrayInterface = this.getInterface(arrayRule.Target);
            return data.Target = arrayInterface.Target,
            data.SourceInterface = arrayInterface.SourceInterface,
            data.DestInterface = arrayInterface.DestInterface,
            data.Order = this.getOrder(arrayRule.Order, arrayRule.clone),
            data.Description = data.Order + "#" + arrayRule.Description,
            data.IPVersion = $.constants.ipVersionFirewall,
            data
        },
        prepareUpdateRule: function(data, leCaches) {
            var arrayUpdate = {}
              , leCache = null;
            for (var x in leCaches)
                leCaches[x].Alias === data.Alias && (leCache = leCaches[x]);
            arrayUpdate[$.xpaths.accessControl.firewall.update.Enable.replace("#", data.uid)] = data.Enable,
            data.Service !== leCache.Service && (arrayUpdate[$.xpaths.accessControl.firewall.update.Service.replace("#", data.uid)] = data.Service),
            data.Protocol !== leCache.Protocol && (arrayUpdate[$.xpaths.accessControl.firewall.update.Protocol.replace("#", data.uid)] = data.Protocol),
            data.SourcePort !== leCache.SourcePort && (arrayUpdate[$.xpaths.accessControl.firewall.update.SourcePort.replace("#", data.uid)] = this.getPort(data.SourcePort)),
            data.SourcePortRangeMax !== leCache.SourcePortRangeMax && (arrayUpdate[$.xpaths.accessControl.firewall.update.SourcePortRangeMax.replace("#", data.uid)] = this.getPort(data.SourcePortRangeMax)),
            data.DestPort !== leCache.DestPort && (arrayUpdate[$.xpaths.accessControl.firewall.update.DestPort.replace("#", data.uid)] = this.getPort(data.DestPort)),
            data.DestPortRangeMax !== leCache.DestPortRangeMax && (arrayUpdate[$.xpaths.accessControl.firewall.update.DestPortRangeMax.replace("#", data.uid)] = this.getPort(data.DestPortRangeMax));
            var originSourceIP = data.SourceIP
              , originDestIP = data.DestIP;
            data.SourceMask = this.getMask(originSourceIP),
            data.SourceIP = this.getIP(data.SourceIP),
            data.DestMask = this.getMaskDest(originDestIP),
            data.DestIP = this.getIPDest(data.DestIP),
            data.SourceIP !== leCache.SourceIP && (arrayUpdate[$.xpaths.accessControl.firewall.update.SourceIP.replace("#", data.uid)] = this.getIP(data.SourceIP)),
            data.SourceMask !== leCache.SourceMask && (arrayUpdate[$.xpaths.accessControl.firewall.update.SourceMask.replace("#", data.uid)] = this.getMask(originSourceIP)),
            data.DestIP !== leCache.DestIP && (arrayUpdate[$.xpaths.accessControl.firewall.update.DestIP.replace("#", data.uid)] = this.getIPDest(data.DestIP)),
            data.DestMask !== leCache.DestMask && (arrayUpdate[$.xpaths.accessControl.firewall.update.DestMask.replace("#", data.uid)] = this.getMaskDest(originDestIP)),
            (data.Target === $.constants.firewall.REJECT_FROM_REMOTE || data.Target === $.constants.firewall.ACCEPT_FROM_REMOTE) && (arrayUpdate[$.xpaths.accessControl.firewall.update.DestIP.replace("#", data.uid)] = this.getIP(data.SourceIP),
            arrayUpdate[$.xpaths.accessControl.firewall.update.SourceIP.replace("#", data.uid)] = this.getIPDest(data.DestIP),
            arrayUpdate[$.xpaths.accessControl.firewall.update.SourceMask.replace("#", data.uid)] = this.getMaskDest(originDestIP),
            arrayUpdate[$.xpaths.accessControl.firewall.update.DestMask.replace("#", data.uid)] = this.getMask(originSourceIP));
            var arrayInterface = this.getInterface(data.Target);
            arrayUpdate[$.xpaths.accessControl.firewall.update.Target.replace("#", data.uid)] = arrayInterface.Target,
            arrayUpdate[$.xpaths.accessControl.firewall.update.SourceInterface.replace("#", data.uid)] = arrayInterface.SourceInterface,
            arrayUpdate[$.xpaths.accessControl.firewall.update.DestInterface.replace("#", data.uid)] = arrayInterface.DestInterface;
            var tmpOrder = this.getOrder(data.Order, data.clone);
            return data.Order !== leCache.Order && (arrayUpdate[$.xpaths.accessControl.firewall.update.Order.replace("#", data.uid)] = tmpOrder),
            data.Description !== leCache.Description && (arrayUpdate[$.xpaths.accessControl.firewall.update.Description.replace("#", data.uid)] = tmpOrder + "#" + data.Description),
            arrayUpdate[$.xpaths.accessControl.firewall.update.IPVersion.replace("#", data.uid)] = data.IPVersion,
            arrayUpdate
        },
        savePolicy: function(policy, options) {
            var arrayUpdate = {};
            arrayUpdate[$.xpaths.accessControl.firewall.config] = policy;
            try {
                $.xmo.setValuesFlat(arrayUpdate, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (e) {
                options.error()
            }
        },
        getPolicy: function() {
            return cache.level
        },
        saveRespondToPing: function(value) {
            var arrayUpdate = {};
            return arrayUpdate[$.xpaths.accessControl.firewall.respondToPing] = value,
            $.xmo.setValuesFlat(arrayUpdate)
        },
        getRespondToPing: function() {
            return cache.respondToPing
        },
        saveOrder: function(data) {
            var arrayUpdate = {}
              , arrayUID = [];
            return $.each(data, function(i, obj) {
                arrayUID = obj.uid.toString().split(",");
                for (var x in arrayUID)
                    arrayUpdate[$.xpaths.accessControl.firewall.update.Enable.replace("#", arrayUID[x])] = obj.Enable,
                    arrayUpdate[$.xpaths.accessControl.firewall.update.Order.replace("#", arrayUID[x])] = obj.Order,
                    obj.Description && (arrayUpdate[$.xpaths.accessControl.firewall.update.Description.replace("#", arrayUID[x])] = obj.Order + "#" + obj.Description)
            }),
            $.isEmptyObject(arrayUpdate) ? !1 : this.update(arrayUpdate)
        },
        save: function(data) {
            try {
                var arrayUID, self = this, arraySave = [], arrayUpdate = [], arrayDelete = [];
                return $.each(data, function(i, obj) {
                    !obj.Order && isNaN(obj.Order) && (obj.Order = null),
                    obj.toBeDeleted === !0 ? (arrayUID = obj.uid.toString().split(","),
                    arrayDelete.push({
                        uid: arrayUID[0]
                    }),
                    arrayUID.length > 1 && arrayDelete.push({
                        uid: arrayUID[1]
                    })) : obj.uid ? obj.Edited && (arrayUID = obj.uid.toString().split(","),
                    1 === arrayUID.length ? obj.Target === $.constants.firewall.REJECT_BOTH ? (obj.Target = $.constants.firewall.REJECT_FROM_LOCAL,
                    arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.customRules), arrayUpdate),
                    obj.clone = !0,
                    obj.Target = $.constants.firewall.REJECT_FROM_REMOTE,
                    arraySave.push(self.prepareSaveRule(obj))) : obj.Target === $.constants.firewall.ACCEPT_BOTH ? (obj.Target = $.constants.firewall.ACCEPT_FROM_LOCAL,
                    arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.customRules), arrayUpdate),
                    obj.clone = !0,
                    obj.Target = $.constants.firewall.ACCEPT_FROM_REMOTE,
                    arraySave.push(self.prepareSaveRule(obj))) : arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.customRules), arrayUpdate) : obj.Target === $.constants.firewall.REJECT_BOTH ? (obj.uid = arrayUID[0],
                    obj.Target = $.constants.firewall.REJECT_FROM_LOCAL,
                    arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.customRules), arrayUpdate),
                    obj.uid = arrayUID[1],
                    obj.Target = $.constants.firewall.REJECT_FROM_REMOTE,
                    arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.customRules), arrayUpdate)) : obj.Target === $.constants.firewall.ACCEPT_BOTH ? (obj.uid = arrayUID[0],
                    obj.Target = $.constants.firewall.ACCEPT_FROM_LOCAL,
                    arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.customRules), arrayUpdate),
                    obj.uid = arrayUID[1],
                    obj.Target = $.constants.firewall.ACCEPT_FROM_REMOTE,
                    arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.customRules), arrayUpdate)) : (obj.uid = arrayUID[0],
                    arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.customRules), arrayUpdate),
                    arrayDelete.push({
                        uid: arrayUID[1]
                    }))) : obj.Target === $.constants.firewall.REJECT_BOTH ? (obj.Target = $.constants.firewall.REJECT_FROM_LOCAL,
                    arraySave.push(self.prepareSaveRule(obj)),
                    obj.clone = !0,
                    obj.Target = $.constants.firewall.REJECT_FROM_REMOTE,
                    arraySave.push(self.prepareSaveRule(obj))) : obj.Target === $.constants.firewall.ACCEPT_BOTH ? (obj.Target = $.constants.firewall.ACCEPT_FROM_LOCAL,
                    arraySave.push(self.prepareSaveRule(obj)),
                    obj.clone = !0,
                    obj.Target = $.constants.firewall.ACCEPT_FROM_REMOTE,
                    arraySave.push(self.prepareSaveRule(obj))) : arraySave.push(self.prepareSaveRule(obj))
                }),
                arraySave.length && this.insert(arraySave),
                $.isEmptyObject(arrayUpdate) || this.update(arrayUpdate),
                arrayDelete.length && this.removeRule(arrayDelete),
                !0
            } catch (e) {
                return !1
            }
        },
        insert: function(data) {
            var arrayPaths = []
              , arrayInsertTemp = []
              , arrayInsert = [];
            $.each(data, function(i, obj) {
                arrayPaths.push($.xpaths.accessControl.firewall.customRules),
                arrayInsertTemp = [],
                arrayInsertTemp.push({
                    Rule: obj
                }),
                arrayInsert.push(arrayInsertTemp)
            }),
            $.xmo.addChildrenMultiple({
                aparent: arrayPaths,
                values: arrayInsert
            })
        },
        update: function(data) {
            $.xmo.setValuesFlat(data)
        },
        getRules: function() {
            var rulesList = angular.copy($.util.fixGetValuesTree(cache.customRules));
            return rulesList.sort(function(a, b) {
                return a.Order > b.Order ? 1 : a.Order < b.Order ? -1 : 0
            })
        },
        search: function() {
            var tempIP, self = this, rulesList = this.getRules(), groupedList = {}, arrayResult = [];
            $(rulesList).each(function(i, obj) {
                groupedList[obj.Order] && (groupedList[obj.Order].uid += "," + obj.uid,
                obj.uid = groupedList[obj.Order].uid),
                obj.SourcePortRangeMax && obj.SourcePort !== obj.SourcePortRangeMax && -1 !== obj.SourcePortRangeMax && (obj.SourcePort = obj.SourcePort + "-" + obj.SourcePortRangeMax),
                obj.DestPortRangeMax && obj.DestPort !== obj.DestPortRangeMax && -1 !== obj.DestPortRangeMax && (obj.DestPort = obj.DestPort + "-" + obj.DestPortRangeMax),
                obj.SourceIP = self.setIP(obj.SourceIP, obj.SourceMask),
                obj.DestIP = self.setIPDest(obj.DestIP, obj.DestMask),
                obj.Interface = $.util.getAliasFromXPath(obj.SourceInterface);
                var tmp = obj.Interface.split("_");
                obj.Interface = tmp[tmp.length - 1],
                obj.uid && obj.uid.toString().split(",").length > 1 ? obj.Target = obj.Target === $.constants.firewall.REJECT ? $.constants.firewall.REJECT_BOTH : $.constants.firewall.ACCEPT_BOTH : obj.SourceInterface === $.constants.firewall.interfaceBrLan && obj.DestInterface === $.constants.firewall.interfaceData ? obj.Target = obj.Target === $.constants.firewall.REJECT ? $.constants.firewall.REJECT_FROM_LOCAL : $.constants.firewall.ACCEPT_FROM_LOCAL : obj.SourceInterface === $.constants.firewall.interfaceData && obj.DestInterface === $.constants.firewall.interfaceBrLan ? obj.Target = obj.Target === $.constants.firewall.REJECT ? $.constants.firewall.REJECT_FROM_REMOTE : $.constants.firewall.ACCEPT_FROM_REMOTE : obj.SourceInterface === $.constants.firewall.interfaceBrVoip && obj.DestInterface === $.constants.firewall.interfaceVoip ? obj.Target = obj.Target === $.constants.firewall.REJECT ? $.constants.firewall.REJECT_FROM_LOCAL : $.constants.firewall.ACCEPT_FROM_LOCAL : obj.SourceInterface === $.constants.firewall.interfaceBrMpls && obj.DestInterface === $.constants.firewall.interfaceMpls ? obj.Target = obj.Target === $.constants.firewall.REJECT ? $.constants.firewall.REJECT_FROM_LOCAL : $.constants.firewall.ACCEPT_FROM_LOCAL : obj.SourceInterface === $.constants.firewall.interfaceBrLan ? obj.Target = obj.Target === $.constants.firewall.REJECT ? $.constants.firewall.REJECT_FROM_LOCAL : $.constants.firewall.ACCEPT_FROM_LOCAL : obj.SourceInterface === $.constants.firewall.interfaceData ? obj.Target = obj.Target === $.constants.firewall.REJECT ? $.constants.firewall.REJECT_FROM_REMOTE : $.constants.firewall.ACCEPT_FROM_REMOTE : obj.Target = obj.Target === $.constants.firewall.REJECT ? $.constants.firewall.REJECT_BOTH : $.constants.firewall.ACCEPT_BOTH,
                obj.Target === $.constants.firewall.REJECT_BOTH || obj.Target === $.constants.firewall.ACCEPT_BOTH || obj.Target === $.constants.firewall.ACCEPT_FROM_REMOTE || obj.Target === $.constants.firewall.REJECT_FROM_REMOTE ? (tempIP = obj.SourceIP,
                obj.SourceIP = self.setIPDest(obj.DestIP, obj.DestMask),
                obj.DestIP = self.setIP(tempIP, obj.SourceMask)) : (obj.SourceIP = self.setIP(obj.SourceIP, obj.SourceMask),
                obj.DestIP = self.setIPDest(obj.DestIP, obj.DestMask)),
                obj.Edited = !1,
                groupedList[obj.Order] = obj
            });
            for (var x in groupedList)
                groupedList.hasOwnProperty(x) && groupedList[x].IPVersion !== $.constants.ipVersionPinHolling && arrayResult.push(groupedList[x]);
            return arrayResult
        },
        removeRule: function(data) {
            var result;
            try {
                var delRule = [];
                $(data).each(function() {
                    var elem = $.xpaths.accessControl.firewall.oneRule.replace("#", this.uid);
                    delRule.push(elem)
                }),
                $.xmo.delChildren(delRule),
                result = !0
            } catch (e) {
                result = !1
            }
            return result
        }
    };
    return Firewall
}),
sboxApp.factory("Ipv6Pinholling", function() {
    var dataModel = {};
    dataModel.rules = $.xpaths.accessControl.ipv6Pinholling.rules;
    var protocolList, cache = null, Ipv6Pinholling = {
        lastOrder: null,
        updateCache: function() {
            var self = this;
            cache = $.xmo.getValuesTree(dataModel),
            cache.rules && (cache.rules = $.map(cache.rules[0], function(obj, i) {
                return obj.IPVersion === $.constants.ipVersionPinHolling && "DMZ" !== obj.Alias ? self.formatRulesArray(obj, i) : void 0
            }))
        },
        formatRulesArray: function(obj, i) {
            var tmpOrder = obj.Description.split("#");
            return "" === tmpOrder[0] || isNaN(tmpOrder[0]) ? 0 === obj.Order && (obj.Order = i + 1) : (obj.Order = parseInt(tmpOrder[0], 10),
            obj.Description = tmpOrder.splice(1, tmpOrder.length - 1).join("#")),
            obj
        },
        getModel: function() {
            var model = {
                Enable: !0,
                Description: "",
                Protocol: "TCP",
                DestIP: "",
                SourceIP: "",
                DestPort: "",
                SourcePort: "",
                SourceInterface: "",
                Target: "allow-local",
                Order: null
            };
            return model
        },
        getProtocolList: function() {
            return protocolList || (protocolList = $.constants.pinHollingProtocolList),
            protocolList
        },
        getPort: function(port) {
            var arrayPort = port.toString().split("-");
            return "*" === arrayPort[0] ? "0" : arrayPort[0]
        },
        getInterface: function(target) {
            var arrayReturn = {};
            switch (target) {
            case $.constants.firewall.ACCEPT_FROM_LOCAL:
                arrayReturn.Target = $.constants.firewall.ACCEPT,
                arrayReturn.SourceInterface = $.constants.firewall.interfaceBrLan,
                arrayReturn.DestInterface = $.constants.firewall.interfaceData;
                break;
            case $.constants.firewall.ACCEPT_FROM_REMOTE:
                arrayReturn.Target = $.constants.firewall.ACCEPT,
                arrayReturn.SourceInterface = $.constants.firewall.interfaceData,
                arrayReturn.DestInterface = $.constants.firewall.interfaceBrLan
            }
            return arrayReturn
        },
        getOrder: function(order, clone) {
            var orderReturn = order;
            if (clone)
                orderReturn = this.lastOrder;
            else if (null === order) {
                var maxOrder = 0;
                $.each(cache.rules, function(i, obj) {
                    parseInt(obj.Order, 10) > parseInt(maxOrder, 10) && (maxOrder = parseInt(obj.Order, 10))
                }),
                orderReturn = maxOrder + 1
            }
            return this.lastOrder = orderReturn,
            orderReturn
        },
        prepareSaveRule: function(arrayRule, alias) {
            var data = {};
            data.Alias = alias,
            data.Enable = arrayRule.Enable,
            data.Protocol = arrayRule.Protocol,
            arrayRule.SourcePort && (data.SourcePort = this.getPort(arrayRule.SourcePort)),
            arrayRule.SourcePortRangeMax && (data.SourcePortRangeMax = this.getPort(arrayRule.SourcePortRangeMax)),
            data.DestPort = this.getPort(arrayRule.DestPort),
            data.DestPortRangeMax = this.getPort(arrayRule.DestPortRangeMax),
            data.SourceIP = arrayRule.SourceIP,
            data.DestIP = arrayRule.DestIP,
            arrayRule.Target === $.constants.firewall.ACCEPT_FROM_REMOTE && (data.SourceIP = arrayRule.DestIP,
            data.DestIP = arrayRule.SourceIP);
            var arrayInterface = this.getInterface(arrayRule.Target);
            return data.Target = arrayInterface.Target,
            data.SourceInterface = arrayInterface.SourceInterface,
            data.DestInterface = arrayInterface.DestInterface,
            data.Order = this.getOrder(arrayRule.Order, arrayRule.clone),
            data.Description = data.Order + "#" + arrayRule.Description,
            data.IPVersion = $.constants.ipVersionPinHolling,
            data
        },
        generateAlias: function() {
            var rulesPinHolling = $.grep(cache.rules, function(obj) {
                return obj.Alias.indexOf($.constants.pinHollingDefaultAlias) > -1
            })
              , SortByAlias = function(a, b) {
                return a.Alias > b.Alias ? -1 : 1
            };
            if (rulesPinHolling = rulesPinHolling.sort(SortByAlias),
            rulesPinHolling && rulesPinHolling[0]) {
                var alias = rulesPinHolling[0].Alias.split("-")
                  , tmpSplit = alias[1].split("_");
                return $.constants.pinHollingDefaultAlias + (parseInt(tmpSplit[0]) + 1)
            }
            return $.constants.pinHollingDefaultAlias + "1"
        },
        prepareUpdateRule: function(data, leCaches) {
            var arrayUpdate = {}
              , leCache = null;
            for (var x in leCaches)
                leCaches[x].Alias === data.Alias && (leCache = leCaches[x]);
            arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.Enable.replace("#", data.Alias)] = data.Enable,
            data.Protocol !== leCache.Protocol && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.Protocol.replace("#", data.Alias)] = data.Protocol),
            data.SourcePort !== leCache.SourcePort && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.SourcePort.replace("#", data.Alias)] = this.getPort(data.SourcePort)),
            data.SourcePortRangeMax !== leCache.SourcePortRangeMax && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.SourcePortRangeMax.replace("#", data.Alias)] = this.getPort(data.SourcePortRangeMax)),
            data.DestPort !== leCache.DestPort && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.DestPort.replace("#", data.Alias)] = this.getPort(data.DestPort)),
            data.DestPortRangeMax !== leCache.DestPortRangeMax && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.DestPortRangeMax.replace("#", data.Alias)] = this.getPort(data.DestPortRangeMax)),
            data.SourceIP !== leCache.SourceIP && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.SourceIP.replace("#", data.Alias)] = data.SourceIP),
            data.DestIP !== leCache.DestIP && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.DestIP.replace("#", data.Alias)] = data.DestIP),
            data.Target === $.constants.firewall.ACCEPT_FROM_REMOTE && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.DestIP.replace("#", data.Alias)] = data.SourceIP,
            arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.SourceIP.replace("#", data.Alias)] = data.DestIP);
            var arrayInterface = this.getInterface(data.Target);
            arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.Target.replace("#", data.Alias)] = arrayInterface.Target,
            arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.SourceInterface.replace("#", data.Alias)] = arrayInterface.SourceInterface,
            arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.DestInterface.replace("#", data.Alias)] = arrayInterface.DestInterface;
            var tmpOrder = this.getOrder(data.Order, data.clone);
            return data.Order !== leCache.Order && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.Order.replace("#", data.Alias)] = tmpOrder),
            data.Description !== leCache.Description && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.Description.replace("#", data.Alias)] = tmpOrder + "#" + data.Description),
            arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.IPVersion.replace("#", data.Alias)] = data.IPVersion,
            arrayUpdate
        },
        saveOrder: function(data) {
            var arrayUpdate = {}
              , arrayUID = [];
            return $.each(data, function(i, obj) {
                arrayUID = obj.uid.toString().split(",");
                var tmpAlias = obj.Alias.split("_");
                arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.Enable.replace("#", tmpAlias[0] + "_a")] = obj.Enable,
                arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.Order.replace("#", tmpAlias[0] + "_a")] = obj.Order,
                obj.Description && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.Description.replace("#", tmpAlias[0] + "_a")] = obj.Order + "#" + obj.Description),
                arrayUID.length > 1 && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.Enable.replace("#", tmpAlias[0] + "_b")] = obj.Enable,
                arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.Order.replace("#", tmpAlias[0] + "_b")] = obj.Order,
                obj.Description && (arrayUpdate[$.xpaths.accessControl.ipv6Pinholling.update.Description.replace("#", tmpAlias[0] + "_b")] = obj.Order + "#" + obj.Description))
            }),
            $.isEmptyObject(arrayUpdate) ? !1 : this.update(arrayUpdate)
        },
        save: function(data) {
            try {
                var arrayUID, self = this, arraySave = [], arrayUpdate = [], arrayDelete = [];
                return $.each(data, function(i, obj) {
                    if (!obj.Order && isNaN(obj.Order) && (obj.Order = null),
                    obj.toBeDeleted === !0) {
                        arrayUID = obj.uid.toString().split(",");
                        var tmpAlias = obj.Alias.split("_");
                        arrayDelete.push({
                            Alias: tmpAlias[0] + "_a"
                        }),
                        arrayUID.length > 1 && arrayDelete.push({
                            Alias: tmpAlias[0] + "_b"
                        })
                    } else if (obj.uid) {
                        if (obj.Edited)
                            if (arrayUID = obj.uid.toString().split(","),
                            1 === arrayUID.length)
                                if (obj.Target === $.constants.firewall.ACCEPT_BOTH) {
                                    obj.Target = $.constants.firewall.ACCEPT_FROM_LOCAL,
                                    arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.rules), arrayUpdate),
                                    obj.clone = !0;
                                    var tmpAlias1 = obj.Alias.split("_");
                                    obj.Target = $.constants.firewall.ACCEPT_FROM_REMOTE,
                                    arraySave.push(self.prepareSaveRule(obj, tmpAlias1[0] + "_b"))
                                } else
                                    arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.rules), arrayUpdate);
                            else if (obj.Target === $.constants.firewall.ACCEPT_BOTH) {
                                var tmpAlias2 = obj.Alias.split("_");
                                obj.uid = arrayUID[0],
                                obj.Target = $.constants.firewall.ACCEPT_FROM_LOCAL,
                                obj.Alias = tmpAlias2[0] + "_a",
                                arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.rules), arrayUpdate),
                                obj.uid = arrayUID[1],
                                obj.Target = $.constants.firewall.ACCEPT_FROM_REMOTE,
                                obj.Alias = tmpAlias2[0] + "_b",
                                arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.rules), arrayUpdate)
                            } else {
                                var tmpAlias3 = obj.Alias.split("_");
                                obj.uid = arrayUID[0],
                                obj.Alias = tmpAlias3[0] + "_a",
                                arrayUpdate = $.extend(self.prepareUpdateRule(obj, cache.rules), arrayUpdate),
                                arrayDelete.push({
                                    Alias: tmpAlias3[0] + "_b"
                                })
                            }
                    } else {
                        var newAlias = self.generateAlias();
                        obj.Target === $.constants.firewall.ACCEPT_BOTH ? (obj.Target = $.constants.firewall.ACCEPT_FROM_LOCAL,
                        arraySave.push(self.prepareSaveRule(obj, newAlias + "_a")),
                        obj.clone = !0,
                        obj.Target = $.constants.firewall.ACCEPT_FROM_REMOTE,
                        arraySave.push(self.prepareSaveRule(obj, newAlias + "_b"))) : arraySave.push(self.prepareSaveRule(obj, newAlias + "_a"))
                    }
                }),
                arraySave.length && this.insert(arraySave),
                $.isEmptyObject(arrayUpdate) || this.update(arrayUpdate),
                arrayDelete.length && this.removeRule(arrayDelete),
                !0
            } catch (e) {
                return !1
            }
        },
        insert: function(data) {
            var arrayPaths = []
              , arrayInsertTemp = []
              , arrayInsert = [];
            $.each(data, function(i, obj) {
                arrayPaths.push($.xpaths.accessControl.ipv6Pinholling.rules),
                arrayInsertTemp = [],
                arrayInsertTemp.push({
                    Rule: obj
                }),
                arrayInsert.push(arrayInsertTemp)
            }),
            $.xmo.addChildrenMultiple({
                aparent: arrayPaths,
                values: arrayInsert
            })
        },
        update: function(data) {
            $.xmo.setValuesFlat(data)
        },
        getRules: function() {
            var rulesList = angular.copy($.util.fixGetValuesTree(cache.rules));
            return rulesList.sort(function(a, b) {
                return a.Order > b.Order ? 1 : a.Order < b.Order ? -1 : 0
            })
        },
        search: function() {
            var tempIP, rulesList = this.getRules(), groupedList = {}, arrayResult = [];
            $(rulesList).each(function(i, obj) {
                groupedList[obj.Order] && (groupedList[obj.Order].uid += "," + obj.uid,
                obj.uid = groupedList[obj.Order].uid),
                obj.SourcePortRangeMax && obj.SourcePort !== obj.SourcePortRangeMax && (obj.SourcePort = obj.SourcePort + "-" + obj.SourcePortRangeMax),
                obj.DestPortRangeMax && obj.DestPort !== obj.DestPortRangeMax && (obj.DestPort = obj.DestPort + "-" + obj.DestPortRangeMax),
                obj.SourceIP = obj.SourceIP ? obj.SourceIP : "*",
                obj.DestIP = obj.DestIP ? obj.DestIP : "*",
                obj.Interface = $.util.getAliasFromXPath(obj.SourceInterface);
                var tmp = obj.Interface.split("_");
                obj.Interface = tmp[tmp.length - 1],
                obj.uid && obj.uid.toString().split(",").length > 1 ? obj.Target = $.constants.firewall.ACCEPT_BOTH : obj.SourceInterface === $.constants.firewall.interfaceBrLan && obj.DestInterface === $.constants.firewall.interfaceData ? obj.Target = $.constants.firewall.ACCEPT_FROM_LOCAL : obj.SourceInterface === $.constants.firewall.interfaceData && obj.DestInterface === $.constants.firewall.interfaceBrLan && (obj.Target = $.constants.firewall.ACCEPT_FROM_REMOTE),
                obj.Target === $.constants.firewall.ACCEPT_BOTH || obj.Target === $.constants.firewall.ACCEPT_FROM_REMOTE ? (tempIP = obj.SourceIP ? obj.SourceIP : "*",
                obj.SourceIP = obj.DestIP ? obj.DestIP : "*",
                obj.DestIP = tempIP) : (obj.SourceIP = obj.SourceIP ? obj.SourceIP : "*",
                obj.DestIP = obj.DestIP ? obj.DestIP : "*"),
                obj.Edited = !1,
                groupedList[obj.Order] = obj
            });
            for (var x in groupedList)
                groupedList.hasOwnProperty(x) && arrayResult.push(groupedList[x]);
            return arrayResult
        },
        removeRule: function(data) {
            var result;
            try {
                var delRule = [];
                $(data).each(function() {
                    var elem = $.xpaths.accessControl.ipv6Pinholling.oneRule.replace("#", "'" + this.Alias + "'");
                    delRule.push(elem)
                }),
                $.xmo.delChildren(delRule),
                result = !0
            } catch (e) {
                result = !1
            }
            return result
        }
    };
    return Ipv6Pinholling
}),
sboxApp.factory("IPv6", [function() {
    var _cache = {}
      , IPv6 = {
        updateCache: function() {
            var ipv6Xpaths = $.xpaths.internetConnectivity.ipv6;
            $.util.hasFeature("routerAdvertisementConfig", !0) && (ipv6Xpaths.routerAdvertisement = $.xpaths.internetConnectivity.routerAdvertisement),
            _cache = $.xmo.getValuesTree(ipv6Xpaths);
            var ipv6 = ""
              , ipv6Interfaces = $.util.getGlobalWanIpv6(_cache.wanIPv6);
            if (ipv6Interfaces && ipv6Interfaces.length && (ipv6 = ipv6Interfaces[0].IPAddress),
            _cache.wanIPv6 = ipv6,
            $.config.modules.internetConnectivity.newDelegatedPrefix) {
                var delegatedPrefix = "";
                $(_cache.delegatedPrefixes).each(function(i, obj) {
                    obj.Alias.indexOf("IAPD") > -1 && (delegatedPrefix = obj)
                }),
                _cache.delegatedprefix = delegatedPrefix.Prefix
            }
            _cache.dnsV6 = $.util.fixGetValuesTree(_cache.dnsV6),
            _cache.enableDnsDhcp1 === !0 && _cache.enableDnsDhcp2 === !0 ? _cache.dnsType = "DHCP" : _cache.dnsType = "STATIC"
        },
        getIPv6: function() {
            this.updateCache();
            var lanIPv6gua = "";
            return $(_cache.lanIPv6GUA).each(function(i, obj) {
                obj.Alias.indexOf("DHCPV6") > -1 && obj.IPAddressStatus.indexOf("PREFERRED") > -1 && (lanIPv6gua = obj)
            }),
            _cache.lanIPv6 = lanIPv6gua.IPAddress,
            _cache.lanIPv6
        },
        getInfo: function() {
            return this.updateCache(),
            _cache
        },
        save: function(data, options) {
            try {
                var dataMap = {};
                dataMap[$.xpaths.internetConnectivity.ipv6.enable] = data.enable,
                $.config.showedpages.firewallIPv6.enable === !0 && (dataMap[$.xpaths.internetConnectivity.ipv6.enableFirewall] = data.enableFirewall),
                $.config.showedpages.tim && $.config.showedpages.tim.enable === !0 && (dataMap[$.xpaths.internetConnectivity.ipv6.vlan] = data.vlan),
                $.util.hasFeature("routerAdvertisementConfig", !0) && (dataMap[$.xpaths.internetConnectivity.routerAdvertisement.managed] = data.routerAdvertisementManaged === !0,
                dataMap[$.xpaths.internetConnectivity.routerAdvertisement.other] = data.routerAdvertisementOther === !0),
                "STATIC" === data.dnsType ? (dataMap[$.xpaths.internetConnectivity.ipv6.enableDnsDhcp1] = "false",
                dataMap[$.xpaths.internetConnectivity.ipv6.enableDnsDhcp2] = "false",
                dataMap[$.xpaths.internetConnectivity.ipv6.enableDnsStatic1] = "true",
                dataMap[$.xpaths.internetConnectivity.ipv6.enableDnsStatic2] = "true",
                dataMap[$.xpaths.internetConnectivity.ipv6.dns1Static] = data.dns1,
                dataMap[$.xpaths.internetConnectivity.ipv6.dns2Static] = data.dns2) : (dataMap[$.xpaths.internetConnectivity.ipv6.enableDnsDhcp1] = "true",
                dataMap[$.xpaths.internetConnectivity.ipv6.enableDnsDhcp2] = "true",
                dataMap[$.xpaths.internetConnectivity.ipv6.enableDnsStatic1] = "false",
                dataMap[$.xpaths.internetConnectivity.ipv6.enableDnsStatic2] = "false"),
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (e) {
                return options.error(),
                !1
            }
            return !0
        }
    };
    return IPv6
}
]),
sboxApp.factory("MapT", [function() {
    var MapT = {
        getInfo: function() {
            return $.xmo.getValuesTree($.xpaths.internetConnectivity.mapT)
        }
    };
    return MapT
}
]),
sboxApp.factory("PPP", [function() {
    var _cache, _newCache, _checkArrayBeforeSave = function(data, interfaceName) {
        var xpath, adminAdvancedXpaths = _getAdminAdvancedXpaths(interfaceName), arrayReturn = {};
        return _cache || (_cache = $.xmo.getValuesTree(adminAdvancedXpaths)),
        _newCache = $.extend({}, _cache),
        xpath = adminAdvancedXpaths,
        $.each(xpath, function(i, value) {
            var tmpCache = _cache[i];
            "boolean" == typeof tmpCache && (tmpCache = tmpCache ? "true" : "false"),
            null !== tmpCache && void 0 !== data[value] && null !== data[value] && data[value] !== tmpCache && (arrayReturn[value] = data[value],
            _newCache[i] = data[value])
        }),
        arrayReturn
    }, _getAdminAdvancedXpaths = function(interfaceName) {
        var adminAdvancedXpaths = angular.copy($.xpaths.adminAdvanced);
        return "voipMngt" === interfaceName && (adminAdvancedXpaths.login = adminAdvancedXpaths.voipMngt.login,
        adminAdvancedXpaths.passwd = adminAdvancedXpaths.voipMngt.passwd,
        adminAdvancedXpaths.vlan = adminAdvancedXpaths.voipMngt.vlan,
        adminAdvancedXpaths.addressingType = adminAdvancedXpaths.voipMngt.addressingType,
        adminAdvancedXpaths.dns1Dhcp = adminAdvancedXpaths.voipMngt.dns1Dhcp,
        adminAdvancedXpaths.dns2Dhcp = adminAdvancedXpaths.voipMngt.dns2Dhcp,
        adminAdvancedXpaths.enableDnsDhcp1 = adminAdvancedXpaths.voipMngt.enableDnsDhcp1,
        adminAdvancedXpaths.enableDnsDhcp2 = adminAdvancedXpaths.voipMngt.enableDnsDhcp2,
        adminAdvancedXpaths.dns1Static = adminAdvancedXpaths.voipMngt.dns1Static,
        adminAdvancedXpaths.dns2Static = adminAdvancedXpaths.voipMngt.dns2Static,
        adminAdvancedXpaths.enableDnsStatic1 = adminAdvancedXpaths.voipMngt.enableDnsStatic1,
        adminAdvancedXpaths.enableDnsStatic2 = adminAdvancedXpaths.voipMngt.enableDnsStatic2,
        adminAdvancedXpaths.ip = adminAdvancedXpaths.voipMngt.ip,
        adminAdvancedXpaths.mask = adminAdvancedXpaths.voipMngt.mask,
        adminAdvancedXpaths.gateway = adminAdvancedXpaths.voipMngt.gateway,
        adminAdvancedXpaths.dns = adminAdvancedXpaths.voipMngt.dns),
        adminAdvancedXpaths
    }, PPP = {
        bridgeMode: null,
        search: function() {
            return $.xmo.getValuesTree($.xpaths.internetConnectivity.ppp)
        },
        loadBridgeMode: function(force) {
            (null === this.bridgeMode || force) && (this.bridgeMode = $.xmo.getValuesTree($.xpaths.mySagemcomBox.bridgeMode.enable) === !0)
        },
        resetInterface: function(interfaceType, options) {
            var dataToSave = {}
              , alias = "";
            alias = "voipMngt" === interfaceType ? "PPP_VOIP_MNGT" : "PPP_DATA";
            var xpathReset = $.xpaths.adminAdvanced.resetInterface.replace("#alias#", alias);
            dataToSave[xpathReset] = !0;
            try {
                $.xmo.setValuesFlat(dataToSave, options)
            } catch (e) {
                options.error(e)
            }
        },
        searchAddressingTypeData: function(DNSManager, interfaceName) {
            this.loadBridgeMode(),
            $.config.useXOREncryption && ($.xpaths.adminAdvanced.login = $.xpaths.adminAdvanced.login.replace("/Username", "/EncryptedUsername"),
            $.xpaths.adminAdvanced.passwd = $.xpaths.adminAdvanced.passwd.replace("/Password", "/EncryptedPassword")),
            this.bridgeMode && ($.xpaths.adminAdvanced.ip = $.xpaths.adminAdvanced.ip.replace('Alias="IP_DATA"', 'Alias="IP_BR_WAN"').replace('Alias="IP_DATA_ADDRESS"', 'Alias="IP_BR_WAN_ADDRESS"'),
            $.xpaths.adminAdvanced.mask = $.xpaths.adminAdvanced.mask.replace('Alias="IP_DATA"', 'Alias="IP_BR_WAN"').replace('Alias="IP_DATA_ADDRESS"', 'Alias="IP_BR_WAN_ADDRESS"'),
            $.xpaths.adminAdvanced.gateway = $.xpaths.adminAdvanced.gateway.replace('Alias="IP_DATA"', 'Alias="IP_BR_WAN"').replace('Alias="IP_DATA_ADDRESS"', 'Alias="IP_BR_WAN_ADDRESS"'),
            $.xpaths.adminAdvanced.dns = $.xpaths.adminAdvanced.dns.replace('Alias="IP_DATA"', 'Alias="IP_BR_WAN"').replace('Alias="IP_DATA_ADDRESS"', 'Alias="IP_BR_WAN_ADDRESS"'),
            $.xpaths.adminAdvanced.addressingType = $.xpaths.adminAdvanced.addressingType.replace('Alias="IP_DATA"', 'Alias="IP_BR_WAN"').replace('Alias="IP_DATA_ADDRESS"', 'Alias="IP_BR_WAN_ADDRESS"'));
            var adminAdvancedXpaths = _getAdminAdvancedXpaths(interfaceName);
            delete adminAdvancedXpaths.voipMngt,
            adminAdvancedXpaths.enableDnsDhcp1 || (delete adminAdvancedXpaths.enableDnsDhcp1,
            delete adminAdvancedXpaths.enableDnsDhcp2,
            delete adminAdvancedXpaths.dns1Dhcp,
            delete adminAdvancedXpaths.dns2Dhcp);
            var data = $.xmo.getValuesTree({
                adminAdvanced: adminAdvancedXpaths,
                xdslStandard: $.xpaths.stats.xdsl.standard,
                xdslStatus: $.xpaths.stats.xdsl.status,
                primaryMode: $.xpaths.mySagemcomBox.deviceInfo.primaryMode
            });
            if (_cache = data.adminAdvanced,
            _cache.xdslStandard = data.xdslStandard,
            _cache.xdslStatus = data.xdslStatus,
            _cache.primaryMode = data.primaryMode,
            _cache.bridgeMode = this.bridgeMode,
            $.util.hasFeature("dtagXdsl")) {
                var ipv4time = moment.duration(_cache.uptime, "seconds");
                _cache.uptime = $.util.formatLeaseTime(ipv4time)
            }
            var isDHCP = !1;
            if (DNSManager ? _cache.enableDnsStatic ? _cache.dnsType = "STATIC" : _cache.dnsType = "DHCP" : (isDHCP = _cache.enableDnsDhcp1 === !0 && _cache.enableDnsDhcp2 === !0,
            isDHCP ? _cache.dnsType = "DHCP" : _cache.dnsType = "STATIC"),
            isDHCP && !_cache.enableDnsDhcp1) {
                var dnsArr = (_cache.dns || "").split(",");
                _cache.dns1Dhcp = dnsArr[0] || "",
                _cache.dns2Dhcp = dnsArr[1] || ""
            }
            return $.config.useXOREncryption && (_cache.keyEnryption = $.xmo.getValuesTree($.xpaths.XORCryptKey),
            _cache.login = $.util.XORCipher.decode(_cache.keyEnryption, _cache.login),
            _cache.passwd = $.util.XORCipher.decode(_cache.keyEnryption, _cache.passwd)),
            $.extend({}, _cache)
        },
        saveRoutes: function(data, options) {
            var dataMap = {}
              , adminAdvancedXpaths = _getAdminAdvancedXpaths(data.interfaceName);
            if (data.DNSManager ? "STATIC" === data.dnsType ? dataMap[adminAdvancedXpaths.enableDnsStatic] = "true" : dataMap[adminAdvancedXpaths.enableDnsStatic] = "false" : "STATIC" === data.dnsType ? (adminAdvancedXpaths.enableDnsDhcp1 && (dataMap[adminAdvancedXpaths.enableDnsDhcp1] = "false",
            dataMap[adminAdvancedXpaths.enableDnsDhcp2] = "false"),
            $.config.hasIPCP === !0 && $.config.ipcpDNS === !0 && (dataMap[adminAdvancedXpaths.enableDnsIPCP1] = "false",
            dataMap[adminAdvancedXpaths.enableDnsIPCP2] = "false"),
            dataMap[adminAdvancedXpaths.enableDnsStatic1] = "true",
            dataMap[adminAdvancedXpaths.enableDnsStatic2] = "true") : (adminAdvancedXpaths.enableDnsDhcp1 && (dataMap[adminAdvancedXpaths.enableDnsDhcp1] = "true",
            dataMap[adminAdvancedXpaths.enableDnsDhcp2] = "true"),
            $.config.hasIPCP === !0 && $.config.ipcpDNS === !0 && ("IPCP" === data.addressingType ? (dataMap[adminAdvancedXpaths.enableDnsDhcp1] = "false",
            dataMap[adminAdvancedXpaths.enableDnsDhcp2] = "false",
            dataMap[adminAdvancedXpaths.enableDnsIPCP1] = "true",
            dataMap[adminAdvancedXpaths.enableDnsIPCP2] = "true") : (dataMap[adminAdvancedXpaths.enableDnsDhcp1] = "true",
            dataMap[adminAdvancedXpaths.enableDnsDhcp2] = "true",
            dataMap[adminAdvancedXpaths.enableDnsIPCP1] = "false",
            dataMap[adminAdvancedXpaths.enableDnsIPCP2] = "false")),
            dataMap[adminAdvancedXpaths.enableDnsStatic1] = "false",
            dataMap[adminAdvancedXpaths.enableDnsStatic2] = "false"),
            "PPP" !== data.connectionType && (data.DNSManager || data.isCharterAll) && ("STATIC" === data.addressingType ? this.bridgeMode ? dataMap[adminAdvancedXpaths.addressingType.replace('Alias="IP_DATA"', 'Alias="IP_BR_WAN"').replace('Alias="IP_DATA_ADDRESS"', 'Alias="IP_BR_WAN_ADDRESS"')] = "3" : dataMap[adminAdvancedXpaths.addressingType] = "3" : this.bridgeMode ? dataMap[adminAdvancedXpaths.addressingType.replace('Alias="IP_DATA"', 'Alias="IP_BR_WAN"').replace('Alias="IP_DATA_ADDRESS"', 'Alias="IP_BR_WAN_ADDRESS"')] = "DHCP" : dataMap[adminAdvancedXpaths.addressingType] = "DHCP"),
            0 !== Object.keys(dataMap).length)
                try {
                    $.xmo.setValuesFlat(dataMap)
                } catch (e) {}
            return this.saveDns(data, options),
            !0
        },
        saveDns: function(data, options) {
            try {
                var dataMap = {}
                  , adminAdvancedXpaths = _getAdminAdvancedXpaths(data.interfaceName)
                  , hideStaticIpOption = $.config.modules.internetConnectivity.hideStaticIpOption || !1;
                ("STATIC" === data.dnsType || hideStaticIpOption) && (dataMap[adminAdvancedXpaths.dns1Static] = data.dns1,
                dataMap[adminAdvancedXpaths.dns2Static] = data.dns2),
                dataMap = _checkArrayBeforeSave(dataMap, data.interfaceName),
                0 !== Object.keys(dataMap).length && $.xmo.setValuesFlat(dataMap)
            } catch (e) {}
            return this.saveGwIP(data, options),
            !0
        },
        saveGwIP: function(data, options) {
            try {
                var dataMap = {}
                  , adminAdvancedXpaths = _getAdminAdvancedXpaths(data.interfaceName);
                "STATIC" === data.addressingType && (this.bridgeMode ? (dataMap[adminAdvancedXpaths.ip.replace('Alias="IP_DATA"', 'Alias="IP_BR_WAN"').replace('Alias="IP_DATA_ADDRESS"', 'Alias="IP_BR_WAN_ADDRESS"')] = data.ip,
                dataMap[adminAdvancedXpaths.mask.replace('Alias="IP_DATA"', 'Alias="IP_BR_WAN"').replace('Alias="IP_DATA_ADDRESS"', 'Alias="IP_BR_WAN_ADDRESS"')] = data.mask,
                dataMap[adminAdvancedXpaths.gateway.replace('Alias="IP_DATA"', 'Alias="IP_BR_WAN"').replace('Alias="IP_DATA_ADDRESS"', 'Alias="IP_BR_WAN_ADDRESS"')] = data.gateway) : (dataMap[adminAdvancedXpaths.ip] = data.ip,
                dataMap[adminAdvancedXpaths.mask] = data.mask,
                dataMap[adminAdvancedXpaths.gateway] = data.gateway),
                dataMap[adminAdvancedXpaths.gatewayIpAddress] = data.gateway,
                dataMap = _checkArrayBeforeSave(dataMap, data.interfaceName));
                var searchAddressingTypeData = this.searchAddressingTypeData;
                0 !== Object.keys(dataMap).length ? $.xmo.setValuesFlat(dataMap, {
                    success: function() {
                        options.success(),
                        searchAddressingTypeData(data.DNSManager, data.interfaceName)
                    },
                    error: options.error
                }) : options.success()
            } catch (e) {
                options.error(e)
            }
            return !0
        },
        saveAddressingType: function(data, options) {
            var dataMap = {}
              , adminAdvancedXpaths = _getAdminAdvancedXpaths(data.interfaceName);
            if ("DHCP" === data.connectionType ? dataMap[adminAdvancedXpaths.wanType] = "DHCP" : (dataMap[adminAdvancedXpaths.wanType] = "PPP",
            $.util.hasFeature("pppAdvancedParams") && this.savePPPadvancedConfig(data, options)),
            "STATIC" === data.addressingType ? (dataMap[adminAdvancedXpaths.enableDhcp] = "false",
            data.defaultRoute && (dataMap[adminAdvancedXpaths.enableIpv4Forwarding] = "true"),
            dataMap = _checkArrayBeforeSave(dataMap, data.interfaceName)) : "DHCP" === data.addressingType ? (dataMap[adminAdvancedXpaths.enableDhcp] = "true",
            data.defaultRoute && (dataMap[adminAdvancedXpaths.enableIpv4Forwarding] = "false"),
            dataMap = _checkArrayBeforeSave(dataMap, data.interfaceName)) : (dataMap[adminAdvancedXpaths.enableDhcp] = "false",
            data.defaultRoute && (dataMap[adminAdvancedXpaths.enableIpv4Forwarding] = "false")),
            dataMap = _checkArrayBeforeSave(dataMap, data.interfaceName),
            0 !== Object.keys(dataMap).length)
                try {
                    $.xmo.setValuesFlat(dataMap)
                } catch (e) {}
            return this.searchAddressingTypeData(data.DNSManager, data.interfaceName),
            this.saveRoutes(data, options),
            !0
        },
        savePPPadvancedConfig: function(data) {
            var selectModeOnDemand, saveStatusIpv6CpEnable, dataMap = {};
            "ONDEMAND" === data.connectionTrigger && (selectModeOnDemand = !0,
            saveStatusIpv6CpEnable = $.xmo.getValuesTree($.xpaths.adminAdvanced.ipv6CpEnable)),
            dataMap[$.xpaths.adminAdvanced.connectionTrigger] = data.connectionTrigger,
            selectModeOnDemand && (dataMap[$.xpaths.adminAdvanced.ipv6CpEnable] = "ONDEMAND" === data.connectionTrigger ? "false" : saveStatusIpv6CpEnable),
            dataMap[$.xpaths.adminAdvanced.maxMRUSize] = data.maxMRUSize,
            dataMap[$.xpaths.adminAdvanced.globalWanMode] = data.globalWanMode,
            dataMap = _checkArrayBeforeSave(dataMap);
            try {
                $.xmo.setValuesFlat(dataMap)
            } catch (e) {}
            return !0
        },
        savePPPoePassthrough: function(PPPoestatus) {
            try {
                return $.xmo.setValuesTree(PPPoestatus, $.xpaths.adminAdvanced.PPPoePassthrough),
                !0
            } catch (e) {
                return !1
            }
        },
        savePrimaryMode: function(primaryMode) {
            try {
                return $.xmo.setValuesTree(primaryMode, $.xpaths.mySagemcomBox.deviceInfo.primaryMode),
                !0
            } catch (e) {
                return !1
            }
        },
        save: function(data, options) {
            this.loadBridgeMode(!0);
            var adminAdvancedXpaths = _getAdminAdvancedXpaths(data.interfaceName)
              , dataMap = {}
              , xpathPPPUsername = $.xpaths.internetConnectivity.ppp.username
              , xpathPPPPassword = $.xpaths.internetConnectivity.ppp.password;
            if ("voipMngt" === data.interfaceName && (xpathPPPUsername = adminAdvancedXpaths.login,
            xpathPPPPassword = adminAdvancedXpaths.passwd),
            $.config.useXOREncryption && (xpathPPPUsername = xpathPPPUsername.replace("/Username", "/EncryptedUsername"),
            xpathPPPPassword = xpathPPPPassword.replace("/Password", "/EncryptedPassword"),
            data.username = $.util.XORCipher.encode(_cache.keyEnryption, data.username),
            data.password = $.util.XORCipher.encode(_cache.keyEnryption, data.password)),
            dataMap[xpathPPPUsername] = data.username,
            dataMap[xpathPPPPassword] = data.password,
            dataMap[adminAdvancedXpaths.vlan] = data.vlan,
            dataMap[adminAdvancedXpaths.vcivpi] = data.vcivpi,
            dataMap = _checkArrayBeforeSave(dataMap, data.interfaceName),
            0 !== Object.keys(dataMap).length)
                try {
                    $.xmo.setValuesFlat(dataMap)
                } catch (e) {}
            return this.saveAddressingType(data, options),
            !0
        },
        restartConnection: function() {
            $.xmo.restartConnection()
        },
        ipRenewPeriodic: function(interfaceName, success) {
            var adminAdvancedXpaths = _getAdminAdvancedXpaths(interfaceName);
            return $.xmo.onPeriodicValue(adminAdvancedXpaths.ip, success, null)
        },
        cancelIpRenewNotification: function(idPeriodic) {
            $.xmo.cancelNotification(idPeriodic)
        }
    };
    return PPP
}
]),
sboxApp.factory("VLAN", function() {
    var _cache = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.vlanTerminations)
      , VLAN = {
        updateCache: function() {
            _cache = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.vlanTerminations)
        },
        search: function(filter) {
            if (void 0 === filter)
                return _cache;
            for (var x = 0; x < _cache.length; x++)
                if (_cache[x].LowerLayers.indexOf(filter.EthernetLinkName) > -1)
                    return _cache[x]
        }
    };
    return VLAN
}),
sboxApp.factory("IPoE", ["VLAN", function(VLAN) {
    var _cacheResult, _getLayer2FromLayer3 = function(tmpLayer, ethLinks) {
        var rs = []
          , brokenLayers = tmpLayer.LowerLayers.split(",");
        return $.each(brokenLayers, function(i, obj) {
            var relatedLink = $.grep(ethLinks, function(link) {
                return link.Name.indexOf(obj) > -1
            });
            $.each(relatedLink, function(i2, obj2) {
                var leXpaths = obj2.LowerLayers.split(",");
                $.each(leXpaths, function(i3, obj3) {
                    rs.push({
                        layer2: $.util.getAliasFromXPath(obj3),
                        vlan: tmpLayer.VLANID ? tmpLayer : null
                    })
                })
            })
        }),
        rs
    }, _generateArraySave = function(data) {
        var dataMap = {};
        return dataMap[$.xpaths.internetConnectivity.wan.IPoE.save.IfcName.replace("#", data.leInterface.ipAlias)] = data.leInterface.ifcName,
        dataMap[$.xpaths.internetConnectivity.wan.IPoE.save.AddressingType.replace("#", data.leInterface.ipAlias)] = data.leInterface.addressingType,
        dataMap[$.xpaths.internetConnectivity.wan.IPoE.save.LowerLayers.replace("#", data.leInterface.ipAlias)] = data.leInterface.lowerLayers[0],
        "DHCP" === data.leInterface.addressingType || "STATIC" === data.leInterface.addressingType && (dataMap[$.xpaths.internetConnectivity.wan.IPoE.save.IPAddress.replace("#", data.leInterface.ipAlias)] = data.leInterface.ipAddress,
        dataMap[$.xpaths.internetConnectivity.wan.IPoE.save.SubnetMask.replace("#", data.leInterface.ipAlias)] = data.leInterface.subnetMask,
        dataMap[$.xpaths.internetConnectivity.wan.IPoE.save.IPGateway.replace("#", data.leInterface.ipAlias)] = data.leInterface.ipGateway),
        data.vlan && data.vlan.VLANID && (dataMap[$.xpaths.internetConnectivity.wan.IPoE.save.VLANID.replace("#", data.vlan.Alias)] = parseInt(data.vlan.VLANID, 10)),
        "undefined" != typeof data.leInterface.swapThis && (dataMap[$.xpaths.internetConnectivity.wan.IPoE.save.dhcpv4Client.replace("#", data.leInterface.name)] = data.leInterface.swapThis,
        dataMap[$.xpaths.internetConnectivity.wan.IPoE.save.LowerLayers.replace("#", data.leInterface.ipAlias)] = data.leInterface.newLowerLayer,
        dataMap[$.xpaths.internetConnectivity.wan.IPoE.save.Enable.replace("#", data.leInterface.ipAlias)] = !0),
        $.each(data.leInterface.options, function(i, obj) {
            var xpath = $.xpaths.internetConnectivity.wan.IPoE.save.optionValue.replace("#", "Device/IP/Interfaces/Interface[" + data.leInterface.ipAlias + "]");
            xpath = xpath.replace("$", obj.Alias),
            dataMap[xpath] = obj.Value
        }),
        dataMap
    }, _getIPv6Status = function(ipv6List) {
        var rs = {
            Status: "ERROR"
        };
        if (!ipv6List || !ipv6List.length)
            return rs;
        var lastIpv6 = ipv6List[ipv6List.length - 1];
        return -1 !== lastIpv6.Alias.indexOf("DHCPV6") && lastIpv6.IPAddress ? lastIpv6 : rs;
    }, _cache = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.IPoE.search), IPoE = {
        updateCache: function() {
            _cache = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.IPoE.search),
            _cacheResult = null
        },
        populate: function() {
            if (_cacheResult)
                return _cacheResult;
            var layers, result = {}, data = _cache;
            return data.vlanTerminations = VLAN.search(),
            $.each(data.ipInterfaces, function(i, obj) {
                if ("IP_BR_LAN" === obj.Alias)
                    return !0;
                var lowerAlias = obj.LowerLayers;
                lowerAlias = lowerAlias.split(","),
                lowerAlias = $.grep(lowerAlias, function(layers) {
                    return layers.indexOf("/VLANTerminations/") > -1
                });
                var relatedLayersIpoe = []
                  , myVlanTermination = null;
                $(lowerAlias).each(function(index, alias) {
                    var lowerAlias = $.util.getAliasFromXPath(alias);
                    myVlanTermination = $.grep(data.vlanTerminations, function(vlan) {
                        return vlan.Alias === lowerAlias
                    }),
                    myVlanTermination && (myVlanTermination = myVlanTermination[0],
                    relatedLayersIpoe = $.merge(relatedLayersIpoe, _getLayer2FromLayer3(myVlanTermination, data.ethLinks)))
                }),
                myVlanTermination || (relatedLayersIpoe = $.merge(relatedLayersIpoe, _getLayer2FromLayer3({
                    LowerLayers: obj.Alias.substr(obj.Alias.search("_"))
                }, data.ethLinks)));
                var myPPPInterface = $.grep(data.pppInterfaces, function(pppInterface) {
                    var pppLowerAlias = $.util.getAliasFromXPath(pppInterface.LowerLayers);
                    return obj.LowerLayers === pppInterface.Name || obj.LowerLayers.indexOf(pppLowerAlias) > -1
                });
                myPPPInterface = myPPPInterface[0];
                var lePush = {};
                lePush.ipAlias = obj.Alias,
                lePush.name = obj.Name,
                lePush.lowerLayers = obj.LowerLayers.split(","),
                lePush.connectionTime = $.util.formatLeaseTime(obj.ConnectionTime),
                lePush.statusIPV4 = obj.IPv4Addresses[0].Status,
                lePush.statusIPV6 = _getIPv6Status(obj.IPv6Addresses).Status,
                lePush.status = "ENABLED" === lePush.statusIPV4 || "ENABLED" === lePush.statusIPV6 ? "UP" : lePush.statusIPV4,
                lePush.ifcName = obj.IfcName ? obj.IfcName : obj.Alias,
                lePush.ipAddress = obj.IPv4Addresses[0].IPAddress,
                lePush.subnetMask = obj.IPv4Addresses[0].SubnetMask,
                lePush.ipGateway = obj.IPv4Addresses[0].IPGateway,
                lePush.addressingType = obj.IPv4Addresses[0].AddressingType,
                lePush.stats = obj.Stats,
                lePush.options = $.util.getDHCPOptions(obj.Alias, data.dhcpClients),
                myPPPInterface && lePush.options.length ? (lePush.swap = myPPPInterface.Alias,
                lePush.swapThis = -1 === obj.LowerLayers.indexOf(myPPPInterface.Name),
                layers = _getLayer2FromLayer3(myPPPInterface, data.ethLinks),
                $(layers).each(function(lIndex, lObject) {
                    var isThere = !1;
                    $(relatedLayersIpoe).each(function(rIndex, rObj) {
                        return rObj.layer2 === lObject.layer2 ? (isThere = !0,
                        !1) : void 0
                    }),
                    isThere || relatedLayersIpoe.push(lObject)
                })) : lePush.options.length && (lePush.swap = !0,
                lePush.swapThis = "UP" === lePush.status,
                layers = _getLayer2FromLayer3({
                    LowerLayers: lePush.lowerLayers.join(",")
                }, data.ethLinks),
                $(layers).each(function(lIndex, lObject) {
                    var isThere = !1;
                    $(relatedLayersIpoe).each(function(rIndex, rObj) {
                        return rObj.layer2 === lObject.layer2 ? (isThere = !0,
                        !1) : void 0
                    }),
                    isThere || relatedLayersIpoe.push(lObject)
                })),
                $(relatedLayersIpoe).each(function(j, splittedLowerLayers) {
                    result[splittedLowerLayers.layer2] || (result[splittedLowerLayers.layer2] = []);
                    var vlan = splittedLowerLayers.vlan;
                    result[splittedLowerLayers.layer2].push({
                        leInterface: lePush,
                        vlan: vlan
                    })
                })
            }),
            _cacheResult = result
        },
        save: function(data) {
            var dataMap = {};
            try {
                return $.each(data, function(index, ptmLink) {
                    for (var x in ptmLink)
                        dataMap = $.extend(dataMap, _generateArraySave(ptmLink[x]))
                }),
                $.xmo.setValuesFlat(dataMap),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return IPoE
}
]),
sboxApp.factory("PPPoE", ["VLAN", function(VLAN) {
    var _cacheResult, _getLayer2FromLayer3 = function(lowerLayer, ethLinks) {
        var rs = []
          , brokenLayers = lowerLayer.split(",");
        return $.each(brokenLayers, function(i, obj) {
            var relatedLink = $.grep(ethLinks, function(link) {
                return link.Name.indexOf(obj) > -1
            });
            $.each(relatedLink, function(i2, obj2) {
                var leXpaths = obj2.LowerLayers.split(",");
                $.each(leXpaths, function(i3, obj3) {
                    rs.push($.util.getAliasFromXPath(obj3))
                })
            })
        }),
        rs
    }, _generateArraySave = function(data) {
        var dataMap = {};
        return dataMap[$.xpaths.internetConnectivity.wan.PPPoE.save.IfcName.replace("#", data.leInterface.alias)] = data.leInterface.ifcName,
        dataMap[$.xpaths.internetConnectivity.wan.PPPoE.save.TransportType.replace("#", data.leInterface.alias)] = data.leInterface.transportType,
        dataMap[$.xpaths.internetConnectivity.wan.PPPoE.save.Username.replace("#", data.leInterface.alias)] = data.leInterface.username,
        dataMap[$.xpaths.internetConnectivity.wan.PPPoE.save.Password.replace("#", data.leInterface.alias)] = data.leInterface.password,
        dataMap[$.xpaths.internetConnectivity.wan.PPPoE.save.AuthenticationProtocol.replace("#", data.leInterface.alias)] = data.leInterface.authMethod,
        dataMap[$.xpaths.internetConnectivity.wan.PPPoE.save.MaxMRUSize.replace("#", data.leInterface.alias)] = data.leInterface.maxMRUSize,
        dataMap[$.xpaths.internetConnectivity.wan.PPPoE.save.ServiceName.replace("#", data.leInterface.alias)] = data.leInterface.serviceName,
        data.vlan && data.vlan.VLANID && (dataMap[$.xpaths.internetConnectivity.wan.PPPoE.save.VLANID.replace("#", data.vlan.Alias)] = parseInt(data.vlan.VLANID, 10)),
        "undefined" != typeof data.leInterface.swapThis && (dataMap[$.xpaths.internetConnectivity.wan.PPPoE.save.Enable.replace("#", data.leInterface.alias)] = data.leInterface.swapThis),
        dataMap
    }, _cache = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.PPPoE.search), PPPoE = {
        updateCache: function() {
            _cache = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.PPPoE.search),
            _cacheResult = null
        },
        populate: function() {
            if (_cacheResult)
                return _cacheResult;
            var result = {}
              , data = _cache;
            return data.vlanTerminations = VLAN.search(),
            $.each(data.pppInterfaces, function(i, obj) {
                var myVlanTermination, lePush = {}, relatedLayers = [];
                myVlanTermination = $.grep(data.vlanTerminations, function(vlan) {
                    return obj.LowerLayers.indexOf(vlan.Alias) > -1
                }),
                myVlanTermination = myVlanTermination[0],
                relatedLayers = myVlanTermination ? $.merge(relatedLayers, _getLayer2FromLayer3(myVlanTermination.LowerLayers, data.ethLinks)) : obj.Alias.indexOf("PPP") > -1 ? $.merge(relatedLayers, _getLayer2FromLayer3(obj.Alias.substr(obj.Alias.search("_")), data.ethLinks)) : $.merge(relatedLayers, _getLayer2FromLayer3(obj.LowerLayers, data.ethLinks));
                var myIpInterface = $.grep(data.ipInterfaces, function(ipInterface) {
                    return ipInterface.LowerLayers === obj.Name || ipInterface.LowerLayers.indexOf(obj.LowerLayers) > -1
                });
                myIpInterface = myIpInterface[0],
                lePush.ifcName = obj.IfcName ? obj.IfcName : obj.Alias,
                lePush.lowerLayers = obj.LowerLayers.split(","),
                lePush.alias = obj.Alias,
                lePush.enable = obj.Enable,
                lePush.name = obj.Name,
                lePush.connectionTime = $.util.formatLeaseTime(obj.ConnectionTime),
                lePush.status = obj.Status,
                lePush.connectionStatus = obj.ConnectionStatus,
                lePush.lastConnectionError = obj.LastConnectionError,
                lePush.transportType = obj.TransportType,
                lePush.username = obj.Username,
                lePush.password = obj.Password,
                lePush.authMethod = obj.AuthenticationProtocol,
                lePush.maxMRUSize = obj.MaxMRUSize,
                lePush.serviceName = obj.PPPoE.ServiceName,
                lePush.stats = obj.Stats,
                myIpInterface ? (lePush.ipAlias = myIpInterface.Alias,
                lePush.ipAddress = myIpInterface.IPv4Addresses[0].IPAddress,
                lePush.subnetMask = myIpInterface.IPv4Addresses[0].SubnetMask,
                lePush.ipGateway = myIpInterface.IPv4Addresses[0].IPGateway,
                lePush.dns = myIpInterface.IPv4Addresses[0].Dns,
                lePush.addressingType = myIpInterface.IPv4Addresses[0].AddressingType,
                $.util.getDHCPOptions(myIpInterface.Alias, data.dhcpClients).length && (lePush.swap = myIpInterface.Alias,
                lePush.swapThis = myIpInterface.LowerLayers.indexOf(obj.Name) > -1)) : (lePush.swap = !0,
                lePush.swapThis = obj.Enable),
                $.each(relatedLayers, function(j, leier) {
                    result[leier] || (result[leier] = []),
                    result[leier].push({
                        leInterface: lePush,
                        vlan: myVlanTermination
                    })
                })
            }),
            _cacheResult = result
        },
        save: function(data) {
            var dataMap = {};
            try {
                var firstLayer2;
                $.each(data, function(index, upperLink) {
                    return firstLayer2 = upperLink,
                    !1
                });
                for (var x in firstLayer2)
                    dataMap = $.extend(dataMap, _generateArraySave(firstLayer2[x]));
                return $.xmo.setValuesFlat(dataMap),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return PPPoE
}
]),
sboxApp.factory("RouteStatic", function() {
    var cache = $.xmo.getValuesTree($.xpaths.mySagemcomBox.route.staticRoute)
      , useStaticRoute2 = $.config.showedpages.useStaticRoute2 && $.config.showedpages.useStaticRoute2.enable
      , RouteStatic = {
        updateCache: function() {
            cache = $.xmo.getValuesTree($.xpaths.mySagemcomBox.route.staticRoute)
        },
        populate: function() {
            var result = {};
            result.route = [],
            result.interfaceList = [];
            var staticRoute;
            for (var i in cache.ipv4)
                staticRoute = {},
                staticRoute.uid = cache.ipv4[i].uid,
                staticRoute.Interface = $.util.getAliasFromXPath(cache.ipv4[i].Interface),
                staticRoute.DestSubnetMask = cache.ipv4[i].DestSubnetMask,
                "" !== cache.ipv4[i].DestSubnetMask && (staticRoute.DestIPAddress = cache.ipv4[i].DestIPAddress + "/" + $.constants.routeAvaliableMasks.indexOf(cache.ipv4[i].DestSubnetMask)),
                staticRoute.GatewayIPAddress = cache.ipv4[i].GatewayIPAddress,
                staticRoute.ForwardingMetric = -1 === cache.ipv4[i].ForwardingMetric ? "AUTO" : cache.ipv4[i].ForwardingMetric,
                staticRoute.IPVersion = "IPV4",
                staticRoute.Status = cache.ipv4[i].Status,
                staticRoute.Origin = cache.ipv4[i].Origin,
                staticRoute.Source = cache.ipv4[i].Source,
                result.route.push(staticRoute);
            cache.ipv4Route2 || (useStaticRoute2 = !1);
            for (i in cache.ipv4Route2)
                staticRoute = {},
                staticRoute.uid = cache.ipv4Route2[i].uid,
                staticRoute.Interface = $.util.getAliasFromXPath(cache.ipv4Route2[i].Interface),
                staticRoute.DestSubnetMask = cache.ipv4Route2[i].DestSubnetMask,
                "" !== cache.ipv4Route2[i].DestSubnetMask && (staticRoute.DestIPAddress = cache.ipv4Route2[i].DestIPAddress + "/" + $.constants.routeAvaliableMasks.indexOf(cache.ipv4Route2[i].DestSubnetMask)),
                staticRoute.GatewayIPAddress = cache.ipv4Route2[i].GatewayIPAddress,
                staticRoute.ForwardingMetric = -1 === cache.ipv4Route2[i].ForwardingMetric ? "AUTO" : cache.ipv4Route2[i].ForwardingMetric,
                staticRoute.IPVersion = "IPV4",
                staticRoute.Status = cache.ipv4Route2[i].Status,
                staticRoute.Origin = cache.ipv4Route2[i].Origin,
                staticRoute.Source = cache.ipv4Route2[i].Source,
                result.route.push(staticRoute);
            for (var u in cache.interfaces)
                $.config.modules.myBox.route && $.config.modules.myBox.route.blacklistLayers && -1 !== $.inArray($.util.getAliasFromXPath(cache.interfaces[u].Name), $.config.modules.myBox.route.blacklistLayers) || result.interfaceList.push($.util.getAliasFromXPath(cache.interfaces[u].Name));
            return result
        },
        insertRoutes: function(data) {
            try {
                var arrayPaths = []
                  , arrayInsertTemp = []
                  , arrayInsert = [];
                return $.each(data, function(i, obj) {
                    arrayPaths.push(useStaticRoute2 && "VOIP_MGMT" === obj.Interface ? $.xpaths.mySagemcomBox.route.staticRoute.ipv4Route2 : $.xpaths.mySagemcomBox.route.staticRoute.ipv4),
                    arrayInsertTemp = [];
                    var objRoute = {
                        Enable: obj.Enable,
                        Origin: obj.Origin,
                        DestIPAddress: obj.DestIPAddress.split("/")[0],
                        ForwardingMetric: obj.ForwardingMetric,
                        GatewayIPAddress: obj.GatewayIPAddress,
                        IPVersion: obj.IPVersion,
                        Interface: "Device/IP/Interfaces/Interface[" + obj.Interface + "]",
                        DestSubnetMask: obj.DestSubnetMask,
                        Source: obj.Source
                    };
                    arrayInsertTemp.push({
                        IPv4Forwarding: objRoute
                    }),
                    arrayInsert.push(arrayInsertTemp)
                }),
                $.xmo.addChildrenMultiple({
                    aparent: arrayPaths,
                    values: arrayInsert
                }),
                !0
            } catch (e) {
                return !1
            }
        },
        removeRoutes: function(data) {
            var result;
            try {
                var delRule = [];
                $(data).each(function(idx, obj) {
                    var elem = useStaticRoute2 && "VOIP_MGMT" === obj.Interface ? $.xpaths.mySagemcomBox.route.removeFromRoute2.replace("#", this.uid) : $.xpaths.mySagemcomBox.route.remove.replace("#", this.uid);
                    delRule.push(elem)
                }),
                $.xmo.delChildren(delRule),
                result = !0
            } catch (e) {
                result = !1
            }
            return result
        }
    };
    return RouteStatic
}),
sboxApp.factory("WanSFP", function() {
    var _cache = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.sfp.interfaces)
      , WanSFP = {
        updateCache: function() {
            _cache = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.sfp.interfaces)
        },
        populate: function() {
            var rs = $.util.fixGetValuesTree(_cache)
              , realRs = [];
            for (var x in rs) {
                var eth = {};
                eth.showIt = !1,
                eth.dslStatus = rs[x].Interface.Status,
                eth.alias = rs[x].Interface.Alias,
                eth.status = rs[x].Interface.Status,
                eth.stats = rs[x].Interface.Stats,
                eth.macAddress = rs[x].Interface.MACAddress;
                var upTime = moment.duration(rs[x].Interface.ConnectionTime, "seconds");
                switch (eth.connectionTime = $.util.formatLeaseTime(upTime),
                rs[x].Interface.Status) {
                case "UP":
                    eth.statusView = "Status: Connected";
                    break;
                case "DORMANT":
                    eth.statusView = "Status: Stand-By";
                    break;
                default:
                    eth.statusView = "Status: Disconnected"
                }
                realRs.push(eth)
            }
            return {
                interfaces: realRs
            }
        }
    };
    return WanSFP
}),
sboxApp.factory("WanEthernet", function() {
    var _cache = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.eth.interfaces)
      , WanEthernet = {
        updateCache: function() {
            _cache = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.eth.interfaces)
        },
        populate: function() {
            var rs = $.util.fixGetValuesTree(_cache)
              , realRs = [];
            for (var x in rs) {
                var eth = {};
                eth.showIt = !1,
                eth.dslStatus = rs[x].Interface.Status,
                eth.phyNum = rs[x].Interface.PhyNum,
                eth.alias = rs[x].Interface.Alias,
                eth.status = rs[x].Interface.Status,
                eth.stats = rs[x].Interface.Stats,
                eth.macAddress = rs[x].Interface.MACAddress;
                var upTime = moment.duration(rs[x].ConnectionTime, "seconds");
                switch (eth.connectionTime = $.util.formatLeaseTime(upTime),
                rs[x].Interface.Status) {
                case "UP":
                    eth.statusView = "Status: Connected";
                    break;
                case "DORMANT":
                    eth.statusView = "Status: Stand-By";
                    break;
                default:
                    eth.statusView = "Status: Disconnected"
                }
                realRs.push(eth)
            }
            return {
                interfaces: realRs
            }
        }
    };
    return WanEthernet
}),
sboxApp.factory("WanDsl", [function() {
    var translateStatus = function(status) {
        switch (status) {
        case "UP":
            return "Connected";
        case "DORMANT":
            return "Stand-by";
        default:
            return "Disconnected"
        }
    }
      , cache = {}
      , WanDsl = {
        populateBonding: function() {
            var bondingList = $.xmo.getValuesTree($.xpaths.internetConnectivity.wan.availableBonding)
              , rs = [];
            return bondingList && $.each(bondingList, function(i, obj) {
                var lePush = {}
                  , upTime = moment.duration(obj.ConnectionTime, "seconds");
                lePush.connectionTimeDsl = $.util.formatLeaseTime(upTime),
                lePush.showIt = !1,
                lePush.uid = obj.uid,
                lePush.alias = obj.Alias,
                lePush.enable = obj.Enable,
                lePush.dslStatus = obj.Status,
                lePush.stats = obj.Stats,
                lePush.associatedLines = [];
                var relatedLines = obj.LowerLayers.split(",");
                $.each(relatedLines, function(cont, associatedLine) {
                    var lineAlias = associatedLine.replace(/.*\[|\].*/gi, "");
                    lePush.associatedLines.push(lineAlias)
                }),
                rs.push(lePush)
            }),
            rs
        },
        populate: function() {
            var lineList = $.xmo.getValuesTree({
                lines: $.xpaths.internetConnectivity.wan.availableLines,
                globalWanMode: $.xpaths.internetConnectivity.wan.globalWanMode
            });
            cache = lineList;
            var globalWanMode = lineList && lineList.globalWanMode ? lineList.globalWanMode : "";
            lineList = lineList && lineList.lines ? lineList.lines : [];
            var modulationsSupported = $.xmo.getCapability($.xpaths.internetConnectivity.wan.dslWanInterfaces.standardUsed);
            modulationsSupported = modulationsSupported && modulationsSupported.restrictions ? modulationsSupported.restrictions["enum-values"] : null;
            var rs = [];
            return $.each(lineList, function(i, obj) {
                var lePush = {}
                  , upTime = moment.duration(obj.ConnectionTime, "seconds");
                lePush.connectionTimeDsl = $.util.formatLeaseTime(upTime),
                lePush.showIt = !1,
                lePush.dslStatus = translateStatus(obj.Status),
                lePush.status = obj.Status,
                lePush.uid = obj.uid,
                lePush.alias = obj.Alias,
                lePush.enable = obj.Enable,
                lePush.standardUsed = obj.StandardUsed,
                lePush.currentProfile = obj.CurrentProfile,
                lePush.stats = obj.Stats,
                lePush.standardChosen = [];
                var standards = obj.StandardsSupported.split(",");
                for (var x in standards)
                    for (var y in modulationsSupported)
                        standards[x] === modulationsSupported[y].name && lePush.standardChosen.push(modulationsSupported[y]);
                $.map(modulationsSupported, function(mod) {
                    return mod.description = $.constants.xdslStandards[mod.name.toUpperCase()] + " (" + mod.name + ")",
                    mod.type = $.constants.xdslStandards[mod.name.toUpperCase()],
                    obj.StandardUsed === mod.name && (lePush.standardUsed = mod),
                    obj
                });
                var interleaveXpath = $.xpaths.internetConnectivity.wan.relatedChannel.replace("#", obj.Alias)
                  , interleaveInfo = $.xmo.getValuesTree(interleaveXpath);
                interleaveInfo && (interleaveInfo = interleaveInfo.Channel,
                lePush.interleaveDownstream = interleaveInfo.ActualInterleavingDelay,
                lePush.interleaveUpstream = interleaveInfo.ActualInterleavingDelayus,
                lePush.currentMode = "Fast Path",
                (lePush.interleaveDownstream || lePush.interleaveUpstream) && "Connected" === lePush.dslStatus && (lePush.currentMode = "Interleave")),
                rs.push(lePush)
            }),
            {
                lines: rs,
                globalWanMode: globalWanMode,
                bondings: this.populateBonding(),
                modulationsSupported: modulationsSupported
            }
        },
        save: function(dataLines, dataBonding, globalWanMode) {
            var dataMap = {};
            try {
                return globalWanMode && cache.globalWanMode !== globalWanMode && (dataMap[$.xpaths.internetConnectivity.wan.globalWanMode] = globalWanMode),
                $.each(dataLines, function(i, obj) {
                    obj.currentMode && ("Connected" === obj.dslStatus && "Interleave" === obj.currentMode ? (obj.interleaveDownstream = obj.interleaveDownstream,
                    obj.interleaveUpstream = obj.interleaveUpstream) : (obj.interleaveDownstream = 0,
                    obj.interleaveUpstream = 0),
                    dataMap[$.xpaths.internetConnectivity.wan.dslWanInterfaces.DownStream.replace("#", obj.uid)] = obj.interleaveDownstream,
                    dataMap[$.xpaths.internetConnectivity.wan.dslWanInterfaces.UpStream.replace("#", obj.uid)] = obj.interleaveUpstream),
                    obj.modulationSupported = "";
                    for (var x in obj.standardChosen)
                        obj.modulationSupported = obj.modulationSupported + "," + obj.standardChosen[x].name;
                    obj.modulationSupported = obj.modulationSupported.replace(",", ""),
                    dataMap[$.xpaths.internetConnectivity.wan.dslWanInterfaces.enable.replace("#", obj.uid)] = obj.enable,
                    dataMap[$.xpaths.internetConnectivity.wan.dslWanInterfaces.currentProfile.replace("#", obj.uid)] = obj.currentProfile,
                    dataMap[$.xpaths.internetConnectivity.wan.dslWanInterfaces.standardsSupported.replace("#", obj.uid)] = obj.modulationSupported
                }),
                dataBonding && $.each(dataBonding, function(i, obj) {
                    dataMap[$.xpaths.internetConnectivity.wan.dslWanInterfaces.bondingEnable.replace("#", obj.uid)] = obj.enable
                }),
                $.xmo.setValuesFlat(dataMap),
                !0
            } catch (e) {
                return !1
            }
        },
        remove: function() {}
    };
    return WanDsl
}
]),
sboxApp.factory("QoSShaper", function() {
    var factoryFields = ["Enable", "Alias", "Interface", "Status", "ShapingRate", "ShapingBurstSize"]
      , QoSShaper = {
        populate: function() {
            var shaperList = $.util.fixGetValuesTree($.xmo.getValuesTree($.xpaths.internetConnectivity.qos.shaper.allList));
            return shaperList[0]
        },
        save: function(data) {
            try {
                var obj = {};
                return $.each(factoryFields, function(i, field) {
                    obj[field] = data[field]
                }),
                $.xmo.addChild($.xpaths.internetConnectivity.qos.shaper.allList.list, {
                    Shaper: obj
                }),
                !0
            } catch (e) {
                return !1
            }
        },
        update: function(data) {
            var dataMap = {};
            try {
                return void 0 === data.list.length && (data.list = [data]),
                $.each(data.list, function(j, obj) {
                    obj.shapingUnit || (obj.ShapingRate = -1),
                    $.each(factoryFields, function(i, field) {
                        dataMap[$.xpaths.internetConnectivity.qos.shaper.update.base.replace("#", obj.uid) + field] = obj[field]
                    })
                }),
                dataMap[$.xpaths.internetConnectivity.qos.shaper.allList.dscpMark] = data.dscpMark,
                $.xmo.setValuesFlat(dataMap),
                !0
            } catch (e) {
                return !1
            }
        },
        remove: function(data) {
            try {
                return $.xmo.delChild($.xpaths.internetConnectivity.qos.shaper.remove.replace("#", data.uid)),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return QoSShaper
}),
sboxApp.factory("QosQueue", [function() {
    var QosQueue = {
        populate: function() {
            var result = {}
              , queueList = $.util.fixGetValuesTree($.xmo.getValuesTree($.xpaths.internetConnectivity.qos.queue));
            return result.schedulerList = QosQueue.getScheduler(queueList[0]),
            result.objList = queueList,
            result.interfaceList = QosQueue.getInterfaces(),
            result
        },
        getScheduler: function(data) {
            var r = []
              , schedulerList = $.xmo.getCapability($.xpaths.internetConnectivity.qos.schedulerAlgorithmList.replace("#", data.uid));
            return schedulerList = schedulerList.restrictions["enum-values"],
            $.each(schedulerList, function(i, obj) {
                r.push(obj.name)
            }),
            r
        },
        getInterfaces: function() {
            var result = $.xmo.getValuesTree($.xpaths.internetConnectivity.qos.interfaces)
              , interfaceList = [];
            return $.each(result.ethernetLinks, function(i, obj) {
                var tmp = {};
                tmp.alias = obj.Alias,
                tmp.name = obj.Name,
                interfaceList.push(tmp)
            }),
            $.each(result.ptmLinks, function(i, obj) {
                var tmp = {};
                tmp.alias = obj.Alias,
                tmp.name = obj.Name,
                interfaceList.push(tmp)
            }),
            $.each(result.atmLinks, function(i, obj) {
                var tmp = {};
                tmp.alias = obj.Alias,
                tmp.name = obj.Name,
                interfaceList.push(tmp)
            }),
            interfaceList
        },
        save: function(data) {
            try {
                data.shapingUnit || (data.ShapingRate = -1);
                var objSave = {
                    Enable: data.Enable,
                    Alias: data.Alias,
                    Interface: data.Interface,
                    Precedence: data.Precedence,
                    Weight: data.Weight,
                    SchedulerAlgorithm: data.SchedulerAlgorithm,
                    MinimRate: data.MinimRate,
                    ShapingRate: data.ShapingRate,
                    ShapingBurstSize: data.ShapingBurstSize
                };
                return $.xmo.addChild($.xpaths.internetConnectivity.qos.queue, {
                    Queue: objSave
                }),
                !0
            } catch (e) {
                return !1
            }
        },
        update: function(data) {
            var dataMap = {};
            try {
                return data.shapingUnit || (data.ShapingRate = -1),
                dataMap[$.xpaths.internetConnectivity.qos.update.enable.replace("#", data.uid)] = data.Enable,
                dataMap[$.xpaths.internetConnectivity.qos.update.interfac.replace("#", data.uid)] = data.Interface,
                dataMap[$.xpaths.internetConnectivity.qos.update.precedence.replace("#", data.uid)] = data.Precedence,
                dataMap[$.xpaths.internetConnectivity.qos.update.weigth.replace("#", data.uid)] = data.Weight,
                dataMap[$.xpaths.internetConnectivity.qos.update.schedulerAlgorithm.replace("#", data.uid)] = data.SchedulerAlgorithm,
                dataMap[$.xpaths.internetConnectivity.qos.update.minimRate.replace("#", data.uid)] = data.MinimRate,
                dataMap[$.xpaths.internetConnectivity.qos.update.shapingRate.replace("#", data.uid)] = data.ShapingRate,
                dataMap[$.xpaths.internetConnectivity.qos.update.shapingBurstSize.replace("#", data.uid)] = data.ShapingBurstSize,
                $.xmo.setValuesFlat(dataMap),
                !0
            } catch (e) {
                return !1
            }
        },
        remove: function(data) {
            try {
                return $.xmo.delChild($.xpaths.internetConnectivity.qos.remove.replace("#", data.uid)),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return QosQueue
}
]),
sboxApp.factory("EthernetLink", ["VLAN", "PPPoE", "IPoE", "PTM", "ATM", "WanEthernet", "WanSFP", function(VLAN, PPPoE, IPoE, PTM, ATM, WanEthernet, WanSFP) {
    var EthernetLink = {
        getEthLinkUp: function() {
            var ethUps = $.util.fixGetValuesTree($.xmo.getValuesTree($.xpaths.internetConnectivity.wan.eth.links))
              , result = []
              , layer1 = null
              , layer2 = null
              , layer3 = null;
            return ethUps.shift(),
            $.each(ethUps, function(i, ethObj) {
                layer3 = null,
                layer2 = EthernetLink.getLayer2(ethObj.Link),
                layer1 = EthernetLink.getLayer1(layer2),
                layer2 === ethObj.Link && (layer2 = layer1[0]);
                var layer2Alias = layer2 && layer2.alias ? layer2.alias : "";
                return layer3 = EthernetLink.getLayer3(ethObj.Link, layer2Alias || layer1[0]),
                layer2 && !layer3 ? !0 : void $.each(layer1, function(j, layerStr) {
                    result.push({
                        layer1: layerStr,
                        layer2: layer2,
                        layer3: layer3
                    })
                })
            }),
            result
        },
        getLayer2: function(ethUp) {
            var layer2 = null
              , isPtm = ethUp.LowerLayers.indexOf("PTM") > -1
              , isAtm = ethUp.LowerLayers.indexOf("ATM") > -1;
            if (isPtm) {
                var ptmList = PTM.populate();
                $.each(ptmList, function(j, objPtm) {
                    objPtm.name === ethUp.LowerLayers && (layer2 = objPtm,
                    layer2.type = "ptm",
                    layer2.selected = objPtm.alias)
                })
            } else if (isAtm) {
                var atmList = ATM.populate();
                $.each(atmList, function(i, objAtms) {
                    $.each(objAtms, function(j, objAtm) {
                        objAtm.name === ethUp.LowerLayers && (layer2 = objAtm,
                        layer2.type = "atm",
                        layer2.selected = j)
                    })
                })
            } else
                layer2 = ethUp;
            return layer2
        },
        getLayer1: function(layer2) {
            var layer1 = [];
            if (layer2 && layer2.type) {
                var objList;
                "ptm" === layer2.type ? (objList = PTM.populate(),
                $.each(objList, function(j, obj) {
                    return obj.name === layer2.name ? (layer1 = $.constants.dslChannels[$.util.getAliasFromXPath(obj.lowerLayers)] ? [$.constants.dslChannels[$.util.getAliasFromXPath(obj.lowerLayers)]] : [$.util.getAliasFromXPath(obj.lowerLayers)],
                    !1) : void 0
                })) : (objList = ATM.populate(),
                $.each(objList, function(j, atmList) {
                    $.each(atmList, function(i, atmObj) {
                        return atmObj.Name === layer2.Name ? (layer1.push(j),
                        !1) : void 0
                    })
                }))
            } else {
                var ll, eth = WanEthernet.populate(), sfp = WanSFP.populate(), arrayLowerLayer = layer2.LowerLayers.split(","), leFunction = function(i, obj) {
                    return obj.alias && obj.alias === ll && "UP" === obj.status ? (layer1 = [obj.alias],
                    !1) : void 0
                };
                for (var x in arrayLowerLayer)
                    ll = $.util.getAliasFromXPath(arrayLowerLayer[x]),
                    ll.indexOf("ETH") > -1 || ll.indexOf("PHY") > -1 ? $(eth.interfaces).each(leFunction) : ll.indexOf("SFP") > -1 && $(sfp.interfaces).each(leFunction)
            }
            return layer1
        },
        getLayer3: function(EthernetLinkObj, layer2Alias) {
            var layer3 = null
              , x = null
              , vlan = VLAN.search({
                EthernetLinkName: EthernetLinkObj.Name
            })
              , pppInterfaces = PPPoE.populate()
              , pppInterfaceList = pppInterfaces[layer2Alias];
            for (x in pppInterfaceList)
                (pppInterfaceList[x].vlan && pppInterfaceList[x].vlan.Alias === vlan.Alias || $.inArray(EthernetLinkObj.Name, pppInterfaceList[x].leInterface.lowerLayers) > -1) && "UP" === pppInterfaceList[x].leInterface.status && (layer3 = pppInterfaceList[x],
                layer3.type = "ppp");
            var ipInterfaces = IPoE.populate()
              , ipInterfaceList = ipInterfaces[layer2Alias];
            for (x in ipInterfaceList)
                (ipInterfaceList[x].vlan && ipInterfaceList[x].vlan.Alias === vlan.Alias || $.inArray(EthernetLinkObj.Name, ipInterfaceList[x].leInterface.lowerLayers) > -1) && "UP" === ipInterfaceList[x].leInterface.status && (layer3 = ipInterfaceList[x],
                layer3.type = "ip");
            return layer3
        }
    };
    return EthernetLink
}
]),
sboxApp.factory("CheckFeature", ["Auth", "$rootScope", "$basicInfo", function(Auth, $rootScope, $basicInfo) {
    var CheckFeature = {
        cache: null,
        hardwareVersion: $basicInfo.getHardwareVersion(),
        networkMode: $basicInfo.getNetworkMode(),
        provisioningMode: $basicInfo.getProvisioningMode(),
        mapEnable: "",
        bridgeMode: !1,
        updateCache: function(force) {
            (!this.cache && $.xmo.loggedin() || force === !0) && (this.cache = $.xmo.getValuesTree($.xpaths.checkFeaturesAvailable),
            this.hardwareVersion = this.cache.hardwareVersion,
            this.networkMode = this.cache.networkMode || "",
            this.provisioningMode = this.cache.provisioningMode || "",
            this.mapEnable = this.cache.mapEnable,
            this.bridgeMode = this.cache.bridgeMode === !0)
        },
        go: function(filter) {
            var hasFeatureAccess, checkUserPermision = !0, bridgedBlockedFeatures = $.config.bridgedBlockedFeatures || $.constants.bridgedBlockedFeatures, user = $basicInfo.getLoggedUser();
            hasFeatureAccess = user && $.config.featureAccess && null !== $.config.featureAccess[user] && void 0 !== $.config.featureAccess[user] && $.config.featureAccess[user][filter] === !1 ? $.config.featureAccess[user][filter] : !0;
            var removeTheElement = !1;
            if (user && $.config.showedpages[filter] && $.config.featureAccessByFeature && $.config.featureAccessByFeature[filter] && (removeTheElement = $.config.featureAccessByFeature[filter].indexOf(user) > -1 ? !1 : !0),
            $.util.hasFeature("bridgeModeBlockPages") && bridgedBlockedFeatures && bridgedBlockedFeatures.length && Auth.isLoggedIn()) {
                var blocked = !1;
                if (this.bridgeMode === !0 && $.each(bridgedBlockedFeatures, function(i, blockedFeature) {
                    return blockedFeature.feature === filter ? (blocked = !0,
                    !1) : void 0
                }),
                blocked)
                    return !1
            }
            if ($.config.userPermissionsChanges && $.config.userPermissionsChanges[$rootScope.modeSelected] && $.config.userPermissionsChanges[$rootScope.modeSelected][filter] && (checkUserPermision = $.config.userPermissionsChanges[$rootScope.modeSelected][filter].enable),
            $.config.showedpages[filter] && (null !== this.hardwareVersion || null !== this.networkMode))
                if (void 0 !== $.config.showedpages[filter].models)
                    for (var model in $.config.showedpages[filter].models)
                        this.hardwareVersion && this.hardwareVersion.indexOf(model) > -1 && ($.config.showedpages[filter].enable = $.config.showedpages[filter].models[model]);
                else if (void 0 !== $.config.showedpages[filter].modes)
                    for (var mode in $.config.showedpages[filter].modes)
                        (this.networkMode.indexOf(mode) > -1 || this.provisioningMode.indexOf(mode) > -1) && ($.config.showedpages[filter].enable = $.config.showedpages[filter].modes[mode]);
            return "simpleIpv4" === filter && $.config.checkMapEnable === !0 && $.config.showedpages[filter] && $.config.showedpages[filter].enable === !0 && this.mapEnable === !0 ? !1 : !$.config.showedpages[filter] || $.config.showedpages[filter].enable !== !1 && checkUserPermision !== !1 && hasFeatureAccess !== !1 && removeTheElement !== !0 ? this.cache && null === this.cache[filter] ? !1 : !0 : !1
        },
        rename: function(filter) {
            return $.config.showedpages[filter] && $.config.showedpages[filter].rename ? $.config.showedpages[filter].rename : ""
        }
    };
    return CheckFeature
}
]),
sboxApp.factory("RouteChecker", ["$state", function($state) {
    var _routes, _bridgedBlockedFeatures, _bridgeBlockedFeaturesMap, _init = function() {
        _routes = $state.get(),
        _bridgedBlockedFeatures = $.config.bridgedBlockedFeatures || $.constants.bridgedBlockedFeatures,
        _bridgeBlockedFeaturesMap = {},
        $.each(_bridgedBlockedFeatures, function(i, blockedFeature) {
            blockedFeature.state && (_bridgeBlockedFeaturesMap[blockedFeature.state] = blockedFeature)
        })
    }, _getRoutes = function(expr) {
        return expr && _routes ? $.grep(_routes, function(route) {
            return !!route && expr.test(route.name)
        }) : _routes || []
    }, _isAllowedInBridgeMode = function(stateName) {
        var isAllowed = !0;
        return $.each(_bridgedBlockedFeatures, function(i, blockedFeature) {
            if (!blockedFeature.state)
                return !0;
            var blockedStateExp = new RegExp("^" + blockedFeature.state);
            return blockedStateExp.test(stateName) ? (isAllowed = !1,
            !1) : void 0
        }),
        isAllowed
    }, _getSiblingRoutes = function(stateName) {
        if (!stateName)
            return [];
        var parentState = stateName.replace(/\.[a-z0-9]+$/i, "");
        return _getRoutes(new RegExp("^" + parentState + "\\."))
    }, _getDynamicRoutes = function(stateName) {
        if ($.config.dynamicRoute) {
            var dynamicRoute;
            return $.each($.config.dynamicRoute, function(dynStateName, dynRoute) {
                return new RegExp("\\." + dynStateName + "\\.").test(stateName) ? (dynamicRoute = dynRoute,
                !1) : void 0
            }),
            dynamicRoute
        }
    }, RouteChecker = {
        getRoutes: _getRoutes,
        getSiblingRoutes: _getSiblingRoutes,
        isAllowedInBridgeMode: _isAllowedInBridgeMode,
        getDynamicRoutes: _getDynamicRoutes
    };
    return _init(),
    RouteChecker
}
]),
sboxApp.factory("Sip", [function() {
    var hasVoiceMail = {}
      , cache = $.xmo.getValuesTree($.xpaths.voice.sip.general)
      , physIntefaces = $.xmo.getValuesTree($.xpaths.voice.sip.phyInterfaces)
      , _getLineAdvancedStatusProperties = function(line) {
        var tmpProperties = {
            hookState: "",
            regExpTime: "",
            reRegTime: ""
        };
        if (line && line.LineStatus) {
            var lineStatus = line.LineStatus;
            tmpProperties.hookState = lineStatus.HookState,
            tmpProperties.regExpTime = lineStatus.RegExpTime,
            tmpProperties.reRegTime = lineStatus.ReRegTime
        }
        return tmpProperties
    }
      , Sip = {
        updateCache: function() {
            cache = $.xmo.getValuesTree($.xpaths.voice.sip.general),
            physIntefaces = $.xmo.getValuesTree($.xpaths.voice.sip.phyInterfaces)
        },
        getVoiceStatus: function() {
            return $.xmo.getValuesTree($.xpaths.voice.sip.voiceStatus)
        },
        getEndPointsByLine: function(physReference) {
            var endpoints = [];
            if (void 0 !== physReference) {
                var result = physReference.split(",");
                for (var x in result)
                    for (var y in physIntefaces)
                        if (physIntefaces[y].InterfaceID === parseInt(result[x], 10)) {
                            endpoints.push(physIntefaces[y]);
                            break
                        }
            }
            return endpoints
        },
        getEndPoints: function() {
            return physIntefaces
        },
        populate: function() {
            try {
                var arrayReturn = []
                  , tempObj = {}
                  , tempCodecs = []
                  , self = this;
                return self.updateCache(),
                $.each(cache, function(x) {
                    tempObj = {
                        uid: cache[x].uid,
                        name: cache[x].Name,
                        enable: cache[x].Enable === $.constants.ENABLED,
                        type: cache[x].SignalingProtocol,
                        localSelection: cache[x].Region,
                        voipDialpan: cache[x].DigitMap,
                        enableT38: cache[x].FaxT38.Enable,
                        enableV18: null,
                        dscpSIP: null,
                        dscpRTP: null,
                        dtmfRelay: null,
                        hookFlashRelay: null,
                        sipTrasportProtocol: null,
                        cidSignalProtocol: null,
                        enableSipTagMatching: null,
                        musicServer: null,
                        musicServerPort: null,
                        lines: []
                    },
                    cache[x].SIP && (tempObj.sipProxyPort = cache[x].SIP.ProxyServerPort,
                    tempObj.sipRegisterPort = cache[x].SIP.RegistrarServerPort,
                    tempObj.sipUserAgentAddress = cache[x].SIP.UserAgentDomain,
                    tempObj.sipUserAgentPort = cache[x].SIP.UserAgentPort,
                    tempObj.sipOutboundAddress = cache[x].SIP.OutboundProxy,
                    tempObj.sipOutboundPort = cache[x].SIP.OutboundProxyPort,
                    tempObj.sipOutboundInternalAddress = cache[x].SIP.OutboundProxyInternal,
                    tempObj.registrationExpireTimeout = cache[x].SIP.RegisterExpires);
                    for (var y = 0; y < cache[x].Lines.length; y++) {
                        tempCodecs = [];
                        for (var z = 0; z < cache[x].Lines[y].Codec.Lists.length; z++)
                            tempCodecs.push({
                                enable: cache[x].Lines[y].Codec.Lists[z].Enable,
                                codec: cache[x].Lines[y].Codec.Lists[z].Codec,
                                preferredPeriod: cache[x].Lines[y].Codec.Lists[z].PreferredPacketisationPeriod,
                                priority: cache[x].Lines[y].Codec.Lists[z].Priority,
                                uidCodec: cache[x].Lines[y].Codec.Lists[z].uid
                            });
                        var voiceMailTmp = /(Mailbox\d+)/i.exec(cache[x].Lines[y].VoiceMail);
                        voiceMailTmp = voiceMailTmp ? voiceMailTmp[1] : "",
                        hasVoiceMail[cache[x].Lines[y].uid] = void 0 !== cache[x].Lines[y].VoiceMail;
                        var tmpLineAdvancedProps = _getLineAdvancedStatusProperties(cache[x].Lines[y]);
                        tempObj.lines.push({
                            uid: cache[x].Lines[y].uid,
                            name: cache[x].Lines[y].Name,
                            enable: cache[x].Lines[y].Enable === $.constants.ENABLED,
                            directoryNumber: cache[x].Lines[y].DirectoryNumber,
                            DTMF: cache[x].DTMFMethod,
                            preferredPeriod: cache[x].Lines[y].Codec.Lists[0].PreferredPacketisationPeriod,
                            preferredCodecs: tempCodecs,
                            callWaiting: cache[x].Lines[y].CallingFeatures.CallWaitingEnable,
                            callFwNumber: cache[x].Lines[y].CallingFeatures.CallForwardUnconditionalNumber,
                            fwUnconditionally: cache[x].Lines[y].CallingFeatures.CallForwardUnconditionalEnable,
                            fwOnBusy: cache[x].Lines[y].CallingFeatures.CallForwardOnBusyEnable,
                            fwOnNoAnswer: cache[x].Lines[y].CallingFeatures.CallForwardOnNoAnswerEnable,
                            callBarring: null,
                            callBarringPin: null,
                            callBarringDigitMap: null,
                            warmLine: null,
                            warmLineNumber: null,
                            anonymousCallBlocking: cache[x].Lines[y].CallingFeatures.AnonymousCallBlockEnable,
                            anonymousCalling: cache[x].Lines[y].CallingFeatures.AnonymousCalEnable,
                            dnd: cache[x].Lines[y].CallingFeatures.DoNotDisturbEnable,
                            physInterfaces: self.getEndPointsByLine(cache[x].Lines[y].PhyReferenceList),
                            status: cache[x].Lines[y].Status,
                            statusReason: cache[x].Lines[y].StatusReason,
                            callState: cache[x].Lines[y].CallState,
                            hotLineWarmLineURI: cache[x].Lines[y].CallingFeatures.HotLineWarmLineURI,
                            hotLineEnable: cache[x].Lines[y].CallingFeatures.HotLineEnable,
                            CallerIDEnable: cache[x].Lines[y].CallingFeatures.CallerIDEnable,
                            CallerIDNameEnable: cache[x].Lines[y].CallingFeatures.CallerIDNameEnable,
                            CallerIDName: cache[x].Lines[y].CallingFeatures.CallerIDName,
                            CallForwardUnconditionalNumber: cache[x].Lines[y].CallingFeatures.CallForwardUnconditionalNumber,
                            CallForwardOnBusyNumber: cache[x].Lines[y].CallingFeatures.CallForwardOnBusyNumber,
                            CallForwardOnNoAnswerNumber: cache[x].Lines[y].CallingFeatures.CallForwardOnNoAnswerNumber,
                            CallForwardUnconditionalEnable: cache[x].Lines[y].CallingFeatures.CallForwardUnconditionalEnable,
                            CallForwardOnBusyEnable: cache[x].Lines[y].CallingFeatures.CallForwardOnBusyEnable,
                            CallForwardOnNoAnswerEnable: cache[x].Lines[y].CallingFeatures.CallForwardOnNoAnswerEnable,
                            CallWaitingEnable: cache[x].Lines[y].CallingFeatures.CallWaitingEnable,
                            CallParkingEnable: cache[x].Lines[y].CallingFeatures.CallParkingEnable,
                            CallParkingTimeout: cache[x].Lines[y].CallingFeatures.CallParkingTimeout,
                            AnonymousCallBlockEnable: cache[x].Lines[y].CallingFeatures.AnonymousCallBlockEnable,
                            AnonymousCalEnable: cache[x].Lines[y].CallingFeatures.AnonymousCalEnable,
                            DoNotDisturbEnable: cache[x].Lines[y].CallingFeatures.DoNotDisturbEnable,
                            OutgoingCallEnable: cache[x].Lines[y].CallingFeatures.OutgoingCallEnable,
                            VoiceMail: voiceMailTmp,
                            hookState: tmpLineAdvancedProps.hookState,
                            regExpTime: tmpLineAdvancedProps.regExpTime,
                            reRegTime: tmpLineAdvancedProps.reRegTime
                        }),
                        cache[x].Lines[y].SIP && (tempObj.lines[tempObj.lines.length - 1].uri = cache[x].Lines[y].SIP.URI,
                        tempObj.lines[tempObj.lines.length - 1].authName = cache[x].Lines[y].SIP.AuthUserName,
                        tempObj.lines[tempObj.lines.length - 1].authPassword = cache[x].Lines[y].SIP.AuthPassword)
                    }
                    arrayReturn.push(tempObj)
                }),
                arrayReturn
            } catch (err) {
                return null
            }
        },
        saveProfile: function(data) {
            var result = !1;
            try {
                var dataSave = {};
                dataSave[$.xpaths.voice.sip.profile.enable.replace("#profile#", data.uid)] = data.enable ? $.constants.ENABLED : $.constants.DISABLED,
                dataSave[$.xpaths.voice.sip.profile.type.replace("#profile#", data.uid)] = data.type,
                dataSave[$.xpaths.voice.sip.profile.localSelection.replace("#profile#", data.uid)] = data.localSelection,
                dataSave[$.xpaths.voice.sip.profile.voipDialpan.replace("#profile#", data.uid)] = data.voipDialpan,
                dataSave[$.xpaths.voice.sip.profile.sipProxyPort.replace("#profile#", data.uid)] = data.sipProxyPort,
                dataSave[$.xpaths.voice.sip.profile.sipRegisterPort.replace("#profile#", data.uid)] = data.sipRegisterPort,
                dataSave[$.xpaths.voice.sip.profile.sipUserAgentAddress.replace("#profile#", data.uid)] = data.sipUserAgentAddress,
                dataSave[$.xpaths.voice.sip.profile.sipUserAgentPort.replace("#profile#", data.uid)] = data.sipUserAgentPort,
                dataSave[$.xpaths.voice.sip.profile.sipOutboundAddress.replace("#profile#", data.uid)] = data.sipOutboundAddress,
                dataSave[$.xpaths.voice.sip.profile.sipOutboundPort.replace("#profile#", data.uid)] = data.sipOutboundPort,
                data.sipOutboundInternalAddress && (dataSave[$.xpaths.voice.sip.profile.sipOutboundInternalAddress.replace("#profile#", data.uid)] = data.sipOutboundInternalAddress),
                dataSave[$.xpaths.voice.sip.profile.enableT38.replace("#profile#", data.uid)] = data.enableT38,
                dataSave[$.xpaths.voice.sip.profile.registrationExpireTimeout.replace("#profile#", data.uid)] = data.registrationExpireTimeout,
                $.xmo.setValuesFlat(dataSave),
                result = !0
            } catch (e) {
                result = !1
            }
            return result
        },
        saveLine: function(profileId, data, options) {
            var result = !1;
            try {
                var dataSave = {};
                if (dataSave[$.xpaths.voice.sip.line.enable.replace("#line#", data.uid).replace("#profile#", profileId)] = data.enable ? $.constants.ENABLED : $.constants.DISABLED,
                dataSave[$.xpaths.voice.sip.line.directoryNumber.replace("#line#", data.uid).replace("#profile#", profileId)] = data.directoryNumber,
                dataSave[$.xpaths.voice.sip.line.authName.replace("#line#", data.uid).replace("#profile#", profileId)] = data.authName ? data.authName : "",
                dataSave[$.xpaths.voice.sip.line.authPassword.replace("#line#", data.uid).replace("#profile#", profileId)] = data.authPassword ? data.authPassword : "",
                dataSave[$.xpaths.voice.sip.line.CallerIDEnable.replace("#line#", data.uid).replace("#profile#", profileId)] = data.CallerIDEnable,
                dataSave[$.xpaths.voice.sip.line.uri.replace("#line#", data.uid).replace("#profile#", profileId)] = data.uri ? data.uri : "",
                dataSave[$.xpaths.voice.sip.line.CallerIDNameEnable.replace("#line#", data.uid).replace("#profile#", profileId)] = data.CallerIDNameEnable,
                dataSave[$.xpaths.voice.sip.line.CallerIDName.replace("#line#", data.uid).replace("#profile#", profileId)] = data.CallerIDName,
                dataSave[$.xpaths.voice.sip.callFowarding.callForwardUncondicionalNumber.replace("#line#", data.uid).replace("#profile#", profileId)] = data.CallForwardUnconditionalNumber,
                dataSave[$.xpaths.voice.sip.callFowarding.callForwardOnBusyNumber.replace("#line#", data.uid).replace("#profile#", profileId)] = data.CallForwardUnconditionalNumber,
                dataSave[$.xpaths.voice.sip.callFowarding.callForwardOnNoAnswerNumber.replace("#line#", data.uid).replace("#profile#", profileId)] = data.CallForwardUnconditionalNumber,
                dataSave[$.xpaths.voice.sip.callFowarding.callForwardUncondicionalEnable.replace("#line#", data.uid).replace("#profile#", profileId)] = data.CallForwardUnconditionalEnable,
                dataSave[$.xpaths.voice.sip.callFowarding.callForwardOnBusyEnable.replace("#line#", data.uid).replace("#profile#", profileId)] = data.CallForwardOnBusyEnable,
                dataSave[$.xpaths.voice.sip.callFowarding.callForwardOnNoAnswerEnable.replace("#line#", data.uid).replace("#profile#", profileId)] = data.CallForwardOnNoAnswerEnable,
                dataSave[$.xpaths.voice.sip.line.CallWaitingEnable.replace("#line#", data.uid).replace("#profile#", profileId)] = data.CallWaitingEnable,
                dataSave[$.xpaths.voice.sip.line.CallParkingEnable.replace("#line#", data.uid).replace("#profile#", profileId)] = data.CallParkingEnable,
                dataSave[$.xpaths.voice.sip.line.CallParkingTimeout.replace("#line#", data.uid).replace("#profile#", profileId)] = data.CallParkingTimeout,
                dataSave[$.xpaths.voice.sip.line.AnonymousCallBlockEnable.replace("#line#", data.uid).replace("#profile#", profileId)] = data.AnonymousCallBlockEnable,
                dataSave[$.xpaths.voice.sip.line.AnonymousCalEnable.replace("#line#", data.uid).replace("#profile#", profileId)] = data.AnonymousCalEnable,
                dataSave[$.xpaths.voice.sip.line.DoNotDisturbEnable.replace("#line#", data.uid).replace("#profile#", profileId)] = data.DoNotDisturbEnable,
                dataSave[$.xpaths.voice.sip.line.OutgoingCallEnable.replace("#line#", data.uid).replace("#profile#", profileId)] = data.OutgoingCallEnable,
                $.config.showedpages.totalplay && $.config.showedpages.totalplay.enable && angular.forEach(data.preferredCodecs, function(codecs) {
                    dataSave[$.xpaths.voice.sip.line.preferredPeriod.replace("#line#", data.uid).replace("#profile#", profileId).replace("#codec#", codecs.uidCodec)] = codecs.preferredPeriod,
                    dataSave[$.xpaths.voice.sip.line.priority.replace("#line#", data.uid).replace("#profile#", profileId).replace("#codec#", codecs.uidCodec)] = codecs.priority,
                    dataSave[$.xpaths.voice.sip.line.enableCodec.replace("#line#", data.uid).replace("#profile#", profileId).replace("#codec#", codecs.uidCodec)] = codecs.enable
                }),
                $.config.showedpages.DTMFTransmissionMode && $.config.showedpages.DTMFTransmissionMode.enable && (dataSave[$.xpaths.voice.sip.line.DTMF.replace("#line#", data.uid).replace("#profile#", profileId)] = data.DTMF),
                hasVoiceMail[data.uid]) {
                    var mailBoxLink = $.xpaths.voice.answeringMachine.lineLink.replace("#", data.VoiceMail);
                    dataSave[$.xpaths.voice.sip.line.VoiceMail.replace("#line#", data.uid).replace("#profile#", profileId)] = mailBoxLink
                }
                $.xmo.setValuesFlat(dataSave, options),
                result = !0
            } catch (e) {
                result = !1
            }
            return result
        },
        saveLinesCallFowarding: function(profileId, data) {
            var result = !1;
            try {
                var dataSave = {};
                for (var x in data)
                    dataSave[$.xpaths.voice.sip.callFowarding.callForwardUncondicionalNumber.replace("#line#", data[x].uid).replace("#profile#", profileId)] = data[x].CallForwardUnconditionalNumber,
                    dataSave[$.xpaths.voice.sip.callFowarding.callForwardOnBusyNumber.replace("#line#", data[x].uid).replace("#profile#", profileId)] = data[x].CallForwardOnBusyNumber,
                    dataSave[$.xpaths.voice.sip.callFowarding.callForwardOnNoAnswerNumber.replace("#line#", data[x].uid).replace("#profile#", profileId)] = data[x].CallForwardOnNoAnswerNumber,
                    dataSave[$.xpaths.voice.sip.callFowarding.callForwardUncondicionalEnable.replace("#line#", data[x].uid).replace("#profile#", profileId)] = data[x].CallForwardUnconditionalEnable,
                    dataSave[$.xpaths.voice.sip.callFowarding.callForwardOnBusyEnable.replace("#line#", data[x].uid).replace("#profile#", profileId)] = data[x].CallForwardOnBusyEnable,
                    dataSave[$.xpaths.voice.sip.callFowarding.callForwardOnNoAnswerEnable.replace("#line#", data[x].uid).replace("#profile#", profileId)] = data[x].CallForwardOnNoAnswerEnable;
                $.xmo.setValuesFlat(dataSave),
                result = !0
            } catch (e) {
                result = !1
            }
            return result
        },
        saveEndPoint: function(data) {
            var result = !1;
            try {
                var dataSave = {};
                dataSave[$.xpaths.voice.sip.endPoints.Description.replace("#idEndPoint#", data.uid)] = data.Description,
                dataSave[$.xpaths.voice.sip.endPoints.FlashhookEnable.replace("#idEndPoint#", data.uid)] = data.FlashhookEnable,
                dataSave[$.xpaths.voice.sip.endPoints.ForceDTMFInband.replace("#idEndPoint#", data.uid)] = data.ForceDTMFInband,
                $.xmo.setValuesFlat(dataSave),
                result = !0
            } catch (e) {
                result = !1
            }
            return result
        },
        getCallerID: function() {
            var dataMap = {
                callerIdDateTime1st: $.xpaths.voice.sip.simple.callerIdDateTime1st,
                callerIdDateTime2nd: $.xpaths.voice.sip.simple.callerIdDateTime2nd
            }
              , result = $.xmo.getValuesTree(dataMap);
            return {
                callerIdDateTime: result.callerIdDateTime1st || result.callerIdDateTime2nd
            }
        },
        saveCallerID: function(callerIdDateTime, options) {
            var result = !1;
            try {
                var dataSave = {};
                dataSave[$.xpaths.voice.sip.simple.callerIdDateTime] = callerIdDateTime,
                $.xmo.setValuesFlat(dataSave, options),
                result = !0
            } catch (e) {
                result = !1,
                options.error()
            }
            return result
        }
    };
    return Sip
}
]),
sboxApp.factory("TelephoneMatrix", function() {
    var cache, temp = {
        lines: $.xpaths.main.phones.splitLines,
        phyInterfaces: $.xpaths.voice.phoneMatrix.phyInterfaces
    }, TelephoneMatrix = {
        updateCache: function() {
            if (cache = $.xmo.getValuesTree(temp),
            $.isArray(cache.lines.uid)) {
                var result = [];
                $(cache.lines.uid).each(function(i) {
                    result[i] = result[i] || {},
                    $.each(cache.lines, function(field, rs) {
                        rs && (result[i][field] = rs[i])
                    })
                }),
                cache.lines = result
            }
        },
        getEndPoints: function() {
            cache || this.updateCache();
            var result = [];
            return $(cache.phyInterfaces).each(function(i, obj) {
                "DECT_FP" !== obj.PhyInterfaceType && "Unregistered" !== obj.X_SAGEMCOM_DECT_PP.Status && (obj.statusOperational = "DISCONNECTED" !== obj.FXSStatus ? "operational" : "notoperational",
                result.push(obj))
            }),
            result
        },
        getLines: function() {
            cache || this.updateCache();
            var rs = [];
            return $(cache.lines).each(function(i, obj) {
                "ENABLED" === obj.Enable && rs.push(obj)
            }),
            rs
        },
        saveMatrix: function(data, options) {
            for (var dataMap = {}, i = 0; i < data.incoming.length; i++)
                dataMap[$.xpaths.voice.phoneMatrix.linePhyReferenceList.replace("#", data.incoming[i].uid)] = data.incoming[i].PhyReferenceList;
            for (i = 0; i < data.outgoing.length; i++)
                dataMap[$.xpaths.voice.phoneMatrix.save.interfacesOutGoingLine.replace("#", data.outgoing[i].uid)] = $.xpaths.voice.phoneMatrix.save.outGoingValue.replace("#", data.outgoing[i].OutGoingLine);
            $.xmo.setValuesFlat(dataMap, {
                sync: !1,
                success: options.success,
                error: options.error
            })
        },
        saveHotline: function(data, options) {
            var dataMap = {};
            dataMap[$.xpaths.voice.phoneHotline.hotLineWarmLineURI.replace("#line#", data.uid)] = data.hotLineWarmLineURI,
            dataMap[$.xpaths.voice.phoneHotline.hotLineEnable.replace("#line#", data.uid)] = data.hotLineEnable,
            dataMap[$.xpaths.voice.phoneHotline.callWaitingEnable.replace("#line#", data.uid)] = data.CallWaitingEnable,
            $.xmo.setValuesFlat(dataMap, {
                sync: !1,
                success: options.success,
                error: options.error
            })
        }
    };
    return TelephoneMatrix
}),
sboxApp.factory("Hotline", function() {
    var Hotline = {
        populate: function() {
            var data = $.xmo.getValuesTree($.xpaths.voice.hotmail.callingFeatures);
            return data
        },
        save: function(data, options) {
            var saveData = {};
            saveData[$.xpaths.voice.hotmail.warmLineEnable] = data.WarmLineEnable,
            saveData[$.xpaths.voice.hotmail.hotLineWarmLineURI] = data.HotLineWarmLineURI,
            saveData[$.xpaths.voice.hotmail.warmLineTimeout] = data.WarmLineTimeout;
            try {
                return $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return Hotline
}),
sboxApp.factory("DectBasic", ["$q", function($q) {
    var cache = null
      , idReq = null
      , _checkArrayBeforeSave = function(data) {
        var arrayReturn = {};
        return $.each(data, function(xpath, value) {
            var field = xpath.split("/");
            field = field[field.length - 1],
            null !== value && void 0 !== value && null !== cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP[field] && value !== cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP[field] && (arrayReturn[xpath] = value)
        }),
        arrayReturn
    }
      , DectBasic = {
        init: function() {
            cache = $.xmo.getValuesTree($.xpaths.dect.basic)
        },
        getStandardList: function() {
            var name, list = $.xmo.getCapability($.xpaths.dect.capabilities.standard), result = {};
            for (var x in list.restrictions["enum-values"])
                name = list.restrictions["enum-values"][x].name,
                result[name] = list.restrictions["enum-values"][x];
            return result
        },
        populate: function() {
            this.init();
            var result = {};
            return result.Enable = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.Enable,
            result.Status = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.Status,
            result.PowerMode = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.RFPowerControl,
            result.PIN = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.PIN,
            result.Description = cache.dock.PhyInterface.Description,
            result.FirmwareVersion = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.FirmwareVersion,
            result.FUPercent = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.FUPercent,
            result.EepromVersion = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.EepromVersion,
            result.HardwareVersion = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.HardwareVersion,
            result.RFPI = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.RFPI,
            result.ClockMastered = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.ClockMastered,
            result.Standard = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.Standard,
            result.MaxSupportedPP = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.MaxSupportedPP,
            result.CurrentNbPP = cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.CurrentNbPP,
            result
        },
        save: function(data, options) {
            var success = !0;
            try {
                var dataMap = {};
                if (dataMap[$.xpaths.dect.basic.dock + "/X_SAGEMCOM_DECT_FP/Enable"] = data.Enable,
                dataMap[$.xpaths.dect.basic.dock + "/X_SAGEMCOM_DECT_FP/RFPowerControl"] = data.PowerMode,
                dataMap[$.xpaths.dect.basic.dock + "/X_SAGEMCOM_DECT_FP/Standard"] = data.Standard,
                dataMap[$.xpaths.dect.basic.dock + "/X_SAGEMCOM_DECT_FP/ClockMastered"] = data.ClockMastered,
                dataMap[$.xpaths.dect.basic.dock + "/Description"] = data.Description,
                dataMap = _checkArrayBeforeSave(dataMap),
                !Object.keys(dataMap).length)
                    return void options.success();
                var self = this;
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: function() {
                        self.init(),
                        options.success()
                    },
                    error: options.error
                })
            } catch (err) {
                success = !1
            }
            return success
        },
        getDectDevicesMinimal: function() {
            this.init();
            var result = []
              , p = $.util.fixGetValuesTree(cache.devices);
            for (var x in p)
                p[x].PhyInterface.X_SAGEMCOM_DECT_PP.Status !== $.constants.Unregistered && result.push({
                    uid: p[x].PhyInterface.uid,
                    description: p[x].PhyInterface.Description
                });
            return result
        },
        applyPin: function(pin) {
            var result = !0;
            try {
                if (pin !== cache.dock.PhyInterface.X_SAGEMCOM_DECT_FP.PIN) {
                    var dataMap = {};
                    dataMap[$.xpaths.dect.basic.dock + "/X_SAGEMCOM_DECT_FP/PIN"] = pin,
                    $.xmo.setValuesFlat(dataMap)
                }
            } catch (e) {
                result = !1
            }
            return result
        },
        startPairing: function() {
            var deferred = $q.defer();
            return $.xmo.startPairing(function() {
                deferred.resolve(!0)
            }, function() {
                deferred.reject(!1)
            }),
            deferred.promise
        },
        test: function(uid) {
            var deferred = $q.defer();
            return $.xmo.testDect(uid, function() {
                deferred.resolve(!0)
            }, function() {
                deferred.reject(!1)
            }),
            deferred.promise
        },
        verifyPhysicalButton: function(callback) {
            var xpath = $.xpaths.main.cacheable.dect.status;
            idReq = $.xmo.onPeriodicValue(xpath, function(value) {
                var result = !1;
                return "On" === value && (idReq = null,
                result = !0,
                callback()),
                result
            }, null)
        },
        deleteNotifications: function() {
            if (idReq) {
                var req = $.xmo.client.newRequest();
                return req.deleteNotification(idReq),
                idReq = null,
                !0
            }
            return !1
        }
    };
    return DectBasic
}
]),
sboxApp.factory("DectHandset", ["$q", function($q) {
    var DectHandset = {
        getDeviceById: function(uid) {
            var donnees = {}
              , cache = $.xmo.getValuesTree($.xpaths.dect.handset.device.replace("#", uid));
            return donnees.uid = cache.PhyInterface.uid,
            donnees.Status = cache.PhyInterface.X_SAGEMCOM_DECT_PP.Status,
            donnees.Description = cache.PhyInterface.Description,
            donnees.IPEI = cache.PhyInterface.X_SAGEMCOM_DECT_PP.InternationalPortableEquipementIdentity,
            donnees.IPUI = cache.PhyInterface.X_SAGEMCOM_DECT_PP.InternationalPortableUserIdentity,
            donnees.HandsetType = cache.PhyInterface.X_SAGEMCOM_DECT_PP.HandsetType,
            donnees.SubscriptionTime = cache.PhyInterface.X_SAGEMCOM_DECT_PP.SubscriptionTime,
            donnees
        },
        getHandsetRoleRestrictions: function(uid) {
            for (var arrayReturn = [], cap = $.xmo.getCapability($.xpaths.dect.handset.device.replace("#", uid) + "/X_SAGEMCOM_DECT_PP/HandsetRole"), i = 0; i < cap.restrictions["enum-values"].length; i++) {
                var tmp = cap.restrictions["enum-values"][i];
                arrayReturn.push(tmp.name)
            }
            return arrayReturn
        },
        getDectStatus: function() {
            var dectEnabled = $.xmo.getValuesTree($.xpaths.dect.basic.dock + "/X_SAGEMCOM_DECT_FP/Enable");
            return dectEnabled
        },
        save: function(data, options) {
            try {
                var map = {};
                $.each(data, function(key, value) {
                    if ("uid" !== key) {
                        var xpathKey = $.xpaths.dect.handset.save[key];
                        map[xpathKey.replace("#", data.uid)] = value
                    }
                }),
                $.xmo.setValuesFlat(map, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (err) {
                options.error()
            }
        },
        unPair: function(uid) {
            var deferred = $q.defer();
            return $.xmo.unPair(uid, function() {
                deferred.resolve(!0)
            }, function() {
                deferred.reject(!1)
            }),
            deferred.promise
        }
    };
    return DectHandset
}
]),
sboxApp.factory("Led", function() {
    var Led = {
        populate: function() {
            var data = $.xmo.getValuesTree($.xpaths.mySagemcomBox.led);
            return data.frontLedPower = !data.frontLedPower,
            data.switchLedPower = !data.switchLedPower,
            data
        },
        populateSlider: function() {
            var data = $.xmo.getValuesTree($.xpaths.mySagemcomBox.ledSlider);
            return data
        },
        save: function(data, options) {
            var success = !0;
            try {
                if (void 0 === data)
                    throw new Error;
                var dataMap = {}
                  , enable = !data.enable;
                $.util.hasFeature("ledMode") && (enable = "Dark" === data.ledMode,
                dataMap[$.xpaths.mySagemcomBox.led.ledMode] = data.ledMode),
                dataMap[$.xpaths.mySagemcomBox.led.frontLedPower] = enable,
                dataMap[$.xpaths.mySagemcomBox.led.switchLedPower] = enable,
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (err) {
                success = !1,
                options.error(err)
            }
            return success
        },
        saveSlider: function(data, options) {
            var success = !0;
            try {
                if (void 0 === data)
                    throw new Error;
                var dataMap = {};
                dataMap[$.xpaths.mySagemcomBox.ledSlider] = data,
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (err) {
                success = !1
            }
            return success
        }
    };
    return Led
}),
sboxApp.factory("MaelstromHelp", function() {
    var _cache = null
      , _updateCache = function() {
        _cache = $.xmo.getValuesTree({
            conexionStatus: $.xpaths.stats.wan.conexionStatus,
            publicIpv4: $.xpaths.mySagemcomBox.deviceInfo.publicIpv4,
            dslDownStream: $.xpaths.stats.xdsl.dslDownstream,
            helpLink: $.xpaths.main.ispHelpPage,
            model: $.xpaths.mySagemcomBox.deviceInfo.hardwareVersion,
            firewallLevel: $.xpaths.accessControl.firewall.config
        })
    }
      , _checkCache = function() {
        _cache || _updateCache()
    }
      , system = {
        updateCache: function() {
            _updateCache()
        },
        getISPHelpLink: function() {
            return _checkCache(),
            _cache.helpLink
        },
        getConnectivityStats: function() {
            _checkCache();
            var result = {};
            return result.status = "ENABLED" === _cache.conexionStatus,
            result.publicIpv4 = _cache.publicIpv4,
            result.dslDownStream = parseFloat(_cache.dslDownStream / 1e3).toFixed(1),
            result.firewallLevel = _cache.firewallLevel,
            result
        },
        getGwType: function() {
            return _checkCache(),
            _cache.model && (_cache.model.indexOf("5DK40-") > -1 || _cache.model.indexOf("5DK45-") > -1) ? "dsl" : "eth"
        }
    };
    return system
}),
sboxApp.factory("CallForwarding", ["AnsweringMachine", function(AnsweringMachine) {
    var linesInformation = []
      , CallForwarding = {
        getLinesInformation: function(index) {
            return void 0 !== index ? linesInformation[index] : linesInformation
        },
        populate: function(lines) {
            if (!lines || 0 === lines.length)
                return [];
            for (var xpaths = [], arrayReturn = [], auxObj = {}, line = null, x = 0; x < lines.length; x++)
                line = lines[x].uid,
                xpaths[line] = {},
                xpaths[line][$.constants.callForwarding.inconditional] = {
                    Forwarding: $.xpaths.voice.sip.callFowarding.callForwardUncondicionalNumber.replace("#profile#", 1).replace("#line#", line),
                    Enable: $.xpaths.voice.sip.callFowarding.callForwardUncondicionalEnable.replace("#profile#", 1).replace("#line#", line)
                },
                xpaths[line][$.constants.callForwarding.busy] = {
                    Forwarding: $.xpaths.voice.sip.callFowarding.callForwardOnBusyNumber.replace("#profile#", 1).replace("#line#", line),
                    Enable: $.xpaths.voice.sip.callFowarding.callForwardOnBusyEnable.replace("#profile#", 1).replace("#line#", line)
                },
                xpaths[line][$.constants.callForwarding.notResponding] = {
                    Forwarding: $.xpaths.voice.sip.callFowarding.callForwardOnNoAnswerNumber.replace("#profile#", 1).replace("#line#", line),
                    Enable: $.xpaths.voice.sip.callFowarding.callForwardOnNoAnswerEnable.replace("#profile#", 1).replace("#line#", line),
                    Seconds: $.xpaths.voice.sip.callFowarding.callForwardOnNoAnswerRingCount.replace("#profile#", 1).replace("#line#", line)
                },
                xpaths[line].MultiCallEnable = $.xpaths.main.phones.callingFeatures.MultiCallEnable.replace("#line#", line);
            var callFws = $.xmo.getValuesTree(xpaths);
            for (var lineNumber in callFws) {
                for (var type in callFws[lineNumber])
                    callFws[lineNumber][type] && callFws[lineNumber][type].Forwarding && (auxObj = {
                        Line: parseInt(lineNumber),
                        Enable: callFws[lineNumber][type].Enable,
                        Forwarding: callFws[lineNumber][type].Forwarding,
                        Seconds: callFws[lineNumber][type].Seconds,
                        Type: type
                    },
                    callFws[lineNumber][type].Seconds && (auxObj.Seconds = callFws[lineNumber][type].Seconds),
                    arrayReturn.push(auxObj));
                linesInformation[lineNumber] = {
                    MultiCallEnable: callFws[lineNumber].MultiCallEnable
                }
            }
            return arrayReturn
        },
        save: function(data, options) {
            var saveArray = {}
              , saveArrayEnable = {}
              , voicemailForward = !1;
            switch ("voicemail" === data.Forwarding && (voicemailForward = !0),
            data.Type) {
            case $.constants.callForwarding.inconditional:
                saveArray[$.xpaths.voice.sip.callFowarding.callForwardUncondicionalNumber.replace("#profile#", 1).replace("#line#", data.Line)] = data.Forwarding,
                saveArrayEnable[$.xpaths.voice.sip.callFowarding.callForwardUncondicionalEnable.replace("#profile#", 1).replace("#line#", data.Line)] = data.Enable;
                break;
            case $.constants.callForwarding.busy:
                saveArray[$.xpaths.voice.sip.callFowarding.callForwardOnBusyNumber.replace("#profile#", 1).replace("#line#", data.Line)] = data.Forwarding,
                saveArrayEnable[$.xpaths.voice.sip.callFowarding.callForwardOnBusyEnable.replace("#profile#", 1).replace("#line#", data.Line)] = data.Enable;
                break;
            case $.constants.callForwarding.notResponding:
                saveArrayEnable[$.xpaths.voice.sip.callFowarding.callForwardOnNoAnswerNumber.replace("#profile#", 1).replace("#line#", data.Line)] = data.Forwarding,
                saveArrayEnable[$.xpaths.voice.sip.callFowarding.callForwardOnNoAnswerEnable.replace("#profile#", 1).replace("#line#", data.Line)] = data.Enable,
                saveArray[$.xpaths.voice.sip.callFowarding.callForwardOnNoAnswerRingCount.replace("#profile#", 1).replace("#line#", data.Line)] = data.Seconds || 0
            }
            try {
                return $.xmo.setValuesFlat(saveArrayEnable, {
                    sync: !1,
                    success: function() {
                        $.xmo.setValuesFlat(saveArray, {
                            sync: !1,
                            success: options.success,
                            error: options.error
                        }),
                        voicemailForward && AnsweringMachine.updateCache()
                    },
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        },
        remove: function(data, options) {
            return data.Enable = !1,
            data.Forwarding = "",
            this.save(data, options)
        }
    };
    return CallForwarding
}
]),
sboxApp.factory("AnsweringMachine", ["Sip", "TelephoneMatrix", "$q", function(Sip, TelephoneMatrix, $q) {
    var cacheMessages = []
      , enabledLines = TelephoneMatrix.getLines()
      , cacheMailbox = [];
    for (var index in enabledLines) {
        var mailboxes = $.xmo.getValuesTree($.xpaths.voice.answeringMachine.oneMailbox.replace("#uid#", enabledLines[index].uid));
        mailboxes && (cacheMailbox[index] = mailboxes.Mailbox,
        cacheMailbox[index].name = "Mailbox " + mailboxes.Mailbox.uid)
    }
    var mockMailbox = {
        uid: 1,
        Alias: "Mailbox1",
        Enable: !0,
        Mode: "Simple",
        Language: "English",
        MaxMessageTime: "90",
        EMailAddress: "sagemuser@sagemcom.com",
        SimpleGreetings: {
            UnconditionalGreeting: "default_EN_SimpleUnconditionalGreeting.wav",
            OnBusyGreeting: "default_EN_SimpleOnBusyGreeting.wav",
            OnNoAnswerGreeting: "default_EN_SimpleOnNoAnswerGreeting.wav"
        },
        RecordingGreetings: {
            UnconditionalGreeting: "default_EN_SimpleUnconditionalGreeting.wav",
            OnBusyGreeting: "default_EN_SimpleOnBusyGreeting.wav",
            OnNoAnswerGreeting: "default_EN_SimpleOnNoAnswerGreeting.wav"
        }
    }
      , AnsweringMachine = {
        updateCache: function() {
            TelephoneMatrix.updateCache(),
            enabledLines = TelephoneMatrix.getLines(),
            cacheMailbox = [];
            for (var index in enabledLines) {
                var mailboxes = $.xmo.getValuesTree($.xpaths.voice.answeringMachine.oneMailbox.replace("#uid#", enabledLines[index].uid));
                mailboxes && (cacheMailbox[index] = mailboxes.Mailbox,
                cacheMailbox[index].name = "Mailbox " + cacheMailbox[index].uid + " (**60" + cacheMailbox[index].uid + ")")
            }
        },
        addMailbox: function(options) {
            try {
                var objSave = $.extend(!0, {}, mockMailbox);
                return mockMailbox.uid++,
                $.xmo.addChild($.xpaths.voice.answeringMachine.mailbox, {
                    Mailbox: objSave
                }),
                options.success(),
                !0
            } catch (e) {
                return options.error(),
                !1
            }
        },
        isDefaultFilename: function(language, type, filename) {
            return $.util.voiceDefaultFilename(language, type, filename)
        },
        searchMailbox: function(uid) {
            return $.util.fixGetValuesTree($.xmo.getValuesTree($.xpaths.voice.answeringMachine.oneMailbox.replace("#uid#", uid)))
        },
        getMailboxesList: function() {
            for (var x in cacheMailbox) {
                cacheMailbox[x].hasOwnProperty("EMailAddress") || (cacheMailbox[x].EMailAddress = null),
                cacheMailbox[x].SelectedLanguage = "";
                for (var y in $.constants.availableLanguages) {
                    var lang = "SPN" === $.constants.availableLanguages[y] ? "SP" : $.constants.availableLanguages[y];
                    if (!cacheMailbox[x].SelectedLanguage && cacheMailbox[x].SimpleGreetings.UnconditionalGreeting.indexOf("_" + lang + "_") > -1) {
                        cacheMailbox[x].SelectedLanguage = lang;
                        break
                    }
                    if (!cacheMailbox[x].SelectedLanguage && cacheMailbox[x].SimpleGreetings.OnBusyGreeting.indexOf("_" + lang + "_") > -1) {
                        cacheMailbox[x].SelectedLanguage = lang;
                        break
                    }
                    if (!cacheMailbox[x].SelectedLanguage && cacheMailbox[x].SimpleGreetings.OnNoAnswerGreeting.indexOf("_" + lang + "_") > -1) {
                        cacheMailbox[x].SelectedLanguage = lang;
                        break
                    }
                    if (!cacheMailbox[x].SelectedLanguage && cacheMailbox[x].RecordingGreetings.UnconditionalGreeting.indexOf("_" + lang + "_") > -1) {
                        cacheMailbox[x].SelectedLanguage = lang;
                        break
                    }
                    if (!cacheMailbox[x].SelectedLanguage && cacheMailbox[x].RecordingGreetings.OnBusyGreeting.indexOf("_" + lang + "_") > -1) {
                        cacheMailbox[x].SelectedLanguage = lang;
                        break
                    }
                    if (!cacheMailbox[x].SelectedLanguage && cacheMailbox[x].RecordingGreetings.OnNoAnswerGreeting.indexOf("_" + lang + "_") > -1) {
                        cacheMailbox[x].SelectedLanguage = lang;
                        break
                    }
                }
                var language = cacheMailbox[x].SelectedLanguage;
                cacheMailbox[x].SimpleUnconditionalGreetingRadio = "custom",
                cacheMailbox[x].SimpleOnBusyGreetingRadio = "custom",
                cacheMailbox[x].SimpleOnNoAnswerGreetingRadio = "custom",
                cacheMailbox[x].RecordingUnconditionalGreetingRadio = "custom",
                cacheMailbox[x].RecordingOnBusyGreetingRadio = "custom",
                cacheMailbox[x].RecordingOnNoAnswerGreetingRadio = "custom",
                this.isDefaultFilename(language, "SimpleUnconditionalGreeting", cacheMailbox[x].SimpleGreetings.UnconditionalGreeting) && (cacheMailbox[x].SimpleUnconditionalGreetingRadio = "default"),
                this.isDefaultFilename(language, "SimpleOnBusyGreeting", cacheMailbox[x].SimpleGreetings.OnBusyGreeting) && (cacheMailbox[x].SimpleOnBusyGreetingRadio = "default"),
                this.isDefaultFilename(language, "SimpleOnNoAnswerGreeting", cacheMailbox[x].SimpleGreetings.OnNoAnswerGreeting) && (cacheMailbox[x].SimpleOnNoAnswerGreetingRadio = "default"),
                this.isDefaultFilename(language, "RecordingUnconditionalGreeting", cacheMailbox[x].RecordingGreetings.UnconditionalGreeting) && (cacheMailbox[x].RecordingUnconditionalGreetingRadio = "default"),
                this.isDefaultFilename(language, "RecordingOnBusyGreeting", cacheMailbox[x].RecordingGreetings.OnBusyGreeting) && (cacheMailbox[x].RecordingOnBusyGreetingRadio = "default"),
                this.isDefaultFilename(language, "RecordingOnNoAnswerGreeting", cacheMailbox[x].RecordingGreetings.OnNoAnswerGreeting) && (cacheMailbox[x].RecordingOnNoAnswerGreetingRadio = "default")
            }
            return cacheMailbox
        },
        uploadCustomGreeting: function(uid, file, mode, type, options) {
            var deferred = $q.defer();
            return $.util.hasFileToUpload("#" + file) ? $.xmo.downloadCustomGreetings(uid, file, mode, type, function(p) {
                deferred.resolve(p)
            }, function() {
                options.error(),
                deferred.reject(null)
            }) : deferred.resolve(),
            deferred.promise
        },
        saveAllData: function(dataMap, options) {
            $.xmo.setValuesFlat(dataMap, {
                sync: !1,
                success: function() {
                    AnsweringMachine.updateCache(),
                    options.success()
                },
                error: function() {
                    options.error()
                }
            })
        },
        saveMailbox: function(data, options) {
            var dataMap = {};
            try {
                dataMap[$.xpaths.voice.answeringMachine.updateMailbox.Alias.replace("#", data.uid)] = data.Alias,
                dataMap[$.xpaths.voice.answeringMachine.updateMailbox.Enable.replace("#", data.uid)] = data.Enable;
                var lineDetails, sipDetails = Sip.populate(), linesToSave = [];
                for (var x in sipDetails[0].lines)
                    lineDetails = sipDetails[0].lines[x],
                    lineDetails.VoiceMail && lineDetails.VoiceMail.indexOf(data.Alias) > -1 && (data.Enable === !1 ? (lineDetails.CallForwardOnBusyNumber = "",
                    lineDetails.CallForwardOnBusyEnable = !1,
                    lineDetails.CallForwardOnNoAnswerNumber = "",
                    lineDetails.CallForwardOnNoAnswerEnable = !1,
                    lineDetails.CallForwardUnconditionalNumber = "",
                    lineDetails.CallForwardUnconditionalEnable = !1) : (lineDetails.CallForwardOnBusyNumber = "voicemail",
                    lineDetails.CallForwardOnBusyEnable = !0,
                    lineDetails.CallForwardOnNoAnswerNumber = "voicemail",
                    lineDetails.CallForwardOnNoAnswerEnable = !0),
                    linesToSave.push(lineDetails));
                if (linesToSave.length && Sip.saveLinesCallFowarding(sipDetails[0].uid, linesToSave),
                dataMap[$.xpaths.voice.answeringMachine.updateMailbox.MaxMessageTime.replace("#", data.uid)] = data.MaxMessageTime,
                data.setDefaultEmail)
                    for (var i in cacheMailbox)
                        dataMap[$.xpaths.voice.answeringMachine.updateMailbox.EMailAddress.replace("#", cacheMailbox[i].uid)] = data.EMailAddress;
                else
                    dataMap[$.xpaths.voice.answeringMachine.updateMailbox.EMailAddress.replace("#", data.uid)] = data.EMailAddress;
                dataMap[$.xpaths.voice.answeringMachine.updateMailbox.Mode.replace("#", data.uid)] = data.Mode,
                dataMap[$.xpaths.voice.answeringMachine.updateMailbox.MaxMessageTime.replace("#", data.uid)] = data.MaxMessageTime;
                var promise, promises = [];
                "default" === data.SimpleUnconditionalGreetingRadio ? dataMap[$.xpaths.voice.answeringMachine.updateMailbox.SimpleUnconditionalGreeting.replace("#", data.uid)] = "default_" + data.SelectedLanguage + "_SimpleUnconditionalGreeting.wav" : (promise = this.uploadCustomGreeting(data.uid, "fileSimpleUnconditional", "Simple", "Unconditional", options),
                promises.push(promise)),
                "default" === data.SimpleOnBusyGreetingRadio ? dataMap[$.xpaths.voice.answeringMachine.updateMailbox.SimpleOnBusyGreeting.replace("#", data.uid)] = "default_" + data.SelectedLanguage + "_SimpleOnBusyGreeting.wav" : (promise = this.uploadCustomGreeting(data.uid, "fileSimpleOnBusy", "Simple", "OnBusy", options),
                promises.push(promise)),
                "default" === data.SimpleOnNoAnswerGreetingRadio ? dataMap[$.xpaths.voice.answeringMachine.updateMailbox.SimpleNoAnswerGreeting.replace("#", data.uid)] = "default_" + data.SelectedLanguage + "_SimpleOnNoAnswerGreeting.wav" : (promise = this.uploadCustomGreeting(data.uid, "fileSimpleOnNoAnswer", "Simple", "OnNoAnswer", options),
                promises.push(promise)),
                "default" === data.RecordingUnconditionalGreetingRadio ? dataMap[$.xpaths.voice.answeringMachine.updateMailbox.RecordingUnconditionalGreeting.replace("#", data.uid)] = "default_" + data.SelectedLanguage + "_RecordingUnconditionalGreeting.wav" : (promise = this.uploadCustomGreeting(data.uid, "fileRecordingUnconditional", "Recording", "Unconditional", options),
                promises.push(promise)),
                "default" === data.RecordingOnBusyGreetingRadio ? dataMap[$.xpaths.voice.answeringMachine.updateMailbox.RecordingOnBusyGreeting.replace("#", data.uid)] = "default_" + data.SelectedLanguage + "_RecordingOnBusyGreeting.wav" : (promise = this.uploadCustomGreeting(data.uid, "fileRecordingOnBusy", "Recording", "OnBusy", options),
                promises.push(promise)),
                "default" === data.RecordingOnNoAnswerGreetingRadio ? dataMap[$.xpaths.voice.answeringMachine.updateMailbox.RecordingNoAnswerGreeting.replace("#", data.uid)] = "default_" + data.SelectedLanguage + "_RecordingOnNoAnswerGreeting.wav" : (promise = this.uploadCustomGreeting(data.uid, "fileRecordingOnNoAnswer", "Recording", "OnNoAnswer", options),
                promises.push(promise));
                var service = this;
                return promises.length ? $q.all(promises).then(function() {
                    service.saveAllData(dataMap, options)
                }, options.error) : service.saveAllData(dataMap, options),
                !0
            } catch (e) {
                return !1
            }
        },
        removeMailbox: function(uid, options) {
            try {
                return $.xmo.delChild($.xpaths.voice.answeringMachine.oneMailbox.replace("#uid#", uid)),
                options.success(),
                !0
            } catch (e) {
                return options.error(),
                !1
            }
        },
        searchMessages: function() {
            cacheMessages = $.util.fixGetValuesTree($.xmo.getValuesTree($.xpaths.voice.answeringMachine.messages));
            var regexp, regexpAux;
            for (var x in cacheMessages)
                regexp = /.*Line\[@uid='?(\d)'?\]/i,
                regexpAux = regexp.exec(cacheMessages[x].UsedLine),
                regexpAux && regexpAux[1] && (cacheMessages[x].UsedLine = regexpAux[1]),
                cacheMessages[x].Duration = $.util.formatSecondsAsTime(cacheMessages[x].Duration, "HH:MM:SS"),
                cacheMessages[x].Start = moment(cacheMessages[x].Start, "YYYY-MM-DD hh:mm:ss").format("DD/MM/YYYY HH:mm");
            return cacheMessages
        },
        getNewMessagesCount: function() {
            var counter = 0;
            for (var x in cacheMessages)
                cacheMessages[x].IsNew && counter++;
            return counter
        },
        deleteMessage: function(uid, options) {
            try {
                return $.xmo.delChild($.xpaths.voice.answeringMachine.oneMessage.replace("#uid#", uid)),
                options.success(),
                !0
            } catch (e) {
                return options.error(),
                !1
            }
        },
        listenMessage: function(uid, options) {
            try {
                return $.xmo.listenMessageRPC(uid, options),
                !0
            } catch (e) {
                return options.error(),
                !1
            }
        },
        getAvailableLanguages: function() {
            var lang, result = [], allowed = $.util.getAllowedLanguages();
            for (var x in allowed)
                for (var y in $.constants.voicemailSoundFiles)
                    lang = "SPN" === allowed[x] ? "SP" : allowed[x],
                    -1 === result.indexOf(allowed[x]) && $.constants.voicemailSoundFiles[y].indexOf("_" + lang + "_") > -1 && result.push(allowed[x]);
            return result
        },
        getMailServer: function() {
            return $.xmo.getValuesTree($.xpaths.voice.answeringMachine.mailServer)
        },
        saveMailServer: function(data, options) {
            var saveData = {};
            try {
                saveData[$.xpaths.voice.answeringMachine.mailServer.Enable] = data.Enable,
                saveData[$.xpaths.voice.answeringMachine.mailServer.Login] = data.Login,
                saveData[$.xpaths.voice.answeringMachine.mailServer.Password] = data.Password,
                saveData[$.xpaths.voice.answeringMachine.mailServer.Port] = data.Port,
                saveData[$.xpaths.voice.answeringMachine.mailServer.Server] = data.Server,
                saveData[$.xpaths.voice.answeringMachine.mailServer.Encryption] = data.Encryption,
                saveData[$.xpaths.voice.answeringMachine.mailServer.Protocol] = data.Protocol,
                $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (e) {
                options.error()
            }
        }
    };
    return AnsweringMachine
}
]),
sboxApp.factory("AutoDimming", function() {
    var cache = {}
      , autoDimming = {
        populate: function() {
            cache = $.xmo.getValuesTree($.xpaths.leds);
            var result = {};
            return result.ledPowerSaving = cache.ledPowerSaving,
            result.ledPowerSavingMode = cache.ledPowerSavingMode,
            result
        },
        save: function(data, options) {
            var saveData = {};
            saveData[$.xpaths.leds.ledPowerSaving] = data.ledPowerSaving,
            saveData[$.xpaths.leds.ledPowerSavingMode] = data.ledPowerSavingMode;
            try {
                return $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return autoDimming
}),
sboxApp.factory("Gpon", [function() {
    var Gpon = {
        getData: function() {
            var a = $.xmo.getValuesTree($.xpaths.gpon);
            return a.TransmitOpticalLevel = (a.TransmitOpticalLevel / 1e3).toFixed(3),
            a.OpticalSignalLevel = (a.OpticalSignalLevel / 1e3).toFixed(3),
            a.UpstreamFEC = 0,
            a.DownstreamFEC = 0,
            a
        }
    };
    return Gpon
}
]),
sboxApp.factory("CableModem", ["CheckFeature", function(CheckFeature) {
    var cache = null
      , formatToHz = function(value) {
        return CheckFeature.go("isCable") ? +(Math.round(value + "e+2") + "e-2") : 1e6 * +(Math.round(value + "e+2") + "e-2")
    }
      , _updateCache = function() {
        cache = $.xmo.getValuesTree($.xpaths.cableModem.data)
    }
      , CableModem = {
        updateCache: function() {
            _updateCache()
        },
        getConnectionData: function() {
            return angular.forEach(cache.connection.upstream, function(data) {
                data.Frequency = formatToHz(data.Frequency)
            }),
            cache.connection
        },
        getConfigurationData: function() {
            return cache.configuration.favoriteFrequency
        },
        applyFavoriteFrequency: function(frequency, options) {
            if (cache && cache.configuration && frequency !== cache.configuration.favoriteFrequency) {
                var map = {};
                map[$.xpaths.cableModem.save.favoriteFrequency] = parseInt(frequency, 10),
                $.xmo.setValuesFlat(map, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } else
                options.success()
        }
    };
    return CableModem
}
]),
sboxApp.factory("WiFiScheduling", [function() {
    var indexes = ["sunday", "monday", "tuesday", "wednesday", "thursday", "friday", "saturday"]
      , model = {}
      , resetModel = function() {
        model = {
            Enable: !1,
            WeekDays: [{
                Label: "acPcSunday",
                Start: 0,
                End: 0
            }, {
                Label: "acPcMonday",
                Start: 0,
                End: 0
            }, {
                Label: "acPcTuesday",
                Start: 0,
                End: 0
            }, {
                Label: "acPcWednesday",
                Start: 0,
                End: 0
            }, {
                Label: "acPcThursday",
                Start: 0,
                End: 0
            }, {
                Label: "acPcFriday",
                Start: 0,
                End: 0
            }, {
                Label: "acPcSaturday",
                Start: 0,
                End: 0
            }]
        }
    }
      , WiFiScheduling = {
        converter: function(o) {
            if ("string" == typeof o) {
                if ("" === o)
                    return 0;
                var splited = o.split(":")
                  , hour = parseInt(splited[0], null)
                  , min = parseInt(splited[1], null);
                return 60 * hour + min
            }
            return $.util.lpad(parseInt(o / 60, null), "0", 2) + ":" + $.util.lpad(o % 60, "0", 2)
        },
        populate: function() {
            resetModel();
            var result = $.xmo.getValuesTree($.xpaths.availability);
            model.Enable = result.enable ? result.enable : !1;
            for (var key in result)
                if ("enable" !== key) {
                    var index = indexes.indexOf(key);
                    model.WeekDays[index].Start = this.converter(result[key].from),
                    model.WeekDays[index].End = this.converter(result[key].to)
                }
            return model
        },
        save: function(data, option) {
            var saveData = {};
            option.enableOnly ? saveData[$.xpaths.availability.enable] = data.Enable : (saveData[$.xpaths.availability.sunday.from] = this.converter(data.WeekDays[0].Start),
            saveData[$.xpaths.availability.sunday.to] = this.converter(data.WeekDays[0].End),
            saveData[$.xpaths.availability.monday.from] = this.converter(data.WeekDays[1].Start),
            saveData[$.xpaths.availability.monday.to] = this.converter(data.WeekDays[1].End),
            saveData[$.xpaths.availability.tuesday.from] = this.converter(data.WeekDays[2].Start),
            saveData[$.xpaths.availability.tuesday.to] = this.converter(data.WeekDays[2].End),
            saveData[$.xpaths.availability.wednesday.from] = this.converter(data.WeekDays[3].Start),
            saveData[$.xpaths.availability.wednesday.to] = this.converter(data.WeekDays[3].End),
            saveData[$.xpaths.availability.thursday.from] = this.converter(data.WeekDays[4].Start),
            saveData[$.xpaths.availability.thursday.to] = this.converter(data.WeekDays[4].End),
            saveData[$.xpaths.availability.friday.from] = this.converter(data.WeekDays[5].Start),
            saveData[$.xpaths.availability.friday.to] = this.converter(data.WeekDays[5].End),
            saveData[$.xpaths.availability.saturday.from] = this.converter(data.WeekDays[6].Start),
            saveData[$.xpaths.availability.saturday.to] = this.converter(data.WeekDays[6].End)),
            option.sync = !1;
            try {
                $.xmo.setValuesFlat(saveData, option)
            } catch (err) {
                option.error(err)
            }
        }
    };
    return WiFiScheduling
}
]),
sboxApp.factory("PlcDevice", function() {
    var PLC = {
        save: function(data, options) {
            try {
                var dataMap = {};
                dataMap[$.xpaths.main.cacheable.plcUpdate.name.replace("#uid#", data.uid)] = data.name,
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (err) {
                options.error()
            }
        }
    };
    return PLC
}),
sboxApp.factory("BroadBand", function() {
    var cache = $.xmo.getValuesTree($.xpaths.broadband)
      , broadband = {
        updateCache: function() {
            cache = $.xmo.getValuesTree($.xpaths.broadband)
        },
        populate: function() {
            var data = {};
            return data.ipv4Status = cache.ipv4Status,
            data.ipv6Status = cache.ipv6Status,
            data.uptime = cache.uptime,
            data.dataTransferedSent = cache.dataTransferedSent,
            data.dataTransferedReceived = cache.dataTransferedReceived,
            data.ipv4Address = cache.ipv4Address,
            data.primaryDns = cache.primaryDns,
            data.secondaryDns = cache.secondaryDns,
            data.ipv6Address = cache.ipv6Address,
            data.ipv6AddressServer = cache.ipv6AddressServer,
            data.pvcInfo = cache.pvcInfo,
            data.type = cache.type,
            data.username = cache.ppp.username,
            data.password = cache.ppp.password,
            data.mode = cache.ppp.mode,
            data
        },
        save: function(data, options) {
            var saveArray = {};
            saveArray[$.xpaths.broadband.ppp.username] = data.username,
            saveArray[$.xpaths.broadband.ppp.password] = data.password;
            try {
                return $.xmo.setValuesFlat(saveArray, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                this.updateCache(),
                !0
            } catch (e) {
                return options.error(),
                !1
            }
        }
    };
    return broadband
}),
sboxApp.factory("Fon", function() {
    var cache = {}
      , Fon = {
        updateCache: function() {
            var xpaths = $.xpaths.mySagemcomBox.fon.globalInfo;
            cache = $.xmo.getValuesTree(xpaths)
        },
        populate: function() {
            var data = $.xmo.getValuesTree($.xpaths.mySagemcomBox.fon.globalInfo)
              , SSIDProfiles = $.config.modules.fon.SSIDProfiles;
            return data.ssidsList = [],
            $.each(SSIDProfiles, function(idx, ssidProfile) {
                var xpathSsidProfile = {
                    ssidName: $.xpaths.mySagemcomBox.fon.ssidsList.ssidName.replace("#WL_BUB_ALIAS#", ssidProfile),
                    ssidStatus: $.xpaths.mySagemcomBox.fon.ssidsList.ssidStatus.replace("#WL_BUB_ALIAS#", ssidProfile),
                    connectedUsers: $.xpaths.mySagemcomBox.fon.ssidsList.connectedUsers.replace("#WL_BUB_ALIAS#", ssidProfile)
                }
                  , dataSsidsList = $.xmo.getValuesTree(xpathSsidProfile);
                dataSsidsList.ssidName && dataSsidsList.ssidStatus && (dataSsidsList.nbrConnectedUsers = dataSsidsList.connectedUsers ? dataSsidsList.connectedUsers.length : 0,
                data.ssidsList.push(dataSsidsList))
            }),
            data
        }
    };
    return Fon
}),
sboxApp.factory("Scheduling", function() {
    var Scheduling = {
        arrayInsert: [],
        arrayPaths: [],
        insert: function(timeslots, alias) {
            try {
                this.arrayInsert = [],
                this.arrayPaths = [];
                var self = this;
                return $.each(timeslots, function(i, obj) {
                    var arrayTimeSlots = {
                        Always: !0,
                        WeekDays: obj.WeekDays,
                        StartTime: obj.StartTime,
                        EndTime: obj.EndTime
                    };
                    self.arrayPaths.push($.xpaths.scheduling.insert.replace("#alias#", alias));
                    var arrayInsertTemp = [];
                    arrayInsertTemp.push({
                        TimeSlot: arrayTimeSlots
                    }),
                    self.arrayInsert.push(arrayInsertTemp)
                }),
                this.arrayInsert.length ? ($.xmo.addChildrenMultiple({
                    aparent: this.arrayPaths,
                    values: this.arrayInsert
                }),
                !0) : !1
            } catch (e) {
                return !1
            }
        },
        enable: function(value, alias) {
            return $.xmo.setValuesTree(value, $.xpaths.scheduling.enable.replace("#alias#", alias))
        },
        getEnable: function(alias) {
            return $.xmo.getValuesTree($.xpaths.scheduling.enable.replace("#alias#", alias))
        },
        search: function(alias) {
            return $.xmo.getValuesTree($.xpaths.scheduling.insert.replace("#alias#", alias))
        },
        remove: function(alias) {
            try {
                return $.xmo.delChild($.xpaths.scheduling.remove.replace("#alias#", alias)),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return Scheduling
}),
sboxApp.factory("WanSettings", [function() {
    var _cache = {}
      , _formatLeaseExpire = function(leaseExpire) {
        if (void 0 === leaseExpire || null === leaseExpire || "" === leaseExpire)
            return "";
        var leaseFormatted = moment(leaseExpire).format("ddd MMM DD HH:mm:ss YYYY");
        return leaseFormatted
    }
      , _selectWanIPv6Address = function(ipv6Addresses) {
        ipv6Addresses = $.util.fixGetValuesTree(ipv6Addresses);
        var wanIpv6Address = null;
        for (var i in ipv6Addresses) {
            var ipv6Address = ipv6Addresses[i];
            if ("ENABLED" === ipv6Address.Status && "PREFERRED" === ipv6Address.IPAddressStatus && "DHCPV6" === ipv6Address.Origin) {
                wanIpv6Address = ipv6Address;
                break
            }
        }
        return wanIpv6Address
    }
      , WanSettings = {
        updateCache: function() {
            var xpaths = $.xpaths.wan.settings;
            xpaths.ipv6 = $.xpaths.internetConnectivity.ipv6,
            _cache = $.xmo.getValuesTree(xpaths);
            var timeLeaseExpire = ""
              , leaseTime = ""
              , ipv6Address = _selectWanIPv6Address(_cache.ipv6.wanIPv6Internal);
            _cache.ipv6.serverLeaseExpire && (timeLeaseExpire = _cache.ipv6.serverLeaseExpire.Server.LeaseExpire),
            ipv6Address && (leaseTime = $.constants.leaseTimeRegex.exec(ipv6Address.ValidLifetime),
            leaseTime = leaseTime ? "0000-00-" + leaseTime[1] + "+0000" : ""),
            _cache.ipv6.leaseTime = leaseTime,
            _cache.ipv6.leaseExpire = _formatLeaseExpire(timeLeaseExpire),
            _cache.ipv6.dnsV6 = $.util.fixGetValuesTree(_cache.ipv6.dnsV6)
        },
        getInfo: function() {
            this.updateCache();
            var wanIpv6Address = _selectWanIPv6Address(_cache.ipv6.wanIPv6Internal);
            return _cache.ipv6.wanAddress = wanIpv6Address ? wanIpv6Address.IPAddress : "",
            _cache
        },
        getTr69Settings: function() {
            var _localCache, xpaths = $.xpaths.mySagemcomBox.maintenance.tr69;
            return _localCache = $.xmo.getValuesTree(xpaths),
            _localCache.password = "" !== _localCache.password ? _localCache.password : "#$placehdr$#",
            _localCache.originalPassword = _localCache.password,
            _localCache
        },
        setTr69Settings: function(tr69, options) {
            try {
                var arrayData = {};
                return arrayData[$.xpaths.mySagemcomBox.maintenance.tr69.url] = tr69.url,
                arrayData[$.xpaths.mySagemcomBox.maintenance.tr69.username] = tr69.username,
                tr69.originalPassword !== tr69.password && (arrayData[$.xpaths.mySagemcomBox.maintenance.tr69.password] = tr69.password),
                arrayData[$.xpaths.mySagemcomBox.maintenance.tr69.informEnable] = tr69.informEnable,
                arrayData[$.xpaths.mySagemcomBox.maintenance.tr69.informInterval] = tr69.informInterval,
                $.xmo.setValuesFlat(arrayData, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        },
        getWanProvisioningMode: function() {
            var _localCache, xpaths = $.xpaths.wan.settings.wanProvisioningMode;
            return _localCache = $.xmo.getValuesTree(xpaths)
        }
    };
    return WanSettings
}
]),
sboxApp.factory("WiFiMultimedia", ["WifiXpaths", function(WifiXpaths) {
    var cache, _updateCache = function() {
        var xpaths24GHz = WifiXpaths.get("2.4GHz", "priv").general
          , xpaths5GHz = WifiXpaths.get("5GHz", "priv").general
          , xpaths = {
            wmmEnable2GHz: xpaths24GHz.wmm,
            powerSave2GHz: xpaths24GHz.wmmPowerSave,
            wmmEnable5GHz: xpaths5GHz.wmm,
            powerSave5GHz: xpaths5GHz.wmmPowerSave
        };
        cache = $.xmo.getValuesTree(xpaths)
    }, WifiMultimedia = {
        populate: function() {
            var data = {};
            return cache || _updateCache(),
            data.wmmEnable2GHz = cache.wmmEnable2GHz ? !0 : !1,
            data.powerSave2GHz = cache.powerSave2GHz ? !0 : !1,
            data.wmmEnable5GHz = cache.wmmEnable5GHz ? !0 : !1,
            data.powerSave5GHz = cache.powerSave5GHz ? !0 : !1,
            data
        },
        save: function(data, options) {
            var dataSave = {}
              , xpaths24GHz = WifiXpaths.get("2.4GHz", "priv").general
              , xpaths5GHz = WifiXpaths.get("5GHz", "priv").general;
            dataSave[xpaths24GHz.wmm] = data.wmmEnable2GHz,
            dataSave[xpaths5GHz.wmm] = data.wmmEnable5GHz,
            dataSave[xpaths24GHz.wmmPowerSave] = data.powerSave2GHz,
            dataSave[xpaths5GHz.wmmPowerSave] = data.powerSave5GHz;
            try {
                $.xmo.setValuesFlat(dataSave, {
                    sync: !1,
                    success: function() {
                        _updateCache(),
                        options.success()
                    },
                    error: options.error
                })
            } catch (e) {
                options.error()
            }
        }
    };
    return WifiMultimedia
}
]),
sboxApp.factory("LanIPv6", [function() {
    var _cache = {}
      , lanIPv6 = {
        populate: function() {
            if (_cache = $.xmo.getValuesTree($.xpaths.mySagemcomBox.lanIPv6),
            $.config.showedpages.charter && $.config.showedpages.charter.enable || $.config.showedpages.charter5280 && $.config.showedpages.charter5280.enable) {
                var lanIPv6Obj = {
                    IPAddress: ""
                };
                $(_cache.lanIPv6HighestIndex).each(function(i, obj) {
                    obj.Alias.indexOf("DHCPV6") > -1 && (lanIPv6Obj = obj)
                }),
                _cache.lanIPv6 = lanIPv6Obj.IPAddress,
                _cache.wanDhcpv6UserClassOption = $.util.hex2a(_cache.wanDhcpv6UserClassOption, ":")
            }
            return _cache
        },
        save: function(data, options) {
            try {
                if (!data || $.isEmptyObject(data))
                    return;
                var dataMap = {};
                dataMap[$.xpaths.mySagemcomBox.lanIPv6.enableDHCPPD] = data.enableDHCPPD,
                $.config.showedpages.charter && $.config.showedpages.charter.enable || $.config.showedpages.charter5280 && $.config.showedpages.charter5280.enable ? (dataMap[$.xpaths.mySagemcomBox.lanIPv6.typeLan6Autoconfig] = data.typeLan6Autoconfig,
                data.rangeMinAddress && data.rangeMaxAddress ? (dataMap[$.xpaths.mySagemcomBox.lanIPv6.rangeMinAddress] = data.rangeMinAddress,
                dataMap[$.xpaths.mySagemcomBox.lanIPv6.rangeMaxAddress] = data.rangeMaxAddress) : (dataMap[$.xpaths.mySagemcomBox.lanIPv6.rangeMinAddress] = $.constants.lanIPv6DefaultMinAddress,
                dataMap[$.xpaths.mySagemcomBox.lanIPv6.rangeMaxAddress] = $.constants.lanIPv6DefaultMaxAddress),
                dataMap[$.xpaths.mySagemcomBox.lanIPv6.rangeMinAddress] = data.rangeMinAddress,
                dataMap[$.xpaths.mySagemcomBox.lanIPv6.rangeMaxAddress] = data.rangeMaxAddress) : (dataMap[$.xpaths.mySagemcomBox.lanIPv6.lanIPv6] = data.lanIPv6,
                dataMap[$.xpaths.mySagemcomBox.lanIPv6.enableAutoIPv6Assignment] = data.enableAutoIPv6Assignment),
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (e) {
                options.error()
            }
        },
        saveWanIPv6: function(data, options) {
            try {
                if (!data || $.isEmptyObject(data))
                    return;
                var dataMap = {};
                dataMap[$.xpaths.mySagemcomBox.lanIPv6.wanDhcpv6UserClassOption] = $.util.a2hex(data.wanDhcpv6UserClassOption, ":"),
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (e) {
                options.error()
            }
        }
    };
    return lanIPv6
}
]),
sboxApp.factory("NeighborAPS", function() {
    var stopSearch = function(id) {
        if (0 !== id && void 0 !== id && null !== id) {
            var req = $.xmo.client.newRequest();
            req.deleteNotification(id),
            req.send()
        }
    }
      , NeighborAPS = {
        stopAllNotifications: function() {
            try {
                $.xmo.deleteAllNotifications()
            } catch (error) {}
        },
        startSearch: function(radio, options) {
            var searchId = 0
              , saveData = {}
              , alreadyProcessed = !1;
            saveData[$.xpaths.neighborAps.selectedRadio] = "",
            "2.4GHz" === radio ? saveData[$.xpaths.neighborAps.selectedRadio] = "Device/WiFi/Radios/Radio[RADIO2G4]" : "5GHz" === radio && (saveData[$.xpaths.neighborAps.selectedRadio] = "Device/WiFi/Radios/Radio[RADIO5G]"),
            saveData[$.xpaths.neighborAps.search] = "REQUESTED";
            try {
                $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: function() {
                        searchId = $.xmo.onPeriodicValue($.xpaths.neighborAps.search, function(value) {
                            "COMPLETED" !== value || alreadyProcessed ? "ERROR" === value && (stopSearch(searchId),
                            options.error()) : ($.xmo.getValuesTree($.xpaths.neighborAps.results, options),
                            alreadyProcessed = !0,
                            stopSearch(searchId))
                        }, null)
                    },
                    error: function() {
                        stopSearch(searchId),
                        options.error()
                    }
                })
            } catch (e) {
                stopSearch(searchId),
                options.error(e)
            }
        },
        stopSearch: stopSearch
    };
    return NeighborAPS
}),
sboxApp.factory("BridgeMode", function() {
    var BridgeMode = {
        populate: function() {
            return $.xmo.getValuesTree($.xpaths.mySagemcomBox.bridgeMode.enable)
        },
        save: function(data, options) {
            var saveArray = {};
            saveArray[$.xpaths.mySagemcomBox.bridgeMode.enable] = data.enable;
            try {
                return $.xmo.setValuesFlat(saveArray, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return BridgeMode
}),
sboxApp.factory("SipAlg", function() {
    var SipAlg = {
        populate: function() {
            var data = {}
              , sipAlgEnable = $.xmo.getValuesTree($.xpaths.mySagemcomBox.advancedOptions.sipAlgEnable);
            return data.sipAlgEnable = sipAlgEnable === !0,
            data
        },
        save: function(sipAlgEnable, options) {
            var success = !0;
            try {
                if (void 0 === sipAlgEnable)
                    throw new Error;
                var dataMap = {};
                dataMap[$.xpaths.mySagemcomBox.advancedOptions.sipAlgEnable] = sipAlgEnable === !0,
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (err) {
                success = !1
            }
            return success
        }
    };
    return SipAlg
}),
sboxApp.factory("SmartinterfaceRRM", function() {
    var SmartinterfaceRRM = {
        populate: function() {
            return $.xmo.getValuesTree($.xpaths.accessControl.smartinterfaceRRM.enable)
        },
        save: function(data, options) {
            var saveArray = {};
            saveArray[$.xpaths.accessControl.smartinterfaceRRM.enable] = data.enable;
            try {
                return $.xmo.setValuesFlat(saveArray, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return SmartinterfaceRRM
}),
sboxApp.factory("WalledGarden", function() {
    var WalledGarden = {
        populate: function() {
            return $.xmo.getValuesTree($.xpaths.mySagemcomBox.walledGarden.enable)
        },
        save: function(data, options) {
            var saveArray = {};
            saveArray[$.xpaths.mySagemcomBox.walledGarden.enable] = data.enable;
            try {
                return $.xmo.setValuesFlat(saveArray, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return WalledGarden
}),
sboxApp.factory("AdvancedOptions", function() {
    var featuresAvailable = {
        wanBlockingEnable: $.config.wanBlockingEnable === !0 || void 0 === $.config.wanBlockingEnable ? !0 : !1,
        ipSecEnable: !1,
        remoteConfig: !0,
        pptpEnable: !1,
        upnpEnable: !0,
        sipAlgEnable: !0,
        portScanDetection: !0,
        remoteIPAddress: !1,
        remoteServicePort: !1,
        multicast: !1
    };
    $.config.showedpages.showIPSecPPTP.enable && (featuresAvailable.ipSecEnable = !0,
    featuresAvailable.pptpEnable = !0);
    var _remoteAccessMap = {}
      , _parsers = {
        remoteConfig: function(value) {
            return value ? "ACCESS_ENABLE" : "ACCESS_DISABLE"
        }
    }
      , _dataParse = function(key, value) {
        return _parsers[key] ? _parsers[key](value) : value
    }
      , _mapRemoteAccessUsers = function(xmoUsers) {
        _remoteAccessMap = {},
        xmoUsers = xmoUsers || {},
        $.each(xmoUsers, function(i, user) {
            if (user.Profiles && user.Profiles.length) {
                var selectedRemoteAccess, validProfile = !1;
                $.each(user.Profiles, function(p, profile) {
                    return profile.Name && /^(end\-user|customer\-admin)$/gi.test(profile.Name) ? (validProfile = !0,
                    !1) : void 0
                }),
                $.each(user.RemoteAccesses, function(r, remoteAccess) {
                    return remoteAccess && 8080 === remoteAccess.Port && /^https?$/gi.test(remoteAccess.Service) ? (selectedRemoteAccess = remoteAccess,
                    !1) : void 0
                }),
                validProfile && selectedRemoteAccess && (_remoteAccessMap[user.Login] = {
                    uid: user.uid,
                    uidRemoteAccess: selectedRemoteAccess.uid,
                    remoteConfig: "ACCESS_ENABLE" === selectedRemoteAccess.WANRestriction,
                    user: user
                })
            }
        })
    }
      , _checkRemoteConfig = function() {
        var isRemoteConfigEnabled = !1;
        return $.each(_remoteAccessMap, function(r, remoteAccess) {
            return remoteAccess.remoteConfig === !0 ? (isRemoteConfigEnabled = !0,
            !1) : void 0
        }),
        isRemoteConfigEnabled
    }
      , AdvOptions = {
        populate: function() {
            var options = {}
              , xpaths = angular.copy($.xpaths.mySagemcomBox.advancedOptions);
            delete xpaths.remoteConfig;
            var data = $.xmo.getValuesTree(xpaths) || {};
            return _mapRemoteAccessUsers(data.users),
            options.wanBlockingEnable = data.wanBlockingEnable === !0,
            options.ipSecEnable = data.ipSecEnable === !0,
            options.remoteConfig = _checkRemoteConfig(),
            options.pptpEnable = data.pptpEnable === !0,
            options.upnpEnable = data.upnpEnable === !0,
            options.sipAlgEnable = data.sipAlgEnable === !0,
            options.portScanDetection = data.portScanDetection === !0,
            options.remoteIPAddress = data.remoteIPAddress,
            options.remoteServicePort = data.remoteServicePort || 80,
            options.multicast = data.multicast === !0,
            options.remoteUrl = "http://#address:#port".replace("#address", options.remoteIPAddress).replace("#port", options.remoteServicePort),
            options
        },
        isOptionAvailable: function(option) {
            return !!option && featuresAvailable[option]
        },
        save: function(data, options) {
            try {
                if (!data || $.isEmptyObject(data))
                    return;
                var dataToSave = {};
                $.each(data, function(key, value) {
                    $.xpaths.mySagemcomBox.advancedOptions[key] && featuresAvailable[key] && (value = _dataParse(key, value),
                    "remoteConfig" !== key ? dataToSave[$.xpaths.mySagemcomBox.advancedOptions[key]] = value : _remoteAccessMap && $.each(_remoteAccessMap, function(r, remoteAccess) {
                        var remoteAccessXpath = $.xpaths.mySagemcomBox.advancedOptions.remoteConfig.replace("#uid#", remoteAccess.uid).replace("#uidRemoteAccess#", remoteAccess.uidRemoteAccess);
                        dataToSave[remoteAccessXpath] = value
                    }))
                }),
                $.xmo.setValuesFlat(dataToSave, options)
            } catch (e) {
                options.error(e)
            }
        }
    };
    return AdvOptions
}),
sboxApp.factory("LedHubLight", function() {
    var Led = {
        populate: function() {
            var data = $.xmo.getValuesTree($.xpaths.mySagemcomBox.ledHubLight);
            return data
        },
        save: function(data, options) {
            var success = !0;
            try {
                if (void 0 === data)
                    throw new Error;
                var dataMap = {};
                dataMap[$.xpaths.mySagemcomBox.ledHubLight] = data === !0 ? "ON" : "OFF",
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (err) {
                success = !1
            }
            return success
        }
    };
    return Led
}),
sboxApp.factory("PloamPassword", function() {
    var PloamPassword = {
        populate: function() {
            var data = $.xmo.getValuesTree($.xpaths.gpon.EncryptedLogicalPassword);
            return data
        },
        getKeyEncryption: function() {
            var data = $.xmo.getValuesTree($.xpaths.XORCryptKey);
            return data
        },
        save: function(ploamPassword, options) {
            try {
                return $.xmo.setValuesTree(ploamPassword, $.xpaths.gpon.EncryptedLogicalPassword, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return options.error(),
                !1
            }
        }
    };
    return PloamPassword
}),
sboxApp.factory("SplashScreenService", function() {
    return {
        checkStatus: function(callback) {
            try {
                $.xmo.onPeriodicValue($.xpaths.splashScreen, callback, null)
            } catch (e) {
                return !1
            }
        }
    }
}),
sboxApp.factory("WizardHelper", function() {
    var _checkConnection = function() {
        return "UP" === $.xmo.getValuesTree($.xpaths.wizard.wanStatus)
    }
      , _getVlanId = function() {
        return $.xmo.getValuesTree($.xpaths.wizard.save.vlanId) || 0
    }
      , _getBridgeMode = function() {
        return $.xmo.getValuesTree($.xpaths.mySagemcomBox.bridgeMode.enable) === !0
    }
      , WizardHelper = {
        checkConnection: _checkConnection,
        getVlanId: _getVlanId,
        setBridgeMode: function(value, options) {
            try {
                var bridgeMode = _getBridgeMode();
                if (bridgeMode !== value) {
                    var saveData = {};
                    saveData[$.xpaths.mySagemcomBox.bridgeMode.enable] = value,
                    $.xmo.setValuesFlat(saveData, options)
                } else
                    options.success()
            } catch (e) {
                options.error(e)
            }
        },
        saveVlanId: function(value, options) {
            try {
                var vlanId = _getVlanId();
                if (vlanId !== value) {
                    var saveData = {};
                    saveData[$.xpaths.wizard.save.vlanId] = value,
                    $.xmo.setValuesFlat(saveData, options)
                } else
                    options.success()
            } catch (e) {
                options.error(e)
            }
        }
    };
    return WizardHelper
}),
sboxApp.factory("SipGlobal", function() {
    var cache, SipGlobal = {
        populate: function() {
            var xpath = $.xpaths.voice.sipGlobal;
            return cache = $.xmo.getValuesTree(xpath)
        },
        save: function(data, options) {
            var dataMap = {};
            dataMap[$.xpaths.voice.sipGlobal.enable] = data.enable === !0 ? "ENABLED" : "DISABLED",
            data.sipProxyServer && (dataMap[$.xpaths.voice.sipGlobal.sipProxyServer] = data.sipProxyServer),
            data.sipUserAgentDomain && (dataMap[$.xpaths.voice.sipGlobal.sipUserAgentDomain] = data.sipUserAgentDomain),
            data.sipOutboundProxy && (dataMap[$.xpaths.voice.sipGlobal.sipOutboundProxy] = data.sipOutboundProxy),
            data.sipServerRegister && (dataMap[$.xpaths.voice.sipGlobal.sipServerRegister] = data.sipServerRegister),
            data.line1DirectoryNumber && (dataMap[$.xpaths.voice.sipGlobal.line1Enable] = data.line1Enable === !0 ? "ENABLED" : "DISABLED",
            dataMap[$.xpaths.voice.sipGlobal.line1DirectoryNumber] = data.line1DirectoryNumber,
            dataMap[$.xpaths.voice.sipGlobal.line1AuthName] = data.line1AuthName,
            dataMap[$.xpaths.voice.sipGlobal.line1AuthPassword] = data.line1AuthPassword),
            data.line2DirectoryNumber && (dataMap[$.xpaths.voice.sipGlobal.line2Enable] = data.line2Enable === !0 ? "ENABLED" : "DISABLED",
            dataMap[$.xpaths.voice.sipGlobal.line2DirectoryNumber] = data.line2DirectoryNumber,
            dataMap[$.xpaths.voice.sipGlobal.line2AuthName] = data.line2AuthName,
            dataMap[$.xpaths.voice.sipGlobal.line2AuthPassword] = data.line2AuthPassword),
            $.xmo.setValuesFlat(dataMap, {
                sync: !1,
                success: options.success,
                error: options.error
            })
        }
    };
    return SipGlobal
}),
sboxApp.factory("SsidCreation", function() {
    var cache = {}
      , SsidCreation = {
        updateCache: function() {
            cache = $.xmo.getValuesTree($.xpaths.ssidCreation.search)
        },
        populate: function(radio) {
            var result = [];
            for (var x in cache)
                cache[x].Alias.indexOf("NEW_SSID") > -1 && ("2.4GHz" === radio && cache[x].LowerLayers.indexOf("RADIO2G4") > -1 || "5GHz" === radio && cache[x].LowerLayers.indexOf("RADIO5G") > -1) && result.push(cache[x]);
            return result
        },
        getNewAias: function() {
            var newAlias;
            if (cache.length && cache[cache.length - 1].Alias.indexOf("NEW_SSID") > -1) {
                var nextAlias = parseInt(cache[cache.length - 1].Alias.substr(8)) + 1;
                newAlias = "NEW_SSID" + nextAlias
            } else
                newAlias = "NEW_SSID1";
            return newAlias
        },
        getNewUid: function() {
            return parseInt(cache[cache.length - 1].uid) + 1
        },
        save: function(data, options) {
            return data.uid ? this.update(data, options) : this.insert(data, options)
        },
        insert: function(data, options) {
            var lowerLayers, self = this;
            lowerLayers = "2.4GHz" === data.radio ? "Device/WiFi/Radios/Radio[RADIO2G4]" : "Device/WiFi/Radios/Radio[RADIO5G]";
            var newAlias = self.getNewAias()
              , obj = {
                SSID: {
                    Alias: newAlias,
                    Enable: !0,
                    LowerLayers: lowerLayers,
                    SSID: data.ssid
                }
            };
            try {
                return $.xmo.addChild($.xpaths.ssidCreation.insert.ssid, obj, {
                    sync: !1,
                    success: function() {
                        var obj = {
                            AccessPoint: {
                                Alias: newAlias,
                                Enable: data.enable,
                                SSIDReference: $.xpaths.ssidCreation.accessPointSsidReferenceValue.replace("#", newAlias)
                            }
                        };
                        $.xmo.addChild($.xpaths.ssidCreation.insert.accessPoint, obj, {
                            sync: !1,
                            success: options.success,
                            error: options.error
                        })
                    },
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        },
        update: function(data, options) {
            var saveData = {};
            saveData[$.xpaths.ssidCreation.update.ssid.enable.replace("#", data.uid)] = data.enable,
            saveData[$.xpaths.ssidCreation.update.ssid.ssid.replace("#", data.uid)] = data.ssid;
            try {
                return $.xmo.setValuesFlat(saveData, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        },
        remove: function(data) {
            var result;
            try {
                var delRule = [];
                delRule.push($.xpaths.ssidCreation.remove.ssid.replace("#", data.Alias)),
                delRule.push($.xpaths.ssidCreation.remove.accessPoint.replace("#", data.Alias)),
                $.xmo.delChildren(delRule),
                result = !0
            } catch (e) {
                result = !1
            }
            return result
        }
    };
    return SsidCreation
}),
sboxApp.factory("GRETunnel", function() {
    var cache, GRETunnel = {
        populate: function() {
            return cache = $.xmo.getValuesTree($.xpaths.greTunnel)
        },
        save: function(data, options) {
            var dataMap = {};
            dataMap[$.xpaths.greTunnel.enable] = data.enable,
            dataMap[$.xpaths.greTunnel.server] = data.server,
            dataMap[$.xpaths.greTunnel.vlanId] = data.vlanId,
            $.xmo.setValuesFlat(dataMap, {
                sync: !1,
                success: options.success,
                error: options.error
            })
        }
    };
    return GRETunnel
}),
sboxApp.factory("VLANEthernet", function() {
    var VLAN = {
        populate: function() {
            return $.xmo.getValuesTree($.xpaths.internetConnectivity.vlan.vlanTerminations)
        },
        getModel: function() {
            var model = {
                Enable: !1,
                Alias: "",
                LowerLayers: "",
                VLANID: "",
                IngressPriorityMappings: "",
                EgressPriorityMappings: ""
            };
            return model
        },
        removeVLANTermination: function(id) {
            var result, path = $.xpaths.internetConnectivity.vlan.removeItem.replace("#", id);
            try {
                $.xmo.delChild(path),
                result = !0
            } catch (e) {
                result = !1
            }
            return result
        },
        save: function(data, update, options) {
            var theXpath = $.xpaths.internetConnectivity.vlan.vlanTerminations;
            try {
                for (var objInsert = {
                    parents: [],
                    values: []
                }, objUpdate = {}, i = 0; i < data.length; i++)
                    if (data[i].uid) {
                        var xp = theXpath + '/VLANTermination[@uid="' + data[i].uid + '"]/';
                        objUpdate[xp + "Enable"] = data[i].Enable,
                        objUpdate[xp + "Alias"] = data[i].Alias,
                        objUpdate[xp + "LowerLayers"] = data[i].LowerLayers,
                        objUpdate[xp + "VLANID"] = data[i].VLANID,
                        objUpdate[xp + "IngressPriorityMappings"] = data[i].IngressPriorityMappings,
                        objUpdate[xp + "EgressPriorityMappings"] = data[i].EgressPriorityMappings
                    } else {
                        var arrayInsertTmp = []
                          , item = {
                            Enable: data[i].Enable,
                            Alias: data[i].Alias,
                            LowerLayers: data[i].LowerLayers,
                            VLANID: data[i].VLANID,
                            IngressPriorityMappings: data[i].IngressPriorityMappings,
                            EgressPriorityMappings: data[i].EgressPriorityMappings
                        };
                        arrayInsertTmp.push({
                            VLANTermination: item
                        }),
                        objInsert.values.push(arrayInsertTmp),
                        objInsert.parents.push(theXpath)
                    }
                var saveData = {
                    toAdd: {
                        parent: objInsert.parents,
                        values: objInsert.values
                    },
                    toUpdate: objUpdate
                };
                $.xmo.addOrUpdate(saveData, {
                    sync: !1,
                    success: function() {
                        options.success()
                    },
                    error: function() {
                        options.error()
                    }
                })
            } catch (e) {
                options.error()
            }
        }
    };
    return VLAN
}),
sboxApp.factory("Mptcp", function() {
    var Mptcp = {
        populateStatus: function() {
            return $.xmo.getValuesTree($.xpaths.internetConnectivity.mptcp.status)
        },
        populateKpiInformation: function() {
            return $.xmo.getValuesTree($.xpaths.internetConnectivity.mptcp.kpiInformation)
        },
        populateStatistics: function() {
            return $.xmo.getValuesTree($.xpaths.internetConnectivity.mptcp.statistics)
        },
        saveStatus: function(data, options) {
            var array = {};
            array[$.xpaths.internetConnectivity.mptcp.status.enable] = data;
            try {
                return $.xmo.setValuesFlat(array, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                }),
                !0
            } catch (e) {
                return !1
            }
        }
    };
    return Mptcp
}),
sboxApp.factory("NetworkConfiguration", function() {
    var NetworkConfiguration = {
        populate: function() {
            return $.xmo.getValuesTree($.xpaths.mySagemcomBox.networkConfiguration)
        },
        save: function(data, options) {
            try {
                if (void 0 === data)
                    throw new Error;
                for (var dataMap = {}, i = 0; i < data.atmLinks.length; i++)
                    dataMap[$.xpaths.mySagemcomBox.networkConfiguration.update.destinationAddress.replace("#", data.atmLinks[i].Alias)] = data.atmLinks[i].DestinationAddress;
                for (var j = 0; j < data.ethernetLinks.length; j++)
                    dataMap[$.xpaths.mySagemcomBox.networkConfiguration.update.vlanid.replace("#", data.ethernetLinks[j].Alias)] = data.ethernetLinks[j].VLANID;
                $.xmo.setValuesFlat(dataMap, {
                    sync: !1,
                    success: options.success,
                    error: options.error
                })
            } catch (err) {
                options.error(err)
            }
        }
    };
    return NetworkConfiguration
}),
sboxApp.controller("ParentalControllerPlanningDual", ["$scope", "$rootScope", "ParentalControl", "ParentalControlNewDual", "ParentalControlProfile", "ConnectedDevices", "$state", "$stateParams", "$timeout", "$basicInfo", "CheckFeature", function($scope, $rootScope, ParentalControlHost, ParentalControlNewDual, ParentalControlProfile, ConnectedDevices, $state, $stateParams, $timeout, $basicInfo, CheckFeature) {
    var ParentalControl;
    $scope.isNewParentalControl = "ParentalControlNew" === $.config.modules.accessControl.parentalControlService,
    $scope.rejectRuleEnable = $.config.showedpages.rejectRuleEnable && $.config.showedpages.rejectRuleEnable.enable,
    $scope.index = "",
    $scope.isNewParentalControl ? (ParentalControl = ParentalControlNewDual,
    $scope.moduleType = "new") : (ParentalControl = ParentalControlHost,
    $scope.moduleType = "host"),
    $scope.selectedAllFlag = !1,
    $stateParams.uid ? $scope.deviceId = parseInt($stateParams.uid, 10) : $scope.deviceId = null,
    CheckFeature.go("parentalControlOlfeo") ? $("#calendarRows").trigger("createOwl") : $(".owl-carousel").show(),
    $scope.submitted = !1,
    $scope.timeSlotsGrid = {},
    $scope.timeSlotsSummary = {},
    $scope.selectedDevices = [],
    $scope.timeSlotsHours = [];
    for (var x = 0; 24 > x; x++)
        $scope.timeSlotsHours.push("Hours" + x);
    $scope.showGatewayTime = $.config.modules.accessControl.gatewayTime;
    var _generateTimeslotsSummary = function(timeslotsGrid) {
        $scope.timeSlotsSummary = {};
        for (var x = 0; x < $.constants.days.length; x++) {
            $scope.timeSlotsSummary[$.constants.days[x]] = timeslotsGrid[$.constants.days[x]].Hours0;
            for (var y = 1; 24 > y; y++)
                if (timeslotsGrid[$.constants.days[x]]["Hours" + y] !== $scope.timeSlotsSummary[$.constants.days[x]]) {
                    $scope.timeSlotsSummary[$.constants.days[x]] = "orange";
                    break
                }
        }
    };
    $scope.changeStatus = function(color, day) {
        var x, y;
        if ("all" === day)
            for (x in $scope.timeSlotsGrid)
                for (y in $scope.timeSlotsGrid[x])
                    $scope.timeSlotsGrid[x][y] = color;
        else
            for (y in $scope.timeSlotsGrid[day])
                $scope.timeSlotsGrid[day][y] = color
    }
    ,
    $scope.toogleSelectedDevice = function(device) {
        var exists = $.grep($scope.selectedDevices, function(obj) {
            return obj.uid === device.uid
        });
        exists.length ? void 0 === device.uid ? ($scope.selectedDevices = [],
        $.each($scope.connectedDevices, function(i, obj) {
            obj.checked = !1
        })) : (device.checked = !1,
        $scope.connectedDevices[0].checked = !1,
        $scope.selectedDevices = $.grep($scope.selectedDevices, function(obj) {
            return obj.uid === device.uid || void 0 === obj.uid
        }, !0)) : void 0 === device.uid ? ($scope.selectedDevices = $scope.connectedDevices,
        $.each($scope.connectedDevices, function(i, obj) {
            obj.checked = !0
        })) : ($scope.selectedDevices.push(device),
        $scope.selectedDevices.length === $scope.connectedDevices.length - 1 && ($scope.connectedDevices[0].checked = !0,
        $scope.selectedDevices = $scope.connectedDevices),
        device.checked = !0),
        $rootScope.globalWait = !0,
        $timeout(function() {
            $scope.changeTimeSlots(),
            $rootScope.globalWait = !1
        }, 100)
    }
    ;
    var _getSelectedDevices = function() {
        var selectedDevices = [];
        if ($scope.selectedDevices.length) {
            var devices = ConnectedDevices.deviceList();
            if ("acPcAllDevices" === $scope.selectedDevices[0] || "acPcAllDevices" === $scope.selectedDevices[0].hostname)
                return devices;
            if (void 0 !== $scope.selectedDevices[0].uid)
                return $scope.selectedDevices;
            for (var i = 0; i < $scope.selectedDevices.length; i++)
                for (var j = 0; j < devices.length; j++)
                    -1 !== devices[j].hostname.indexOf($scope.selectedDevices[i]) && selectedDevices.push(devices[j])
        }
        return selectedDevices
    };
    $scope.changeTimeSlots = function() {
        var x, y;
        for (x = 0; x < $.constants.days.length; x++)
            for ($scope.timeSlotsGrid[$.constants.days[x]] = {},
            y = 0; 24 > y; y++)
                $scope.timeSlotsGrid[$.constants.days[x]]["Hours" + y] = null;
        var timeslot, selectedDevices = _getSelectedDevices();
        for ($.each(selectedDevices, function(i, obj) {
            timeslot = ParentalControl.searchControlByHost(obj);
            var timeslotDrop = $scope.fixTimeSlot(timeslot.drop);
            if ($.each(timeslotDrop, function(i2, obj2) {
                for (x = 0; 24 > x; x++)
                    $scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x] = $scope.getColorDrop($scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x], obj2["Hours" + x])
            }),
            $scope.rejectRuleEnable) {
                var timeslotReject = $scope.fixTimeSlot(timeslot.reject);
                $.each(timeslotReject, function(i2, obj2) {
                    for (x = 0; 24 > x; x++)
                        $scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x] = $scope.getColorReject($scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x], obj2["Hours" + x])
                })
            }
        }),
        x = 0; x < $.constants.days.length; x++)
            for (y = 0; 24 > y; y++)
                null === $scope.timeSlotsGrid[$.constants.days[x]]["Hours" + y] && ($scope.timeSlotsGrid[$.constants.days[x]]["Hours" + y] = "green");
        _generateTimeslotsSummary($scope.timeSlotsGrid),
        $timeout(function() {
            $scope.initCheckUnsaved && $scope.initCheckUnsaved("parentalForm"),
            $scope.parentalForm.$setPristine(!0)
        }, 0)
    }
    ,
    $scope.populate = function() {
        var data = ParentalControlProfile.populate();
        if ($scope.profiles = data.profiles,
        $scope.profile = data.DefaultProfile,
        $scope.deviceId) {
            $scope.connectedDevices = ConnectedDevices.getDeviceById($scope.deviceId),
            $scope.selectedDevices = $scope.connectedDevices,
            $scope.selectedAllFlag = !0;
            var host = ParentalControlProfile.verifyHost($scope.connectedDevices[0].PhysAddress);
            host && ($scope.profile = host.Profile || data.DefaultProfile),
            $timeout(function() {
                $scope.changeTimeSlots()
            }, 500)
        } else
            $scope.connectedDevices = ConnectedDevices.deviceList(),
            $scope.connectedDevices.unshift({
                hostname: "acPcAllDevices"
            }),
            $scope.changeTimeSlots()
    }
    ,
    $scope.fixTimeSlot = function(timeslot) {
        var x, y, fixedObject = {}, timeslotNew = {};
        for ($(timeslot).each(function(i, obj) {
            timeslotNew[obj.DayIndex] = obj
        }),
        x = 0; x < $.constants.days.length; x++)
            for (timeslotNew[$.constants.days[x]] || (timeslotNew[$.constants.days[x]] = {}),
            fixedObject[$.constants.days[x]] = {},
            fixedObject[$.constants.days[x]].DayIndex = $.constants.days[x],
            timeslotNew[$.constants.days[x]].uid && (fixedObject[$.constants.days[x]].uid = timeslotNew[$.constants.days[x]].uid),
            y = 0; 24 > y; y++)
                void 0 === timeslotNew[$.constants.days[x]]["Hours" + y] ? fixedObject[$.constants.days[x]]["Hours" + y] = !1 : fixedObject[$.constants.days[x]]["Hours" + y] = timeslotNew[$.constants.days[x]]["Hours" + y];
        return fixedObject
    }
    ,
    $scope.getColorDrop = function(currentColor, value) {
        var newColor;
        return null === currentColor ? newColor = value ? "red" : "green" : "green" === currentColor ? newColor = value ? "orange" : "green" : "red" === currentColor ? newColor = value ? "red" : "orange" : "pink" === currentColor ? newColor = "pink" : "orange" === currentColor && (newColor = "orange"),
        newColor
    }
    ,
    $scope.getColorReject = function(currentColor, value) {
        var newColor;
        return null === currentColor ? newColor = value ? "pink" : "green" : "green" === currentColor ? newColor = value ? "pink" : "green" : "red" === currentColor ? newColor = value ? "pink" : "red" : "pink" === currentColor ? newColor = value ? "pink" : "orange" : "orange" === currentColor && (newColor = "orange"),
        newColor
    }
    ,
    $scope.setColor = function(obj, element) {
        return $scope.rejectRuleEnable ? (element.leIndex !== $scope.index && ($scope.clickedOne = !1,
        $scope.index = element.leIndex),
        $scope.mouseIsDown && !$scope.clickedOne && ("green" === obj ? (obj = "red",
        $scope.clickedOne = !0) : "red" === obj ? (obj = "pink",
        $scope.clickedOne = !0) : (obj = "green",
        $scope.clickedOne = !0)),
        obj) : void 0
    }
    ,
    $scope.setFlag = function(obj, element) {
        return $scope.rejectRuleEnable ? ($scope.mouseIsDown = !0,
        $scope.clickedOne = !1,
        this.setColor(obj, element)) : void 0
    }
    ,
    $scope.removeFlag = function() {
        $scope.mouseIsDown = !1
    }
    ,
    $rootScope.globalWait = !0,
    $scope.populate();
    var timeoutPromise = $timeout(function() {
        $("#calendarRows").trigger("initEvents"),
        $(".dummy").trigger("showAfterAngular"),
        $rootScope.globalWait = !1
    }, 1e3);
    $scope.$on("$destroy", function() {
        $("#calendarRows").trigger("destroyEvents"),
        $timeout.cancel(timeoutPromise),
        $rootScope.globalWait = !1
    }),
    $scope.save = function() {
        $scope.submitted = !0,
        $rootScope.globalWait = !0;
        var updateFlagDrop, updateFlagReject, success = !1;
        $timeout(function() {
            if ($scope.selectedDevices.length) {
                var timeslot, selectedDevices = _getSelectedDevices();
                $.each(selectedDevices, function(i, obj) {
                    timeslot = ParentalControl.searchControlByHost(obj);
                    var timeslotDrop = $scope.fixTimeSlot(timeslot.drop);
                    updateFlagDrop = !1,
                    updateFlagReject = !1,
                    $.each(timeslotDrop, function(i2, obj2) {
                        for (x = 0; 24 > x; x++)
                            $scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x] !== obj2["Hours" + x] && "orange" !== $scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x] && (obj2["Hours" + x] = "green" !== $scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x] && $scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x] && "pink" !== $scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x] ? !0 : !1);
                        obj2.uid && (updateFlagDrop = !0)
                    });
                    var timeslotReject;
                    if ($scope.rejectRuleEnable && (timeslotReject = $scope.fixTimeSlot(timeslot.reject),
                    $.each(timeslotReject, function(i2, obj2) {
                        for (x = 0; 24 > x; x++)
                            $scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x] !== obj2["Hours" + x] && (obj2["Hours" + x] = "green" !== $scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x] && $scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x] && "red" !== $scope.timeSlotsGrid[obj2.DayIndex]["Hours" + x] ? !0 : !1);
                        obj2.uid && (updateFlagReject = !0)
                    })),
                    1 === $scope.selectedDevices.length) {
                        var result = ParentalControlProfile.verifyHost(selectedDevices[0].PhysAddress)
                          , tmpArray = []
                          , tmp = {};
                        result ? (tmp.uid = result.uid,
                        tmp.device = {
                            PhysAddress: result.MAC
                        },
                        tmp.Profile = $scope.profile,
                        tmp.toBeDeleted = !1,
                        tmp.toBeUpdated = !0,
                        tmpArray.push(tmp),
                        ParentalControlProfile.updateHosts(tmpArray)) : (tmp.toBeUpdated = !1,
                        tmp.device = {
                            PhysAddress: selectedDevices[0].PhysAddress
                        },
                        tmp.Profile = $scope.profile,
                        tmp.toBeDeleted = !1,
                        tmpArray.push(tmp),
                        ParentalControlProfile.insertHosts(tmpArray))
                    }
                    updateFlagDrop && ParentalControl.updateControl([obj], timeslotDrop, !1),
                    updateFlagReject && ParentalControl.updateControl([obj], timeslotReject, !0);
                    var rsD, rsR;
                    rsD = ParentalControl.insertControl([obj], timeslotDrop, !1),
                    $scope.rejectRuleEnable && (rsR = ParentalControl.insertControl([obj], timeslotReject, !0)),
                    success = success || (rsD && $scope.rejectRuleEnable ? rsR : !0)
                })
            }
            $rootScope.showMessage = success,
            $scope.submitted = !success,
            $rootScope.globalWait = !1,
            success && $scope.changeTimeSlots()
        }, 100)
    }
}
]),
sboxApp.controller("ParentalControllerPlanningTimeslot", ["$scope", "$rootScope", "ParentalControlNew", "ParentalControlProfile", "ConnectedDevices", "$stateParams", "$timeout", function($scope, $rootScope, ParentalControl, ParentalControlProfile, ConnectedDevices, $stateParams, $timeout) {
    $scope.daysOfWeek = $.constants.daysCammel,
    $scope.isNewParentalControl = !0,
    $scope.moduleType = "new",
    $scope.submitted = !1,
    $scope.timeSlotsGrid = {},
    $scope.timeSlotsSummary = {},
    $scope.selectedDevices = [],
    $scope.timeSlotsHours = [];
    for (var x = 0; 24 > x; x++) {
        var slot = [];
        slot.push({
            start: 3600 * x,
            end: 3600 * x + 1800
        }),
        slot.push({
            start: 3600 * x + 1800,
            end: 3600 * x + 3600
        }),
        $scope.timeSlotsHours.push(slot)
    }
    $scope.getColor = function(currentColor, value) {
        var newColor;
        return null === currentColor ? newColor = "red" === value ? "red" : "green" : "green" === currentColor ? newColor = "red" === value ? "orange" : "green" : "red" === currentColor ? newColor = "red" === value ? "red" : "orange" : "orange" === currentColor && (newColor = "orange"),
        newColor
    }
    ,
    $scope.changeStatus = function(color, day) {
        var x, y;
        if ("all" === day)
            for (x in $scope.timeSlotsGrid)
                for (y in $scope.timeSlotsGrid[x])
                    $scope.timeSlotsGrid[x][y] = color;
        else
            for (y in $scope.timeSlotsGrid[day])
                $scope.timeSlotsGrid[day][y] = color
    }
    ,
    $scope.populate = function() {
        var data = ParentalControlProfile.populate();
        if ($scope.profiles = data.profiles,
        $scope.profile = data.DefaultProfile,
        $scope.deviceId) {
            $scope.connectedDevices = ConnectedDevices.getDeviceById($scope.deviceId),
            $scope.selectedDevices = $scope.connectedDevices,
            $scope.selectedAllFlag = !0;
            var host = ParentalControlProfile.verifyHost($scope.connectedDevices[0].PhysAddress);
            host && ($scope.profile = host.Profile || data.DefaultProfile),
            $timeout(function() {
                $scope.changeTimeSlots()
            }, 500)
        } else
            $scope.connectedDevices = ConnectedDevices.deviceList(),
            $scope.connectedDevices.unshift({
                hostname: "acPcAllDevices"
            }),
            $scope.changeTimeSlots()
    }
    ;
    var _getSelectedDevices = function() {
        var selectedDevices = [];
        if ($scope.selectedDevices.length) {
            var devices = ConnectedDevices.deviceList();
            if ("acPcAllDevices" === $scope.selectedDevices[0] || "acPcAllDevices" === $scope.selectedDevices[0].hostname)
                return devices;
            if (void 0 !== $scope.selectedDevices[0].uid)
                return $scope.selectedDevices;
            for (var i = 0; i < $scope.selectedDevices.length; i++)
                for (var j = 0; j < devices.length; j++)
                    -1 !== devices[j].hostname.indexOf($scope.selectedDevices[i]) && selectedDevices.push(devices[j])
        }
        return selectedDevices
    };
    $scope.changeTimeSlots = function() {
        var x, y, z;
        for (x in $scope.daysOfWeek)
            for (y in $scope.timeSlotsHours)
                for (z in $scope.timeSlotsHours[y])
                    $scope.timeSlotsGrid[$scope.daysOfWeek[x]] || ($scope.timeSlotsGrid[$scope.daysOfWeek[x]] = []),
                    $.isNumeric(y) && $.isNumeric(z) && ($scope.timeSlotsGrid[$scope.daysOfWeek[x]][$scope.timeSlotsHours[y][z].start] = null);
        var timeslot, selectedDevices = _getSelectedDevices();
        $.each(selectedDevices, function(i, obj) {
            timeslot = ParentalControl.searchTimeslotByHost(obj, $scope.timeSlotsHours),
            $.each(timeslot, function(slotIndex, slot) {
                $.each(slot, function(slotInfoIndex, slotInfo) {
                    $scope.timeSlotsGrid[slotIndex][slotInfoIndex] = $scope.getColor($scope.timeSlotsGrid[slotIndex][slotInfoIndex], slotInfo)
                })
            })
        });
        for (y in $scope.timeSlotsGrid)
            for (z in $scope.timeSlotsGrid[y])
                null === $scope.timeSlotsGrid[y][z] && ($scope.timeSlotsGrid[y][z] = "green");
        $timeout(function() {
            $scope.initCheckUnsaved && $scope.initCheckUnsaved("parentalForm"),
            $scope.parentalForm.$setPristine(!0)
        }, 0)
    }
    ,
    $scope.toogleSelectedDevice = function(device) {
        var exists = $.grep($scope.selectedDevices, function(obj) {
            return obj.uid === device.uid
        });
        exists.length ? void 0 === device.uid ? ($scope.selectedDevices = [],
        $.each($scope.connectedDevices, function(i, obj) {
            obj.checked = !1
        })) : (device.checked = !1,
        $scope.connectedDevices[0].checked = !1,
        $scope.selectedDevices = $.grep($scope.selectedDevices, function(obj) {
            return obj.uid === device.uid || void 0 === obj.uid
        }, !0)) : void 0 === device.uid ? ($scope.selectedDevices = $scope.connectedDevices,
        $.each($scope.connectedDevices, function(i, obj) {
            obj.checked = !0
        })) : ($scope.selectedDevices.push(device),
        $scope.selectedDevices.length === $scope.connectedDevices.length - 1 && ($scope.connectedDevices[0].checked = !0,
        $scope.selectedDevices = $scope.connectedDevices),
        device.checked = !0),
        $rootScope.globalWait = !0,
        $timeout(function() {
            $scope.changeTimeSlots(),
            $rootScope.globalWait = !1
        }, 100)
    }
    ,
    $scope.save = function() {
        $scope.submitted = !0,
        $rootScope.globalWait = !0;
        var success = !1;
        $timeout(function() {
            if ($scope.selectedDevices.length) {
                var selectedDevices = _getSelectedDevices();
                $.each(selectedDevices, function(i, obj) {
                    var timeslot = ParentalControl.searchTimeslotByHost(obj, $scope.timeSlotsHours)
                      , finalTimeslot = {};
                    if ($.each(timeslot, function(slotIndex, slot) {
                        $.each(slot, function(slotInfoIndex, slotInfo) {
                            finalTimeslot[slotIndex] || (finalTimeslot[slotIndex] = []),
                            "orange" !== $scope.timeSlotsGrid[slotIndex][slotInfoIndex] ? finalTimeslot[slotIndex][slotInfoIndex] = $scope.timeSlotsGrid[slotIndex][slotInfoIndex] : finalTimeslot[slotIndex][slotInfoIndex] = slotInfo
                        })
                    }),
                    1 === $scope.selectedDevices.length) {
                        var result = ParentalControlProfile.verifyHost(selectedDevices[0].PhysAddress)
                          , tmpArray = []
                          , tmp = {};
                        result ? (tmp.uid = result.uid,
                        tmp.device = {
                            PhysAddress: result.MAC
                        },
                        tmp.Profile = $scope.profile,
                        tmp.toBeDeleted = !1,
                        tmp.toBeUpdated = !0,
                        tmpArray.push(tmp),
                        ParentalControlProfile.updateHosts(tmpArray)) : (tmp.toBeUpdated = !1,
                        tmp.device = {
                            PhysAddress: selectedDevices[0].PhysAddress
                        },
                        tmp.Profile = $scope.profile,
                        tmp.toBeDeleted = !1,
                        tmpArray.push(tmp),
                        ParentalControlProfile.insertHosts(tmpArray))
                    }
                    var rs = ParentalControl.updateTimeslots(obj, finalTimeslot);
                    success = success || rs
                })
            }
            $rootScope.showMessage = success,
            $scope.submitted = !success,
            $rootScope.globalWait = !1,
            success && $scope.changeTimeSlots()
        }, 100)
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("DnsServerController", ["$scope", "DnsServer", "$rootScope", "CheckFeature", function($scope, DnsServer, $rootScope, CheckFeature) {
    $scope.submitted = !1,
    $scope.primary = "",
    $scope.secondary = "",
    $scope.enable = !1;
    var bkp = {};
    $scope.populate = function() {
        var data = DnsServer.populate()
          , d2 = data.dynamic.split(",");
        if (bkp.dynamicDns1 = d2[0],
        bkp.dynamicDns2 = d2[1] ? d2[1] : "",
        bkp.primary = "",
        bkp.secondary = "",
        $.config.modules && $.config.modules.myBox && $.config.modules.myBox.dnsEditable ? $scope.dnsNotEditable = !$.config.modules.myBox.dnsEditable : $scope.dnsNotEditable = !!data.notEditable,
        data.server) {
            var splitData = data.server.split(",");
            $scope.primary = splitData[0],
            bkp.primary = $scope.primary,
            $scope.enable = !!bkp.primary || !!bkp.secondary,
            splitData.length > 1 && ($scope.secondary = splitData[1],
            bkp.secondary = $scope.secondary)
        }
    }
    ,
    $scope.populate(),
    $scope.$watch("enable", function() {
        $scope.validate = $scope.enable ? "required" : "not.required",
        $scope.enable ? ($scope.primary = bkp.primary,
        $scope.secondary = bkp.secondary) : (bkp.primary = $scope.primary,
        bkp.secondary = $scope.secondary,
        $scope.primary = bkp.dynamicDns1,
        $scope.secondary = bkp.dynamicDns2)
    }),
    $scope.checkParentalControl = function() {
        return CheckFeature.go("parentalControl") && !$.util.getModuleConfig("dnsServer.disableParentalControlNotification", !1)
    }
    ,
    $scope.save = function() {
        if ($scope.submitted = !0,
        $scope.dnsServer.$valid) {
            bkp.primary = "",
            bkp.secondary = "";
            var dataSave = {};
            $scope.enable ? dataSave.server = $scope.secondary && "" !== $scope.secondary ? $scope.primary + "," + $scope.secondary : $scope.primary : dataSave.server = "",
            $rootScope.globalWait = !0,
            DnsServer.save(dataSave, {
                success: function() {
                    $rootScope.showMessage = !0,
                    $rootScope.globalWait = !1,
                    $scope.submitted = !1,
                    $scope.dnsServer.primary.$setPristine(),
                    $scope.dnsServer.secondary.$setPristine(),
                    $scope.dnsServer.$setPristine(!0),
                    $rootScope.$digest()
                },
                error: function() {
                    $rootScope.showMessage = !1,
                    $rootScope.globalWait = !1,
                    $rootScope.$digest()
                }
            })
        }
    }
}
]),
sboxApp.controller("BlockedAccessController", function($scope, $basicInfo, $window, ConnectedDevices) {
    $basicInfo.login();
    var currentIpAddress = $.xmo.getValuesTree($.xpaths.management.accountSettings.currentSessionIp.replace("#", $.xmo.client.user).replace("$", $.xmo.client._sessionId));
    $.xmo.getBlockedReason($window.location.host, currentIpAddress, function(data) {
        var rs = data.actions[0].callbacks[0].parameters;
        $scope.blockData = rs,
        $scope.blockData.url = $window.location.host;
        var hostInfo = ConnectedDevices.getDeviceByIp(currentIpAddress);
        hostInfo.length && ($scope.blockData.client = hostInfo[0].hostname),
        $basicInfo.logout()
    }, function() {
        $basicInfo.logout()
    })
}),
sboxApp.controller("HeaderController", function($rootScope, $scope, Auth, $translate, $basicInfo, DeviceInfo, $timeout, $state, $stateParams, $http, $templateCache, Statistics, CheckFeature, ConnectedDevices) {
    $http.get("404.html", {
        cache: $templateCache
    }),
    $scope.availableLanguages = $.util.getAllowedLanguages(),
    $scope.langNames = $.constants.langNames,
    $rootScope.mainUser = Auth.user,
    $rootScope.expertMode = !!$.config.expertMode,
    $rootScope.landpageMode = !!$.config.showedpages.landPage && !!$.config.showedpages.landPage.enable,
    $rootScope.accessLevels = Auth.accessLevels,
    CheckFeature.go("logo") || CheckFeature.go("logoLinkToSagemcom") ? ($rootScope.logoUrl = $.config.partnerUrl || $.constants.sagemUrl,
    $(document).trigger("updateFavicon")) : ($rootScope.logoUrl = "",
    $("#favicon").prop("href", "images/faviconNone.ico?v=" + (Math.random() + "").split(".")[1])),
    "undefined" != typeof SboxInterface && ($scope.autoLogin = SboxInterface.IsAutoLogin(),
    void 0 === $scope.autoLogin && SboxInterface.IsAutoLogin(function(autoLogin) {
        $scope.autoLogin = autoLogin
    })),
    $.config.showedpages.sonne && $.config.showedpages.sonne.enable === !0 && ($basicInfo.updateHeaderData(),
    $rootScope.firmwareVersion = $basicInfo.getFirmwareVersion(),
    $rootScope.modelName = $.config.headerModel,
    $rootScope.wifiNetworkEnable = $basicInfo.getWifiNetworkEnable() && "ROUTED" === $basicInfo.getNetworkMode(),
    $rootScope.bridgedMode = $.config.modules.main.checkBridgeMode === !0 && "BRIDGED" === $basicInfo.getNetworkMode()),
    $rootScope.softwareVersion = $basicInfo.getSoftwareVersion();
    var mapEnable = $.config.checkMapEnable === !0 && ConnectedDevices.verifyMapEnable();
    mapEnable && !CheckFeature.go("simpleIpv4") && "user.internetConnectivity.basic.ipv4" === $rootScope.currentRouteName ? $state.go("user.internetConnectivity.basic.mapT") : !mapEnable && CheckFeature.go("simpleIpv4") && "user.internetConnectivity.basic.mapT" === $rootScope.currentRouteName && $state.go("user.internetConnectivity.basic.ipv4"),
    $rootScope.currentLanguage = $basicInfo.getRefreshedLanguage(),
    $.cookie("currentLanguage", $rootScope.currentLanguage),
    $translate.preferredLanguage() !== $rootScope.currentLanguage && $translate.use($rootScope.currentLanguage),
    $rootScope.changeToVertical = $.config.modules.changeToVertical,
    $.config.footerSupportLinkUrl && $.config.footerSupportLinkText && ($rootScope.footerSupportLinkUrl = $.config.footerSupportLinkUrl,
    $rootScope.footerSupportLinkText = $.config.footerSupportLinkText);
    var _setExternalHelp = function() {
        if ($rootScope.urlExternalHelp = "",
        $.config.hasExternalHelp) {
            var lang = $rootScope.currentLanguage;
            "DE" === lang && (lang = "EN"),
            $rootScope.urlExternalHelp = "views/maelstromHelp/" + lang.toLowerCase() + "/help.html"
        }
    };
    _setExternalHelp();
    var changeDirection = function() {
        "AR" === $rootScope.currentLanguage ? $(document).trigger("changeDirection", ["rtl"]) : $(document).trigger("changeDirection", ["ltr"])
    };
    changeDirection(),
    DeviceInfo.fetchUiVersion(function(response) {
        $scope.guiVersion = response.uiVersion
    });
    var getUid = function() {
        var mboxId = "" === $state.params.uid ? 1 : $state.params.uid;
        return parseInt(mboxId)
    }
      , setAnsweringMachineLanguage = function(langKey) {
        try {
            -1 !== $state.current.name.indexOf("user.answeringMachine.settings") && $basicInfo.setMailboxLanguage({
                SelectedLanguage: langKey,
                uid: getUid()
            })
        } catch (e) {}
    };
    if ($scope.changeLanguage = function(langKey) {
        try {
            return $basicInfo.setLanguage(langKey),
            $rootScope.currentLanguage = langKey,
            $.config.showedpages.answeringMachine.enable && setAnsweringMachineLanguage(langKey),
            $translate.use(langKey),
            _setExternalHelp(),
            $timeout(function() {
                if ($(document).trigger("refreshCheckboxes"),
                tl.pg.init($.extend({}, tl.pg.last_preferences, {
                    close: $.globals.close[langKey],
                    closeTitle: $.globals.closeGuide[langKey],
                    nextTitle: $.globals.next[langKey],
                    previousTitle: $.globals.previous[langKey]
                })),
                $rootScope.pg && void 0 !== $rootScope.pg.is_open) {
                    var isOpen = $rootScope.pg.is_open;
                    tl.pg.destroy(),
                    $rootScope.pg = tl.pg.init(tl.pg.last_preferences),
                    isOpen && $rootScope.pg.open()
                }
            }, 500),
            changeDirection(),
            $scope.reloadPage(),
            !0
        } catch (e) {
            return !1
        }
    }
    ,
    "undefined" != typeof SboxInterface && ($scope.updateAutoLogin = function() {
        SboxInterface.SetAutoLogin($scope.autoLogin)
    }
    ),
    $scope.changeMode = function() {
        $rootScope.modeSelected === $.constants.modeExpert ? ($rootScope.modeSelected = $.constants.modeAdmin,
        $.cookie("modeSelected", $.constants.modeAdmin)) : ($rootScope.modeSelected = $.constants.modeExpert,
        $.cookie("modeSelected", $.constants.modeExpert)),
        $rootScope.flagWatchForm = !1,
        $scope.reloadPage()
    }
    ,
    $scope.reloadPage = function() {
        $rootScope.globalWait = !0,
        $timeout(function() {
            $state.go($state.current, $stateParams, {
                reload: !0
            })
        }, 100)
    }
    ,
    $scope.logout = function() {
        Auth.logout(function() {
            "undefined" != typeof SboxInterface && SboxInterface.Quit(),
            setTimeout(function() {
                window.location.href = "http://" + window.location.host
            }, 1e3)
        }, function() {
            $rootScope.error = "Failed to logout"
        })
    }
    ,
    "views/main-new.html" === $.config.mainPage && $state.current && "user.home" !== $state.current.name)
        try {
            var stats = Statistics.getConnectivityStats(!0);
            $rootScope.connectivity = stats
        } catch (e) {}
    $.config.isSubProfile && ($rootScope.isSubProfile = !0),
    $.config.ipv6Certified === !1 && ($rootScope.ipv6Certified = !1),
    $timeout(function() {
        $(document).trigger("refreshCheckboxes")
    }, 500),
    $.xmo.sessionTimeOut = Statistics.sessionTimeout(),
    $.xmo.sessionStartDate = (new Date).getTime(),
    $.SessionTimeOut.fire()
}),
sboxApp.controller("LoginController", function($scope, $state, $stateParams, Auth, $basicInfo, $timeout, $rootScope, CheckFeature, MaintenanceReset, $http, $window, $translate, ConnectedDevices, Gpon) {
    try {
        $.xmo.login($.constants.guestUser, $.constants.guestPwd),
        $scope.guestExist = !0,
        $.xmo.logout(!0)
    } catch (e) {
        $scope.guestExist = !1
    }
    $scope.availableLanguages = $.util.getAllowedLanguages(),
    $rootScope.currentLanguage = $basicInfo.getRefreshedLanguage(),
    $scope.languageDropDownList = $.config.languageDropDownList,
    $scope.wifi24Status = $basicInfo.getWifi24Status(),
    $scope.wifi24SSID = $basicInfo.getWifi24SSID(),
    $scope.wifi5Status = $basicInfo.getWifi5Status(),
    $scope.wifi5SSID = $basicInfo.getWifi5SSID(),
    $scope.internetConnected = $basicInfo.getInternetConnected() || $basicInfo.getConnectionStatus(),
    $scope.telephonyStatus = $basicInfo.getTelephonyStatus(),
    $scope.telephonyNumber = $basicInfo.getTelephonyNumber(),
    $scope.changeLanguage = function(langKey) {
        try {
            return $basicInfo.setLanguage(langKey),
            $rootScope.currentLanguage = langKey,
            $translate.use(langKey),
            _setExternalHelp(),
            $timeout(function() {
                if ($(document).trigger("refreshCheckboxes"),
                tl.pg.init($.extend({}, tl.pg.last_preferences, {
                    close: $.globals.close[langKey],
                    closeTitle: $.globals.closeGuide[langKey],
                    nextTitle: $.globals.next[langKey],
                    previousTitle: $.globals.previous[langKey]
                })),
                $rootScope.pg && void 0 !== $rootScope.pg.is_open) {
                    var isOpen = $rootScope.pg.is_open;
                    tl.pg.destroy(),
                    $rootScope.pg = tl.pg.init(tl.pg.last_preferences),
                    isOpen && $rootScope.pg.open()
                }
            }, 500),
            changeDirection(),
            !0
        } catch (e) {
            return !1
        }
    }
    ;
    var _setExternalHelp = function() {
        if ($rootScope.urlExternalHelp = "",
        $.config.hasExternalHelp) {
            var lang = $rootScope.currentLanguage;
            "DE" === lang && (lang = "EN"),
            $rootScope.urlExternalHelp = "views/maelstromHelp/" + lang.toLowerCase() + "/help.html"
        }
    }
      , changeDirection = function() {
        "AR" === $rootScope.currentLanguage ? $(document).trigger("changeDirection", ["rtl"]) : $(document).trigger("changeDirection", ["ltr"])
    }
      , checkLanAccess = !1;
    if ($.config.enableCheckLanAccess) {
        var hostname = $basicInfo.getHostname()
          , localDomains = $basicInfo.getLocalDomains()
          , defaultGateway = $basicInfo.getDefaultGateway()
          , locationHostname = $window.location.hostname
          , localHostList = [hostname, hostname + "." + localDomains, defaultGateway];
        (localHostList.indexOf(locationHostname) > -1 || $.inArray(locationHostname, localHostList) > -1) && (checkLanAccess = !0)
    }
    $.config.staticUserLogin && ($scope.staticLogin = !0,
    $stateParams.user ? $scope.username = $stateParams.user : $scope.username = "admin"),
    $.config.defaultUserLogin && ($scope.username = $.config.defaultUserLogin),
    $scope.failLogin = !1,
    $scope.operationTimeout = !1,
    $scope.maxSessionError = !1,
    $scope.selectedLanguage = $basicInfo.getLanguage(),
    $scope.googlePlayLink = $basicInfo.getGoogle(),
    $scope.appleStoreLink = $basicInfo.getApple();
    var timeLeft = $basicInfo.getTimeLeft();
    $scope.factoryReset = !0,
    0 > timeLeft ? $scope.factoryReset = !1 : $timeout(function() {
        $scope.factoryReset = !1
    }, 1e3 * timeLeft),
    "AR" === $scope.selectedLanguage ? $(document).trigger("changeDirection", ["rtl"]) : $(document).trigger("changeDirection", ["ltr"]),
    $timeout(function() {
        $(document).trigger("activeFocus")
    }, 1e3),
    CheckFeature.go("logo") ? ($rootScope.logoUrl = $.config.partnerUrl || $.constants.sagemUrl,
    $(document).trigger("updateFavicon")) : ($rootScope.logoUrl = "",
    $("#favicon").prop("href", "images/faviconNone.ico?v=" + (Math.random() + "").split(".")[1]));
    var gwName = $basicInfo.getProductName();
    $scope.productName = gwName !== $.constants.defaultGwName ? gwName : "",
    $rootScope.firmwareVersion = $basicInfo.getFirmwareVersion(),
    $scope.showReset = !1,
    $scope.toggleReset = function() {
        $scope.showReset = !$scope.showReset,
        resetKill = !0
    }
    ;
    var clearPasswordField = function() {
        $scope.password = ""
    };
    if ($scope.loginAsync = function() {
        $scope.logging = !0,
        $timeout(function() {
            $scope.$digest()
        }),
        $timeout($scope.login, 100)
    }
    ,
    $scope.login = function() {
        if ($scope.operationTimeout = !1,
        $scope.password || clearPasswordField(),
        $scope.username) {
            var backUsername = $scope.username;
            !$.config.enableCheckLanAccess && !checkLanAccess || $stateParams.user || (backUsername = "local_admin"),
            Auth.login({
                username: backUsername,
                password: $scope.password
            }, function(user) {
                var splashScreenNoInternet = localStorage.getItem("splashScreenNoInternet") || !1;
                localStorage.removeItem("splashScreenNoInternet"),
                $basicInfo.resetLanguage(),
                $rootScope.checkFromLogin = !0,
                $rootScope.suggestChangeDefaultPassword = $.config.suggestChangeDefaultPassword === !0 && "password" === $scope.password,
                $rootScope.isGet || splashScreenNoInternet && $.config.landPageWifi ? $state.go("user.wifi.basic", {
                    radio: "2.4GHz",
                    mode: "priv"
                }) : $.config.showedpages.landPage && $.config.showedpages.landPage.enable && !$rootScope.isMobile ? $state.go("user.landpage") : $.config.showedpages.firstInstall.enable === !1 || Auth.isFirstConnection() === !1 || $rootScope.isMobile ? $.config.showedpages.firstInstall.enable !== !1 && $.config.alwaysFirstConnection && !$rootScope.isMobile && $state.current.name.indexOf("anon.login") > -1 ? $state.go("wizard.home") : ("undefined" != typeof SboxInterface && SboxInterface.setCredentials($scope.password),
                $.config.showedpages.masmovil && $.config.showedpages.masmovil.enable === !0 && $.config.featureAccess && !$.config.featureAccess[user.username] && $.config.showedpages.ploamPassword && $.config.showedpages.ploamPassword.enable === !0 && $basicInfo.isEmptyPloampassword() === !0 ? $state.go("user.ploampassword") : $state.go($rootScope.mainState)) : $state.go("user.homefirst"),
                ($rootScope.isMasmovil || $rootScope.isTotalplay) && setTimeout(function() {
                    $scope.a = Gpon.getData(),
                    "INITIAL" === $scope.a.GponState ? ($("#fiber-disconnected-modal").foundation("reveal", "open"),
                    $(".reveal-modal-bg").show()) : ($("#fiber-disconnected-modal").foundation("reveal", "close"),
                    $(".reveal-modal-bg").hide())
                }, 1e3)
            }, function(err) {
                $.config.simpleLogin ? $state.go("anon.login.simple", {
                    user: $stateParams.user
                }) : $state.go("anon.login", {
                    user: $stateParams.user
                }),
                $.config.errorMsgSessionMax && $.config.errorMsgSessionMax.enable && err.message.errCode === $.gui.XMO_MAX_SESSION_COUNT_ERR ? $scope.maxSessionError = !0 : $scope.failLogin = !$scope.operationTimeout,
                clearPasswordField(),
                $scope.logging = !1
            })
        } else
            $scope.failLogin = !0,
            clearPasswordField(),
            $scope.logging = !1
    }
    ,
    $rootScope.handleAjaxError = function(watchtower) {
        watchtower.lastUrlErr && ($scope.operationTimeout = !0),
        $rootScope.watchtower = {}
    }
    ,
    $scope.$on("$destroy", function() {
        delete $rootScope.handleAjaxError
    }),
    "undefined" != typeof SboxInterface) {
        var credentialMobile = function(password) {
            $scope.username = "admin",
            $scope.password = password,
            $timeout($scope.login)
        }
          , loginMobile = function(login) {
            if (login) {
                var password = SboxInterface.getCredentials();
                void 0 === password ? SboxInterface.getCredentials(credentialMobile) : credentialMobile(password)
            }
        }
          , autoLogin = SboxInterface.IsAutoLogin();
        void 0 === autoLogin ? SboxInterface.IsAutoLogin(loginMobile) : loginMobile(autoLogin)
    }
    "undefined" != typeof SboxInterface && SboxInterface.RemoveLoader(),
    $scope.hideHeader = !1,
    angular.isUndefined($rootScope.mainUser) && "anon.login.simple" === $state.current.name && ($scope.hideHeader = !0),
    $scope.loginReady = !0;
    var resetKill;
    $scope.reinitialize = function() {
        resetKill = !1,
        $basicInfo.login(),
        $scope.popupTitle = "reset";
        var err = !1;
        try {
            MaintenanceReset.reinitialize(function() {}, function() {
                err = !0,
                $scope.resetting = !1,
                resetKill = !0,
                $basicInfo.logout()
            })
        } catch (e) {}
        err || ($scope.resetting = !0),
        $timeout($scope.checkLoading, 3e4)
    }
    ;
    var _resetKill = function() {
        return resetKill ? ($scope.resetting = !1,
        $scope.showReset = !0,
        $("#pleasewait-modal").foundation("reveal", "close"),
        !0) : !1
    };
    $scope.checkLoading = function(isOff) {
        _resetKill(),
        $scope.resetting = !0,
        $http({
            method: "GET",
            url: "/",
            timeout: 3e4
        }).success(function(data, status) {
            _resetKill() || (200 === status && isOff === !0 ? ($scope.resetting = !1,
            $scope.showReset = !0,
            $("#pleasewait-modal").foundation("reveal", "close"),
            $window.location.href = "/") : ($scope.resetting = !0,
            $timeout(function() {
                $scope.checkLoading(isOff)
            }, 1e4)))
        }).error(function() {
            $scope.resetting = !0,
            $timeout(function() {
                $scope.checkLoading(!0)
            }, 1e4)
        })
    }
    ,
    $scope.hasCenteredLogo = !!$.config.loginCenteredLogo,
    $scope.hasSlideShowTitle = !!$.config.showedpages.displayLoginSlideShow && $.config.showedpages.displayLoginSlideShow.enable === !0,
    $scope.btLoginCenter = $.config.btLoginCenter !== !1
}),
sboxApp.controller("ConnectedDevicesController", function($scope, $rootScope, $state, $injector, $timeout, $basicInfo, ConnectedDevices, USBDeviceInfo, CheckFeature, Statistics, MaintenanceReset, SsidCreation) {
    $scope.showIpv6Address = $.config.modules.main.showIpv6Address,
    $scope.activeIPv4 = $.config.modules.main.activeIPv4,
    $scope.$emit("updateStatusIconTop"),
    $scope.loaded = !0,
    $scope.sharedContent = null,
    $scope.wifiMerge = $.config.showedpages && $.config.showedpages.homeWiFiMerge && $.config.showedpages.homeWiFiMerge.enable === !0,
    $scope.telephonyStatus = $basicInfo.getTelephonyStatus(),
    $scope.telephonyNumber = $basicInfo.getTelephonyNumber(),
    $rootScope.dynamicMySagemcomBoxName = $.config.modules.main.dynamicMySagemcomBoxName,
    $rootScope.gwName = ConnectedDevices.getGwName(),
    $.util.hasFeature("dtagXdsl") && ($rootScope.gwName = "F@st5352 VRX517 B" === $rootScope.gwName || "Speedport Plus Bonding" === $rootScope.gwName ? "Speedport Plus Bonding" : "Speedport Plus");
    var MyMedia;
    $.config.showedpages.myMedia.enable && (MyMedia = $injector.get("MyMedia")),
    $scope.myMediaAvailable = void 0 !== MyMedia,
    $scope.user = $.xmo.client.user,
    $scope.title = $state.title;
    var WifiBackHaul;
    $.util.hasFeature("wifibackhaul") && (WifiBackHaul = $injector.get("WifiBackHaul"),
    $scope.wifiBackhaul = WifiBackHaul.populate()),
    $scope.wifiBackhaul || ($scope.wifiBackhaul = {},
    $scope.wifiBackhaul.devices = []);
    var manufacturersLoaded = !1
      , scopeRefreshing = !1
      , _isMainPage = $state.current.name.indexOf("user.home") > -1 || $state.current.name.indexOf("user.simple.home") > -1
      , _setLoading = function(isLoading) {
        _isMainPage ? $rootScope.globalWait = isLoading : $scope.loading = isLoading
    }
      , startGlobalWait = function(callback) {
        $timeout(function() {
            _setLoading(!0),
            $rootScope.$digest(),
            callback()
        })
    }
      , stopGlobalWait = function() {
        manufacturersLoaded && !scopeRefreshing && $timeout(function() {
            _setLoading(!1),
            $rootScope.$digest()
        })
    }
      , _updateNewMessages = function() {
        if ($scope.newMessages = "",
        $.config.showedpages.answeringMachine.enable) {
            var AnsweringMachine = $injector.get("AnsweringMachine");
            AnsweringMachine.searchMessages(),
            $scope.newMessages = AnsweringMachine.getNewMessagesCount()
        }
    }
      , _findBestHomeForUsb = function(qtyList, voiceOverride) {
        if (voiceOverride)
            return "voice";
        var min = Math.min.apply(Math, qtyList);
        min = $.inArray(min, qtyList);
        var choices = ["ethernet", "wifi24", "wifi50", "voice"];
        return choices[min]
    }
      , _showPPPOnFirstAccess = function() {
        return !$.config.modules.firstAccess || $.config.modules.firstAccess && $.config.modules.firstAccess.showPPP
    };
    $scope.verifyForcePasswordChange = function() {
        $rootScope.checkFromLogin = !1,
        ($scope.forcePasswordChange || $rootScope.suggestChangeDefaultPassword) && ($("#confirm-change-password").foundation("reveal", "open"),
        $(".reveal-modal-bg").show())
    }
    ,
    $scope.goToAdminPassword = function() {
        $state.go("user.router.management.adminAccount")
    }
    ,
    $scope.closeModalConfirmChange = function() {
        $("#confirm-change-password").foundation("reveal", "close")
    }
    ,
    $scope.updateMyMedia = function(useCache) {
        if (void 0 !== MyMedia) {
            useCache || MyMedia.updateCache();
            var myMediaResults = MyMedia.search();
            $scope.sharedContent = "#",
            myMediaResults.dlna ? !myMediaResults.agregation && $scope.isEmpty($scope.listUSBDevices) && $.isEmptyObject($scope.eSataDevice) ? $scope.twonkyReason = "USB" : $scope.sharedContent = "http://" + window.location.host + ":" + myMediaResults.upnpMediaServerPort + "/#video" : $scope.twonkyReason = "DLNA"
        }
    }
    ;
    var verifyMapEnable = function() {
        return $.config.checkMapEnable === !0 && ConnectedDevices.verifyMapEnable()
    }
      , _updateValues = function(useCache) {
        CheckFeature.go("ssidCreation") && (SsidCreation.updateCache(),
        $scope.custom2gSsids = SsidCreation.populate("2.4GHz"),
        $scope.custom5gSsids = SsidCreation.populate("5GHz")),
        useCache || ConnectedDevices.updateCache();
        var all = $.config.modules.main.showAllDevices;
        $rootScope.gwName = ConnectedDevices.getGwName(),
        $rootScope.dynamicMySagemcomBoxName = $.config.modules.main.dynamicMySagemcomBoxName,
        $scope.verifyUSB = ConnectedDevices.verifyUSB(),
        $scope.bridgeMode = ConnectedDevices.getBridgeMode(),
        $.util.hasFeature("bridgeModeBlockPages") ? ($scope.verifyWifi24 = $scope.bridgeMode === !1 && ConnectedDevices.verifyWifi24(),
        $scope.verifyWifi5 = $scope.bridgeMode === !1 && ConnectedDevices.verifyWifi5()) : ($scope.verifyWifi24 = ConnectedDevices.verifyWifi24(),
        $scope.verifyWifi5 = ConnectedDevices.verifyWifi5()),
        $scope.bandSteeringEnable = ConnectedDevices.verifyBandSteering(),
        $scope.listEthernetDevices = ConnectedDevices.getEthernetDevices(all),
        $scope.listWifi24Devices = ConnectedDevices.getWifiDevices("wifi24", !0, all),
        $scope.listWifi5Devices = ConnectedDevices.getWifiDevices("wifi5", !0, all),
        $scope.listAllWifiDevices = $scope.listWifi24Devices.concat($scope.listWifi5Devices),
        $scope.listWifi24GuestDevices = ConnectedDevices.getWifiDevices("wifi24Guest", !1, all),
        $scope.listWifi5GuestDevices = ConnectedDevices.getWifiDevices("wifi5Guest", !1, all),
        $scope.listWifiTvDevices = ConnectedDevices.getWifiTvDevices(),
        $scope.wifi24Status = ConnectedDevices.getWifiStatus("wifi24"),
        $scope.wifi5Status = ConnectedDevices.getWifiStatus("wifi5"),
        $scope.wifi24GuestStatus = ConnectedDevices.getWifiStatus("wifi24Guest"),
        $scope.wifi5GuestStatus = ConnectedDevices.getWifiStatus("wifi5Guest"),
        $scope.wifiTvStatus = ConnectedDevices.getWifiTVStatus(),
        $scope.listUSBDevices = ConnectedDevices.getUSBDevices(all) || [],
        $scope.eSataDevice = ConnectedDevices.getESataDevice(all),
        $scope.listPlcs = ConnectedDevices.getPlcs(all),
        $scope.forcePasswordChange = ConnectedDevices.getForceChangePassword(),
        $scope.mapEnable = verifyMapEnable(),
        $scope.devicesQty = $scope.listEthernetDevices.length + $scope.listWifi24Devices.length + $scope.listWifi5Devices.length + $scope.listWifi24GuestDevices.length + $scope.listWifi5GuestDevices.length + $scope.listUSBDevices.length + $scope.listPlcs.length,
        $scope.wifiDevicesQty = $scope.listWifi24Devices.length + $scope.listWifi5Devices.length + $scope.listWifi24GuestDevices.length + $scope.listWifi5GuestDevices.length,
        ConnectedDevices.getTelephoneDevices(function(result) {
            _updateNewMessages(),
            $scope.lineDetails = $.config.showedpages.lineDetails.enable ? "user.voiceDevice" : "user.home",
            $scope.isCable && result[0] && "Operational" === result[0].status && (result[0].status = $.constants.telephone.registered),
            $scope.listTelephoneDevices = result,
            $scope.verifyTelephone = ConnectedDevices.verifyTelephones(),
            $scope.statusTelephony = ConnectedDevices.verifyStatusTelephony(),
            $scope.isDectEnabled = ConnectedDevices.isDectEnabled(),
            $scope.verifyDect = ConnectedDevices.verifyDect(),
            $scope.listDectDevices = ConnectedDevices.getDectDevices(all),
            $.util.getModuleConfig("SIPsettings.singlePhoneLine", !1) && ($scope.singlePhoneLine = $scope.listTelephoneDevices && $scope.listTelephoneDevices.length ? $scope.listTelephoneDevices[0] : {});
            var allActive = CheckFeature.go("wifi5g") && CheckFeature.go("voicePorts")
              , bestHomeExpression = [];
            bestHomeExpression.push($scope.listEthernetDevices.length + $scope.listPlcs.length || .5),
            bestHomeExpression.push((1.5 * ($scope.listWifi24Devices.length + $scope.listWifi24GuestDevices.length) || 1.5) + .6),
            bestHomeExpression.push((1.5 * ($scope.listWifi5Devices.length + $scope.listWifi5GuestDevices.length) || 1.5) + .6),
            bestHomeExpression.push(($scope.listTelephoneDevices.length + $scope.listDectDevices.length || 1.5) + 1.6),
            $scope.usbHome = _findBestHomeForUsb(bestHomeExpression, !allActive)
        }, all),
        $scope.cableModemStatus = ConnectedDevices.getCableModemStatus(),
        $rootScope.connectivity = Statistics.getConnectivityStats(useCache),
        $rootScope.connectivity.status || $rootScope.connectivity.sfpStatus === !0 || "OPERATIONAL" === $rootScope.connectivity.connectionMode ? ($rootScope.connectivity.status = !0,
        $rootScope.connectivity.statusTxt = "on") : $.config.showedpages.backup3gLTE && $rootScope.connectivity.backupWanStatus ? ($rootScope.connectivity.statusTxt = "mobile",
        $rootScope.connectivity.status = !0) : $rootScope.connectivity.statusTxt = "off",
        $rootScope.connectivity.showPPP = _showPPPOnFirstAccess(),
        $scope.updateMyMedia(useCache)
    };
    $rootScope.refresh = function(useCache) {
        scopeRefreshing = !0;
        var code = $.util.checkUrlParams("code");
        return code ? (_setLoading(!0),
        $("html").height("100%"),
        void $state.go("user.mycloud.dropbox", {
            code: code
        })) : void startGlobalWait(function() {
            $timeout(function() {
                _updateValues(useCache),
                $rootScope.checkFromLogin && $scope.verifyForcePasswordChange(),
                scopeRefreshing = !1,
                stopGlobalWait()
            }, 500)
        })
    }
    ,
    $scope.eject = function(device) {
        var data = {};
        data.uid = device.sysid,
        data.force = !0;
        var promise = USBDeviceInfo.eject(data);
        promise.then(function() {
            $rootScope.refresh()
        })
    }
    ,
    $scope.isEmpty = function(d) {
        try {
            return 0 === d.length
        } catch (e) {
            return !0
        }
    }
    ,
    $scope.openDevice = function(device) {
        var destination = "";
        destination = "user.router.basic.mynetwork" === $state.current.name ? "user.router.basic.deviceInfo" : $rootScope.isSimple ? "user.simple.ethernetDevice.deviceInfo" : "user.ethernetDevice.deviceInfo",
        device.isStb || "CPL" === device.InterfaceType || ($rootScope.loading = !0,
        $state.go(destination, {
            uid: device.uid,
            layer: device.Layer1Interface
        }))
    }
    ,
    $scope.openPlc = function(plc) {
        $rootScope.loading = !0,
        $state.go("user.plcDevice", {
            uid: plc.uid
        })
    }
    ,
    $scope.openUsb = function(device) {
        $rootScope.loading = !0;
        var state = $rootScope.isSimple ? "user.simple.usbDevice.deviceInfo" : "user.usbDevice.deviceInfo";
        $state.go(state, {
            uid: device.uid
        })
    }
    ,
    $scope.$on("$destroy", function() {
        delete $rootScope.refresh,
        delete $rootScope.gwName
    }),
    ConnectedDevices.fetchManufacturers().then(function() {
        manufacturersLoaded = !0,
        $rootScope.refresh(!1),
        stopGlobalWait()
    }),
    $scope.checkLoading = function(isOff) {
        $scope.status = !1,
        $http({
            method: "GET",
            url: "/",
            timeout: 3e4
        }).success(function(data, status) {
            200 === status && isOff === !0 ? ($scope.status = !0,
            $window.location.href = "/") : ($scope.status = !1,
            $timeout(function() {
                $scope.checkLoading(isOff)
            }, 1e4))
        }).error(function() {
            $scope.status = !1,
            $timeout(function() {
                $scope.checkLoading(!0)
            }, 1e4)
        })
    }
    ,
    $scope.reboot = function() {
        MaintenanceReset.reboot(),
        $timeout($scope.checkLoading, 1e4)
    }
    ,
    $scope.showInactiveDevices = $.config.showInactiveDevices,
    $scope.isShow = !1,
    $timeout(function() {
        $rootScope.refresh(!1)
    }),
    $scope.phonebookSecondaryPos = CheckFeature.go("twonkyLink") + CheckFeature.go("myCloud") + CheckFeature.go("intwo") === 0,
    $("#sbox-container > div").trigger("refreshSecondRow"),
    $scope.isRIPv2Enabled = $.config.hasRIPv2 === !0 && Statistics.isRIPv2Enable(),
    $scope.hasWiFi5g = !!$.config.showedpages.wifi5g.enable,
    $scope.hasBusyOnBusy = !!$.config.showedpages.BoBStatus && $.config.showedpages.BoBStatus.enable === !0,
    $scope.hasUSBConfigLink = !!$.config.showedpages.usbConfigurationLink
}),
sboxApp.controller("DhcpController", function($scope, Dhcp, ConnectedDevices, $timeout, $basicInfo, $rootScope, $http) {
    var networkRange = $.config.modules.myBox.dhcp.predefinedIpRange || $.constants.predefinedIpRange
      , ipv4PoolStartReg = /\d{1,3}.\d{1,3}.\d{1,3}./
      , ipv4PoolInputReg = /\d{1,3}$/
      , _updateMasks = function(prefixLength) {
        prefixLength = prefixLength || $scope.gatewayNetwork.prefixLength || 24;
        var newMasks = MASKS.slice(prefixLength);
        $("#dhcpForm").trigger("refreshMasks", [newMasks])
    }
      , _normalizeMacAddress = function(mac) {
        return mac = mac || "",
        mac = mac.replace(/[\:\-]/g, ""),
        mac.toLowerCase()
    }
      , devicesByMac = {};
    $scope.dhcpIPv6InDHCP = $.util.hasFeature("dhcpIPv6InDHCP"),
    $scope.dhcpLeasesInDHCP = $.util.hasFeature("dhcpLeasesInDHCP"),
    void 0 !== $.config.modules.myBox.dhcp.ipv4SelectConfig && null !== $.config.modules.myBox.dhcp.ipv4SelectConfig ? $scope.ipv4SelectConfig = $.config.modules.myBox.dhcp.ipv4SelectConfig : $scope.ipv4SelectConfig = $.constants.ipv4SelectConfig,
    void 0 !== $.config.modules.myBox.dhcp.ipv4MinLease && null !== $.config.modules.myBox.dhcp.ipv4MinLease ? $scope.ipv4MinLease = $.config.modules.myBox.dhcp.ipv4MinLease : $scope.ipv4MinLease = $.constants.ipv4MinLease;
    var getIpv4Part = function(regex, ip) {
        var rs = regex.exec(ip);
        return rs ? rs[0] : 0
    };
    $scope.$emit("updateStatusIconTop");
    var originalInfo, removeAlias, removeIndex;
    if ($scope.listMac = Dhcp.getIpReservation(!0),
    $scope.ipv4LeaseInput = $.config.modules.myBox.dhcp.ipv4LeaseInput,
    ConnectedDevices.updateCache(),
    $scope.activeDevices = ConnectedDevices.getActiveDevices(),
    devicesByMac = {},
    $.each($scope.activeDevices || [], function(i, actDevice) {
        var mac = _normalizeMacAddress(actDevice.PhysAddress);
        mac && !devicesByMac[mac] && (devicesByMac[mac] = actDevice)
    }),
    $scope.forbiddenIps = $.xmo.getValuesTree($.xpaths.forbiddenIps),
    $scope.hosts = ConnectedDevices.getAllDevices(),
    $scope.submitted = !1,
    $scope.hasForbiddenIp = !$rootScope.isMasmovil,
    $scope.eRouterMode = ConnectedDevices.geteRouterMode(),
    $scope.showErrors = function() {
        $scope.submitted = !0,
        $.util.scrollToError()
    }
    ,
    $scope.prepareRemoveIpReservation = function(alias, index) {
        removeAlias = alias,
        removeIndex = index
    }
    ,
    $scope.cancelRemoveIpReservation = function() {
        removeAlias = null,
        removeIndex = null
    }
    ,
    $scope.removeIpReservation = function() {
        Dhcp.removeIpReservation(removeAlias) && $scope.listMac.splice(removeIndex, 1)
    }
    ,
    $.config.showedpages.dhcpLeasesInDHCP && ($scope.showInactiveDevices = $.config.showInactiveDevices,
    $scope.listLeases = Dhcp.getLeasedDevices(),
    $scope.refreshContent = function() {
        $scope.loading = !0,
        $timeout(function() {
            $scope.listLeases = Dhcp.getLeasedDevices(),
            $scope.loading = !1,
            $scope.$digest()
        }, 500)
    }
    ),
    $scope.isActiveDevice = function(mac) {
        return mac = _normalizeMacAddress(mac),
        mac ? !!devicesByMac[mac] : !1
    }
    ,
    $.config.showedpages.dhcpIPv6InDHCP && $.config.showedpages.dhcpIPv6InDHCP.enable === !0) {
        var data = Dhcp.getIPv6Info();
        $scope.ipv6 = {},
        $scope.ipv6.dhcpv6Enable = data.dhcpv6Enable,
        $scope.ipv6.enableDHCPPD = data.enableDHCPPD,
        $scope.ipv6.ianaEnable = data.ianaEnable,
        $scope.ipv6.ulaIPv6Enabled = data.ulaIPv6Enabled,
        $scope.ipv6.ianaManualPrefixes = data.ianaManualPrefixes,
        $scope.ipv6.lanIPv6 = data.lanIPv6,
        $scope.ipv6.lanIPv6LinkLocal = data.lanIPv6LinkLocal,
        $rootScope.isComhem ? ($scope.ipv6.enableAutoIPv6Assignment = !data.enableAutoIPv6Assignment,
        $scope.ipv6.enableAutoIPv6Assignment1 = data.enableAutoIPv6Assignment1) : $scope.ipv6.enableAutoIPv6Assignment = data.enableAutoIPv6Assignment,
        $scope.ipv6.typeLan6Autoconfig = !!data.typeLan6Autoconfig,
        $scope.ipv6.minAddress = data.rangeMinAddress ? data.rangeMinAddress : $.constants.lanIPv6DefaultMinAddress,
        $scope.ipv6.maxAddress = data.rangeMaxAddress ? data.rangeMaxAddress : $.constants.lanIPv6DefaultMaxAddress,
        $scope.ipv6.enableDefaultRange = $scope.minAddress === $.constants.lanIPv6DefaultMinAddress && $scope.maxAddress === $.constants.lanIPv6DefaultMaxAddress,
        $scope.ipv6.disableIPv6Option = !0
    }
    $scope.setIp = function(index) {
        $.each($scope.activeDevices, function(ind) {
            $scope.activeDevices[ind].PhysAddress === $scope.listMac[index].Chaddr && ($scope.listMac[index].Yiaddr = $scope.activeDevices[ind].ipAddress)
        })
    }
    ,
    $scope.addIpReservation = function() {
        return !$.util.hasFeature("avoidValidateOnAddReserveIP", !1) && $scope.dhcpForm.$invalid ? void ($scope.submitted = !0) : ($scope.submitted = !1,
        void $scope.listMac.unshift(Dhcp.getModel()))
    }
    ,
    $scope.changedDhcpData = function() {
        var result = !1;
        return result = $scope.dhcpForm.gatewayIp ? $scope.dhcpForm.gatewayIp.$dirty || result : result,
        result = $scope.dhcpForm.subnetMask ? $scope.dhcpForm.subnetMask.$dirty || result : result,
        result = $scope.dhcpForm.ipv4PoolStart ? $scope.dhcpForm.ipv4PoolStart.$dirty || result : result,
        result = $scope.dhcpForm.ipv4PoolEnd ? $scope.dhcpForm.ipv4PoolEnd.$dirty || result : result,
        result = $scope.dhcpForm.ipv4Lease ? $scope.dhcpForm.ipv4Lease.$dirty || result : result,
        result = $scope.dhcpForm.ipv4LeaseTxt ? $scope.dhcpForm.ipv4LeaseTxt.$dirty || result : result,
        result = $scope.dhcpForm.ipv4TvPoolEnable ? $scope.dhcpForm.ipv4TvPoolEnable.$dirty || result : result,
        result = $scope.dhcpForm.ipv4TvPoolStart ? $scope.dhcpForm.ipv4TvPoolStart.$dirty || result : result,
        result = $scope.dhcpForm.ipv4TvPoolEnd ? $scope.dhcpForm.ipv4TvPoolEnd.$dirty || result : result,
        result = $scope.dhcpForm.dhcpEnable ? $scope.dhcpForm.dhcpEnable.$dirty || result : result,
        result = $scope.dhcpForm.dhcpv6Enable ? $scope.dhcpForm.dhcpv6Enable.$dirty || result : result,
        result = $scope.dhcpForm.ianaEnable ? $scope.dhcpForm.ianaEnable.$dirty || result : result,
        result = $scope.dhcpForm.ulaIPv6Enabled ? $scope.dhcpForm.ulaIPv6Enabled.$dirty || result : result,
        result = $scope.dhcpForm.ianaManualPrefixes ? $scope.dhcpForm.ianaManualPrefixes.$dirty || result : result,
        result = $scope.dhcpForm.enableDHCPPD ? $scope.dhcpForm.enableDHCPPD.$dirty || result : result,
        result = $scope.dhcpForm.tvDevicesClass ? $scope.dhcpForm.tvDevicesClass.$dirty || result : result
    }
    ,
    $scope.checkNatSettings = function() {
        $scope.dhcpForm && $scope.dhcpForm.natRangeStart && ($.config.showedpages.natSettings && $.config.showedpages.natSettings.enable === !0 && $scope.natEnable !== !1 ? ($scope.$emit("validate_natRangeStart"),
        $scope.$emit("validate_natRangeEnd")) : ($scope.dhcpForm.natRangeStart.$setValidity("forbiddenIp", !0),
        $scope.dhcpForm.natRangeEnd.$setValidity("forbiddenIp", !0),
        $scope.dhcpForm.natRangeStart.$setValidity("invalidRange", !0),
        $scope.dhcpForm.natRangeEnd.$setValidity("invalidRange", !0)))
    }
    ,
    $scope.beforeSave = function() {
        $scope.dhcpForm.natRangeStart && $scope.dhcpForm.natRangeStart.$invalid && ("" === $scope.natRangeStart || angular.isUndefined($scope.natRangeStart)) && $scope.natRangeStartOriginal === $scope.natRangeStart && ($scope.dhcpForm.natRangeStart.$setValidity("forbiddenIp", !0),
        $scope.dhcpForm.natRangeStart.$setValidity("invalidRange", !0),
        $scope.dhcpForm.natRangeStart.$setValidity("lanIp", !0)),
        $scope.dhcpForm.natRangeEnd && $scope.dhcpForm.natRangeEnd.$invalid && ("" === $scope.natRangeEnd || angular.isUndefined($scope.natRangeEnd)) && $scope.natRangeEndOriginal === $scope.natRangeEnd && ($scope.dhcpForm.natRangeEnd.$setValidity("forbiddenIp", !0),
        $scope.dhcpForm.natRangeEnd.$setValidity("invalidRange", !0),
        $scope.dhcpForm.natRangeEnd.$setValidity("lanIp", !0)),
        $scope.dhcpForm.$invalid ? $scope.showErrors() : $scope.dhcpForm.$valid && $scope.changedDhcpData() ? $("#apply-changes-modal").foundation("reveal", "open") : $scope.dhcpForm.$valid && !$scope.changedDhcpData() && $scope.save()
    }
    ,
    $scope.save = function() {
        if ($scope.saving = !0,
        $scope.dhcpForm.$valid) {
            var data = {};
            if (data.enable = $scope.dhcpEnable,
            data.ipv4Address = $scope.gatewayIp !== originalInfo.ipv4Address ? $scope.gatewayIp : void 0,
            data.subnetMask = $scope.subnetMask !== originalInfo.subnetMask ? $scope.subnetMask : void 0,
            data.ipv4PoolStart = $scope.ipv4PoolStart,
            data.ipv4PoolEnd = $scope.ipv4PoolEnd,
            "select" === $scope.ipv4LeaseInput ? data.ipv4Lease = $scope.ipv4Lease : "text" === $scope.ipv4LeaseInput ? data.ipv4Lease = $scope.ipv4LeaseTxt : "mixed" === $scope.ipv4LeaseInput && ("other" === $scope.ipv4Lease ? data.ipv4Lease = $scope.ipv4LeaseTxt : data.ipv4Lease = $scope.ipv4Lease),
            data.gatewayHostname = $scope.gatewayHostname ? $scope.gatewayHostname : "",
            data.ipv4TvPoolEnable = $scope.ipv4TvPoolEnable,
            data.ipv4TvPoolStart = $scope.ipv4TvPoolStart,
            data.ipv4TvPoolEnd = $scope.ipv4TvPoolEnd,
            data.ipv4TvClassID = $scope.ipv4TvClassID,
            data.upnp = $scope.upnpEnable,
            $scope.ipv6 && $.config.showedpages.dhcpIPv6InDHCP && (data.ipv6 = {},
            data.ipv6.dhcpv6Enable = $scope.ipv6.dhcpv6Enable,
            data.ipv6.enableDHCPPD = $scope.ipv6.enableDHCPPD,
            data.ipv6.ianaEnable = $scope.ipv6.ianaEnable,
            data.ipv6.ulaIPv6Enabled = $scope.ipv6.ulaIPv6Enabled,
            data.ipv6.ianaManualPrefixes = $scope.ipv6.ianaManualPrefixes,
            $rootScope.isCharterAll ? (data.ipv6.rangeMinAddress = $scope.ipv6.minAddress,
            data.ipv6.rangeMaxAddress = $scope.ipv6.maxAddress,
            data.ipv6.typeLan6Autoconfig = $scope.typeLan6Autoconfig) : (data.ipv6.lanIPv6 = $scope.ipv6.lanIPv6,
            data.ipv6.enableAutoIPv6Assignment = $scope.ipv6.enableAutoIPv6Assignment,
            $rootScope.isComhem && (data.ipv6.enableAutoIPv6Assignment = !$scope.ipv6.enableAutoIPv6Assignment,
            data.ipv6.enableAutoIPv6Assignment1 = $scope.ipv6.enableAutoIPv6Assignment1))),
            $scope.gatewayIp !== originalInfo.ipv4Address) {
                if (data.ipv4PoolStart.substring(0, data.ipv4PoolStart.lastIndexOf(".")) === originalInfo.ipv4PoolStart.substring(0, data.ipv4PoolStart.lastIndexOf(".")) && data.ipv4PoolEnd.substring(0, data.ipv4PoolEnd.lastIndexOf(".")) === originalInfo.ipv4PoolEnd.substring(0, data.ipv4PoolEnd.lastIndexOf("."))) {
                    var ipPrefixDhcp = /^([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)/.exec($scope.gatewayIp)[0];
                    data.ipv4PoolStart = ipPrefixDhcp + $scope.ipv4PoolStart.split(".")[3],
                    data.ipv4PoolEnd = ipPrefixDhcp + $scope.ipv4PoolEnd.split(".")[3]
                }
                $.util.isInIpRange($scope.gatewayIp, originalInfo.ipv4Address) ? $scope.showReconnectInstructionsLink = !0 : ($scope.showReconnectInstructionsLink = !1,
                $rootScope.globalWait = !0),
                $timeout(function() {
                    $("#showModalChangesInGatewayIp").trigger("click")
                }, 1e3)
            } else
                $rootScope.globalWait = !0;
            $.util.hasFeature("natSettings") && (data.natEnable = $scope.natEnable,
            data.natRange = $scope.natRangeStart + "-" + $scope.natRangeEnd),
            $.util.hasFeature("dhcpAutoUpdateNat") && (data.ipv4Address || data.subnetMask) && (data.sourceIp = $scope.gatewayIp + "/" + $.constants.masks.indexOf($scope.subnetMask)),
            Dhcp.save(data, {
                success: $scope.checkLoading,
                error: $scope.checkLoading
            }),
            $scope.timeoutSave = $timeout($scope.checkLoading, 5e3)
        } else
            $scope.saving = !1
    }
    ,
    $scope.checkLoading = function() {
        $scope.timeoutSave && $timeout.cancel($scope.timeoutSave),
        $http({
            method: "GET",
            url: "/",
            timeout: 5e3
        }).success(function(data, status) {
            if (200 === status) {
                Dhcp.updateCache();
                var _success = function() {
                    $scope.listMac = Dhcp.getIpReservation(!0),
                    $scope.saving = !1,
                    $scope.submitted = !1,
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !0,
                    $scope.dhcpForm.$setPristine(!0),
                    $timeout.cancel($scope.timeoutSave)
                };
                0 === $scope.listMac.length && _success(),
                Dhcp.saveIpReservation($scope.listMac, {
                    success: function() {
                        _success()
                    },
                    error: function() {
                        $scope.saving = !1,
                        $scope.submitted = !0,
                        $rootScope.showMessage = !1,
                        $rootScope.globalWait = !1,
                        $timeout.cancel($scope.timeoutSuccess)
                    }
                })
            } else
                $scope.timeoutSuccess = $timeout(function() {
                    $scope.checkLoading()
                }, 5e3)
        }).error(function() {
            $scope.timeoutError = $timeout(function() {
                $scope.checkLoading()
            }, 5e3)
        })
    }
    ;
    var _strToIntFullArray = function(data) {
        for (var i = 0; i < data.length; i++)
            data[i] = parseInt(data[i], 10)
    };
    $scope.concateLanIP = function() {
        $scope.gatewayIp = $scope.lanIP.join("."),
        $scope.ipPrefixDhcp = $scope.lanIP[0] + "." + $scope.lanIP[1] + "." + $scope.lanIP[2] + "."
    }
    ,
    $scope.populate = function() {
        Dhcp.updateCache();
        var data = Dhcp.populate();
        if (originalInfo = data,
        $scope.dhcpEnable = data.enable,
        $scope.gatewayIp = data.ipv4Address,
        $scope.gatewayHostname = data.host,
        $scope.subnetMask = data.subnetMask,
        $scope.ipv4PoolStart = data.ipv4PoolStart,
        $scope.ipv4PoolEnd = data.ipv4PoolEnd,
        $scope.ipv4Lease = data.ipv4Lease,
        $scope.ipv4LeaseTxt = data.ipv4Lease,
        $scope.ipv4TvPoolEnable = data.ipv4TvPoolEnable,
        $scope.ipv4TvPoolStart = data.ipv4TvPoolStart,
        $scope.ipv4TvPoolEnd = data.ipv4TvPoolEnd,
        $scope.ipv4TvClassID = data.ipv4TvClassID,
        $scope.macAddress = data.macAddress,
        $scope.hostNameUpdate = $.config.modules.myBox.dhcp.hostNameUpdate,
        $scope.macAddressLanSettings = data.macAddressLanSettings,
        $scope.ipv4LeaseObject = {
            days: $.util.getDaysFromLeaseSeconds(data.ipv4Lease),
            hours: $.util.getHoursFromLeaseSeconds(data.ipv4Lease),
            minutes: $.util.getMinutesFromLeaseSeconds(data.ipv4Lease)
        },
        $scope.upnpEnable = data.upnp,
        $scope.lanIP = $scope.gatewayIp.split("."),
        $scope.originalIpPrefixDhcp = $scope.lanIP[0] + "." + $scope.lanIP[1] + "." + $scope.lanIP[2] + ".",
        $scope.ipPrefixDhcp = $scope.originalIpPrefixDhcp,
        _strToIntFullArray($scope.lanIP),
        $scope.ipv4PoolStartLabel = getIpv4Part(ipv4PoolStartReg, data.ipv4PoolStart),
        $scope.ipv4PoolStartInput = parseInt(getIpv4Part(ipv4PoolInputReg, data.ipv4PoolStart), 10),
        $scope.ipv4PoolEndInput = parseInt(getIpv4Part(ipv4PoolInputReg, data.ipv4PoolEnd), 10) - parseInt($scope.ipv4PoolStartInput, 10) + 1,
        -1 === $.inArray($scope.ipv4Lease, $.constants.ipv4LeaseSelect) && ($scope.ipv4Lease = "other",
        $scope.ipv4LeaseInput = "mixed"),
        $scope.ipv4DefaultGwInput = $.config.modules.myBox.dhcp.ipv4DefaultGwInput,
        $scope.predefinedIpRange = $.merge([], networkRange),
        $scope.ipv6Address = data.ipv6Address,
        $scope.ipv6Prefix = data.ipv6Prefix,
        "input" !== $.config.modules.myBox.dhcp.ipv4DefaultGwInput) {
            $scope.gatewayNetwork = $scope.predefinedIpRange[$scope.predefinedIpRange.length - 1],
            $scope.prefixLength = 24;
            var found = !1;
            $.each(networkRange, function(i, obj) {
                var ipLabel = obj.label.split("/");
                return ipLabel = ipLabel[0],
                $.util.checkLanIp($scope.gatewayIp, ipLabel, obj.mask) ? ($scope.gatewayNetwork = obj,
                $scope.prefixLength = $scope.gatewayNetwork.prefixLength,
                found = !0,
                !1) : void 0
            }),
            found || $scope.predefinedIpRange.push({
                label: $.globals.custom[$basicInfo.getLanguage()]
            })
        } else
            $scope.gatewayNetwork = networkRange;
        if ($.config.showedpages.natSettings.enable) {
            $scope.natEnable = data.natEnable;
            var natRange = data.natRange && "" !== data.natRange ? data.natRange.split("-") : "";
            $scope.natRangeStart = natRange[0] ? natRange[0] : "",
            $scope.natRangeEnd = natRange[1] ? natRange[1] : "",
            $scope.natRangeStartOriginal = natRange[0] ? natRange[0] : "",
            $scope.natRangeEndOriginal = natRange[1] ? natRange[1] : ""
        }
        $.config.showedpages.dhcpIPv6InDHCP && $.config.showedpages.dhcpIPv6InDHCP.enable === !0 && $rootScope.isDtagXdsl && ($scope.ipv6.dhcpv6Enable = data.dhcpv6Enable,
        $scope.ipv6.enableDHCPPD = data.enableDHCPPD,
        $scope.ipv6.ianaEnable = data.ianaEnable,
        $scope.ipv6.ulaIPv6Enabled = data.ulaIPv6Enabled,
        $scope.ipv6.ianaManualPrefixes = data.ianaManualPrefixes,
        $scope.loadULAAddress(),
        $scope.setValueIPv6()),
        $timeout($scope.checkNatSettings, 700),
        $.config.showedpages.dhcpIPv6InDHCP && $.config.showedpages.dhcpIPv6InDHCP.enable === !0 && ($scope.loadULAAddress(),
        $scope.setValueIPv6())
    }
    ,
    $scope.loadULAAddress = function() {
        if ($scope.ipv6.ianaManualPrefixes) {
            var ipv6SufArr = $scope.ipv6.ianaManualPrefixes.split("::");
            $scope.ipv6.sufixIpv6 = "::" + ipv6SufArr[1];
            var ipv6Arr = ipv6SufArr[0].split(":");
            $scope.ipv6.prefixIpv6 = ipv6Arr[0] + ":" + ipv6Arr[1] + ":" + ipv6Arr[2] + ":",
            $scope.ipv6.localIpv6 = ("0000" + ipv6Arr[3]).slice(-4)
        }
    }
    ,
    $scope.setValueIPv6 = function() {
        $scope.ipv6.localIpv6 = ("0000" + $scope.ipv6.localIpv6).slice(-4),
        $scope.ipv6.ianaManualPrefixes = $scope.ipv6.prefixIpv6 + $scope.ipv6.localIpv6 + $scope.ipv6.sufixIpv6
    }
    ,
    $scope.loadULAAddress = function() {
        var ipv6SufArr = "";
        if ($scope.ipv6.sufixIpv6 = "",
        $scope.ipv6.prefixIpv6 = "",
        $scope.ipv6.localIpv6 = "",
        $scope.ipv6.ianaManualPrefixes) {
            ipv6SufArr = $scope.ipv6.ianaManualPrefixes.split("::"),
            $scope.ipv6.sufixIpv6 = "::" + ipv6SufArr[1];
            var ipv6Arr = ipv6SufArr[0].split(":");
            $scope.ipv6.prefixIpv6 = ipv6Arr[0] + ":" + ipv6Arr[1] + ":" + ipv6Arr[2] + ":",
            $scope.ipv6.localIpv6 = ("0000" + ipv6Arr[3]).slice(-4)
        }
    }
    ,
    $scope.setValueIPv6 = function() {
        $scope.ipv6.localIpv6 = ("0000" + $scope.ipv6.localIpv6).slice(-4),
        $scope.ipv6.ianaManualPrefixes = $scope.ipv6.prefixIpv6 + $scope.ipv6.localIpv6 + $scope.ipv6.sufixIpv6
    }
    ,
    $scope.populate(),
    $scope.restore = function() {
        $scope.dhcpEnable = $.config.modules.myBox.dhcp.defaultValues.dhcpEnable,
        $scope.gatewayIp = $.config.modules.myBox.dhcp.defaultValues.gatewayIp,
        $scope.subnetMask = $.config.modules.myBox.dhcp.defaultValues.subnetMask,
        $scope.prefixLength = 24,
        $scope.ipv4PoolStart = $.config.modules.myBox.dhcp.defaultValues.ipv4PoolStart,
        $scope.ipv4PoolEnd = $.config.modules.myBox.dhcp.defaultValues.ipv4PoolEnd,
        $scope.ipv4Lease = $.config.modules.myBox.dhcp.defaultValues.ipv4Lease,
        $scope.ipv4LeaseTxt = $.config.modules.myBox.dhcp.defaultValues.ipv4Lease,
        $scope.ipv4TvPoolEnable = $.config.modules.myBox.dhcp.defaultValues.ipv4TvPoolEnable,
        $scope.ipv4TvPoolStart = $.config.modules.myBox.dhcp.defaultValues.ipv4TvPoolStart,
        $scope.ipv4TvPoolEnd = $.config.modules.myBox.dhcp.defaultValues.ipv4TvPoolEnd,
        $scope.ipv4TvClassID = $.config.modules.myBox.dhcp.defaultValues.ipv4TvClassID,
        $scope.submitted = !1
    }
    ,
    $scope.updateRangeTip = function() {
        $scope.gatewayNetwork && $scope.gatewayNetwork.ip && $scope.gatewayNetwork.mask ? ($scope.gatewayIp = $scope.gatewayNetwork.ip,
        $scope.subnetMask = $scope.gatewayNetwork.mask,
        $scope.prefixLength = $scope.gatewayNetwork.prefixLength) : $scope.gatewayNetwork.prefixLength = 24,
        _updateMasks()
    }
    ,
    $scope.updateMasks = function() {
        var prefixLength;
        $.each(networkRange, function(i, obj) {
            var ipLabel = obj.label.split("/");
            return ipLabel = ipLabel[0],
            $.util.checkLanIp($scope.gatewayIp, ipLabel, obj.mask) ? (prefixLength = obj.prefixLength,
            !1) : void 0
        }),
        $scope.prefixLength = prefixLength || $scope.prefixLength,
        _updateMasks(prefixLength)
    }
    ,
    $scope.updateMasks(),
    $scope.concatDHCPv4Start = function() {
        $scope.ipv4PoolStart = $scope.ipv4PoolStartLabel + $scope.ipv4PoolStartInput
    }
    ,
    $scope.createDHCPv4EndPool = function() {
        var start = parseInt($scope.ipv4PoolStartInput, 10)
          , end = parseInt($scope.ipv4PoolEndInput, 10) - 1;
        if (end > 1) {
            var theEnd = start + end;
            $scope.ipv4PoolEnd = $scope.ipv4PoolStartLabel + theEnd
        } else
            $scope.ipv4PoolEnd = "-1"
    }
    ,
    $scope.concatLease = function() {
        var theNumbers = {
            days: 0,
            hours: 0,
            minutes: 0
        };
        theNumbers.days = parseInt($scope.ipv4LeaseObject.days, 10),
        theNumbers.hours = parseInt($scope.ipv4LeaseObject.hours, 10),
        theNumbers.minutes = parseInt($scope.ipv4LeaseObject.minutes, 10);
        var isInvalid = theNumbers.hours > 24 || theNumbers.minutes > 60
          , realNumber = 86400 * theNumbers.days + 3600 * theNumbers.hours + 60 * theNumbers.minutes;
        !isInvalid && realNumber > 0 ? ($scope.dhcpForm.hiddenLease.$setValidity("invalidLease", !0),
        $scope.ipv4Lease = realNumber) : $scope.dhcpForm.hiddenLease.$setValidity("invalidLease", !1)
    }
}),
sboxApp.controller("DhcpV6Controller", ["$rootScope", "$scope", "DhcpV6", function($rootScope, $scope, DhcpV6) {
    $scope.vm = {};
    var _run = function() {
        $scope.populate()
    };
    $scope.populate = function() {
        var data = DhcpV6.populate();
        $scope.vm = data
    }
    ,
    $scope.save = function() {
        if ($scope.saving = !0,
        $rootScope.globalWait = !0,
        $scope.dhcpForm.$valid) {
            var data = $scope.vm
              , options = {
                success: function() {
                    $scope.saving = !1,
                    $scope.submitted = !1,
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !0,
                    $scope.dhcpForm.$setPristine(!0),
                    $rootScope.$digest()
                },
                error: function() {
                    $rootScope.showMessage = !1,
                    $rootScope.globalWait = !1,
                    $scope.saving = !1,
                    $scope.submitted = !0,
                    $scope.$digest()
                }
            };
            DhcpV6.save(data, options)
        } else
            $rootScope.globalWait = !1,
            $scope.saving = !1
    }
    ,
    $scope.validateRouterAdvInterval = function() {
        var value = $scope.vm.minRouterAdvInterval / 3;
        $scope.dhcpForm.advertInterval.$invalid = $scope.vm.maxRouterAdvInterval < 4 * value,
        $scope.dhcpForm.$valid = !$scope.dhcpForm.$invalid && !$scope.dhcpForm.advertInterval.$invalid
    }
    ,
    _run()
}
]),
sboxApp.controller("EthernetController", ["$scope", "Ethernet", "$timeout", function($scope, Ethernet, $timeout) {
    var populate = function() {
        $timeout(function() {
            $scope.listPorts = Ethernet.getPorts(),
            $scope.loading = !1,
            $scope.$digest()
        }, 500),
        $scope.toggleElement = function(port) {
            port.show = !port.show
        }
    };
    $scope.refreshContent = function() {
        delete $scope.listPorts,
        $scope.loading = !0,
        populate()
    }
    ,
    populate()
}
]),
sboxApp.controller("EthernetDeviceController", ["$scope", "$rootScope", "$state", "$stateParams", "$timeout", "ethernetDevice", "ConnectedDevices", "Dhcp", function($scope, $rootScope, $state, $stateParams, $timeout, ethernetDevice, ConnectedDevices, Dhcp) {
    $scope.button = !1;
    var uid = $stateParams.uid
      , layer = $stateParams.layer
      , isGuest = layer.toLowerCase().indexOf("guest") > -1
      , _getLocalDomain = function(str) {
        var re = "";
        try {
            var split = str.split(",");
            re = split[split.length - 1]
        } catch (err) {
            re = ""
        }
        return re
    };
    $scope.populate = function(uuid) {
        var data = ethernetDevice.populate(uuid);
        try {
            if (ConnectedDevices.isStb(data.devicesList.Host) && $state.go("user.home"),
            $scope.staticDNS = $.config.modules.staticDNS,
            $scope.localDomain = _getLocalDomain(data.localDomain),
            $scope.name = $.util.getHostname(data.devicesList.Host),
            $scope.hostName = data.devicesList.Host.HostName,
            $scope.ipAddress = data.devicesList.Host.IPAddress,
            $scope.macAddress = data.devicesList.Host.PhysAddress,
            $scope.friendlyName = data.devicesList.Host.UserFriendlyName,
            $scope.manufacturer = ConnectedDevices.getVendorByMac(data.devicesList.Host.PhysAddress),
            $scope.activeDevices = ConnectedDevices.getActiveDevices(),
            $scope.userDeviceType = data.devicesList.Host.UserDeviceType,
            $.config.modules.myBox.deviceTypes ? $scope.deviceTypes = $.config.modules.myBox.deviceTypes : $scope.deviceTypes = ethernetDevice.getDevicesTypeSupported(uid),
            data.devicesList.Host.IPv6Addresses && data.devicesList.Host.IPv6Addresses.length > 0)
                for (var j = 0; j < data.devicesList.Host.IPv6Addresses.length; j++) {
                    var ipv6Tmp = data.devicesList.Host.IPv6Addresses[j];
                    "" === ipv6Tmp.IPAddress || /^fe80/gi.test(ipv6Tmp.IPAddress) || ipv6Tmp.Active !== !0 || ($scope.ipv6Active = ipv6Tmp.Active,
                    $scope.ipv6Address = ipv6Tmp.IPAddress)
                }
            if (0 === $scope.deviceTypes.length && ($scope.deviceTypes = $.constants.deviceTypes),
            "MISCELLANEOUS" === $scope.userDeviceType && void 0 !== data.deviceIdentification) {
                var deviceIdentification = data.deviceIdentification.Entry.DeviceName.replace(/\s/g, "");
                "" !== deviceIdentification && ($scope.userDeviceType = $.constants.deviceDiscoveryTypes[deviceIdentification] || "MISCELLANEOUS")
            }
            if ($scope.location = data.devicesList.Host.Room,
            layer && 0 === layer.indexOf("wifi")) {
                var associatedCache = ConnectedDevices.getCache();
                associatedCache = associatedCache[layer].associatedDevices,
                associatedCache = ConnectedDevices.searchAssociatedDevice(associatedCache, data.devicesList.Host.PhysAddress),
                $scope.signalStrength = associatedCache.SignalStrength,
                $scope.signalRate = associatedCache.LastDataDownlinkRate > 0 ? associatedCache.LastDataDownlinkRate / 1e3 : 0,
                $scope.parsedSignalStrength = $.util.calculateWifiStrength(associatedCache.SignalStrength)
            }
            Dhcp.updateCache(),
            $scope.ipReservationList = Dhcp.getIpReservation(!0, isGuest);
            var index = $scope.inReservationList();
            index > -1 && ($scope.button = !0);
            var plcInfo = ConnectedDevices.getPLCDeviceInfo(data.devicesList.Host.PhysAddress);
            $scope.TxPhyRate = plcInfo.TxPhyRate,
            $scope.RxPhyRate = plcInfo.RxPhyRate
        } catch (e) {
            return !1
        }
    }
    ,
    $scope.inReservationList = function() {
        var result = -1;
        for (var index in $scope.ipReservationList)
            if ($scope.ipReservationList[index].Chaddr.toUpperCase() === $scope.macAddress.toUpperCase()) {
                result = index;
                break
            }
        return result
    }
    ,
    $scope.reserveIp = function() {
        var index = $scope.inReservationList();
        index > -1 ? $scope.removeIpReserved($scope.ipReservationList[index], index) : $scope.addReserveIp()
    }
    ;
    var _normalizeMacAddress = function(mac) {
        return mac = mac || "",
        mac = mac.replace(/[\:\-]/g, ""),
        mac.toLowerCase()
    };
    $scope.validateReserve = function(macAddress, ipAddress) {
        if (!macAddress || !ipAddress)
            return !1;
        var valid = !0
          , foundDevices = $.grep($scope.activeDevices, function(device) {
            return !!device && device.ipAddress === ipAddress && _normalizeMacAddress(device.PhysAddress) !== _normalizeMacAddress(macAddress)
        });
        return foundDevices && foundDevices.length ? !1 : ($.each($scope.ipReservationList, function(i, reserve) {
            return reserve.Yiaddr === ipAddress && _normalizeMacAddress(reserve.Chaddr) !== _normalizeMacAddress(macAddress) ? (valid = !1,
            !1) : void 0
        }),
        valid)
    }
    ,
    $scope.addReserveIp = function() {
        if ($scope.invalidReserve = !1,
        !$scope.validateReserve($scope.macAddress, $scope.ipAddress))
            return void ($scope.invalidReserve = !0);
        var device = Dhcp.getModel();
        device.Chaddr = $scope.macAddress,
        device.Yiaddr = $scope.ipAddress,
        $scope.ipReservationList.push(device),
        $rootScope.globalWait = !0,
        Dhcp.saveIpReservation($scope.ipReservationList, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.button = !0,
                $scope.populate(uid, !0)
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1
            }
        }, isGuest)
    }
    ,
    $scope.removeIpReserved = function(device, index) {
        $rootScope.globalWait = !0,
        $timeout(function() {
            var result = Dhcp.removeIpReservation(device.Alias, isGuest);
            $scope.ipReservationList.splice(index, 1),
            $rootScope.globalWait = !1,
            $rootScope.showMessage = result,
            $scope.button = !1
        }, 300)
    }
    ,
    $scope.populate(uid),
    $scope.save = function() {
        $rootScope.globalWait = !0;
        var data = {
            id: uid,
            friendlyName: $scope.friendlyName,
            userDeviceType: $scope.userDeviceType,
            room: $scope.location,
            HostName: $scope.hostName
        };
        ethernetDevice.save(data, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.ethernetDeviceForm.$setPristine(!$scope.submitted),
                $rootScope.$$phase || $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$$phase || $rootScope.$digest()
            }
        })
    }
}
]),
sboxApp.controller("EthernetDeviceMainController", function($scope, $stateParams, $injector, CheckFeature, ethernetDevice) {
    var layer = $stateParams.layer + "";
    if ($scope.layer = layer,
    $scope.uid = $stateParams.uid,
    $scope.interfaceName = "",
    CheckFeature.updateCache(),
    CheckFeature.go("firewall")) {
        var Firewall = $injector.get("Firewall");
        Firewall.updateCache(),
        $scope.customFirewall = "CUSTOM" === Firewall.getPolicy()
    }
    var result = ethernetDevice.populate($scope.uid);
    $scope.name = $.util.getHostname(result.devicesList.Host),
    "wifi24" === layer && ($scope.interfaceName = "Wi-fi 2.4GHz"),
    "wifi5" === layer && ($scope.interfaceName = "Wi-fi 5GHz"),
    "ethernet" === layer && ($scope.interfaceName = "Ethernet")
}),
sboxApp.controller("EthernetDevicePFMainController", function($scope, $stateParams) {
    $scope.uid = $stateParams.uid
}),
sboxApp.controller("SimpleIPv6Controller", ["$rootScope", "$scope", "IPv6", "$timeout", function($rootScope, $scope, IPv6, $timeout) {
    $scope.hasIpv6StatusField = $.util.getModuleConfig("internetConnectivity.ipv6.ipv6StatusField", !1),
    $scope.hasIpv6ValidLifetimeField = $.util.getModuleConfig("internetConnectivity.ipv6.validLifeTimeField", !1),
    $scope.ipv6Info = {},
    $scope.submitted = !1,
    $scope.originalIpv6Info = {},
    $scope.populate = function() {
        var ipv6Info = IPv6.getInfo();
        $scope.ipv6Info.enable = ipv6Info.enable,
        $scope.ipv6Info.delegatedprefix = ipv6Info.delegatedprefix,
        $rootScope.isComhem ? $scope.ipv6Info.lanIPv6 = IPv6.getIPv6() : $scope.ipv6Info.lanIPv6 = ipv6Info.lanIPv6,
        $.util.hasFeature("routerAdvertisementConfig", !0) && ($scope.ipv6Info.routerAdvertisementManaged = ipv6Info.routerAdvertisement.managed === !0,
        $scope.ipv6Info.routerAdvertisementOther = ipv6Info.routerAdvertisement.other === !0),
        $scope.ipv6Info.wanIPv6 = ipv6Info.wanIPv6,
        $scope.ipv6Info.dnsType = ipv6Info.dnsType,
        $scope.ipv6Info.dns1 = ipv6Info.dns1Static,
        $scope.ipv6Info.dns2 = ipv6Info.dns2Static,
        $scope.ipv6Info.dns1Dhcp = ipv6Info.dns1Dhcp,
        $scope.ipv6Info.dns2Dhcp = ipv6Info.dns2Dhcp,
        $scope.ipv6Info.wanAddress = $.util.getIPv6WanAddress(ipv6Info.preferedIPDATAAddr),
        $scope.ipv6Info.wanLinkLocal = ipv6Info.wanLinkLocal,
        $scope.ipv6Info.defaultGateway = $.util.getIPv6DefaultGateway(ipv6Info.defaultGateway),
        $scope.ipv6Info.macAddress = ipv6Info.macAddress,
        $scope.ipv6Info.dns = $.util.getIPv6DNS(ipv6Info.dnsV6),
        $scope.ipv6Info.DSLiteStatus = ipv6Info.DSLiteStatus ? ipv6Info.DSLiteStatus.toLowerCase() : $.constants.notAvailableTranslate,
        $scope.ipv6Info.AFTRFQDN = ipv6Info.AFTRFQDN,
        $scope.ipv6Info.AFTRAddress = ipv6Info.AFTRAddress,
        $scope.ipv6Info.enableFirewall = ipv6Info.enableFirewall ? !0 : !1,
        $scope.ipv6SimpleReadOnly = $.config.ipv6SimpleReadOnly,
        $.util.hasFeature("dtagXdsl") && ("PREFERRED" === ipv6Info.ipStatus && "DHCPV6" === ipv6Info.ipOrigin ? ($scope.ipv6Info.status = "UP",
        $scope.ipv6Info.validLifeTime = $.util.formatLeaseTime(ipv6Info.lifeTime)) : ($scope.ipv6Info.status = "DOWN",
        $scope.ipv6Info.validLifeTime = "")),
        $.config.showedpages.tim && $.config.showedpages.tim.enable === !0 && ($scope.hasIPv6ExtraFeature = !0,
        $scope.ipv6Info.connectionType = "Bridge",
        $scope.ipv6Info.vlan = ipv6Info.vlan,
        $scope.hideFieldsInBrigdeMode = $.util.getModuleConfig("internetConnectivity.hideFieldsInBrigdeMode", !1) && ipv6Info.bridgeMode),
        $scope.originalIpv6Info = angular.copy($scope.ipv6Info)
    }
    ,
    $scope.onChangeDnsType = function() {
        "STATIC" === $scope.ipv6Info.dnsType && $scope.originalIpv6Info && $scope.originalIpv6Info.dns1 && ($scope.ipv6Info.dns1 = $scope.originalIpv6Info.dns1,
        $scope.ipv6Info.dns2 = $scope.originalIpv6Info.dns2 || "")
    }
    ,
    $scope.save = function() {
        if ($scope.submitted = !0,
        $scope.formIpv6.$valid) {
            $rootScope.globalWait = !0;
            var ipv6Data = {
                enable: $scope.ipv6Info.enable,
                enableFirewall: $scope.ipv6Info.enableFirewall,
                dnsType: $scope.ipv6Info.dnsType,
                dns1: $scope.ipv6Info.dns1,
                dns2: $scope.ipv6Info.dns2,
                vlan: $scope.ipv6Info.vlan
            };
            $.util.hasFeature("routerAdvertisementConfig", !0) && (ipv6Data.routerAdvertisementManaged = $scope.ipv6Info.routerAdvertisementManaged,
            ipv6Data.routerAdvertisementOther = $scope.ipv6Info.routerAdvertisementOther),
            IPv6.save(ipv6Data, {
                success: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !0,
                    $scope.formIpv6.$setPristine(!0),
                    $timeout(function() {
                        $rootScope.$digest()
                    })
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $scope.formIpv6.$setPristine(!0),
                    $timeout(function() {
                        $rootScope.$digest()
                    })
                }
            }),
            $scope.submitted = !1
        }
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("PPPController", ["$scope", "PPP", "$rootScope", function($scope, PPP, $rootScope) {
    $scope.user = null,
    $scope.submitted = !1,
    $scope.save = function() {
        $scope.submitted = !0,
        $scope.internetConnectivity.$valid && ($rootScope.globalWait = !0,
        PPP.save($scope.user, {
            success: function() {
                $scope.submitted = !1,
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $(".clickMe").click(),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        }))
    }
    ,
    $scope.populate = function() {
        $scope.user = PPP.search()
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("Backup3gController", ["$scope", "Backup3g", "$rootScope", function($scope, Backup3g, $rootScope) {
    $scope.submitted = !1,
    $scope.Math = window.Math,
    $scope.showWanBackupPath = !0,
    $scope.backup3gImplementation = $.config.showedpages.backup3gLTE.implementation,
    $scope.disableFeature = !!$rootScope.isTeliaAir;
    var run = function() {
        $scope.populate(),
        getWanBackupPath()
    };
    $scope.populate = function() {
        var data = Backup3g.populate();
        $scope.basicConfig = data.basicConfig,
        $scope.basicConfig.enable = $scope.isTelia ? !0 : !1,
        $scope.basicConfig.apnList ? (null !== $scope.basicConfig.apnList[0] && void 0 !== $scope.basicConfig.apnList[0] ? $scope.selectedApn = angular.copy($scope.basicConfig.apnList[0].AccessPoint) : $scope.selectedApn = Backup3g.getEmptyModel(),
        $.each($scope.basicConfig.apnList, function(idx, apnObj) {
            return apnObj.AccessPoint.Enable === !0 ? void ($scope.selectedApn = angular.copy(apnObj.AccessPoint)) : void 0
        })) : $scope.selectedApn = Backup3g.getEmptyModel(),
        $scope.statusInfo = data.statusInfo,
        $scope.advancedConfigInfo = data.advancedConfig,
        $scope.advancedConfig = {
            enable: !1
        }
    }
    ,
    $scope.changeApn = function(alias) {
        $.each($scope.basicConfig.apnList, function(idx, apnObj) {
            return apnObj.AccessPoint.Alias === alias ? void ($scope.selectedApn = angular.copy(apnObj.AccessPoint)) : void 0
        })
    }
    ,
    $scope.isBackupAvailable = function() {
        return !0
    }
    ;
    var getWanBackupPath = function() {
        var options = {
            success: function(value) {
                $scope.showWanBackupPath = value
            },
            error: function(value) {
                $scope.showWanBackupPath = value
            }
        };
        Backup3g.theresWanBackupPath(options)
    };
    $scope.save = function() {
        if ($scope.submitted = !0,
        $scope.backup3g = $scope.$$childTail.$$childTail.backup3g,
        !$scope.basicConfig.enable || $scope.backup3g.$valid) {
            var dataSave = {};
            $scope.basicConfig.enable ? (dataSave.basicConfig = angular.copy($scope.basicConfig),
            dataSave.basicConfig.apnList || (dataSave.basicConfig.apnList = []),
            dataSave.basicConfig.apnList.apnAlias = $scope.selectedApn.Alias,
            dataSave.basicConfig.apnList.apnLength = $scope.basicConfig.apnList ? $scope.basicConfig.apnList.length : 0,
            dataSave.basicConfig.apnList.apnSave = {
                Enable: !0,
                Username: $scope.selectedApn.Username,
                Password: $scope.selectedApn.Password,
                Proxy: $scope.selectedApn.Proxy
            },
            $scope.isTelia && (dataSave.statusInfo = {
                mptcpEnable: $scope.statusInfo.mptcpEnable,
                mptcpValue: $scope.statusInfo.mptcpValue,
                failoverEnable: $scope.statusInfo.failoverEnable,
                failoverValue: $scope.statusInfo.failoverValue
            }),
            "Other" === $scope.selectedApn.Alias && (dataSave.basicConfig.apnList.apnSave.APN = $scope.selectedApn.APN),
            $scope.advancedConfig.enable && (dataSave.advancedConfig = $scope.advancedConfigInfo)) : dataSave.basicConfig = {
                enable: !1
            },
            $rootScope.globalWait = !0;
            var options = {
                success: function() {
                    $rootScope.showMessage = !0,
                    $rootScope.globalWait = !1,
                    $scope.submitted = !1,
                    $scope.backup3g.$setPristine(!0),
                    $rootScope.$digest()
                },
                error: function() {
                    $rootScope.showMessage = !1,
                    $rootScope.globalWait = !1,
                    $rootScope.$digest()
                }
            };
            Backup3g.save(dataSave, options)
        }
    }
    ,
    run()
}
]),
sboxApp.controller("MapTController", ["$rootScope", "$scope", "MapT", function($rootScope, $scope, MapT) {
    $scope.populate = function() {
        $scope.mapT = MapT.getInfo(),
        $scope.mapT.portSets = $.util.calculateRanges($scope.mapT.psid, $scope.mapT.psidOffset, $scope.mapT.psidLength)
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("MptcpStatusController", ["$scope", "$rootScope", "Mptcp", function($scope, $rootScope, Mptcp) {
    $scope.populate = function() {
        $scope.data = Mptcp.populateStatus(),
        $scope.data.status = "ENABLED" === $scope.data.status
    }
    ,
    $scope.save = function() {
        $rootScope.globalWait = !0,
        Mptcp.saveStatus($scope.data.enable, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1
            }
        })
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("MptcpStatisticsController", ["$scope", "$rootScope", "Mptcp", function($scope, $rootScope, Mptcp) {
    $scope.populate = function() {
        $scope.data = Mptcp.populateStatistics()
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("MptcpKpiInfoController", ["$scope", "$rootScope", "Mptcp", function($scope, $rootScope, Mptcp) {
    $scope.populate = function() {
        $scope.data = Mptcp.populateKpiInformation()
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("DMZController", ["$scope", "Dmz", "ConnectedDevices", "$rootScope", "$stateParams", function($scope, Dmz, ConnectedDevices, $rootScope, $stateParams) {
    var dmzDevice, uid = parseInt($stateParams.uid, 10), original = {
        status: !1,
        selectedDevice: ""
    }, fields = {
        status: !1,
        selectedDevice: "",
        required: "required",
        disableApply: !1
    }, _hasChanged = function(original, current) {
        return original.status === current.status && original.selectedDevice === current.selectedDevice
    };
    $scope.fields = fields,
    $scope.$watch("fields.status", function() {
        fields.required = fields.status ? "required" : "not.required",
        fields.disableApply = _hasChanged(original, fields)
    }),
    $scope.$watch("fields.selectedDevice", function() {
        fields.disableApply = _hasChanged(original, fields)
    });
    var system = {
        init: function() {
            this.populate()
        },
        populate: function() {
            var data = Dmz.storedValues()
              , deviceList = ConnectedDevices.deviceList();
            $scope.activeDevices = deviceList,
            $.isNumeric(uid) && (dmzDevice = ConnectedDevices.getDeviceById(uid),
            $scope.dmzDevice = dmzDevice[0]),
            fields.selectedDevice = data.IpAddress,
            fields.status = data.Enable === !0,
            original = $.extend(!0, {}, fields)
        }
    };
    $scope.save = function() {
        $("input").removeClass("ng-pristine"),
        $scope.submitted = !0;
        var data = {
            Enable: !1,
            IpAddress: ""
        };
        ($scope.dmzForm.$valid || !fields.status) && ($rootScope.globalWait = !0,
        data.Enable = fields.status,
        data.IpAddress = fields.selectedDevice,
        Dmz.save(data, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                original = $.extend(!0, {}, fields),
                fields.disableApply = _hasChanged(original, fields),
                $scope.dmzForm.$setPristine(),
                $scope.submitted = !1,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        }))
    }
    ,
    $scope.addDevice = function() {
        fields.status = !0,
        fields.selectedDevice = dmzDevice[0].ipAddress,
        $scope.save()
    }
    ,
    $scope.removeDevice = function() {
        fields.status = !1,
        fields.selectedDevice = "",
        $scope.save()
    }
    ,
    system.init()
}
]),
sboxApp.controller("PortmirrorController", ["$scope", "Portmirror", "$rootScope", function($scope, Portmirror, $rootScope) {
    var original = {
        status: !1
    }
      , fields = {
        status: !1,
        required: "required",
        disableApply: !1
    }
      , _hasChanged = function(original, current) {
        return original.status === current.status && original.selectedDevice === current.selectedDevice
    };
    $scope.fields = fields,
    $scope.$watch("fields.status", function() {
        fields.required = fields.status ? "required" : "not.required",
        fields.disableApply = _hasChanged(original, fields)
    });
    var system = {
        init: function() {
            this.populate()
        },
        populate: function() {
            var data = Portmirror.storedValues();
            fields.status = data.Enable === !0,
            original = $.extend(!0, {}, fields)
        }
    };
    $scope.save = function() {
        $("input").removeClass("ng-pristine"),
        $scope.submitted = !0;
        var data = {
            Enable: !1
        };
        ($scope.portmirrorForm.$valid || !fields.status) && ($rootScope.globalWait = !0,
        data.Enable = fields.status,
        Portmirror.save(data, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                original = $.extend(!0, {}, fields),
                fields.disableApply = _hasChanged(original, fields),
                $scope.portmirrorForm.$setPristine(),
                $scope.submitted = !1,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        }))
    }
    ,
    system.init()
}
]),
sboxApp.controller("DmzIPv6Controller", ["$scope", "DmzIPv6", "$rootScope", function($scope, DmzIPv6, $rootScope) {
    var originalStatus = !1;
    $scope.fields = {},
    $scope.populate = function() {
        var data = DmzIPv6.populate();
        $scope.fields = {
            LocalHost: data.LocalHost,
            Enable: data.Enable
        },
        originalStatus = data.Enable
    }
    ,
    $scope.save = function() {
        $("input").removeClass("ng-pristine"),
        $scope.submitted = !0;
        var update = $scope.fields.Enable && $scope.fields.Enable === originalStatus;
        (!$scope.fields.Enable || $scope.dmzIPv6Form.$valid) && ($rootScope.globalWait = !0,
        DmzIPv6.save($scope.fields, update, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.dmzIPv6Form.$setPristine(),
                $scope.submitted = !1,
                $scope.populate()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1
            }
        }))
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("NatMappingController", ["$scope", "$rootScope", "NatMapping", "$injector", "$stateParams", function($scope, $rootScope, NatMapping, $injector, $stateParams) {
    var originalBlacklistedIPs = $.constants.blacklistedIPs;
    $.constants.blacklistedIPs = [],
    $scope.$on("$destroy", function() {
        $.constants.blacklistedIPs = originalBlacklistedIPs
    }),
    $scope.onChangeSave = $.config.onChangeSave,
    $scope.validateExternalIp = $.config.modules.natMapping && $.config.modules.natMapping.validateExternalIp;
    var uid = parseInt($stateParams.uid, 10)
      , fields = {
        required: "required",
        rulesList: [],
        uid: "",
        nAlias: "",
        nExernelAdressNAT: "",
        nSourceIP: "",
        ipFilter: "",
        isDisable: !0
    }
      , rulesToUpdate = []
      , resetErrors = function() {
        $scope.AddRuleForm.exernelAdressNAT.$setValidity("exernelAdressNAT", !0),
        $scope.AddRuleForm.sourceIP.$setValidity("sourceIP", !0),
        $scope.submitted = !1
    }
      , validateAddRule = function(rule) {
        var blacklistedIPs = NatMapping.getBlacklistedIPs();
        resetErrors();
        var valid = $scope.AddRuleForm.$valid;
        if ($scope.AddRuleForm.exernelAdressNAT.$setValidity("exernelAdressNat", !0),
        $scope.AddRuleForm.sourceIP.$setValidity("duplicatedIp", !0),
        blacklistedIPs.wanIP && blacklistedIPs.wanIP === rule.ExernelAdressNAT && ($scope.AddRuleForm.exernelAdressNAT.$setValidity("exernelAdressNat", !1),
        valid = !1),
        blacklistedIPs.ripDefaultGateways)
            for (var y in blacklistedIPs.ripDefaultGateways)
                if (rule.ExernelAdressNAT === blacklistedIPs.ripDefaultGateways[y]) {
                    $scope.AddRuleForm.exernelAdressNAT.$setValidity("exernelAdressNat", !1),
                    valid = !1;
                    break
                }
        for (var x in $scope.fields.rulesList) {
            var ipWithoutMask = rule.SourceIP;
            if (rule.SourceIP.indexOf("/") > -1 && (ipWithoutMask = rule.SourceIP.substr(0, rule.SourceIP.indexOf("/"))),
            $.util.checkIP(ipWithoutMask) && $scope.fields.rulesList[x].SourceIP.indexOf(ipWithoutMask) > -1 && rule.Alias !== $scope.fields.rulesList[x].Alias) {
                $scope.AddRuleForm.sourceIP.$setValidity("duplicatedIp", !1),
                valid = !1;
                break
            }
        }
        return rule.Alias || (rule.Alias = ""),
        $scope.AddRuleForm.$valid
    }
      , getTranslatedRule = function() {
        var nRule = NatMapping.getModel();
        return nRule.Alias = fields.nAlias,
        nRule.ExernelAdressNAT = fields.nExernelAdressNAT,
        nRule.SourceIP = fields.nSourceIP,
        nRule
    };
    if (uid) {
        var ConnectedDevices = $injector.get("ConnectedDevices")
          , selectedDevice = ConnectedDevices.getDeviceById(uid);
        fields.nSourceIP = selectedDevice[0].ipAddress,
        fields.ipFilter = selectedDevice[0].ipAddress,
        $scope.loadedFromDevice = !0
    } else
        $scope.loadedFromDevice = !1;
    var _saveService = function(rules, successCallback) {
        NatMapping.save(rules, {
            success: successCallback,
            error: function() {
                $rootScope.showMessage = !1,
                $rootScope.globalWait = !1,
                $rootScope.$digest()
            }
        })
    };
    $scope.clearForm = function() {
        fields.nAlias = "",
        fields.nExernelAdressNAT = "",
        $scope.loadedFromDevice || (fields.nSourceIP = ""),
        resetErrors(),
        $scope.AddRuleForm.$setPristine(!0)
    }
    ,
    $scope.saveDynNatAddress = function(dynamicNatAddress) {
        $scope.dynamicNatForm.$valid && ($rootScope.globalWait = !0,
        NatMapping.saveDynNatAddress(dynamicNatAddress, {
            success: function() {
                $rootScope.showMessage = !0,
                $rootScope.globalWait = !1,
                $scope.dynamicNatForm.$setPristine(!0),
                $scope.submitted = !1,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        }))
    }
    ,
    $scope.addRule = function() {
        var nRule = getTranslatedRule()
          , o = validateAddRule(nRule);
        o && ($scope.fields.rulesList.push(nRule),
        $scope.submitted = !0,
        $rootScope.globalWait = !0,
        _saveService([nRule], function() {
            $rootScope.showMessage = !0,
            $rootScope.globalWait = !1,
            $scope.clearForm(),
            system.populate(!1),
            $rootScope.$digest()
        }))
    }
    ,
    $scope.apply = function() {
        0 !== rulesToUpdate.length && ($scope.submitted = !0,
        $rootScope.globalWait = !0,
        _saveService(rulesToUpdate, function() {
            $rootScope.showMessage = !0,
            $rootScope.globalWait = !1,
            $scope.clearForm(),
            system.populate(!1),
            rulesToUpdate = [],
            $rootScope.$digest()
        }))
    }
    ,
    $scope.selectedRule = null,
    $scope.toEditRule = null;
    var indexList = null;
    $scope.selectRule = function(leRule, index) {
        indexList = index,
        $scope.selectedRule = leRule
    }
    ,
    $scope.cancelRemove = function() {
        $scope.selectedRule = null
    }
    ,
    $scope.confirmRemove = function() {
        $scope.selectedRule && ($scope.selectedRule.toBeDeleted = !0,
        NatMapping.remove([$scope.selectedRule]) ? ($rootScope.showMessage = !0,
        $rootScope.deleted = !0,
        system.populate(!1)) : $rootScope.showMessage = !1),
        $scope.cancelRemove()
    }
    ,
    $scope.editRule = function(obj) {
        $(document).scrollTop(0),
        $scope.toEditRule = obj,
        fields.nAlias = obj.Alias,
        fields.nExernelAdressNAT = obj.ExernelAdressNAT,
        fields.nSourceIP = obj.SourceIP
    }
    ,
    $scope.enableDisableRule = function(obj) {
        $.config.onChangeSave ? ($rootScope.globalWait = !0,
        _saveService([obj], function() {
            $rootScope.showMessage = !0,
            $rootScope.globalWait = !1,
            $scope.clearForm(),
            system.populate(!1),
            $rootScope.$digest()
        })) : rulesToUpdate.push(obj)
    }
    ,
    $scope.updateRule = function(obj) {
        var nRule = getTranslatedRule();
        nRule.indexEdit = $.inArray(obj, fields.rulesList);
        var valid = validateAddRule(nRule);
        $scope.submitted = !0,
        valid && (obj.Alias = nRule.Alias,
        obj.ExernelAdressNAT = nRule.ExernelAdressNAT,
        obj.SourceIP = nRule.SourceIP,
        $scope.toEditRule = null,
        $scope.clearForm(),
        $rootScope.globalWait = !0,
        _saveService([obj], function() {
            system.populate(!1),
            $rootScope.showMessage = !0,
            $rootScope.globalWait = !1,
            $rootScope.$digest()
        }))
    }
    ,
    $scope.cancel = function() {
        $scope.toEditRule = null,
        $scope.clearForm()
    }
    ,
    $scope.fields = fields,
    $scope.externalIps = [],
    $scope.internalIps = [];
    var system = {
        populate: function(useCache) {
            fields.rulesList = this.getRulesList(useCache)
        },
        getRulesList: function(useCache) {
            var modelRulesList = NatMapping.populate(!0, useCache);
            return $scope.externalIps = [],
            $scope.internalIps = [],
            $.map(modelRulesList, function(obj) {
                return $scope.internalIps.push({
                    uid: obj.uid,
                    ip: obj.SourceIP
                }),
                $scope.externalIps.push({
                    uid: obj.uid,
                    ip: obj.ExernelAdressNAT
                }),
                obj.edit = obj.uid > 2,
                obj.remove = obj.uid > 2,
                obj
            })
        },
        getDynNatAddr: function() {
            var data = NatMapping.getDynNatAddr();
            $scope.dynamicNatAddress = data
        }
    };
    system.populate(!1),
    system.getDynNatAddr()
}
]),
sboxApp.controller("UPnPController", ["$scope", "$rootScope", "UPnP", function($scope, $rootScope, UPnP) {
    $scope.upnpData = UPnP.getUPnPData(),
    $scope.saveUpnp = function() {
        $scope.submitted = !UPnP.saveUPnPData($scope.upnpData),
        $rootScope.showMessage = !$scope.submitted
    }
}
]),
sboxApp.controller("MassStorageController", ["$scope", "MassStorage", "MyMedia", "$rootScope", "$state", "$stateParams", "ConnectedDevices", "$timeout", "USBDeviceInfo", function($scope, MassStorage, MyMedia, $rootScope, $state, $stateParams, ConnectedDevices, $timeout, USBDeviceInfo) {
    var uid = $stateParams.uid
      , cacheValues = {};
    $scope.uid = uid,
    $scope.populate = function(uuid) {
        var result = MassStorage.getData(uuid, navigator.platform.toLowerCase());
        ConnectedDevices.updateCache();
        var info = ConnectedDevices.getUSBInfo();
        $scope.usbRecognized = info.unrecognized !== !0,
        $scope.supportedDevice = info.overConsumptionDevice !== !0,
        $scope.usbDevices = [],
        $scope.usbDevices = ConnectedDevices.getUSBDevices(),
        $scope.statusUsb = result.statusUsb,
        $scope.statusDLNA = result.statusDLNA,
        $scope.dlnaMediaName = result.dlnaMediaName ? result.dlnaMediaName : result.routerModelName + "-" + result.macAddress,
        $scope.statusSamba = result.statusSamba,
        cacheValues.dlnaMediaName = angular.copy($scope.dlnaMediaName),
        cacheValues.statusUsb = result.statusUsb,
        cacheValues.statusDLNA = result.statusDLNA,
        cacheValues.statusSamba = result.statusSamba,
        $scope.sambaIp = result.sambaIp,
        $scope.sambaHost = result.sambaHost,
        $scope.displaySambaHost = result.displaySambaHost,
        $scope.localDomains = result.localDomains,
        $scope.logicalUid = result.logicalDeviceUid,
        $scope.enableDevice = result.logicalEnable
    }
    ,
    $scope.refresh = function() {
        $rootScope.globalWait = !0,
        $scope.populate(),
        $timeout(function() {
            $rootScope.globalWait = !1
        }, 500)
    }
    ,
    $scope.usbPortStatusChange = function() {
        $scope.statusUsb === !1 && ($scope.statusDLNA = !1,
        $scope.statusSamba = !1)
    }
    ,
    $scope.enableShare = function() {
        var result = !1;
        return result = MyMedia.saveSambaShare($scope.logicalUid, $scope.enableDevice),
        $rootScope.showMessage = result,
        result
    }
    ;
    var hasTimeout, idTimeout, getDataToSave = function() {
        var fieldsToCheck = ["statusUsb", "statusDLNA", "statusSamba", "dlnaMediaName"]
          , data = {};
        for (var i in fieldsToCheck) {
            var item = fieldsToCheck[i];
            cacheValues[item] !== $scope[item] && void 0 !== $scope[item] && null !== $scope[item] && (data[item] = $scope[item])
        }
        return data
    };
    $scope.resetForm = function() {
        $scope.usbControlForm.$setPristine(!0)
    }
    ,
    $scope.saveUSBStorageConfig = function() {
        var data = {
            hostname: $scope.displaySambaHost,
            localDomains: $scope.localDomains
        };
        $rootScope.globalWait = !0;
        var cancelTimeoutSuccess = !1;
        hasTimeout = !1,
        MassStorage.saveUSBStorageConfig(data, {
            success: function() {
                hasTimeout || (cancelTimeoutSuccess = !0,
                $rootScope.showMessage = !0,
                $rootScope.globalWait = !1,
                $scope.resetForm(),
                $rootScope.$digest())
            },
            error: function() {
                hasTimeout || (cancelTimeoutSuccess = !0,
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest())
            }
        }),
        idTimeout = $timeout(function() {
            cancelTimeoutSuccess || (hasTimeout = !0,
            $rootScope.globalWait = !1,
            $rootScope.showMessage = !0,
            $scope.resetForm(),
            $rootScope.$digest())
        }, 3e3)
    }
    ,
    $scope.$on("$destroy", function() {
        $timeout.cancel(idTimeout)
    }),
    $scope.save = function() {
        var data = getDataToSave();
        MassStorage.saveData(data, {
            success: function() {
                $rootScope.showMessage = !0,
                $.extend(cacheValues, data),
                $scope.usbControlForm.$setPristine(!0),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.showMessage = !1,
                $scope.populate(uid),
                $rootScope.$digest()
            }
        })
    }
    ,
    $scope.eject = function(device) {
        var data = {};
        data.uid = device.sysid,
        data.force = !0;
        var promise = USBDeviceInfo.eject(data);
        promise.then(function() {
            $rootScope.globalWait = !0,
            $timeout(function() {
                $state.go($state.current, $stateParams, {
                    reload: !0
                })
            }, 100)
        })
    }
    ,
    $scope.populate(uid)
}
]),
sboxApp.controller("DeviceInformationController", ["$scope", "$timeout", "DeviceInfo", "ConnectedDevices", "$basicInfo", "$rootScope", "$state", "$interval", function($scope, $timeout, DeviceInfo, ConnectedDevices, $basicInfo, $rootScope, $state, $interval) {
    $scope.primaryModeEnable = !1,
    $scope.netparams = !1,
    $scope.statusLevel = {
        OTHER: 0,
        NOT_READY: 1,
        NOT_SYNCHRONIZED: 2,
        PHY_SYNCHRONIZED: 3,
        US_PARAMETERS_ACQUIRED: 4,
        RANGING_COMPLETE: 5,
        IP_COMPLETE: 6,
        TOD_ESTABLISHED: 7,
        SECURITY_ESTABILISHED: 8,
        PARAM_TRANSFER_COMPLETE: 9,
        REGISTRATION_COMPLETE: 10,
        OPERATIONAL: 11,
        ACCESS_DENIED: 12
    },
    $scope.cableModemStatusLevel = 0,
    $scope.uptimeCounter = $.config.modules.myBox.deviceInfo.uptimeCounter === !0,
    $state.current.data && $state.current.data.netparams === !0 && ($scope.netparams = !0);
    var fixDocsisNetworkAccess = function(deviceInfo) {
        if (deviceInfo && deviceInfo.docsis) {
            var zeroOrOne = 0 === deviceInfo.docsis.networkAccessStatus || 1 === deviceInfo.docsis.networkAccessStatus || "0" === deviceInfo.docsis.networkAccessStatus || "1" === deviceInfo.docsis.networkAccessStatus;
            deviceInfo.docsis.networkAccessStatus = zeroOrOne ? parseInt(deviceInfo.docsis.networkAccessStatus) : 0
        }
    };
    $scope.maxLines = $.config.modules.myBox.deviceInfo.maxLines,
    $scope.mapEnable = $.config.checkMapEnable === !0 && ConnectedDevices.verifyMapEnable(),
    $scope.populate = function() {
        if ($basicInfo.login(),
        $scope.isModeGponSupported = $.config.showedpages.isModeGponSupported && $.config.showedpages.isModeGponSupported.enable,
        $scope.primaryModeEnable = $.config.showedpages.primaryMode && $.config.showedpages.primaryMode.enable,
        $scope.deviceInfo = DeviceInfo.getInfo(),
        null !== $scope.deviceInfo.telephones && $.each($scope.deviceInfo.telephones, function(i) {
            void 0 !== $.config.showedpages.isCable && $.config.showedpages.isCable.enable === !0 ? $scope.deviceInfo.telephones[i].Status = "Operational" === $scope.deviceInfo.telephones[i].Status ? $.constants.telephone.status : $.constants.telephone.notregistered : $scope.deviceInfo.telephones[i].Status = $scope.deviceInfo.telephones[i].StatusReason !== $.constants.telephone.statusReason ? $.constants.telephone.notregistered : $.constants.telephone.status
        }),
        $.config.modules.main.dynamicMySagemcomBoxName && ($rootScope.titlePage = $basicInfo.getProductName(),
        $.util.hasFeature("dtagXdsl") ? ($scope.hasXdslNumericFeature = !0,
        "F@st5352 VRX517 B" === $rootScope.titlePage ? ($rootScope.titlePage = "Speedport Plus Bonding",
        $scope.isBondingPlus = !0) : ($rootScope.titlePage = "Speedport Plus",
        $scope.isBondingPlus = !1)) : $scope.isBondingPlus = !1),
        $scope.netparams && $scope.deviceInfo && $scope.deviceInfo.docsis) {
            if ($scope.deviceInfo.docsis.cableModemStatus) {
                var cableModemStatus = $scope.deviceInfo.docsis.cableModemStatus;
                $scope.cableModemStatusLevel = $scope.statusLevel[cableModemStatus] || 0
            }
            $scope.deviceInfo.publicIpv4 = $scope.deviceInfo.docsis.publicIpv4,
            $scope.deviceInfo.publicSubnetMask = $scope.deviceInfo.docsis.publicSubnetMask,
            $scope.deviceInfo.defaultGateway = $scope.deviceInfo.docsis.defaultGateway
        }
        fixDocsisNetworkAccess($scope.deviceInfo),
        $("#deviceinfo").trigger("refreshdeviceinfo"),
        $scope.modelName = $.config.modules.myBox.deviceInfo.modelName,
        $scope.deviceName = $.config.modules.myBox.deviceInfo.deviceName,
        $scope.stbs = ConnectedDevices.getStbs(!0),
        $scope.stbs.length > 0 && ConnectedDevices.fetchManufacturers().then(function() {
            $scope.stbs = ConnectedDevices.getStbs(!0)
        }),
        DeviceInfo.fetchUiVersion(function(response) {
            $scope.deviceInfo.guiVersion = response.uiVersion
        }),
        $basicInfo.logout(),
        $.util.hasFeature("memoryField") && $interval(function() {
            $scope.deviceInfo.memoryUsage = DeviceInfo.getMemoryUsage(),
            $scope.deviceInfo.memoryAverage = DeviceInfo.getMemoryAverage()
        }, 1e3)
    }
    ,
    $scope.refreshContent = function() {
        $scope.loading = !0,
        $timeout(function() {
            $scope.populate(),
            $scope.loading = !1,
            $scope.$digest()
        }, 500)
    }
    ,
    $scope.populate(),
    $scope.$emit("updateStatusIconTop")
}
]),
sboxApp.controller("MaintenanceResetController", ["$rootScope", "$scope", "MaintenanceReset", "$http", "$location", "$timeout", "$window", "MaintenanceBackup", "CableModem", function($rootScope, $scope, MaintenanceReset, $http, $location, $timeout, $window, MaintenanceBackup, CableModem) {
    $scope.popupTitle = "",
    $scope.favoriteFrequency = "",
    $scope.status = !1,
    $scope.typeUpgrade = $.constants.firmwareUpgrade.SYSTEM,
    $scope.firmwareVersion = MaintenanceBackup.getFirmwareVersion(),
    $scope.reinitialize = function() {
        $scope.popupTitle = "reset",
        $scope.submitted = !MaintenanceReset.reinitialize(),
        $timeout(function() {
            validRestoreFile ? ($rootScope.globalWait = !0,
            $timeout($scope.checkLoading, 3e4)) : ($("#pleasewait-modal").hide(),
            $(".reveal-modal-bg").hide(),
            $("#errorRestoreFile").show(),
            $rootScope.globalWait = !1,
            $("#restore-modal a.close-reveal-modal").trigger("click"))
        }, 4e3)
    }
    ,
    $scope.reboot = function() {
        $scope.popupTitle = "restart",
        $scope.submitted = !MaintenanceReset.reboot(),
        $timeout($scope.checkLoading, 1e4)
    }
    ,
    $scope.checkLoading = function(isOff) {
        $scope.status = !1,
        $http({
            method: "GET",
            url: "/",
            timeout: 3e4
        }).success(function(data, status) {
            200 === status && isOff === !0 ? ($scope.status = !0,
            $("#pleasewait-modal a.close-reveal-modal").trigger("click"),
            $window.location.href = "/") : ($scope.status = !1,
            $timeout(function() {
                $scope.checkLoading(isOff)
            }, 1e4))
        }).error(function() {
            $scope.status = !1,
            $timeout(function() {
                $scope.checkLoading(!0)
            }, 1e4)
        })
    }
    ,
    $scope.backup = function() {
        MaintenanceBackup.backupConfiguration()
    }
    ,
    $scope.restore = function() {
        MaintenanceBackup.restoreConfiguration("#fileRestore"),
        $timeout($scope.checkLoading, 3e4)
    }
    ,
    $scope.firmwareUpgrade = function() {
        MaintenanceBackup.firmwareUpgrade("#fileUpgrade", $scope.typeUpgrade),
        $timeout($scope.checkLoading, 1e4)
    }
    ,
    $scope.getFavoriteFrequency = function() {
        CableModem.updateCache(),
        $scope.favoriteFrequency = CableModem.getConfigurationData()
    }
    ,
    $scope.applyFavoriteFrequency = function() {
        $rootScope.globalWait = !0,
        CableModem.applyFavoriteFrequency($scope.favoriteFrequency, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1
            }
        })
    }
    ,
    $.config.modules.showConnectionFrequency && $scope.getFavoriteFrequency()
}
]),
sboxApp.controller("MaintenanceMainController", ["$scope", function($scope) {
    $scope.horizontalTabs = $.config.modules.myBox.maintenance.horizontalTabs || !1,
    $scope.logTabsEnabled = $.config.showedpages.systemLog.enable + $.config.showedpages.upnplog.enable + $.config.showedpages.operatorlog.enable + $.config.showedpages.securitylog.enable
}
]),
sboxApp.controller("MaintenanceInternetUtilitiesController", ["$scope", "$rootScope", "MaintenanceInternetUtilities", "$stateParams", "WanSettings", "$timeout", function($scope, $rootScope, MaintenanceInternetUtilities, $stateParams, WanSettings, $timeout) {
    $scope.tool = $stateParams.tool,
    $scope.selectedOption = $stateParams.tool || "",
    $scope.submitted = !1,
    $scope.guiError = {},
    $scope.hasDestinationInTraceRoute = $.util.hasFeature("hasDestinationInTraceRoute"),
    $scope.pingInterfaceOptions = $.util.getModuleConfig("maintenance.utilities.pingInterfaceOptions", $.constants.pingInterfaceOptions),
    $scope.isIpv4Only = function() {
        return "DSLITE" !== $scope.wanProvisioningMode && "DUAL-STACK" !== $scope.wanProvisioningMode
    }
    ,
    $scope.allowSelectProtocol = function() {
        var featureEnabled = $.util.checkConfig($.config.showedpages.internetUtilitiesSelectProtocol, !0)
          , isPing = "Ping" === $scope.selectedOption
          , isTraceroute = "Traceroute" === $scope.selectedOption
          , shouldAppear = !$scope.isIpv4Only() && (isPing || isTraceroute);
        return featureEnabled && shouldAppear
    }
    ,
    $scope.currentTracertProcess = 0,
    $scope.wanProvisioningMode = null,
    $scope.field = {
        destination: "",
        selectedInterface: "",
        count: "",
        hops: 30
    };
    var populate = function() {
        $scope.tr69 = WanSettings.getTr69Settings(),
        $scope.wanProvisioningMode = WanSettings.getWanProvisioningMode(),
        $scope.wanProvisioningMode = $scope.wanProvisioningMode ? $scope.wanProvisioningMode : "",
        $scope.isIpv4Only() || ($scope.selectedProtocol = "IPV4")
    };
    $scope.saveTR69 = function() {
        var saveTR69Settings = $scope.tr69;
        $scope.guiError.urlInvalid = !$.util.checkUrl2(saveTR69Settings.url),
        $scope.guiError.urlInvalid || WanSettings.setTr69Settings(saveTR69Settings, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.submitted = !1,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
    ;
    var pingCallback = function(arrayResult) {
        $scope.pingInfo = arrayResult || {},
        "Active" !== $scope.pingInfo.Status && ($scope.pingInfo.RoundTripAvg = 0,
        $scope.pingInfo.RoundTripMax = 0,
        $scope.pingInfo.RoundTripMin = 0),
        $scope.pingInfo.PacketsTransmitted = $scope.pingInfo.PacketsTransmitted || 0,
        $scope.pingInfo.PacketsReceived = $scope.pingInfo.PacketsReceived || 0,
        $scope.field.count && ($scope.pingInfo.PerCentLoss = Math.round(100 * ($scope.field.count - $scope.pingInfo.PacketsReceived) / $scope.field.count)),
        $timeout(function() {
            $scope.$apply()
        })
    }
      , tracertCallback = function(arrayResult, currentTracertProcess) {
        ($scope.currentTracertProcess === currentTracertProcess || void 0 === currentTracertProcess) && ($scope.tracertInfo += arrayResult.EventString,
        $timeout(function() {
            $scope.$apply()
        }))
    }
      , dnsqueryCallback = function(arrayResult) {
        $scope.dnsqueryInfo = arrayResult,
        $scope.$apply()
    };
    $scope.beforeSave = function() {
        $scope.formInternetUtilities.inputDestination && ($scope.formInternetUtilities.inputDestination.$setValidity("invalidDestination", !0),
        $scope.formInternetUtilities.inputDestination.$setValidity("invalidDestination", "" !== $scope.field.destination))
    }
    ,
    $scope.test = function() {
        if ($scope.beforeSave(),
        $scope.submitted = !0,
        $scope.formInternetUtilities.$valid) {
            var protocol = "";
            switch ($scope.allowSelectProtocol() && (protocol = $scope.selectedProtocol),
            $scope.selectedOption) {
            case "Ping":
                $scope.pingInfo = null,
                $("#ping-modal").foundation("reveal", "open");
                var validRange = $scope.validateRangePreSet($scope.field.destination)
                  , interfaceLan = validRange ? "IP_BR_LAN" : ""
                  , type = "";
                $.util.hasFeature("pingInterface") && (interfaceLan = $scope.field.selectedInterface),
                MaintenanceInternetUtilities.ping($scope.field.destination, $scope.field.count, type, pingCallback, $scope.wanProvisioningMode, protocol, interfaceLan);
                break;
            case "Traceroute":
                $scope.currentTracertProcess = "TRACEROUTE_PROCCESS_" + Math.abs(Math.floor(1e4 * Math.random() + 1)),
                $scope.tracertInfo = "",
                $("#tracert-modal").foundation("reveal", "open"),
                MaintenanceInternetUtilities.traceroute($scope.field.destination, $scope.field.hops, tracertCallback, $scope.currentTracertProcess, $scope.wanProvisioningMode, protocol);
                break;
            default:
            case "DNS Query":
                $scope.dnsqueryInfo = null,
                $("#dnsquery-modal").foundation("reveal", "open"),
                MaintenanceInternetUtilities.dnsquery($scope.field.destination, dnsqueryCallback)
            }
            $scope.submitted = !1
        }
    }
    ,
    $scope.field.hops = 30,
    $scope.clear = function() {
        $scope.field.count = null,
        $scope.field.hops = 30,
        $scope.formInternetUtilities.$setPristine()
    }
    ,
    $scope.validateRangePreSet = function() {
        $scope.rangePreSets = [{
            gatewayIp: "10.0.0.0",
            subnetMask: "255.0.0.0"
        }, {
            gatewayIp: "192.168.0.0",
            subnetMask: "255.255.0.0"
        }, {
            gatewayIp: "172.16.0.0",
            subnetMask: "255.240.0.0"
        }];
        for (var ip = $scope.field.destination, result = !1, i = 0; i < $scope.rangePreSets.length; i++) {
            var subnetMask = $scope.rangePreSets[i].subnetMask
              , range = $.util.checkIfIpIsFromNetwork({
                gateway: $scope.rangePreSets[i].gatewayIp,
                mask: subnetMask
            }, ip);
            range && (result = !0)
        }
        return result
    }
    ,
    populate()
}
]),
sboxApp.controller("MaintenanceHealthCheckController", ["$scope", "MaintenanceInternetUtilities", "$timeout", function($scope, MaintenanceInternetUtilities, $timeout) {
    $scope.waitStatus = {
        dhcp: !1,
        ip: !1,
        testCable: !1
    },
    $scope.dhcpServerList = function() {
        $scope.dhcpConflict = null,
        $scope.waitStatus.dhcp = !0,
        MaintenanceInternetUtilities.dhcpServerList(function(data) {
            var ipaddr = data.IpServerWorks;
            ipaddr.length > 1 && "" !== ipaddr[0] ? ($scope.dhcpConflict = !0,
            $scope.ipList = data.IpServerWorks,
            $scope.macList = data.MacServerWorks) : $scope.dhcpConflict = !1,
            $scope.waitStatus.dhcp = !1,
            $scope.$digest()
        }, function() {
            $scope.dhcpConflict = null,
            $scope.waitStatus.dhcp = !1,
            $scope.$digest()
        })
    }
    ,
    $scope.arping = function() {
        $scope.ipConflict = null,
        $scope.waitStatus.ip = !0,
        MaintenanceInternetUtilities.arping(function(data) {
            var ipaddr = data.IPAddress;
            ipaddr.length > 0 && "" !== ipaddr[0] ? ($scope.ipConflict = !0,
            $scope.ipListConflict = data.ShowList) : $scope.ipConflict = !1,
            $scope.waitStatus.ip = !1,
            $scope.$digest()
        }, function() {
            $scope.ipConflict = null,
            $scope.waitStatus.ip = !1,
            $scope.$digest()
        })
    }
    ,
    $scope.showTestCableResult = !1,
    $scope.testLanCables = function() {
        $scope.ethernetPorts = [],
        $scope.waitStatus.testCable = !0,
        MaintenanceInternetUtilities.testCableResult(function(results) {
            var ports = ["port1", "port2", "port3", "port4"]
              , isFTTH = "FTTH" === results.interfaceType;
            for (var index in ports) {
                var ngClasses = {
                    "medium-3": !isFTTH,
                    "medium-2": isFTTH,
                    end: 3 === parseInt(index, null),
                    "medium-offset-1": 0 === parseInt(index, null) && isFTTH
                }
                  , port = ports[index]
                  , styleClass = "status-disconected"
                  , status = "UP" === results[port].status
                  , showLength = !1
                  , showInfo = !1
                  , length = 0
                  , open = !1
                  , title = "OK";
                status ? styleClass = "status-connected" : (open = "OPEN" === results[port].diagnostics.cableStatus,
                open ? (styleClass = "status-error",
                showLength = !0,
                length = results[port].diagnostics.cableLength,
                title = "open") : title = "disconnected"),
                $scope.ethernetPorts.push({
                    status: status,
                    styleClass: styleClass,
                    open: open,
                    showLength: showLength,
                    length: length,
                    showInfo: showInfo,
                    title: title,
                    ngClasses: ngClasses
                })
            }
            $scope.waitStatus.testCable = !1
        }),
        $scope.progress = !0,
        $scope.showTestCableResult = !0
    }
    ,
    $scope.startAllTests = function() {
        $scope.dhcpServerList(),
        $scope.testLanCables(),
        $scope.ipConflict = null,
        $scope.waitStatus.ip = !0,
        $timeout($scope.arping, 3e3)
    }
}
]),
sboxApp.controller("MaintenanceSystemLogController", ["$scope", "$rootScope", "SystemLog", "$state", "$basicInfo", function($scope, $rootScope, SystemLog, $state, $basicInfo) {
    var logType = null;
    $state && $state.current && $state.current.data && (logType = $state.current.data.type),
    $scope.logType = logType,
    $scope.predicate = "val";
    var _getLog = function(logType, severity) {
        $scope.originalSize = 0,
        SystemLog.getUriLog(logType, function(data) {
            var downloadUri = data;
            return downloadUri ? void SystemLog.getLog(downloadUri, logType, severity).then(function(data) {
                $scope.logList = data,
                $scope.logListOriginal = angular.copy($scope.logList),
                $scope.originalSize = data.length,
                $rootScope.globalWait = !1
            }, function() {
                $scope.logList = [],
                $rootScope.globalWait = !1
            }) : ($scope.logList = [],
            void ($rootScope.globalWait = !1))
        }, function() {
            $scope.logList = []
        })
    };
    $scope.populate = function() {
        switch ($rootScope.globalWait = !0,
        $scope.selectedSeverity = $.constants.logSeverity[0].val,
        $scope.severityOptions = $.config.modules.logs && $.config.modules.logs.logSeverity ? $.config.modules.logs.logSeverity : $.constants.logSeverity,
        logType) {
        case "upnp":
            SystemLog.getUpnpLogs(function(data) {
                $scope.logList = data,
                $scope.$digest()
            }, function() {
                $scope.logList = []
            });
            break;
        case "operator":
            $scope.selectedSeverity = SystemLog.getLogLevel(),
            _getLog(logType, $scope.selectedSeverity);
            break;
        case "eventWifi":
            _getLog(logType);
            break;
        default:
            SystemLog.setLogLevel($.constants.logSeverity[0].val),
            $scope.selectedSeverity = $.constants.logSeverity[0].val,
            $scope.logList = SystemLog.getSystemLogs(null, logType)
        }
    }
    ,
    $scope.applyFilter = function() {
        $rootScope.globalWait = !0,
        "operator" === logType ? (SystemLog.setLogLevel($scope.selectedSeverity),
        _getLog(logType, $scope.selectedSeverity),
        $rootScope.showMessage = !0) : (SystemLog.setLogLevel($scope.selectedSeverity),
        $scope.logList = SystemLog.getSystemLogs($scope.selectedSeverity, logType),
        $rootScope.globalWait = !1),
        $scope.currentPage = 0
    }
    ,
    $scope.populate(),
    $scope.currentPage = 0,
    $scope.originalSize = 0,
    $scope.paginationSettings = $.config.modules.logs && $.config.modules.logs.paginationSettings ? $.config.modules.logs.paginationSettings : !1,
    $scope.enablePagination = $scope.paginationSettings && $scope.paginationSettings.enable,
    $scope.pageSize = $.config.modules.logs && $.config.modules.logs.paginationSettings ? $scope.paginationSettings.defaultPageSize : 20,
    $scope.exportData = $.config.modules.logs && $.config.modules.logs.exportData,
    $scope.numberOfPages = function() {
        return $scope.logList ? Math.ceil($scope.logList.length / $scope.pageSize) : void 0
    }
    ,
    $scope.exportLogs = function() {
        var dataLogs = []
          , Logs = [$.globals.dateTime[$basicInfo.getLanguage()], $.globals.severity[$basicInfo.getLanguage()], $.globals.module[$basicInfo.getLanguage()], $.globals.message[$basicInfo.getLanguage()]];
        dataLogs.push(Logs),
        $scope.logList.forEach(function(infoLog, index) {
            var Logs = [];
            index = index,
            Logs.push(infoLog.date),
            Logs.push($.globals[infoLog.description][$basicInfo.getLanguage()]),
            Logs.push(infoLog.module),
            Logs.push(infoLog.message),
            dataLogs.push(Logs)
        });
        var csvContent = "data:text/csv;charset=utf-8,"
          , now = new Date
          , mois = now.getMonth() + 1
          , csvTitle = "log_" + $scope.severityOptions[$scope.selectedSeverity].type + "_" + now.getDate() + "-" + mois + "-" + now.getFullYear() + ".csv";
        dataLogs.forEach(function(infoArray, index) {
            var dataString = infoArray.join(",");
            csvContent += index < dataLogs.length ? dataString + "\n" : dataString
        });
        var encodedUri = encodeURI(csvContent);
        if (navigator.msSaveBlob) {
            var blob = new Blob(["A,B\nC,D"],{
                type: "text/csv"
            });
            navigator.msSaveOrOpenBlob(blob, "strings.csv")
        } else {
            var link = document.createElement("a");
            link.setAttribute("href", encodedUri),
            link.setAttribute("download", csvTitle),
            document.body.appendChild(link),
            link.click()
        }
    }
    ,
    $scope.updatePage = function(sum) {
        (-1 === sum && $scope.currentPage > 0 || 1 === sum && $scope.currentPage < $scope.numberOfPages() - 1) && ($scope.currentPage += sum,
        $(document).scrollTop(0))
    }
    ,
    $scope.pageFirstLast = function(pos) {
        "first" === pos ? ($scope.currentPage = 0,
        $(document).scrollTop(0)) : ($scope.currentPage = $scope.numberOfPages() - 1,
        $(document).scrollTop(0))
    }
}
]),
sboxApp.controller("AccessControlUserController", ["$scope", "User", "Auth", "$rootScope", "$timeout", function($scope, User, Auth, $rootScope, $timeout) {
    var data = {
        status: !1,
        uid: null,
        fullName: "",
        userNameSelected: Auth.user.username,
        userName: "",
        password: "",
        confirmPassword: "",
        oldPassword: "",
        required: "required"
    }
      , _successCallback = function() {
        $rootScope.globalWait = !1,
        $scope.submitted = !1,
        $rootScope.showMessage = !0,
        $scope.accessControlUser.$setPristine(),
        $scope.update = !1,
        $scope.populate(),
        $scope.cancel(),
        $scope.$digest()
    }
      , _updateCallback = function() {
        var promise = User.changePassword($scope.user.userName, $scope.user.oldPassword, $scope.user.password);
        promise.then(_successCallback, _errorCallback)
    }
      , _errorCallback = function() {
        $rootScope.globalWait = !1,
        $rootScope.customMessage = "userErrorMessage",
        $rootScope.showMessage = !1,
        $scope.accessControlUser.$pristine = !1
    };
    $scope.submitted = !1,
    $scope.update = !1,
    $scope.showPasswordsText = !1,
    $scope.simpleUserPage = $.config.modules.simpleUserPage,
    $scope.user = angular.copy(data),
    $scope.loggedUser = User.getLoggedUser(),
    $scope.populate = function() {
        $scope.userList = User.searchUsers()
    }
    ,
    $scope.populate(),
    $scope.findUser = function() {
        return $.grep($scope.userList, function(e) {
            return e.Login === $scope.user.userName
        })
    }
    ,
    $scope.saveUser = function() {
        if ($("input").removeClass("ng-pristine"),
        $scope.submitted = !0,
        $scope.isExist = $scope.findUser().length > 0,
        $scope.accessControlUser.$valid) {
            var userData = {
                uid: $scope.user.uid,
                enable: !0,
                lastName: $scope.user.fullName,
                userName: $scope.user.userName,
                password: $scope.user.password,
                oldPassword: $scope.user.oldPassword,
                confirmPassword: $scope.user.confirmPassword
            };
            userData.uid ? $scope.isExist && $scope.userNameToUpdate !== $scope.user.userName || ($scope.isExist = !1,
            $rootScope.globalWait = !0,
            User.updateUser(userData, {
                success: _updateCallback,
                error: _errorCallback
            })) : $scope.isExist || ($rootScope.globalWait = !0,
            User.insertUser(userData, {
                success: _successCallback,
                error: _errorCallback
            }))
        }
    }
    ,
    $scope.cancel = function() {
        $scope.user = angular.copy(data),
        $scope.accessControlUser.$setPristine(),
        $scope.update && ($scope.update = !1)
    }
    ,
    $scope.edit = function(user) {
        $scope.user.uid = user.uid,
        $scope.user.fullName = user.LastName,
        $scope.user.userName = user.Login,
        $scope.userNameToUpdate = user.Login,
        $scope.update = !0
    }
    ,
    $scope.prepareDelete = function(data) {
        $scope.toDelete = angular.copy(data)
    }
    ,
    $scope.deleteUser = function() {
        return $rootScope.globalWait = !0,
        $scope.toDelete ? void User.deleteUser($scope.toDelete, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.populate()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1
            }
        }) : ($rootScope.globalWait = !1,
        void ($rootScope.showMessage = !1))
    }
    ;
    var globalWaitModal = function(show) {
        $timeout(function() {
            $rootScope.globalWait = show,
            $rootScope.$digest()
        })
    };
    $scope.changePassword = function() {
        if ($("input").removeClass("ng-pristine"),
        $scope.submitted = !0,
        $scope.accessControlUser.$valid) {
            var promise = User.changePassword($scope.user.userNameSelected, $scope.user.oldPassword, $scope.user.password)
              , wasResolved = !1;
            globalWaitModal(!0);
            var _onSuccess = function() {
                wasResolved || ($.config.modules.forceReloadPage && $.xmo.logout(),
                wasResolved = !0,
                $scope.submitted = !1,
                $rootScope.showMessage = !0,
                $scope.accessControlUser.$setPristine(),
                $(".clickMe").click(),
                globalWaitModal(!1))
            }
              , _onError = function() {
                wasResolved || (wasResolved = !0,
                $rootScope.customMessage = "userErrorMessage",
                $rootScope.showMessage = !1,
                $scope.accessControlUser.$pristine = !1,
                $timeout.cancel(idTimeout),
                globalWaitModal(!1))
            }
              , idTimeout = $timeout(_onSuccess, 8e3);
            promise.then(_onSuccess, _onError)
        }
    }
    ,
    $scope.allowDeleteUser = function(login) {
        return -1 === $.inArray(login, $.config.allowedUsers)
    }
}
]),
sboxApp.controller("DdnsController", ["$scope", "$rootScope", "DynamicDNS", function($scope, $rootScope, DynamicDNS) {
    $scope.showIpv4Address = $.config.modules.dyndns.showIpv4Address === !0,
    $scope.populate = function() {
        var data = DynamicDNS.populate();
        $scope.ddnsEnable = data.enable,
        $scope.ddnsStatus = data.status,
        $scope.selectItems = data.select,
        $scope.selectOption = data.provider.replace(/['"]*/g, ""),
        $scope.ddnsUserName = data.username,
        $scope.ddnsPassword = data.password,
        $scope.ddnsHostName = data.hostname,
        $scope.ddnsServer = data.server.name,
        $scope.ddnsPort = data.server.port,
        $scope.ddnsRequest = data.server.request,
        $scope.ddnsAuthentication = "BASIC" === data.server.authentication ? !0 : !1,
        $scope.ddnsUpdateInterval = data.server.update,
        $scope.ddnsRetryInterval = data.server.retry,
        $scope.ddnsMaxRetries = data.server.max,
        $scope.ipv4Address = data.ipv4Address,
        DynamicDNS.checkStatus(function(result) {
            "string" == typeof result && ($scope.ddnsStatus = result)
        })
    }
    ,
    $scope.populate();
    var originalRefreshPage = $.gui.refreshPage;
    $.gui.refreshPage = function() {}
    ,
    $scope.$on("$destroy", function() {
        $.gui.refreshPage = originalRefreshPage,
        DynamicDNS.deleteNotification()
    }),
    $scope.save = function() {
        if ($("input").removeClass("ng-pristine"),
        $scope.submitted = !0,
        $scope.ddnsForm.$valid) {
            $rootScope.globalWait = !0;
            var dataSave = {};
            dataSave.server = {
                name: "",
                port: "",
                request: "",
                authentication: "",
                max: "",
                retry: "",
                update: ""
            },
            dataSave.enable = $scope.ddnsEnable,
            dataSave.status = $scope.ddnsStatus,
            dataSave.username = $scope.ddnsUserName,
            dataSave.password = $scope.ddnsPassword,
            dataSave.hostname = $scope.ddnsHostName,
            dataSave.provider = $scope.selectOption,
            "Custom" === $scope.selectOption && (dataSave.server.name = $scope.ddnsServer,
            dataSave.server.port = $scope.ddnsPort,
            dataSave.server.request = $scope.ddnsRequest,
            dataSave.server.authentication = $scope.ddnsAuthentication === !0 ? "BASIC" : "NONE",
            dataSave.server.max = $scope.ddnsMaxRetries,
            dataSave.server.retry = $scope.ddnsRetryInterval,
            dataSave.server.update = $scope.ddnsUpdateInterval),
            DynamicDNS.save(dataSave, {
                success: function() {
                    $rootScope.showMessage = !0,
                    $rootScope.globalWait = !1,
                    $scope.ddnsForm.$setPristine(!0),
                    $scope.submitted = !1,
                    $rootScope.$digest()
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $rootScope.$digest()
                }
            })
        }
    }
}
]),
sboxApp.controller("PortForwardingController", ["$scope", "$rootScope", "PortForwarding", "ConnectedDevices", "UPnP", "$stateParams", "CheckFeature", "Statistics", "Dhcp", "$timeout", function($scope, $rootScope, PortForwarding, ConnectedDevices, UPnP, $stateParams, CheckFeature, Statistics, Dhcp, $timeout) {
    $scope.isRIPv2Enabled = $.config.hasRIPv2 === !0 && Statistics.isRIPv2Enable(),
    $scope.displayExternalAddress = $.config.modules.portForwarding.maintainExternalAddress === !0,
    "user.simple.services.portForwarding.addRule" === $rootScope.currentRouteName ? $scope.services = !0 : $scope.services = !1;
    var uid = parseInt($stateParams.uid, 10)
      , validationData = PortForwarding.getValidationData()
      , fieldsUpnp = UPnP.getUPnPData();
    fieldsUpnp.statusOld = fieldsUpnp.status,
    $scope.natButtonAvailable = function() {
        return !!$.config.showedpages.portForwardNatButton && $.config.showedpages.portForwardNatButton.enable === !0
    }
    ,
    $scope.removeUPNPIGd = $.util.getModuleConfig("accessControl.removeUPNPIGd", !1),
    $scope.removeUPNPRules = $.config.modules.accessControl.removeUPNPRules,
    $scope.checkValidMAPTPortRange = $.config.modules.portForwarding.checkValidMAPTPortRange,
    $scope.onChangeSave = $.config.onChangeSave;
    var fields = {
        required: "required",
        rulesList: [],
        upnpList: [],
        gamesList: [],
        uid: "",
        nDescription: "",
        nService: "",
        nProtocol: "TCP",
        nRemoteHost: "",
        nInternalClient: "",
        ipFilter: "",
        nExternalPort: "",
        nInternalPort: "",
        isDisable: !0,
        listServices: $.constants.services
    }
      , resetErrors = function() {
        $scope.AddRuleForm.externalHost.$setValidity("externalHost", !0),
        $scope.AddRuleForm.internalClient.$setValidity("internalClient", !0),
        $scope.AddRuleForm.externalPort.$setValidity("externalPort", !0),
        $scope.AddRuleForm.externalPort.$setValidity("externalMAPTRangePort", !0),
        $scope.AddRuleForm.internalPort.$setValidity("internalPort", !0),
        $scope.AddRuleForm.externalPort.$setValidity("portConflict", !0),
        $scope.AddRuleForm.serviceName.$setValidity("serviceName", !0)
    }
      , validateAddRule = function(rule) {
        resetErrors();
        var valid = !0;
        "*" === rule.RemoteHost.trim() || "" === rule.RemoteHost.trim() || $.util.checkIP(rule.RemoteHost) || ($scope.AddRuleForm.externalHost.$setValidity("externalHost", !1),
        valid = !1),
        $scope.isRIPv2Enabled ? $.util.checkIP(rule.InternalClient) || $scope.loadedFromDevice || ($scope.AddRuleForm.internalClient.$setValidity("internalClient", !1),
        valid = !1) : $.util.checkLanIp(rule.InternalClient, validationData.lanIp, validationData.subnet) || $scope.loadedFromDevice || ($scope.AddRuleForm.internalClient.$setValidity("internalClient", !1),
        valid = !1),
        rule.Service || (rule.Service = "NONE"),
        "" === rule.Description && "NONE" === rule.Service && ($scope.AddRuleForm.serviceName.$setValidity("serviceName", !1),
        valid = !1),
        rule.Alias || (rule.Alias = ""),
        (!$.util.checkPort(rule.ExternalPort) || !$.util.checkPort(rule.ExternalPortEndRange) || parseInt(rule.ExternalPortEndRange, 10) > 0 && parseInt(rule.ExternalPort, 10) > parseInt(rule.ExternalPortEndRange, 10)) && ($scope.AddRuleForm.externalPort.$setValidity("externalPort", !1),
        valid = !1),
        (!$.util.checkPort(rule.InternalPort) || void 0 !== validationData.tr69 && null !== validationData.tr69 && rule.InternalPort.toString() === validationData.tr69.toString()) && ($scope.AddRuleForm.internalPort.$setValidity("internalPort", !1),
        valid = !1);
        var comparableRules = fields.rulesList.concat(fields.gamesList);
        return $.util.portConflict(rule, comparableRules) || ($scope.AddRuleForm.externalPort.$setValidity("portConflict", !1),
        valid = !1),
        $scope.checkValidMAPTPortRange && fields.portSets && !$.util.isValidMAPTPortRange(rule, fields.portSets) && ($scope.AddRuleForm.externalPort.$setValidity("externalMAPTRangePort", !1),
        valid = !1),
        valid
    }
      , getTranslatedRule = function() {
        var nRule = PortForwarding.getModel();
        nRule.Description = fields.nDescription,
        nRule.Protocol = fields.nProtocol,
        nRule.Service = fields.nService,
        nRule.RemoteHost = fields.nRemoteHost,
        nRule.InternalClient = fields.nInternalClient,
        $scope.displayExternalAddress && $scope.isRIPv2Enabled && (nRule.ExternalAddress = fields.nExternalAddress);
        var range = fields.nExternalPort.toString().split("-");
        return nRule.ExternalPortEndRange = void 0 !== range[1] ? range[1] : 0,
        nRule.ExternalPort = range[0],
        range = fields.nInternalPort.toString().split("-"),
        nRule.InternalPort = isNaN(1 * range[0]) ? -1 : range[0],
        nRule
    };
    if ($scope.changeService = function() {
        if (fields.nService)
            fields.nInternalPort = $.constants.services[fields.nService].internalPort,
            fields.nExternalPort = $.constants.services[fields.nService].externalPort,
            fields.nProtocol = $.constants.services[fields.nService].protocol;
        else {
            var m = PortForwarding.getModel();
            fields.nInternalPort = m.InternalPort,
            fields.nExternalPort = m.ExternalPort,
            fields.nProtocol = "TCP"
        }
        resetErrors()
    }
    ,
    uid) {
        var selectedDevice = ConnectedDevices.getDeviceById(uid);
        fields.nInternalClient = selectedDevice[0].ipAddress,
        fields.ipFilter = selectedDevice[0].ipAddress,
        $scope.loadedFromDevice = !0
    } else
        $scope.loadedFromDevice = !1;
    $scope.clearForm = function() {
        fields.nDescription = "",
        fields.nService = "",
        fields.nProtocol = "TCP",
        fields.nRemoteHost = "",
        $scope.displayExternalAddress && $scope.isRIPv2Enabled && (fields.nExternalAddress = ""),
        fields.nExternalPort = "",
        fields.nInternalPort = "",
        $scope.loadedFromDevice || (fields.nInternalClient = ""),
        resetErrors(),
        $scope.AddRuleForm.$setPristine(!0)
    }
    ,
    $scope.addRule = function() {
        var nRule = getTranslatedRule()
          , o = validateAddRule(nRule);
        return o && ($rootScope.globalWait = !0,
        "*" === nRule.RemoteHost.trim() && (nRule.RemoteHost = ""),
        PortForwarding.save([nRule], {
            success: function() {
                $rootScope.showMessage = !0,
                $rootScope.globalWait = !1,
                $scope.clearForm(),
                system.populate(!1),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.showMessage = !1,
                $rootScope.globalWait = !1,
                $rootScope.$digest()
            }
        })),
        o
    }
    ,
    $scope.selectedRule = null,
    $scope.toEditRule = null,
    $scope.selectRule = function(leRule) {
        $scope.selectedRule = leRule
    }
    ,
    $scope.cancelRemove = function() {
        $scope.selectedRule = null
    }
    ,
    $scope.saveNat = function() {
        $scope.natButtonAvailable() && Dhcp.setNatEnable($scope.natEnable, {
            success: function() {
                system.populate(!1),
                $timeout(function() {
                    $rootScope.showMessage = !0,
                    $rootScope.$digest()
                })
            },
            error: function() {
                $timeout(function() {
                    $rootScope.showMessage = !1,
                    $rootScope.$digest()
                })
            }
        })
    }
    ,
    $scope.saveUpnp = function() {
        $scope.fieldsUpnp.status !== $scope.fieldsUpnp.statusOld && $scope.removeUPNPRules ? $scope.submitted = !UPnP.saveUPnPData($scope.fieldsUpnp, $scope.fields.upnpList) : $scope.submitted = !UPnP.saveUPnPData($scope.fieldsUpnp),
        system.populate(!1),
        $scope.fieldsUpnp.statusOld = $scope.fieldsUpnp.status,
        $rootScope.showMessage = !$scope.submitted
    }
    ,
    $scope.warnsUpnp = function() {
        $scope.UpnpRuleForm.$valid && ($scope.removeUPNPRules || $scope.fieldsUpnp.status ? $("#upnpConfirm").click() : $scope.saveUpnp())
    }
    ,
    $scope.cancelUpnp = function() {
        $scope.fieldsUpnp.status = !$scope.fieldsUpnp.status
    }
    ,
    $scope.confirmRemove = function() {
        $scope.selectedRule && ($scope.selectedRule.toBeDeleted = !0,
        PortForwarding.remove([$scope.selectedRule]) ? ($rootScope.showMessage = !0,
        $rootScope.deleted = !0,
        system.populate(!1)) : $rootScope.showMessage = !1),
        $scope.cancelRemove()
    }
    ,
    $scope.editRule = function(obj) {
        $(document).scrollTop(0),
        $scope.toEditRule = obj,
        "NONE" === obj.Service ? fields.nService = "" : fields.nService = obj.Service,
        fields.nDescription = obj.Description,
        fields.nProtocol = obj.Protocol,
        fields.nRemoteHost = "" === obj.RemoteHost ? "*" : obj.RemoteHost,
        fields.nInternalClient = obj.InternalClient,
        $scope.displayExternalAddress && $scope.isRIPv2Enabled && (fields.nExternalAddress = obj.ExternalAddress),
        fields.nExternalPort = obj.ExternalPort,
        obj.ExternalPortEndRange > 0 && (fields.nExternalPort += "-" + obj.ExternalPortEndRange),
        fields.nInternalPort = obj.InternalPort
    }
    ;
    var commonApply = function(saveObj) {
        0 !== saveObj.length && ($rootScope.globalWait = !0,
        PortForwarding.save(saveObj, {
            success: function() {
                $rootScope.showMessage = !0,
                $rootScope.globalWait = !1,
                $scope.clearForm(),
                system.populate(!1),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.showMessage = !1,
                $rootScope.globalWait = !1,
                $rootScope.$digest()
            }
        }))
    };
    $scope.enableDisableRule = function(obj) {
        $.config.onChangeSave && commonApply([obj])
    }
    ,
    $scope.apply = function() {
        $.config.onChangeSave || commonApply(fields.rulesList)
    }
    ,
    $scope.updateRule = function(obj) {
        var nRule = getTranslatedRule();
        nRule.indexEdit = $.inArray(obj, fields.rulesList);
        var valid = validateAddRule(nRule);
        valid && (obj.Service = nRule.Service,
        obj.Protocol = nRule.Protocol,
        obj.Description = nRule.Description,
        "*" === nRule.RemoteHost.trim() ? obj.RemoteHost = "" : obj.RemoteHost = nRule.RemoteHost,
        obj.InternalClient = nRule.InternalClient,
        obj.ExternalPort = parseInt(nRule.ExternalPort, 10),
        $scope.displayExternalAddress && $scope.isRIPv2Enabled && (obj.ExternalAddress = nRule.ExternalAddress),
        obj.ExternalPortEndRange = parseInt(nRule.ExternalPortEndRange, 10),
        obj.InternalPort = nRule.InternalPort,
        $scope.toEditRule = null,
        $scope.clearForm(),
        $rootScope.globalWait = !0,
        PortForwarding.save([obj], {
            success: function() {
                system.populate(!1),
                $rootScope.showMessage = !0,
                $rootScope.globalWait = !1,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.showMessage = !1,
                $rootScope.globalWait = !1,
                $rootScope.$digest()
            }
        }))
    }
    ,
    $scope.cancel = function() {
        $scope.toEditRule = null,
        $scope.clearForm()
    }
    ,
    $scope.fields = fields,
    $.config.modules.accessControl.portForwarding && $.config.modules.accessControl.portForwarding.externalPortDefault && ($scope.fields.nExternalPort = $.config.modules.accessControl.portForwarding.externalPortDefault),
    $scope.fieldsUpnp = fieldsUpnp,
    $scope.getInternalPortEndRange = function(rule) {
        if (rule.ExternalPortEndRange > 0) {
            var endPort = 1 * rule.InternalPort + (rule.ExternalPortEndRange - rule.ExternalPort);
            return rule.InternalPort + " - " + endPort
        }
        return rule.InternalPort
    }
    ;
    var modelRulesList = null
      , system = {
        populate: function(useCache) {
            var rangeParameters = PortForwarding.getRangeParameters();
            CheckFeature.mapEnable === !0 && (fields.portSets = $.util.calculateRanges(rangeParameters.psid, rangeParameters.offset, rangeParameters.psidLength)),
            $scope.natButtonAvailable() && ($scope.natEnable = Dhcp.getNatEnable()),
            fields.rulesList = this.getRulesList(useCache),
            fields.upnpList = this.getUpnpList(),
            fields.gamesList = this.getGamesList(useCache),
            CheckFeature.go("portForwardingUpnpReadOnly") || (fields.rulesList = fields.rulesList.concat(fields.upnpList))
        },
        getRulesList: function(useCache) {
            return modelRulesList = PortForwarding.populate(!0, useCache),
            $.map(modelRulesList, function(obj) {
                obj.edit = -1 === $.inArray(obj.Creator, $.config.modules.portForwarding.rulesNotEditable),
                obj.remove = -1 === $.inArray(obj.Creator, $.config.modules.portForwarding.rulesNotRemovable);
                var isValidRuleMapT = !0;
                return $scope.checkValidMAPTPortRange && fields.portSets && (isValidRuleMapT = $.util.isValidMAPTPortRange(obj, fields.portSets)),
                "UPNP" !== obj.Creator && "DMZ" !== obj.Service && isValidRuleMapT ? obj : null
            })
        },
        getUpnpList: function() {
            return $.map(modelRulesList, function(obj) {
                return "UPNP" === obj.Creator ? obj : null
            })
        },
        getGamesList: function(useCache) {
            var modelGamesList = PortForwarding.populate(!1, useCache);
            return modelGamesList
        }
    };
    system.populate(!1)
}
]),
sboxApp.controller("GamesController", ["$scope", "$rootScope", "PortForwarding", "ConnectedDevices", "$stateParams", function($scope, $rootScope, PortForwarding, ConnectedDevices, $stateParams) {
    function fillDeviceInfo() {
        if ($stateParams.uid) {
            var uid = parseInt($stateParams.uid, 10)
              , selectedDevice = ConnectedDevices.getDeviceById(uid);
            $scope.formGamesFields.InternalClient = selectedDevice[0].ipAddress,
            $scope.formGamesFields.ipFilter = selectedDevice[0].ipAddress,
            $scope.loadedFromDevice = !0
        } else
            $scope.loadedFromDevice = !1
    }
    var fullList = {
        "Age of Empires": [[2300, 2400, "TCP"], [47624, 47624, "TCP"], [6073, 6073, "UDP"], [2300, 2400, "UDP"]],
        "Age of Empires II": [[2300, 2400, "TCP"], [47624, 47624, "TCP"], [2300, 2400, "UDP"]],
        "Age of Empires III": [[80, 80, "TCP"], [2300, 2300, "TCP"], [2300, 2310, "UDP"]],
        "Age of Mythology": [[28800, 28805, "TCP"], [2300, 2400, "UDP"], [6073, 6073, "UDP"]],
        "Alien Vs Predator 2": [[2300, 2400, "TCP"], [7e3, 1e4, "TCP"], [27888, 27900, "UDP"]],
        "Alien Vs Predator 2 Primal Hunt": [[2300, 2400, "TCP"], [7e3, 1e4, "TCP"], [27888, 27900, "UDP"]],
        "Battlefield 3": [[80, 80, "TCP"], [443, 443, "TCP"], [2e4, 20100, "TCP"], [22990, 22990, "TCP"], [42127, 42127, "TCP"], [17502, 17502, "TCP"], [9988, 9988, "TCP"], [3659, 3659, "UDP"], [14e3, 14016, "UDP"], [22990, 23006, "UDP"], [25200, 25300, "UDP"]],
        "Borderlands 2": [[27014, 27050, "TCP"], [3478, 3478, "UDP"], [4379, 4380, "UDP"], [27e3, 27030, "UDP"]],
        "Call of Duty 4": [[28960, 28960, "TCP"], [28960, 28960, "UDP"]],
        "Counter Strike": [[27020, 27039, "TCP"], [1200, 1200, "UDP"], [27e3, 27015, "UDP"]],
        "Counter Strike - Source": [[27014, 27050, "TCP"], [1200, 1200, "UDP"], [3478, 3478, "UDP"], [4379, 4380, "UDP"], [27e3, 27030, "UDP"]],
        "Counter-Strike - Global Offensive": [[27014, 27050, "TCP"], [3478, 3478, "UDP"], [4379, 4380, "UDP"], [27e3, 27030, "UDP"]],
        "Crysis 3": [[1024, 1124, "TCP"], [3074, 3074, "TCP"], [9946, 9946, "TCP"], [9960, 9969, "TCP"], [13e3, 13100, "TCP"], [18e3, 18e3, "TCP"], [18120, 18120, "TCP"], [18060, 18060, "TCP"], [27900, 27900, "TCP"], [28910, 28910, "TCP"], [29900, 29900, "TCP"], [42100, 42100, "TCP"], [1024, 1124, "UDP"], [3074, 3074, "UDP"], [3659, 3659, "UDP"], [6e3, 6e3, "UDP"], [18e3, 18e3, "UDP"], [29900, 29900, "UDP"]],
        "Diablo III": [[80, 80, "TCP"], [1119, 1119, "TCP"], [6881, 6999, "TCP"], [1119, 1119, "UDP"], [6881, 6999, "UDP"]],
        "Doom 3": [[27650, 27650, "TCP"], [27666, 27666, "TCP"], [27650, 27650, "UDP"], [27666, 27666, "UDP"]],
        "Dragon Age II": [[80, 80, "TCP"], [8e3, 8e3, "TCP"], [12025, 12025, "TCP"], [15101, 15325, "TCP"], [18081, 18081, "TCP"], [42127, 42127, "TCP"], [80, 80, "UDP"], [1900, 1900, "UDP"], [5355, 5355, "UDP"], [8001, 8001, "UDP"]],
        "F.E.A.R. 3": [[4098, 4101, "UDP"], [8766, 8766, "UDP"], [27016, 27016, "UDP"]],
        "FIFA 13": [[3569, 3569, "TCP"], [9946, 9946, "TCP"], [9988, 9988, "TCP"], [42124, 42124, "TCP"], [1e4, 2e4, "TCP"], [3659, 3659, "UDP"], [9e3, 9999, "UDP"]],
        "Final Fantasy XIV - A Realm Reborn": [[54992, 54994, "TCP"], [55006, 55007, "TCP"], [55021, 55040, "TCP"]],
        "Flatout 2": [[23756, 23756, "UDP"]],
        "Football Manager Live": [[9920, 9920, "TCP"], [9995, 9999, "TCP"], [9920, 9920, "UDP"], [9995, 9999, "UDP"]],
        "Half Life 2 Steam Server": [[27014, 27050, "TCP"], [4380, 4380, "UDP"], [27e3, 27e3, "UDP"]],
        "Hero Online": [[6667, 18067, "TCP"], [6667, 18067, "UDP"]],
        "League of Legends": [[80, 80, "TCP"], [443, 443, "TCP"], [2099, 2099, "TCP"], [5222, 5223, "TCP"], [8393, 8400, "TCP"], [5e3, 5500, "UDP"]],
        "Left 4 Dead": [[27014, 27050, "TCP"], [4380, 4380, "UDP"], [27e3, 27030, "UDP"]],
        "Left 4 Dead 2": [[27014, 27050, "TCP"], [4380, 4380, "UDP"], [27e3, 27030, "UDP"]],
        "Lineage II": [[80, 80, "TCP"], [2106, 2106, "TCP"], [2009, 2009, "TCP"], [7777, 7777, "TCP"], [53, 53, "UDP"]],
        "Lord of the Rings Battle Of Middle Earth II": [[8088, 65535, "UDP"]],
        "Lord of the Rings Online": [[80, 80, "TCP"], [2900, 2910, "UDP"], [9e3, 9010, "UDP"]],
        "Mass Effect 3": [[5659, 6e3, "UDP"]],
        "Need for Speed Carbon & Most Wanted": [[80, 80, "TCP"], [13505, 13505, "TCP"], [30900, 30999, "TCP"], [3658, 3658, "UDP"]],
        "Playstation 3": [[80, 80, "TCP"], [443, 443, "TCP"], [465, 465, "TCP"], [983, 983, "TCP"], [5223, 5223, "TCP"], [10070, 10080, "TCP"], [3478, 3479, "UDP"], [3658, 3658, "UDP"], [10070, 10070, "UDP"]],
        "Playstation 4": [[80, 80, "TCP"], [443, 443, "TCP"], [465, 465, "TCP"], [983, 983, "TCP"], [5223, 5223, "TCP"], [10070, 10080, "TCP"], [3478, 3479, "UDP"], [3658, 3658, "UDP"], [10070, 10070, "UDP"]],
        "PlayStation Network": [[80, 80, "TCP"], [443, 443, "TCP"], [465, 465, "TCP"], [983, 983, "TCP"], [5223, 5223, "TCP"], [10070, 10080, "TCP"], [3478, 3479, "UDP"], [3658, 3658, "UDP"], [10070, 10070, "UDP"]],
        "PlayStation Network PSVita": [[80, 80, "TCP"], [443, 443, "TCP"], [465, 465, "TCP"], [983, 983, "TCP"], [5223, 5223, "TCP"], [10070, 10080, "TCP"], [3478, 3479, "UDP"]],
        "Pokemon NetBattle": [[3e4, 3e4, "TCP"]],
        "Pro Evolution Soccer 2013": [[5730, 5730, "UDP"]],
        "PS3 Games": [[5223, 5223, "TCP"], [5223, 5223, "UDP"], [3478, 3478, "UDP"], [3479, 3479, "UDP"], [3658, 3658, "UDP"]],
        "Quake 3": [[27950, 27950, "TCP"], [27952, 27952, "TCP"], [27960, 27960, "TCP"], [27965, 27965, "TCP"], [27950, 27950, "UDP"], [27952, 27952, "UDP"], [27960, 27960, "UDP"], [27965, 27965, "UDP"]],
        "Quake 4": [[27650, 27650, "TCP"], [27650, 27650, "UDP"]],
        "Ragnarok Online Server": [[5121, 5121, "TCP"], [6121, 6121, "TCP"], [6900, 6900, "TCP"], [5121, 5121, "UDP"], [6121, 6121, "UDP"], [6900, 6900, "UDP"]],
        "Star Trek Online": [[80, 80, "TCP"], [443, 443, "TCP"], [7003, 7003, "TCP"], [7202, 7202, "TCP"], [7255, 7255, "TCP"], [7499, 7499, "TCP"]],
        "StarCraft II": [[80, 80, "TCP"], [1119, 1120, "TCP"], [3724, 3724, "TCP"], [6113, 6113, "TCP"], [80, 80, "UDP"], [1119, 1120, "UDP"], [3724, 3724, "UDP"], [6113, 6113, "UDP"]],
        "StarCraft II Downloader": [[1119, 1120, "TCP"], [3724, 3724, "TCP"], [4e3, 4e3, "TCP"], [6112, 6114, "TCP"], [6881, 6999, "TCP"], [1119, 1120, "UDP"], [3724, 3724, "UDP"], [4e3, 4e3, "UDP"], [6112, 6114, "UDP"], [6881, 6999, "UDP"]],
        "Steam Client": [[27014, 27050, "TCP"], [3478, 3478, "UDP"], [4379, 4380, "UDP"], [27e3, 27030, "UDP"]],
        "Steam Server": [[27015, 27015, "TCP"]],
        "The Lord of the Rings-War of the Ring": [[6500, 6500, "TCP"], [7175, 7175, "TCP"], [13139, 13139, "TCP"], [6500, 6500, "UDP"], [7175, 7175, "UDP"], [13139, 13139, "UDP"]],
        "Tony Hawks Pro Skater 4": [[5150, 5150, "TCP"], [5150, 5150, "UDP"]],
        "Track Mania": [[2350, 2350, "TCP"], [2350, 2350, "UDP"]],
        "Unreal Tournament 2004": [[7777, 7788, "TCP"], [27900, 27900, "TCP"], [42292, 42292, "TCP"], [7777, 7788, "UDP"], [27900, 27900, "UDP"], [42292, 42292, "UDP"]],
        "Warcraft III": [[6112, 6119, "TCP"], [6112, 6119, "UDP"]],
        "Xbox Live 360": [[53, 53, "TCP"], [80, 80, "TCP"], [1863, 1863, "TCP"], [3074, 3074, "TCP"], [53, 53, "UDP"], [80, 80, "UDP"], [1863, 1863, "UDP"], [3074, 3074, "UDP"]],
        "Xbox One": [[53, 53, "TCP"], [80, 80, "TCP"], [1863, 1863, "TCP"], [3074, 3074, "TCP"], [53, 53, "UDP"], [80, 80, "UDP"], [1863, 1863, "UDP"], [3074, 3074, "UDP"]]
    }
      , originalList = []
      , realList = []
      , oldDescription = "";
    $scope.listRules = [],
    $scope.list = fullList,
    $scope.onChangeSave = $.config.onChangeSave;
    var objUpdate = null
      , clearForm = function() {
        $scope.formGames.description.$setValidity("Description", !0),
        $scope.formGames.description.$setValidity("portConflict", !0),
        $scope.formGames.internalClient.$setValidity("InternalClient", !0),
        $scope.formGames.$setPristine(!0)
    }
      , removeFromRealList = function(description) {
        realList = $.map(realList, function(obj) {
            return obj.Description === description ? null : obj
        })
    };
    $scope.mountListRules = function(list) {
        if (0 === list.length)
            return [];
        var a = [];
        a.push(list[0]);
        for (var referral = list[0], i = 1; i < list.length; i++)
            list[i].Description !== referral.Description && (referral = list[i],
            a.push(referral));
        return a
    }
    ,
    $scope.populate = function() {
        originalList = PortForwarding.populate(!1),
        realList = originalList.slice(0),
        $scope.listRules = $scope.mountListRules(originalList)
    }
    ,
    $scope.populate();
    var emptyModel = function() {
        return {
            update: !1,
            Enable: !0,
            Description: "Age of Empires",
            InternalClient: ""
        }
    };
    $scope.formGamesFields = emptyModel();
    var indexList = null;
    fillDeviceInfo(),
    $scope.clearFormGames = function() {
        $scope.formGamesFields = emptyModel(),
        fillDeviceInfo(),
        clearForm()
    }
    ,
    $scope.addGamesRule = function() {
        $scope.validate() && ($scope.listRules.push($scope.formGamesFields),
        $scope.formatNewRule(),
        $scope.clearFormGames(),
        $scope.save(!1))
    }
    ,
    $scope.removeGameRule = function(index, description) {
        oldDescription = description,
        indexList = index
    }
    ,
    $scope.cancelRemoveGameRule = function() {
        oldDescription = "",
        indexList = null
    }
    ,
    $scope.confirmRemoveGameRule = function() {
        $scope.listRules.splice(indexList, 1),
        removeFromRealList(oldDescription),
        $scope.cancelRemoveGameRule(),
        $scope.save(!1)
    }
    ;
    var removeFromXmo = function() {
        var s = !0;
        return originalList.length > 0 && (s = PortForwarding.remove(originalList)),
        s
    }
      , generateArraySave = function() {
        if (realList.length > 0) {
            var aliasIndex = 0;
            return $.map(realList, function(obj) {
                delete obj.uid;
                var viewRuleStatus = $.grep($scope.listRules, function(fakeRule) {
                    return fakeRule.Description === obj.Description && fakeRule.InternalClient === obj.InternalClient
                });
                return obj.Enable = viewRuleStatus[0].Enable ? !0 : !1,
                obj.Alias = $.constants.GAMES_PREFIX + aliasIndex++,
                obj
            })
        }
        return []
    }
      , generateArrayUpdate = function() {
        return $.map(realList, function(obj) {
            return obj.Description === objUpdate.Description ? (obj.Enable = objUpdate.Enable,
            obj) : null
        })
    };
    $scope.updateGameRule = function(obj) {
        objUpdate = $.extend(!0, {}, obj),
        $scope.save(!0)
    }
    ,
    $scope.save = function(update) {
        var successRemove = !0
          , saveList = [];
        $rootScope.globalWait = !0,
        update ? saveList = generateArrayUpdate() : (successRemove = removeFromXmo(),
        saveList = generateArraySave()),
        saveList.length > 0 ? PortForwarding.save(saveList, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = successRemove,
                $scope.clearFormGames(),
                $rootScope.$digest(),
                $scope.populate()
            },
            error: function() {
                $rootScope.showMessage = !1,
                $rootScope.globalWait = !1,
                $rootScope.$digest()
            }
        }) : ($rootScope.globalWait = !1,
        $rootScope.showMessage = successRemove,
        $scope.clearFormGames(),
        $scope.populate())
    }
    ;
    var getNewRulesArray = function() {
        for (var result = [], j = 0; j < fullList[$scope.formGamesFields.Description].length; j++) {
            var o = {};
            o.Enable = !0,
            o.Description = $scope.formGamesFields.Description,
            o.InternalClient = $scope.formGamesFields.InternalClient,
            o.InternalPort = fullList[$scope.formGamesFields.Description][j][0],
            o.ExternalPort = fullList[$scope.formGamesFields.Description][j][0],
            o.ExternalPortEndRange = fullList[$scope.formGamesFields.Description][j][0] < fullList[$scope.formGamesFields.Description][j][1] ? fullList[$scope.formGamesFields.Description][j][1] : 0,
            o.Protocol = fullList[$scope.formGamesFields.Description][j][2],
            o.RemoteHost = "",
            result.push(o)
        }
        return result
    };
    $scope.formatNewRule = function() {
        realList = realList.concat(getNewRulesArray())
    }
    ,
    $scope.validate = function() {
        clearForm();
        var validate = !0;
        if ($scope.formGamesFields.Description || ($scope.formGames.description.$setValidity("Description", !1),
        validate = !1),
        $.util.checkLanIp($scope.formGamesFields.InternalClient) || $scope.loadedFromDevice || ($scope.formGames.internalClient.$setValidity("InternalClient", !1),
        validate = !1),
        validate) {
            var newRules = getNewRulesArray()
              , rulesToCheck = realList.concat(PortForwarding.populate(!0));
            $.each(newRules, function(i, obj) {
                return $.util.portConflict(obj, rulesToCheck) ? void 0 : ($scope.formGames.description.$setValidity("portConflict", !1),
                validate = !1,
                !1)
            })
        }
        return validate
    }
}
]),
sboxApp.controller("NTPController", ["MaintenanceNtp", "$rootScope", "$scope", "$interval", function(MaintenanceNtp, $rootScope, $scope, $interval) {
    var intervalPromise, updatedTime, _sortTimezones = function(timezones) {
        return timezones.sort(function(a, b) {
            var time1, time2, regExp = /\(([^)]+)\)/;
            return time1 = regExp.exec(a.description),
            time2 = regExp.exec(b.description),
            time1 && (time1 = parseInt(time1[1].replace("UTC", "").replace(":", ""), 10)),
            time2 && (time2 = parseInt(time2[1].replace("UTC", "").replace(":", ""), 10)),
            time1 === time2 ? a.name > b.name ? 1 : -1 : time1 - time2
        }),
        timezones
    }, _parseLocalTime = function(leData) {
        var leMoment = moment.parseZone(leData);
        return leMoment
    }, formatString = "DD/MM/YYYY - H:mm:ss (UTC Z)";
    $scope.populate = function() {
        var result = MaintenanceNtp.populate();
        $scope.firstServer = result.firstServer,
        $scope.secondServer = result.secondServer,
        $scope.status = result.status,
        result.localTime = result.localTime.replace("??-", "0000-"),
        updatedTime = _parseLocalTime(result.localTime),
        updatedTime.year() < 2e3 && updatedTime.add("years", 2009),
        $scope.localTime = updatedTime.format(formatString),
        $scope.selectedTimeZoneName = result.timeZoneName,
        $scope.selectedTimeZone = result.timeZone.replace(/&lt/g, "<").replace(/&gt/g, ">").replace(/&lt;/g, "<").replace(/&gt;/g, ">"),
        $.config.modules.staticTZ ? ($scope.staticTz = !0,
        $scope.listTimeZones = $.config.modules.staticTZ) : ($scope.staticTz = !1,
        $scope.listTimeZones = _sortTimezones(MaintenanceNtp.getTimezones()));
        var timeZoneIsValid = !1
          , cmpt = 0;
        $.each($scope.listTimeZones, function(i, timeZone) {
            return timeZone && $scope.selectedTimeZoneName === timeZone.name ? (cmpt = i,
            timeZoneIsValid = !0,
            !1) : void 0
        }),
        $scope.selectedTimeZoneName = $scope.listTimeZones[cmpt],
        $.config.modules.staticTZ && !timeZoneIsValid && ($scope.selectedTimeZone = ""),
        $interval.cancel(intervalPromise),
        intervalPromise = $interval(function() {
            updatedTime.add("seconds", 1),
            $scope.localTime = updatedTime.format(formatString)
        }, 1e3)
    }
    ,
    $scope.populate(),
    $scope.$on("$destroy", function() {
        $interval.cancel(intervalPromise)
    }),
    $scope.save = function() {
        if ($scope.submitted = !0,
        $scope.ntpForm.$valid) {
            var data = {};
            data.firstServer = $scope.firstServer,
            data.secondServer = $scope.secondServer,
            data.timeZone = $scope.selectedTimeZone,
            data.timeZoneName = $scope.selectedTimeZoneName;
            var result = MaintenanceNtp.save(data);
            return $rootScope.showMessage = result,
            $scope.ntpForm.$setPristine(result),
            $scope.submitted = !1,
            $scope.populate(),
            result
        }
    }
}
]),
sboxApp.controller("MaintenanceTr69Controller", ["$scope", "TR69", "$rootScope", function($scope, TR69, $rootScope) {
    $scope.populate = function() {
        $scope.connectionRequestUrlReadOnly = !1;
        var result = TR69.populate();
        $scope.enable = result.enable,
        $scope.informEnable = result.informEnable,
        $scope.informInterval = result.informInterval,
        $scope.url = result.url,
        $scope.username = result.username,
        $scope.password = result.password,
        $scope.connectionRequestUrl = result.connectionRequestUrl,
        $scope.connectionRequestUsername = result.connectionRequestUsername,
        $scope.connectionRequestPassword = result.connectionRequestPassword,
        $.config.showedpages.tr069SSLAuthentication && $.config.showedpages.tr069SSLAuthentication.enable && ($scope.SslAuthenticationEnable = result.SslAuthenticationEnable),
        $.config.showedpages.connectionRequestUrlReadOnly && $.config.showedpages.connectionRequestUrlReadOnly.enable && ($scope.connectionRequestUrlReadOnly = !0)
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        if ($scope.formTR69.$valid) {
            var data = {};
            data.enable = $scope.enable,
            data.informEnable = $scope.informEnable,
            data.informInterval = $scope.informInterval,
            data.url = $scope.url,
            data.username = $scope.username,
            data.password = $scope.password,
            data.connectionRequestUrl = $scope.connectionRequestUrl,
            data.connectionRequestUsername = $scope.connectionRequestUsername,
            data.connectionRequestPassword = $scope.connectionRequestPassword,
            $.config.showedpages.tr069SSLAuthentication && $.config.showedpages.tr069SSLAuthentication.enable && (data.SslAuthenticationEnable = $scope.SslAuthenticationEnable);
            var result = TR69.save(data);
            $rootScope.showMessage = result,
            $scope.formTR69.$setPristine(result),
            $scope.populate()
        }
    }
}
]),
sboxApp.controller("WifiMainController", function($scope, $rootScope, $stateParams, $state, ConnectedDevices) {
    $scope.showRefreshButton = -1 !== $state.current.name.indexOf("user.wifi.stats"),
    $scope.communSettingsGuest = $.config.showedpages.communSettingsGuest && $.config.showedpages.communSettingsGuest.enable;
    var populate = function() {
        $rootScope.lastRadioName || ($rootScope.lastRadioName = "2.4GHz");
        var radio = $stateParams.radio + "";
        $scope.mode = "guest" === $stateParams.mode ? "guest" : "priv",
        "wifiBothBands" === radio ? $scope.radioName = $rootScope.lastRadioName : $scope.radioName = radio,
        $scope.ssidAlias = $stateParams.ssidAlias,
        $rootScope.lastRadioName = $scope.radioName,
        $scope.title = radio,
        $scope.removeBandTitle = $.config.modules.wifi.removeBandTitle === !0,
        $.config.showedpages.topMenuStatus && $.config.showedpages.topMenuStatus.enable && (ConnectedDevices.updateCache(),
        $scope.wifi24Status = ConnectedDevices.getWifiStatus("wifi24"),
        $scope.wifi5Status = ConnectedDevices.getWifiStatus("wifi5"),
        $scope.showWifiStatus = !0),
        $scope.showWifiScheduling = "guest" === $scope.mode
    };
    $rootScope.$on("$stateChangeStart", function(event, toState) {
        $scope.showRefreshButton = -1 !== toState.name.indexOf("user.wifi.stats")
    }),
    populate()
}),
sboxApp.controller("WiFiChannelController", ["$scope", "$rootScope", "WiFiEnvironment", "WiFiChannel", "WiFi", "ConnectedDevices", "$stateParams", "$timeout", function($scope, $rootScope, WiFiEnvironment, WiFiChannel, WiFi, ConnectedDevices, $stateParams, $timeout) {
    $scope.getWifiAnalyseData = function() {
        $scope.radio || ($scope.radio = $stateParams.radio),
        $scope.loadingData = !0,
        $scope.gwInfo = WiFiEnvironment.getCurrentChannelAndSSID($scope.radio, $scope.mode);
        var promise = WiFiEnvironment.scanWifi($stateParams.radio, $scope.mode);
        promise.then(function(data) {
            $scope.availableChannels = data.availableChannels,
            $scope.channelData = WiFiChannel.formatScanWifi(data),
            ConnectedDevices.updateCache(),
            "2.4GHz" === $scope.radio ? $scope.devices = ConnectedDevices.getWifiDevices("wifi24") : $scope.devices = ConnectedDevices.getWifiDevices("wifi5"),
            $timeout(function() {
                $(".wifiEnvironment").trigger("showAfterAngular")
            }, 1e3),
            $scope.loadingData = !1
        })
    }
    ,
    $scope.changeChannel = function(selectedChannel) {
        var dataSave = {
            channel: selectedChannel
        }
          , returnFunction = function() {
            $rootScope.globalWait = !1,
            $rootScope.$digest()
        };
        WiFi.changeChannel(dataSave, $scope.radio, $scope.mode, {
            success: function() {
                $scope.gwInfo.channel = selectedChannel,
                $rootScope.showMessage = !0,
                returnFunction()
            },
            error: function() {
                $rootScope.showMessage = !1,
                returnFunction()
            }
        })
    }
}
]),
sboxApp.controller("WiFiBasicController", ["$scope", "WiFi", "ConnectedDevices", "$rootScope", "$stateParams", "$timeout", function($scope, WiFi, ConnectedDevices, $rootScope, $stateParams, $timeout) {
    $scope.ssidAlias = $stateParams.ssidAlias,
    $scope.bandSteeringSplitWithSameName = $.config.modules.wifi && $.config.modules.wifi.bandSteeringSplitWithSameName === !0,
    $scope.labelNoneAsOpen = $.config.modules.wifi && $.config.modules.wifi.labelNoneAsOpen === !0;
    var _search5gStb = function() {
        var existStb = !1;
        return $(ConnectedDevices.getStbs()).each(function(i, device) {
            return "wifi5" === device.Layer1Interface && (existStb = !0),
            !existStb
        }),
        existStb
    }
      , updateSelectChannelList = function(radio, channelBandwidth) {
        var blockedChannels, newChannelsList;
        if ("5GHz" === radio && $.util.getModuleConfig("wifi.wifi5.blockedChannels", null)) {
            var index;
            for (newChannelsList = [],
            blockedChannels = $.util.getModuleConfig("wifi.wifi5.blockedChannels", []),
            index = 0; index < $scope.selectChannel.length; index++)
                blockedChannels.indexOf($scope.selectChannel[index]) < 0 && newChannelsList.push($scope.selectChannel[index]);
            $scope.selectChannel = newChannelsList
        }
        var bandwidthChannelFilter = $.util.getModuleConfig("wifi.wifi5.channelBandwidthSelectFilter", !1);
        bandwidthChannelFilter && "5GHz" === radio && channelBandwidth && $.util.getModuleConfig("wifi.wifi5.blockedChannelsByBandwidth", null) && (blockedChannels = $.util.getModuleConfig("wifi.wifi5.blockedChannelsByBandwidth", []),
        blockedChannels && blockedChannels[channelBandwidth] && (newChannelsList = $.grep($scope.selectChannel, function(val) {
            return blockedChannels[channelBandwidth].indexOf(val) < 0
        }),
        $scope.selectChannel = newChannelsList))
    };
    $scope.getQrString = function() {
        return $scope.securityMode ? "WIFI:S:" + $scope.ssid + ";T:" + $scope.securityMode.substring(0, 3) + ";P:" + $scope.password + ";;" : ""
    }
    ,
    $scope.communSettingsGuest = $.config.showedpages.communSettingsGuest && $.config.showedpages.communSettingsGuest.enable,
    $scope.wifiSpecificKeyRule = $.config.wifiKeyRule ? !0 : !1,
    $scope.wifiBandSteeringSupport = $.config.modules.wifi.wifiBandSteeringSupport ? !0 : !1,
    $scope.wifiBandSteeringSupport && ($scope.bandSteeringEnabled = WiFi.getWifiBandSteering()),
    $scope.textPassword = $.config.modules.textPassword,
    $scope.radioType = "2.4GHz" === $stateParams.radio ? "24" : "5G",
    $scope.firstAccessPPP = $stateParams.firstAccessPPP ? !0 : !1,
    $scope.submitted = !1,
    $scope.beforeSave = function() {
        ($scope.wifiForm.$valid || !$scope.wifiEnable) && $("#apply-changes-modal").foundation("reveal", "open")
    }
    ,
    $scope.validateChannelWithBandwidth = function() {
        var valid = !0;
        if ($.util.getModuleConfig("wifi.wifi5.blockedChannelsByBandwidth", null)) {
            var blockedChannels = $.util.getModuleConfig("wifi.wifi5.blockedChannelsByBandwidth", {});
            blockedChannels && blockedChannels[$scope.channelBandwidth] && (valid = blockedChannels[$scope.channelBandwidth].indexOf($scope.channel) < 0)
        }
        return valid
    }
    ,
    $scope.save = function() {
        if ($scope.submitted = !0,
        !$scope.validateChannelWithBandwidth())
            return $rootScope.showMessage = !1,
            $rootScope.customMessage = "wifichannelConflictBandwidth",
            $timeout(function() {
                $rootScope.$digest()
            }),
            void ($scope.channel = $scope.bkpChannel);
        if ($scope.wifiForm.$valid || !$scope.wifiEnable) {
            $rootScope.globalWait = !0;
            var dataSave = {};
            dataSave.enable = $scope.wifiEnable,
            $scope.wifiEnable && (dataSave.broadcast = $scope.broadcastEnable,
            dataSave.ssid = $scope.ssid,
            dataSave.mfpMode = $scope.mfpMode,
            dataSave.channel = $scope.channel,
            $scope.bkpChannel = $scope.channel,
            dataSave.securityMode = $scope.securityMode,
            dataSave.password = $scope.password,
            dataSave.bandSteeringSplitWithSameName = $scope.bandSteeringSplitWithSameName,
            $scope.wifiBandSteeringSupport && (dataSave.bandSteeringEnabled = $scope.bandSteeringEnabled),
            dataSave.ecoMode = $scope.ecoMode,
            $.util.hasFeature("wifiIsolation") && (dataSave.ssidIsolation = $scope.ssidIsolation,
            dataSave.isolationEnable = $scope.clientIsolation),
            -1 !== $scope.securityMode.indexOf("ENTERPRISE") ? (dataSave.radiusServerIp = $scope.radiusServerIp,
            dataSave.radiusServerPort = $scope.radiusServerPort,
            dataSave.radiusServerPassword = $scope.radiusServerPassword,
            dataSave.groupKeyUpdatePeriod = 3600,
            dataSave.secondaryRadiusServerIp = $scope.secondaryRadiusServerIp,
            dataSave.secondaryRadiusServerPort = $scope.secondaryRadiusServerPort,
            dataSave.secondaryRadiusServerSecret = $scope.secondaryRadiusServerSecret) : (dataSave.radiusServerIp = "",
            dataSave.radiusServerPort = 0,
            dataSave.radiusServerPassword = $.constants.defaultSecKey,
            dataSave.groupKeyUpdatePeriod = $.constants.defaultRekeyTime,
            dataSave.secondaryRadiusServerIp = "",
            dataSave.secondaryRadiusServerPort = 0,
            dataSave.secondaryRadiusServerSecret = "")),
            WiFi.save({
                radio: $stateParams.radio,
                mode: $scope.mode,
                data: dataSave,
                ssidAlias: $scope.ssidAlias
            }, {
                success: function() {
                    $scope.currentChannel = dataSave.channel || $scope.currentChannel,
                    ($scope.saveOneRequest || $scope.bandSteeringEnabled) && $scope.populate(),
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !0,
                    $scope.wifiForm.$setPristine(!0),
                    $scope.submitted = !1,
                    $(".clickMe").click(),
                    $rootScope.$digest(),
                    $scope.stringQr = $scope.getQrString()
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $scope.populate(),
                    $rootScope.$digest()
                }
            })
        }
    }
    ;
    var _isSecurityModeReady = function(justDoIt) {
        $timeout(function() {
            $scope.populate(),
            !$scope.wifiEnable || $scope.selectSecurityMode.length > 0 || justDoIt ? ($rootScope.globalWait = !1,
            $rootScope.showMessage = !0,
            $scope.wifiForm.$pristine = !0,
            $rootScope.$digest()) : _isSecurityModeReady(!0)
        }, 5e3)
    };
    $scope.saveStatus = function() {
        $scope.saveOneRequest || ($rootScope.globalWait = !0,
        WiFi.saveStatus($scope.wifiEnable, $stateParams.radio, $scope.mode, {
            ssidAlias: $scope.ssidAlias,
            success: _isSecurityModeReady,
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        }))
    }
    ,
    $scope.$watch("securityMode", function() {
        $scope.isRequired = "WPA_WPA2_ENTERPRISE" === $scope.securityMode ? "required" : "not.required"
    });
    var _getWifiStatus = function(wifiStatus) {
        return "UP" === wifiStatus.ssid && "ENABLED" === wifiStatus.accessPoint && "UP" === wifiStatus.radio ? !0 : !1
    };
    $scope.populate = function() {
        $.util.hasFeature("forceWifi24Priv") && ($stateParams.radio = "2.4GHz",
        $stateParams.mode = "priv"),
        WiFi.updateCache({
            radio: $stateParams.radio,
            mode: $scope.mode,
            ssidAlias: $scope.ssidAlias
        });
        var data = WiFi.populate();
        if ($scope.bandSteeringEnabled && data[$stateParams.radio] && (data = data[$stateParams.radio][$scope.mode]),
        $scope.showPassword = !1,
        $scope.wifiEnable = data.enable,
        $scope.wifiStatus = _getWifiStatus(data.wifiStatus),
        $scope.showForm = data.enable,
        $scope.broadcastEnable = data.broadcast,
        $scope.ssid = data.ssid,
        $scope.mfpMode = data.mfpMode,
        $scope.channel = data.channel,
        $scope.bkpChannel = data.channel,
        $scope.currentChannel = data.currentChannel,
        $scope.securityMode = data.securityMode,
        $scope.password = data.password,
        $scope.confirmPassword = data.password,
        $scope.radiusServerIp = data.radiusServerIp,
        $scope.radiusServerPort = data.radiusServerPort,
        $scope.radiusServerPassword = data.radiusServerPassword,
        $scope.secondaryRadiusServerIp = data.secondaryRadiusServerIp,
        $scope.secondaryRadiusServerPort = data.secondaryRadiusServerPort,
        $scope.secondaryRadiusServerSecret = data.secondaryRadiusServerSecret,
        $scope.groupKeyUpdatePeriod = data.groupKeyUpdatePeriod,
        $scope.channelBandwidth = data.channelBandwidth,
        $scope.selectChannel = data.availableChannels || [],
        updateSelectChannelList($stateParams.radio, $scope.channelBandwidth),
        $scope.selectSecurityMode = data.availableSecurityMode,
        $scope.ecoMode = data.ecoMode,
        $scope.ssidIsolation = data.ssidIsolation,
        $scope.clientIsolation = data.isolationEnable,
        $.config.blockedSecurityModes.length || $.config.blockedSecurityModes5GHz && "5GHz" === $stateParams.radio && $.config.blockedSecurityModes5GHz.length)
            for (var x = 0; x < $scope.selectSecurityMode.length; x++)
                -1 !== $.util.inArray($scope.selectSecurityMode[x].value, $.config.blockedSecurityModes) && ($scope.selectSecurityMode.splice(parseInt(x, 10), 1),
                x--),
                $scope.selectSecurityMode[x] && -1 !== $.util.inArray($scope.selectSecurityMode[x].value, $.config.blockedSecurityModes5GHz) && ($scope.selectSecurityMode.splice(parseInt(x, 10), 1),
                x--);
        if (!$.isEmptyObject($.config.modules.wifi.blockedSecurityModesByStandards)) {
            var currentOperatingStandard = data.operatingStandards
              , blockedSecModesByStandard = $.config.modules.wifi.blockedSecurityModesByStandards[$stateParams.radio]
              , securityModes = [];
            for (var i in $scope.selectSecurityMode)
                -1 === $.inArray($scope.selectSecurityMode[i].value, blockedSecModesByStandard[currentOperatingStandard]) && securityModes.push($scope.selectSecurityMode[i]);
            $scope.selectSecurityMode = securityModes
        }
        $scope.stringQr = $scope.getQrString(),
        $scope.existStb = _search5gStb(),
        $scope.originalStatus = data.enable
    }
    ,
    $scope.populate(),
    $scope.togglePassword = function() {
        $scope.showPassword = !$scope.showPassword
    }
    ,
    $scope.showEnterprise = function(data) {
        return -1 !== data.indexOf("ENTERPRISE")
    }
    ,
    $scope.setSaveOneRequest = function() {
        $scope.saveOneRequest = !1,
        ("priv" === $scope.mode && $.config.modules.wifi.oneRequestOnlyPriv || "guest" === $scope.mode && $.config.modules.wifi.oneRequestOnly) && ($scope.saveOneRequest = !0)
    }
    ,
    $scope.revertStatus = function() {
        $scope.wifiEnable = !0
    }
    ,
    $scope.setSaveOneRequest()
}
]),
sboxApp.controller("WiFiMacFilterController", ["$state", "$scope", "WiFiMacfilter", "ConnectedDevices", "$rootScope", "$stateParams", function($state, $scope, WiFiMacfilter, ConnectedDevices, $rootScope, $stateParams) {
    var possibleTitles = {
        "2.4GHz": "macFilterMainTitle2",
        "5GHz": "macFilterMainTitle5"
    };
    $state.current.data.title = possibleTitles[$stateParams.radio],
    $scope.radioName = $stateParams.radio,
    $scope.submitted = !1,
    $scope.selectedDevice = {},
    $scope.listMac = [],
    $scope.activeDevices = [],
    $scope.removeDeviceIndex = null,
    $scope.warned = !1,
    $scope.addMacAddress = function() {
        if ($scope.wifi24MacFilterForm.$invalid)
            return void ($scope.submitted = !0);
        if ($scope.listMac.length >= 256)
            return void ($scope.hasMaxDeviceNumber = !0);
        $scope.hasMaxDeviceNumber = !1,
        $scope.wifi24MacFilterForm.$error.validMac = !1,
        $scope.wifi24MacFilterForm.$error.invalidUniqueMac = !1,
        $scope.submitted = !1;
        var newItem = $.extend(!0, {}, $scope.selectedDevice)
          , model = WiFiMacfilter.getModel(newItem);
        $scope.listMac.unshift(model),
        $scope.selectedDevice = {
            hostname: "",
            PhysAddress: ""
        }
    }
    ,
    $scope.assignRemoveIndex = function(index) {
        $scope.removeDeviceIndex = index
    }
    ,
    $scope.removeDevice = function() {
        $scope.listMac.splice($scope.removeDeviceIndex, 1)
    }
    ,
    $scope.save = function() {
        $scope.warned = !0,
        $rootScope.globalWait = !0;
        var dataSave = {
            macFilterMode: $scope.macFilterMode,
            wifiControlList: $scope.listMac
        };
        $scope.radioNameSecondary && WiFiMacfilter.save(dataSave, $scope.radioNameSecondary, $scope.mode, {
            success: function() {},
            error: function() {}
        }),
        WiFiMacfilter.save(dataSave, $scope.radioName, $scope.mode, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.submitted = !1,
                $scope.selectedDevice = {},
                $scope.wifi24MacFilterForm.$setPristine(!0),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
    ,
    $scope.populate = function() {
        var bothRadio = !1;
        "wifiBothBands" === $scope.radioName && (bothRadio = !0,
        $scope.radioName = "2.4GHz",
        $scope.radioNameSecondary = "5GHz"),
        WiFiMacfilter.updateCache(bothRadio ? "both" : $scope.radioName, $scope.mode);
        var data = WiFiMacfilter.populate(bothRadio ? "both" : $scope.radioName);
        $scope.macFilterMode = data.macFilterMode,
        $scope.listMac = data.listMac;
        var mode = null;
        if ("2.4GHz" === $scope.radioName) {
            if (mode = "guest" === $scope.mode ? "wifi24Guest" : "wifi24",
            $scope.activeDevices = ConnectedDevices.getWifiDevices(mode).slice(0),
            bothRadio) {
                mode = "guest" === $scope.mode ? "wifi5Guest" : "wifi5";
                var activeDevices = ConnectedDevices.getWifiDevices(mode).slice(0);
                activeDevices.length > 0 && ($scope.activeDevices = $scope.activeDevices.concat(activeDevices))
            }
        } else
            mode = "guest" === $scope.mode ? "wifi5Guest" : "wifi5",
            $scope.activeDevices = ConnectedDevices.getWifiDevices(mode).slice(0)
    }
    ,
    ConnectedDevices.updateCache(),
    $scope.populate()
}
]),
sboxApp.controller("WiFiAdvancedController", ["$scope", "WiFiAdvanced", "$rootScope", "$stateParams", "$timeout", function($scope, WiFiAdvanced, $rootScope, $stateParams, $timeout) {
    $scope.validateChannelWithBandwidth = function() {
        var valid = !0;
        if ($.util.getModuleConfig("wifi.wifi5.blockedChannelsByBandwidth", null)) {
            var blockedChannels = $.util.getModuleConfig("wifi.wifi5.blockedChannelsByBandwidth", {});
            blockedChannels && blockedChannels[$scope.channelBandwidth] && (valid = blockedChannels[$scope.channelBandwidth].indexOf($scope.channel) < 0)
        }
        return valid
    }
    ,
    $scope.save = function() {
        if (!$scope.validateChannelWithBandwidth())
            return $rootScope.showMessage = !1,
            $rootScope.customMessage = "wifiBandwidthConflictChannel",
            $timeout(function() {
                $rootScope.$digest()
            }),
            void ($scope.channelBandwidth = $scope.bkpChannelBandwidth);
        $rootScope.globalWait = !0,
        $scope.wmmHiden && ($scope.wmmEnable = !1,
        $scope.apsd = !1),
        $scope.bkpChannelBandwidth = $scope.channelBandwidth;
        var dataSave = {
            operatingStandards: $scope.operatingStandards,
            regulatoryDomain: $scope.regulatoryDomain,
            channelBandwidth: $scope.channelBandwidth,
            extensionChannel: $scope.extensionChannel,
            transmitPower: $scope.transmitPower,
            wmmEnable: $scope.wmmEnable,
            apsd: $scope.apsd,
            atfEnable: $scope.atfEnable,
            globalMaxClients: $scope.globalMaxClients
        };
        $.util.hasFeature("cyclicPrefix") && (dataSave.cyclicPrefix = $scope.cyclicPrefix),
        WiFiAdvanced.save(dataSave, $scope.radioName, $scope.mode, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.formWifiAdvanced.$setPristine(!0),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
    ,
    $scope.changeWifiMode = function() {
        $scope.wmmHiden = !1,
        $.config.modules.wifi.vmmHidenWifiModeACandN === !0 && ("n" === $scope.operatingStandards || "ac" === $scope.operatingStandards) && ($scope.wmmHiden = !0)
    }
    ;
    var leOldApsd = null;
    $scope.wmmHiden = !1;
    var updateChannelBandwidthList = function(radio, channel) {
        var bandwidthChannelFilter = $.util.getModuleConfig("wifi.wifi5.channelBandwidthSelectFilter", !1);
        if (bandwidthChannelFilter && "5GHz" === radio && channel && $.util.getModuleConfig("wifi.wifi5.blockedChannelsByBandwidth", null)) {
            var blockedChannels = $.util.getModuleConfig("wifi.wifi5.blockedChannelsByBandwidth", []);
            blockedChannels && ($scope.supportedChannelBandwidth = $.grep($scope.supportedChannelBandwidth, function(item) {
                return !blockedChannels[item.value] || blockedChannels[item.value].indexOf(channel) < 0
            }))
        }
    };
    $scope.populate = function() {
        $scope.radioName = $stateParams.radio,
        WiFiAdvanced.updateCache($scope.radioName, $scope.mode);
        var data = WiFiAdvanced.search();
        $scope.regulatoryDomain = data.regulatoryDomain,
        $scope.channelBandwidth = data.channelBandwidth,
        $scope.bkpChannelBandwidth = data.channelBandwidth,
        data.supportedChannelBandwidth = data.supportedChannelBandwidth ? data.supportedChannelBandwidth : $.constants.supportedChannelBandwidth[$stateParams.radio];
        var supportedChBdwidthList = data.supportedChannelBandwidth.split(",");
        $scope.supportedChannelBandwidth = [],
        supportedChBdwidthList.length > 0 && $.each(supportedChBdwidthList, function(idx, chBdwidthElem) {
            $scope.supportedChannelBandwidth.push($.util.formatChannelBandWidth(chBdwidthElem))
        }),
        $scope.channel = data.channel,
        updateChannelBandwidthList($scope.radioName, data.channel),
        $scope.extensionChannel = data.extensionChannel,
        $scope.transmitPower = data.transmitPower,
        $scope.globalMaxClients = data.globalMaxClients,
        $scope.wmmEnable = data.wmmEnable,
        $scope.apsd = leOldApsd = data.apsd,
        $scope.atfEnable = data.atfEnable,
        $scope.cyclicPrefix = data.cyclicPrefix;
        var standardsList;
        if (standardsList = "5GHz" === $stateParams.radio ? $.config.modules.wifi.wifi5 && $.config.modules.wifi.wifi5.operatingStandards ? $.config.modules.wifi.wifi5.operatingStandards : $.constants.wifi5.operatingStandards : $.config.modules.wifi.wifi24 && $.config.modules.wifi.wifi24.operatingStandards ? $.config.modules.wifi.wifi24.operatingStandards : $.constants.wifi24.operatingStandards,
        $scope.possibleStandards = standardsList,
        $scope.operatingStandards = data.operatingStandards,
        $scope.securityMode = data.securityMode,
        !$.isEmptyObject($.config.modules.wifi.blockedSecurityModesByStandards)) {
            var blockedSecModesByStandard = $.config.modules.wifi.blockedSecurityModesByStandards[$stateParams.radio]
              , securityModes = [];
            for (var i in $scope.possibleStandards)
                -1 === $.inArray($scope.securityMode, blockedSecModesByStandard[$scope.possibleStandards[i].method]) && securityModes.push($scope.possibleStandards[i]);
            $scope.possibleStandards = securityModes
        }
        $scope.changeWifiMode()
    }
    ,
    $scope.populate(),
    $scope.$watch("wmmEnable", function() {
        $scope.wmmEnable || (leOldApsd = $scope.apsd),
        $scope.apsd = leOldApsd && $scope.wmmEnable
    })
}
]),
sboxApp.controller("WiFiStatsController", ["$scope", "WiFiStats", "$stateParams", "$rootScope", "$timeout", function($scope, WiFiStats, $stateParams, $rootScope, $timeout) {
    $scope.populate = function() {
        var data = WiFiStats.getData($stateParams.radio, $scope.mode);
        $scope.lestatus = data.status,
        $scope.link = data.link,
        $scope.bytessent = $.util.convertBytes(data.bytessent),
        $scope.bytesreceived = $.util.convertBytes(data.bytesreceived),
        $scope.packetssent = data.packetssent,
        $scope.packetsreceived = data.packetsreceived,
        $scope.errorssent = data.errorssent,
        $scope.errorsreceived = data.errorsreceived,
        $scope.discardpacketssent = data.discardpacketssent,
        $scope.discardpacketsreceived = data.discardpacketsreceived,
        $scope.unicastpacketssent = data.unicastpacketssent,
        $scope.unicastpacketsreceived = data.unicastpacketsreceived,
        $scope.multicastpacketssent = data.multicastpacketssent,
        $scope.multicastpacketsreceived = data.multicastpacketsreceived,
        $scope.broadcastpacketssent = data.broadcastpacketssent,
        $scope.broadcastpacketsreceived = data.broadcastpacketsreceived
    }
    ,
    $scope.refreshContent = function() {
        $scope.loading = !0,
        $timeout(function() {
            $scope.populate(),
            $scope.loading = !1,
            $scope.$digest()
        }, 500)
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("WiFiWPSController", ["$scope", "WiFi", "WiFiMacfilter", "$stateParams", "$timeout", function($scope, WiFi, WiFiMacfilter, $stateParams, $timeout) {
    $scope.wpsTiles = 0,
    $scope.countWpsTiles = function() {
        var count = 0;
        $scope.hasPushButton && $scope.wpsModePushButton && count++,
        $scope.hasPin && $scope.wpsModePIN && (count += 2),
        $scope.wpsTiles = count
    }
    ,
    $scope.populate = function() {
        $scope.waitEnable = !1,
        $scope.pinCode = WiFi.getCurrentPinCode($stateParams.radio, $scope.mode),
        $scope.loadingPin = !1;
        var d = WiFi.getWpsStatus($stateParams.radio, $scope.mode);
        $scope.enable = d.enable;
        var wpsMode = d.configMethodsSelected;
        $scope.wpsModeSelection = !!$.config.showedpages.wpsMode.enable,
        $scope.wpsModePushButton = wpsMode.indexOf("PushButton") > -1 || !$scope.wpsModeSelection,
        $scope.wpsModePIN = wpsMode.indexOf("PIN") > -1 || !$scope.wpsModeSelection,
        d.configMethodsEnabled = d.configMethodsEnabled || "",
        d.configMethodsEnabled = d.configMethodsEnabled.toUpperCase().split(","),
        $scope.hasPushButton = $.inArray($.constants.PUSHBUTTON, d.configMethodsEnabled) > -1,
        $scope.hasPin = $.inArray($.constants.PIN, d.configMethodsEnabled) > -1,
        $scope.methodsQty = d.configMethodsEnabled.length,
        WiFiMacfilter.updateCache($stateParams.radio, $scope.mode),
        $scope.skipModal = "DISABLED" === WiFiMacfilter.populate($stateParams.radio).macFilterMode,
        $scope.reallySaved = $scope.enable,
        $scope.wifiIsEnabled = d.wifiIsEnable,
        d.enable === !0 && d.wifiIsEnable === !1 && $scope.enableDisableWPS(),
        d.wifiIsEnable === !1 && ($scope.enable = !1)
    }
    ,
    $scope.generatePinCodeWPS = function() {
        $scope.loadingPin = !0,
        $scope.pinCode = "";
        var promise = WiFi.generatePinCodeWPSPromisse($stateParams.radio, $scope.mode);
        promise.then(function(PinCode) {
            $scope.pinCode = PinCode,
            $scope.loadingPin = !1
        })
    }
    ,
    $scope.setEnrolleePin = function() {
        $scope.loadingEnrollee = !0,
        WiFi.setEnrolleePin($scope.enrolleePin, {
            success: function() {
                $scope.loadingEnrollee = !1,
                $scope.$digest()
            },
            error: function() {
                $scope.loadingEnrollee = null,
                $scope.$digest()
            }
        }, $stateParams.radio, $scope.mode)
    }
    ,
    $scope.startPhysicalWPS = function() {
        $scope.loadingWps = !0,
        WiFi.startPhysicalWPS($stateParams.radio, $scope.mode, {
            success: function() {
                $scope.loadingWps = !1,
                $scope.$digest()
            },
            error: function() {
                $scope.loadingWps = null,
                $scope.$digest()
            }
        }),
        $scope.pinCode = ""
    }
    ,
    $scope.enableDisableWPS = function() {
        $scope.waitEnable = !0;
        var wpsMode = []
          , wpsModeStr = "";
        $scope.wpsModePushButton && wpsMode.push("PushButton"),
        $scope.wpsModePIN && wpsMode.push("PIN"),
        wpsMode.length && (wpsModeStr = wpsMode.join(",")),
        $timeout(function() {
            WiFi.setWpsStatus($scope.enable, wpsModeStr, $stateParams.radio, $scope.mode),
            $scope.enable && ($scope.skipModal = !0),
            $scope.waitEnable = !1,
            $scope.reallySaved = $scope.enable,
            $scope.wpsForm.$setPristine(!0),
            $scope.populate()
        }, 1e3)
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("WiFiPublicACLController", ["$scope", "$rootScope", "WifiPublic", function($scope, $rootScope, WifiPublic) {
    $scope.populate = function() {
        $scope.editable = !1,
        $scope.listMac = [],
        $scope.ssidSelected = {},
        $scope.macAddress = "",
        $scope.aclList = WifiPublic.populateACL()
    }
    ,
    $scope.populate(),
    $scope.editOptions = function(ssid) {
        $scope.editable = !0,
        $scope.ssidSelected = ssid,
        $scope.listMac = ssid.MACAddresses
    }
    ,
    $scope.addMacAddress = function() {
        return $scope.wifiPublicACLForm.$invalid ? void ($scope.submitted = !0) : ($scope.listMac.unshift({
            MACAddress: $scope.macAddress
        }),
        $scope.macAddress = "",
        void ($scope.submitted = !1))
    }
    ,
    $scope.removeMacAddress = function(index) {
        $scope.listMac.splice(index, 1)
    }
    ,
    $scope.save = function() {
        $scope.ssidSelected.MACAddresses = $scope.listMac,
        WifiPublic.saveACL($scope.ssidSelected, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.wifiPublicACLForm.$setPristine(!0),
                $rootScope.$digest(),
                $scope.submitted = !1,
                $scope.populate()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
}
]),
sboxApp.controller("WiFiPublicAutoACLController", ["$scope", "$rootScope", "WifiPublic", "$timeout", function($scope, $rootScope, WifiPublic, $timeout) {
    $scope.populate = function() {
        var data = WifiPublic.populateAutoACL();
        $scope.enable = data.enable,
        $scope.ssids = data.ssids,
        $scope.sourceSSIDs = data.sourceSSIDs,
        $scope.targetSSIDs = data.targetSSIDs
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        var autoACLData = {
            enable: $scope.enable,
            ssids: $scope.ssids,
            sourceSSIDs: $scope.sourceSSIDs,
            targetSSIDs: $scope.targetSSIDs
        }
          , options = {
            sync: !1,
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.automatedAclForm.$setPristine(!0),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        };
        $rootScope.globalWait = !0,
        $timeout(function() {
            $rootScope.$digest()
        }),
        WifiPublic.saveAutoACL(autoACLData, options)
    }
}
]),
sboxApp.controller("WifiSimpleWizardController", ["$scope", "WiFi", "ConnectedDevices", function($scope, WiFi, ConnectedDevices) {
    var defaultEndOfSSIDExp = /\-[2|5]g$/i;
    $scope.mode = "priv",
    $scope.wifi2 = "2.4GHz",
    $scope.wifi5 = "5GHz",
    $scope.processingWiFi = !1;
    var _checkWiFiEnable = function(wifi) {
        return "both" === wifi ? $scope.radios[$scope.wifi2].wifiEnable || $scope.radios[$scope.wifi5].wifiEnable : wifi === $scope.wifi2 ? !!$scope.radios[$scope.wifi2].wifiEnable : wifi === $scope.wifi5 ? !!$scope.radios[$scope.wifi5].wifiEnable : !1
    }
      , _securityModeConflicting = function() {
        return $scope.radios[$scope.wifi2].wifiEnable && $scope.radios[$scope.wifi5].wifiEnable && $scope.radios[$scope.wifi2].securityMode !== $scope.radios[$scope.wifi5].securityMode ? !0 : !1
    };
    $scope.checkWiFiEnable = _checkWiFiEnable,
    $scope.securityModeConflicting = _securityModeConflicting,
    $scope.showPasswordsText = !1;
    var dataRadio, _getWifiStatus = function(wifiStatus) {
        return !!wifiStatus && "UP" === wifiStatus.ssid && "ENABLED" === wifiStatus.accessPoint && "UP" === wifiStatus.radio
    }, _getSingleSSID = function() {
        return ($scope.radios[$scope.wifi2].ssid || $scope.radios[$scope.wifi5].ssid || "").replace(defaultEndOfSSIDExp, "")
    }, _getSecurityMode = function() {
        var securityMode = $scope.radios[$scope.wifi2].securityMode;
        return _securityModeConflicting() ? securityMode : $scope.radios[$scope.wifi2].wifiEnable ? securityMode : $scope.radios[$scope.wifi5].wifiEnable ? $scope.radios[$scope.wifi5].securityMode : securityMode
    };
    $scope.populate = function() {
        ConnectedDevices.updateCache(),
        $scope.listWifi24Devices = ConnectedDevices.getWifiDevices("wifi24", !1),
        $scope.listWifi5Devices = ConnectedDevices.getWifiDevices("wifi5", !1),
        $scope.wifi24Status = ConnectedDevices.getWifiStatus("wifi24"),
        $scope.wifi5Status = ConnectedDevices.getWifiStatus("wifi5"),
        WiFi.updateCache([{
            radio: "2.4GHz",
            mode: $scope.mode
        }, {
            radio: "5GHz",
            mode: $scope.mode
        }]);
        var data = WiFi.populate([{
            radio: "2.4GHz",
            mode: $scope.mode
        }, {
            radio: "5GHz",
            mode: $scope.mode
        }]);
        $scope.radios = {},
        $scope.stringQr = {},
        $scope.selectChannel = {},
        $scope.selectSecurityMode = {},
        $scope.possibleStandards = {
            "2.4GHz": [],
            "5GHz": []
        };
        for (var radio in data)
            dataRadio = data[radio][$scope.mode],
            $scope.radios[radio] || ($scope.radios[radio] = {}),
            $scope.radios[radio].wifiEnable = dataRadio.enable,
            $scope.radios[radio].wifiStatus = _getWifiStatus(dataRadio.wifiStatus),
            $scope.radios[radio].ssid = dataRadio.ssid,
            $scope.radios[radio].securityMode = dataRadio.securityMode,
            $scope.radios[radio].password = dataRadio.password;
        $scope.wifiSSID = _getSingleSSID(),
        $scope.bothWifiEnable = _checkWiFiEnable("both"),
        $scope.wifi2Enable = _checkWiFiEnable($scope.wifi2),
        $scope.wifi5Enable = _checkWiFiEnable($scope.wifi5),
        $scope.securityMode = _getSecurityMode(),
        $scope.sameSSID = $scope.wifi5Status.ssid === $scope.wifi24Status.ssid,
        $scope.newSSID = $scope.wifiSSID
    }
    ,
    $scope.populate(),
    $scope.securityModeMismatch = function() {
        return !$.util.validPasswordCharacters($scope.securityMode, $scope.newPass)
    }
    ,
    $scope.onOpenWifiModal = function() {
        $scope.newSSIDSubmitted = !1,
        $scope.newSSID = $scope.wifiSSID,
        $scope.wifinameForm && $scope.wifinameForm.$setPristine(),
        $scope.newPassSubmitted = !1,
        $scope.newPass = "",
        $scope.confirmPass = "",
        $scope.wifipassForm && $scope.wifipassForm.$setPristine()
    }
    ,
    $scope.passwordsMismatch = function() {
        return $scope.newPass !== $scope.confirmPass
    }
    ,
    $scope.changePassword = function() {
        if ($scope.newPassSubmitted = !0,
        !($scope.wifipassForm.$invalid || _securityModeConflicting() || $scope.passwordsMismatch() || $scope.securityModeMismatch())) {
            var dataToSave = [];
            _checkWiFiEnable($scope.wifi2) && dataToSave.push({
                radio: $scope.wifi2,
                mode: $scope.mode,
                data: {
                    password: $scope.newPass
                }
            }),
            _checkWiFiEnable($scope.wifi5) && dataToSave.push({
                radio: $scope.wifi5,
                mode: $scope.mode,
                data: {
                    password: $scope.newPass
                }
            }),
            WiFi.saveBasic(dataToSave, {
                success: function() {
                    $scope.populate(),
                    $("#modal-pass-change").foundation("reveal", "close")
                },
                error: function() {}
            })
        }
    }
    ,
    $scope.changeSettings = function() {
        $scope.newSSIDSubmitted = !0,
        $scope.newPassSubmitted = !0,
        $scope.wifiSettingsForm.$invalid || $scope.wifiSettingsForm.$invalid || _securityModeConflicting() || $scope.passwordsMismatch() || $scope.securityModeMismatch() || ($scope.newSSID.replace(defaultEndOfSSIDExp, ""),
        WiFi.saveBasic([{
            radio: $scope.wifi2,
            mode: $scope.mode,
            data: {
                ssid: $scope.newSSID,
                password: $scope.newPass
            }
        }, {
            radio: $scope.wifi5,
            mode: $scope.mode,
            data: {
                ssid: $scope.newSSID,
                password: $scope.newPass
            }
        }], {
            success: function() {
                $("#modal-pass-change").foundation("reveal", "close"),
                $scope.populate()
            },
            error: function() {}
        }))
    }
    ,
    $scope.changeWiFiName = function() {
        $scope.newSSIDSubmitted = !0,
        $scope.wifinameForm.$invalid || ($scope.newSSID.replace(defaultEndOfSSIDExp, ""),
        WiFi.saveBasic([{
            radio: $scope.wifi2,
            mode: $scope.mode,
            data: {
                ssid: $scope.newSSID
            }
        }, {
            radio: $scope.wifi5,
            mode: $scope.mode,
            data: {
                ssid: $scope.newSSID
            }
        }], {
            success: function() {
                $("#modal-ssid-change").foundation("reveal", "close"),
                $scope.populate()
            },
            error: function() {}
        }))
    }
    ,
    $scope.changeWiFi = function(wifi, value) {
        var dataToSave = [];
        "both" !== wifi && wifi !== $scope.wifi2 || _checkWiFiEnable($scope.wifi2) === value || dataToSave.push({
            radio: $scope.wifi2,
            mode: $scope.mode,
            data: {
                enable: value
            }
        }),
        "both" !== wifi && wifi !== $scope.wifi5 || _checkWiFiEnable($scope.wifi5) === value || dataToSave.push({
            radio: $scope.wifi5,
            mode: $scope.mode,
            data: {
                enable: value
            }
        }),
        $scope.processingWiFi = wifi,
        WiFi.saveBasic(dataToSave, {
            success: function() {
                $scope.populate(),
                $scope.processingWiFi = !1
            },
            error: function() {
                $scope.populate(),
                $scope.processingWiFi = !1
            }
        })
    }
}
]),
sboxApp.controller("FirewallController", ["$scope", "$rootScope", "Firewall", "ConnectedDevices", "$stateParams", function($scope, $rootScope, Firewall, ConnectedDevices, $stateParams) {
    var gwIp, gwMask, netInfo, uid, selectedDevice, fields;
    $scope.fields = {
        level: void 0
    },
    $scope.protocolListStatic = $.util.getModuleConfig("accessControl.firewall.protocolList", null);
    var _isAllIPAllowed = function(ip) {
        return "*" === ip || "" === ip
    }
      , _isAllPortAllowed = function(port) {
        return 0 === parseInt(port, 10) || "*" === port || "" === port
    }
      , _getProtocolValue = function(protocol) {
        return $scope.protocolListStatic ? $scope.protocolListStatic[protocol] : protocol
    }
      , run = function() {
        populate(),
        $scope.populateLevel(),
        $scope.toDeleteRule = null,
        $scope.toEditRule = null
    }
      , populate = function() {
        Firewall.updateCache(),
        gwIp = Firewall.getGwIP(),
        gwMask = Firewall.getGwMask(),
        netInfo = $.util.getNetworkInfo(gwIp, gwMask),
        netInfo = netInfo.first.split("."),
        netInfo[netInfo.length - 1] = 1 * netInfo[netInfo.length - 1] + 1,
        netInfo = netInfo.join("."),
        $scope.bestPlaceholder = netInfo,
        uid = parseInt($stateParams.uid, 10),
        selectedDevice = null,
        fields = {
            level: Firewall.getPolicy(),
            respondToPing: Firewall.getRespondToPing(),
            deviceIpAddress: "",
            rules: Firewall.search(),
            nRule: Firewall.getModel(),
            protocolList: $scope.protocolListStatic ? $scope.protocolListStatic : Firewall.getProtocolList(),
            listServices: Firewall.getServicesList()
        },
        $scope.originalRules = angular.copy(fields.rules),
        $scope.defaultLevel = fields.level,
        $scope.defaultRespondToPing = fields.respondToPing,
        $scope.fields.level = $scope.defaultLevel,
        uid ? (selectedDevice = ConnectedDevices.getDeviceById(uid),
        fields.nRule.SourceIP = selectedDevice[0].ipAddress,
        fields.nRule.Level = $scope.defaultLevel,
        fields.deviceIpAddress = selectedDevice[0].ipAddress,
        $scope.loadedFromDevice = !0) : $scope.loadedFromDevice = !1,
        $scope.fields = fields,
        $scope.ruleWithPort = !0
    };
    $scope.save = function() {
        var options = {
            success: function() {
                null !== $scope.fields.respondToPing && Firewall.saveRespondToPing($scope.fields.respondToPing),
                $scope.defaultRespondToPing = $scope.fields.respondToPing,
                $scope.hasRuleModified = !1,
                $rootScope.showMessage = !0,
                $rootScope.globalWait = !1,
                $scope.defaultLevel = $scope.fields.nRule.Level,
                $scope.fields.respondToPing = $scope.defaultRespondToPing,
                $scope.toEditRule = null,
                $rootScope.flagWatchForm = !1,
                $scope.clearForm(),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        };
        Firewall.savePolicy($scope.fields.level, options)
    }
    ,
    $scope.$watch("fields.status", function() {
        $scope.fields.nRule.Level = $scope.fields.level
    }),
    $scope.setLevel = function(lvl) {
        $scope.defaultLevel === lvl || void 0 !== $rootScope.showMessage ? $rootScope.flagWatchForm = !1 : $rootScope.flagWatchForm = !0,
        $scope.fields.nRule.Level = lvl,
        $scope.fields.level = lvl
    }
    ;
    var _removeNoneRules = function(rulesArr) {
        return $.map(rulesArr, function(obj) {
            return "NONE" === obj.Service ? null : obj
        })
    };
    $scope.populateLevel = function() {
        var data = Firewall.populate();
        $scope.lowRules = _removeNoneRules(data.lowRules),
        $scope.mediumRules = _removeNoneRules(data.mediumRules),
        $scope.highRules = _removeNoneRules(data.highRules)
    }
    ,
    $scope.populateCustom = function() {
        Firewall.updateCacheCustom(),
        $scope.fields.rules = Firewall.search(),
        $scope.hasDragged = !1,
        $scope.hasRuleModified = !1
    }
    ,
    $scope.deleteRule = function(leRule) {
        $scope.toDeleteRule = leRule
    }
    ,
    $scope.cancelRemove = function() {
        $scope.toDeleteRule = null
    }
    ,
    $scope.editRule = function(obj) {
        clearErrors(),
        $(document).scrollTop(0),
        $scope.toEditRule = obj,
        fields.nRule = $.extend({}, obj),
        "NONE" === fields.nRule.Service && (fields.nRule.Service = "")
    }
    ,
    $scope.getProtocolLabelByNum = function(protocolNum, objProtocols) {
        if (null === protocolNum || void 0 === protocolNum || "" === protocolNum)
            return "";
        if (!/^\d+$/.test(protocolNum))
            return protocolNum;
        for (var key in objProtocols)
            if (objProtocols.hasOwnProperty(key) && objProtocols[key] && objProtocols[key].toString() === protocolNum.toString())
                return key;
        return ""
    }
    ,
    $scope.updateRule = function() {
        var obj = $scope.toEditRule
          , nRule = fields.nRule;
        nRule.indexEdit = $.inArray(obj, fields.rulesList),
        nRule.Service || (nRule.Service = "NONE");
        var valid = $scope.validateCustomRule(nRule);
        valid && (obj.Description = nRule.Description,
        obj.SourcePort = nRule.SourcePort,
        obj.SourcePortRangeMax = nRule.SourcePortRangeMax,
        obj.DestPort = nRule.DestPort,
        obj.DestPortRangeMax = nRule.DestPortRangeMax,
        obj.SourceIP = nRule.SourceIP,
        obj.DestIP = nRule.DestIP,
        obj.Service = nRule.Service,
        obj.Protocol = nRule.Protocol,
        obj.Target = nRule.Target,
        obj.Service = nRule.Service,
        obj.Order = nRule.Order,
        obj.Edited = !0,
        obj.IPVersion = $.constants.ipVersionFirewall,
        $scope.toEditRule = null,
        $scope.saveRule(),
        $scope.clearForm())
    }
    ,
    $scope.registerEditedRule = function(rule) {
        rule.Edited = !rule.Edited,
        $.config.onChangeSave ? $scope.save() : $scope.hasRuleModified = angular.equals($scope.originalRules, $scope.fields.rules) ? !1 : !0
    }
    ,
    $scope.changeService = function() {
        var leModel = Firewall.getModel();
        $.constants.services[fields.nRule.Service] ? (fields.nRule.SourcePort = $.constants.services[fields.nRule.Service].internalPort,
        fields.nRule.DestPort = $.constants.services[fields.nRule.Service].externalPort,
        fields.nRule.Protocol = $.constants.services[fields.nRule.Service].protocol,
        fields.nRule.Protocol = _getProtocolValue($.constants.services[fields.nRule.Service].protocol),
        $scope.ruleWithPort = !0) : (fields.nRule.SourcePort = leModel.SourcePort,
        fields.nRule.DestPort = leModel.DestPort,
        fields.nRule.Protocol = _getProtocolValue(leModel.Protocol),
        $scope.ruleWithPort = !1),
        $scope.formCustomRule.description.$setValidity("description", !0),
        $scope.formCustomRule.sourcePort.$setValidity("sourcePort", !0),
        $scope.formCustomRule.destPort.$setValidity("destPort", !0)
    }
    ,
    $scope.clearForm = function() {
        $scope.fields.nRule = Firewall.getModel(),
        clearErrors(),
        $scope.formCustomRule.$setPristine(!0),
        selectedDevice && ($scope.fields.nRule.SourceIP = selectedDevice[0].ipAddress)
    }
    ;
    var clearErrors = function() {
        $scope.formCustomRule.sourceIp.$setValidity("sourceIp", !0),
        $scope.formCustomRule.destIp.$setValidity("destIp", !0),
        $scope.formCustomRule.sourcePort.$setValidity("sourcePort", !0),
        $scope.formCustomRule.destPort.$setValidity("destPort", !0),
        $scope.formCustomRule.description.$setValidity("description", !0)
    };
    $scope.confirmRemove = function() {
        $scope.toDeleteRule && ($scope.toDeleteRule.toBeDeleted = !0,
        $scope.saveRule()),
        $scope.cancelRemove()
    }
    ,
    $scope.addRule = function() {
        fields.nRule.Service || (fields.nRule.Service = "NONE");
        var valid = $scope.validateCustomRule($scope.fields.nRule);
        valid && ($scope.fields.rules.push(fields.nRule),
        $scope.clearForm(),
        $scope.saveRule())
    }
    ,
    $scope.cancel = function() {
        $scope.toEditRule = null,
        $scope.clearForm()
    }
    ,
    $scope.saveRule = function() {
        var saveFlag = !1;
        $scope.fields.rules.length > 0 && (saveFlag = Firewall.save($.extend(!0, {}, $scope.fields.rules)),
        $scope.populateCustom()),
        $scope.toDeleteRule && $scope.toDeleteRule.toBeDeleted && ($rootScope.deleted = !0),
        $scope.submitted = !saveFlag,
        $rootScope.showMessage = saveFlag
    }
    ;
    var _fillPorts = function(rule) {
        var source = []
          , dest = [];
        _isAllPortAllowed(rule.SourcePort) ? (rule.SourcePort = 0,
        rule.SourcePortRangeMax = -1) : (source = rule.SourcePort.toString().split("-"),
        rule.SourcePort = source[0],
        2 !== source.length ? rule.SourcePortRangeMax = -1 : rule.SourcePortRangeMax = source[1]),
        _isAllPortAllowed(rule.DestPort) ? (rule.DestPort = 0,
        rule.DestPortRangeMax = -1) : (dest = rule.DestPort.toString().split("-"),
        rule.DestPort = dest[0],
        2 !== dest.length ? rule.DestPortRangeMax = -1 : rule.DestPortRangeMax = dest[1])
    };
    $scope.validateCustomRule = function(rule) {
        clearErrors();
        var valid = !0
          , validationDataModel = {
            gatewayIp: $.xpaths.mySagemcomBox.dhcp.ipv4Address,
            subnetmask: $.xpaths.mySagemcomBox.dhcp.subnetMaskDefault
        }
          , validationData = $.xmo.getValuesTree(validationDataModel);
        _fillPorts(rule);
        var ipLocalAll = validationData.gatewayIp.split(".");
        ipLocalAll[3] = "0",
        ipLocalAll = ipLocalAll.join(".");
        var SourceIP = rule.SourceIP.split("/")[0]
          , SourceMask = rule.SourceIP.split("/")[1]
          , DestIP = rule.DestIP.split("/")[0]
          , DestMask = rule.DestIP.split("/")[1];
        return (!$.constants.routeAvaliableMasks[SourceMask] && void 0 !== SourceMask || !_isAllIPAllowed(SourceIP) && !$.util.checkLanIp(SourceIP, validationData.gatewayIp, validationData.subnetmask) && SourceIP !== ipLocalAll) && ($scope.formCustomRule.sourceIp.$setValidity("sourceIp", !1),
        valid = !1),
        (!$.constants.routeAvaliableMasks[DestMask] && void 0 !== DestMask || !_isAllIPAllowed(DestIP) && !$.util.checkIP(DestIP) && "0.0.0.0" !== DestIP) && ($scope.formCustomRule.destIp.$setValidity("destIp", !1),
        valid = !1),
        "NONE" === rule.Service && ((!$.util.checkPort(rule.SourcePort) || !$.util.checkPort(rule.SourcePortRangeMax) && -1 !== rule.SourcePortRangeMax || parseInt(rule.SourcePortRangeMax, 10) > 0 && parseInt(rule.SourcePort, 10) > parseInt(rule.SourcePortRangeMax, 10)) && ($scope.formCustomRule.sourcePort.$setValidity("sourcePort", !1),
        valid = !1),
        (!$.util.checkPort(rule.DestPort) || !$.util.checkPort(rule.DestPortRangeMax) && -1 !== rule.DestPortRangeMax || parseInt(rule.DestPortRangeMax, 10) > 0 && parseInt(rule.DestPort, 10) > parseInt(rule.DestPortRangeMax, 10)) && ($scope.formCustomRule.destPort.$setValidity("destPort", !1),
        valid = !1),
        rule.Description || ($scope.formCustomRule.description.$setValidity("description", !1),
        valid = !1)),
        valid
    }
    ,
    $scope.outCallback = function(event) {
        $(event.target).removeClass("dashed-border")
    }
    ,
    $scope.overCallback = function(event) {
        $(event.target).addClass("dashed-border")
    }
    ,
    $scope.dropCallback = function(event) {
        $(event.target).removeClass("dashed-border"),
        $scope.blockEdit = !0,
        $scope.hasDragged = !0;
        for (var x in $scope.fields.rules)
            $scope.fields.rules[x].Order = parseInt(x) + 1,
            $scope.fields.rules[x].Edited = !0
    }
    ,
    $scope.orderUp = function(rule) {
        $scope.hasDragged = !0;
        var upperRule, currentRule;
        for (var x in $scope.fields.rules)
            if (x = parseInt(x),
            $scope.fields.rules[x].uid === rule.uid) {
                upperRule = angular.copy($scope.fields.rules[x - 1]),
                currentRule = angular.copy($scope.fields.rules[x]),
                $scope.fields.rules[x] = angular.copy(upperRule),
                $scope.fields.rules[x - 1] = angular.copy(currentRule),
                $scope.fields.rules[x].Order = currentRule.Order,
                $scope.fields.rules[x - 1].Order = upperRule.Order,
                $scope.fields.rules[x].Edited = !0,
                $scope.fields.rules[x - 1].Edited = !0;
                break
            }
    }
    ,
    $scope.orderDown = function(rule) {
        $scope.hasDragged = !0;
        var lowerRule, currentRule;
        for (var x in $scope.fields.rules)
            if (x = parseInt(x),
            $scope.fields.rules[x].uid === rule.uid) {
                lowerRule = angular.copy($scope.fields.rules[x + 1]),
                currentRule = angular.copy($scope.fields.rules[x]),
                $scope.fields.rules[x] = angular.copy(lowerRule),
                $scope.fields.rules[x + 1] = angular.copy(currentRule),
                $scope.fields.rules[x].Order = currentRule.Order,
                $scope.fields.rules[x + 1].Order = lowerRule.Order,
                $scope.fields.rules[x].Edited = !0,
                $scope.fields.rules[x + 1].Edited = !0;
                break
            }
    }
    ,
    $scope.saveOrder = function() {
        Firewall.saveOrder($.extend(!0, {}, $scope.fields.rules)),
        $scope.blockEdit = !1,
        $scope.hasRuleModified = !1,
        $scope.hasDragged = !1,
        $scope.originalRules = angular.copy($scope.fields.rules),
        $rootScope.showMessage = !0
    }
    ,
    $scope.cancelSave = function() {
        $scope.fields.level = $scope.defaultLevel,
        $scope.fields.respondToPing = $scope.defaultRespondToPing,
        $scope.toEditRule = null,
        $scope.clearForm()
    }
    ,
    run()
}
]),
sboxApp.controller("Ipv6PinhollingController", ["$scope", "$rootScope", "Ipv6Pinholling", function($scope, $rootScope, Ipv6Pinholling) {
    var fields, _isAllIPAllowed = function(ip) {
        return "*" === ip || "" === ip
    }, _isAllPortAllowed = function(port) {
        return 0 === parseInt(port, 10) || "*" === port || "" === port
    }, run = function() {
        populate(),
        $scope.toDeleteRule = null,
        $scope.toEditRule = null
    }, populate = function() {
        Ipv6Pinholling.updateCache(),
        fields = {
            rules: Ipv6Pinholling.search(),
            nRule: Ipv6Pinholling.getModel(),
            protocolList: Ipv6Pinholling.getProtocolList()
        },
        $scope.originalRules = angular.copy(fields.rules),
        $scope.fields = fields
    };
    $scope.populateRules = function() {
        Ipv6Pinholling.updateCache(),
        $scope.fields.rules = Ipv6Pinholling.search(),
        $scope.hasDragged = !1,
        $scope.hasRuleModified = !1
    }
    ,
    $scope.deleteRule = function(leRule) {
        $scope.toDeleteRule = leRule
    }
    ,
    $scope.cancelRemove = function() {
        $scope.toDeleteRule = null
    }
    ,
    $scope.editRule = function(obj) {
        clearErrors(),
        $(document).scrollTop(0),
        $scope.toEditRule = obj,
        fields.nRule = $.extend({}, obj)
    }
    ,
    $scope.updateRule = function() {
        var obj = $scope.toEditRule
          , nRule = fields.nRule;
        nRule.indexEdit = $.inArray(obj, fields.rulesList);
        var valid = $scope.validateCustomRule(nRule);
        valid && (obj.Description = nRule.Description,
        obj.SourcePort = nRule.SourcePort,
        obj.SourcePortRangeMax = nRule.SourcePortRangeMax,
        obj.DestPort = nRule.DestPort,
        obj.DestPortRangeMax = nRule.DestPortRangeMax,
        obj.SourceIP = nRule.SourceIP,
        obj.DestIP = nRule.DestIP,
        obj.Protocol = nRule.Protocol,
        obj.Target = nRule.Target,
        obj.Order = nRule.Order,
        obj.Edited = !0,
        obj.IPVersion = $.constants.ipVersionPinHolling,
        $scope.toEditRule = null,
        $scope.saveRule(),
        $scope.clearForm())
    }
    ,
    $scope.registerEditedRule = function(rule) {
        rule.Edited = !rule.Edited,
        $scope.hasRuleModified = angular.equals($scope.originalRules, $scope.fields.rules) ? !1 : !0
    }
    ,
    $scope.clearForm = function() {
        $scope.fields.nRule = Ipv6Pinholling.getModel(),
        clearErrors(),
        $scope.formCustomRule.$setPristine(!0)
    }
    ;
    var clearErrors = function() {
        $scope.formCustomRule.sourceIp.$setValidity("sourceIp", !0),
        $scope.formCustomRule.destIp.$setValidity("destIp", !0),
        $scope.formCustomRule.sourcePort.$setValidity("sourcePort", !0),
        $scope.formCustomRule.destPort.$setValidity("destPort", !0),
        $scope.formCustomRule.description.$setValidity("description", !0)
    };
    $scope.confirmRemove = function() {
        $scope.toDeleteRule && ($scope.toDeleteRule.toBeDeleted = !0,
        $scope.saveRule()),
        $scope.cancelRemove()
    }
    ,
    $scope.addRule = function() {
        var valid = $scope.validateCustomRule($scope.fields.nRule);
        valid && ($scope.fields.rules.push(fields.nRule),
        $scope.clearForm(),
        $scope.saveRule())
    }
    ,
    $scope.cancel = function() {
        $scope.toEditRule = null,
        $scope.clearForm()
    }
    ,
    $scope.saveRule = function() {
        var saveFlag = !1;
        $scope.fields.rules.length > 0 && (saveFlag = Ipv6Pinholling.save($.extend(!0, {}, $scope.fields.rules)),
        $scope.populateRules()),
        $scope.toDeleteRule && $scope.toDeleteRule.toBeDeleted && ($rootScope.deleted = !0),
        $scope.submitted = !saveFlag,
        $rootScope.showMessage = saveFlag
    }
    ;
    var _fillPorts = function(rule) {
        var source = []
          , dest = [];
        _isAllPortAllowed(rule.SourcePort) ? (rule.SourcePort = 0,
        rule.SourcePortRangeMax = 0) : (source = rule.SourcePort.toString().split("-"),
        rule.SourcePort = source[0],
        2 !== source.length ? rule.SourcePortRangeMax = 0 : rule.SourcePortRangeMax = source[1]),
        _isAllPortAllowed(rule.DestPort) ? (rule.DestPort = 0,
        rule.DestPortRangeMax = 0) : (dest = rule.DestPort.toString().split("-"),
        rule.DestPort = dest[0],
        2 !== dest.length ? rule.DestPortRangeMax = 0 : rule.DestPortRangeMax = dest[1])
    };
    $scope.validateCustomRule = function(rule) {
        clearErrors();
        var valid = !0;
        return _fillPorts(rule),
        _isAllIPAllowed(rule.SourceIP) || $.util.isValidIpv6(rule.SourceIP) || ($scope.formCustomRule.sourceIp.$setValidity("sourceIp", !1),
        valid = !1),
        _isAllIPAllowed(rule.DestIP) || $.util.isValidIpv6(rule.DestIP) || ($scope.formCustomRule.destIp.$setValidity("destIp", !1),
        valid = !1),
        (!$.util.checkPort(rule.SourcePort) || !$.util.checkPort(rule.SourcePortRangeMax) || parseInt(rule.SourcePortRangeMax, 10) > 0 && parseInt(rule.SourcePort, 10) > parseInt(rule.SourcePortRangeMax, 10)) && ($scope.formCustomRule.sourcePort.$setValidity("sourcePort", !1),
        valid = !1),
        (!$.util.checkPort(rule.DestPort) || !$.util.checkPort(rule.DestPortRangeMax) || parseInt(rule.DestPortRangeMax, 10) > 0 && parseInt(rule.DestPort, 10) > parseInt(rule.DestPortRangeMax, 10)) && ($scope.formCustomRule.destPort.$setValidity("destPort", !1),
        valid = !1),
        rule.Description || ($scope.formCustomRule.description.$setValidity("description", !1),
        valid = !1),
        valid
    }
    ,
    $scope.outCallback = function(event) {
        $(event.target).removeClass("dashed-border")
    }
    ,
    $scope.overCallback = function(event) {
        $(event.target).addClass("dashed-border")
    }
    ,
    $scope.dropCallback = function(event) {
        $(event.target).removeClass("dashed-border"),
        $scope.blockEdit = !0,
        $scope.hasDragged = !0;
        for (var x in $scope.fields.rules)
            $scope.fields.rules[x].Order = parseInt(x) + 1,
            $scope.fields.rules[x].Edited = !0
    }
    ,
    $scope.orderUp = function(rule) {
        $scope.hasDragged = !0;
        var upperRule, currentRule;
        for (var x in $scope.fields.rules)
            if (x = parseInt(x),
            $scope.fields.rules[x].uid === rule.uid) {
                upperRule = angular.copy($scope.fields.rules[x - 1]),
                currentRule = angular.copy($scope.fields.rules[x]),
                $scope.fields.rules[x] = angular.copy(upperRule),
                $scope.fields.rules[x - 1] = angular.copy(currentRule),
                $scope.fields.rules[x].Order = currentRule.Order,
                $scope.fields.rules[x - 1].Order = upperRule.Order,
                $scope.fields.rules[x].Edited = !0,
                $scope.fields.rules[x - 1].Edited = !0;
                break
            }
    }
    ,
    $scope.orderDown = function(rule) {
        $scope.hasDragged = !0;
        var lowerRule, currentRule;
        for (var x in $scope.fields.rules)
            if (x = parseInt(x),
            $scope.fields.rules[x].uid === rule.uid) {
                lowerRule = angular.copy($scope.fields.rules[x + 1]),
                currentRule = angular.copy($scope.fields.rules[x]),
                $scope.fields.rules[x] = angular.copy(lowerRule),
                $scope.fields.rules[x + 1] = angular.copy(currentRule),
                $scope.fields.rules[x].Order = currentRule.Order,
                $scope.fields.rules[x + 1].Order = lowerRule.Order,
                $scope.fields.rules[x].Edited = !0,
                $scope.fields.rules[x + 1].Edited = !0;
                break
            }
    }
    ,
    $scope.saveOrder = function() {
        Ipv6Pinholling.saveOrder($.extend(!0, {}, $scope.fields.rules)),
        $scope.blockEdit = !1,
        $scope.hasRuleModified = !1,
        $scope.hasDragged = !1,
        $scope.originalRules = angular.copy($scope.fields.rules),
        $rootScope.showMessage = !0
    }
    ,
    run()
}
]),
sboxApp.controller("RouteStaticController", ["$scope", "RouteStatic", "$rootScope", function($scope, RouteStatic, $rootScope) {
    var getModel = function() {
        var model = {
            uid: "",
            IPVersion: "",
            DestIPAddress: void 0,
            DestSubnetMask: "",
            Interface: "",
            GatewayIPAddress: void 0,
            ForwardingMetric: -1,
            Origin: "",
            isDeleted: !1,
            Enable: !0,
            Status: "",
            Source: "USER"
        };
        return model
    };
    $scope.added = !1,
    $scope.GatewayIPAddress = void 0,
    $scope.ForwardingMetric = -1,
    $scope.populate = function() {
        var result = RouteStatic.populate();
        $scope.routeTable = result.route,
        $scope.interfaceList = result.interfaceList,
        $scope.IPVersion = "IPv4",
        $scope.Interface = "IP_BR_LAN",
        $scope.Origin = "STATIC"
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        if ((void 0 !== $scope.DestIPAddress || void 0 !== $scope.GatewayIPAddress) && $scope.add(),
        !$scope.added) {
            var dataSave = {};
            dataSave.insertRoutes = [],
            dataSave.deleteRoutes = [];
            for (var successInserted = !1, successDeleted = !1, success = !1, x = 0; x < $scope.routeTable.length; x++)
                $scope.routeTable[x].isDeleted && "" !== $scope.routeTable[x].uid && dataSave.deleteRoutes.push($scope.routeTable[x]),
                $scope.routeTable[x].isDeleted || "" !== $scope.routeTable[x].uid || dataSave.insertRoutes.push($scope.routeTable[x]);
            if (!dataSave.insertRoutes.length && !dataSave.deleteRoutes.length)
                return;
            return dataSave.insertRoutes.length > 0 && (successInserted = RouteStatic.insertRoutes(dataSave.insertRoutes)),
            dataSave.deleteRoutes.length > 0 && (successDeleted = RouteStatic.removeRoutes(dataSave.deleteRoutes)),
            success = successInserted || successDeleted,
            RouteStatic.updateCache(),
            $scope.populate(),
            $rootScope.showMessage = success,
            $scope.submitted = !success,
            success
        }
    }
    ,
    $scope.clear = function() {
        $scope.IPVersion = "IPv4",
        $scope.Interface = "IP_BR_LAN",
        $scope.Origin = "STATIC",
        $scope.GatewayIPAddress = void 0,
        $scope.ForwardingMetric = -1,
        $scope.DestIPAddress = void 0,
        $scope.routeStaticForm.$setPristine()
    }
    ,
    $scope.add = function() {
        if ($scope.added = !0,
        $scope.routeStaticForm.$valid) {
            var rule = getModel();
            rule.IPVersion = $scope.IPVersion,
            rule.Interface = $scope.Interface,
            rule.Origin = $scope.Origin,
            rule.GatewayIPAddress = $scope.GatewayIPAddress,
            rule.ForwardingMetric = parseInt($scope.ForwardingMetric, 10),
            rule.isDeleted = !1;
            var masks = $.constants.routeAvaliableMasks;
            if ($scope.DestIPAddress.indexOf("/") > 0) {
                var aux = $scope.DestIPAddress.split("/");
                rule.DestIPAddress = $scope.DestIPAddress,
                rule.DestSubnetMask = masks[aux[1]]
            } else
                rule.DestIPAddress = $scope.DestIPAddress + "/" + masks.indexOf("255.255.255.255"),
                rule.DestSubnetMask = masks[32];
            $scope.routeTable.push(rule),
            $scope.clear(),
            $scope.added = !1
        }
    }
    ,
    $scope.remove = function(rule) {
        rule.isDeleted = !0
    }
}
]),
sboxApp.controller("SipBasicController", ["$scope", "$rootScope", "Sip", "ConnectedDevices", function($scope, $rootScope, Sip, ConnectedDevices) {
    $scope.callerIdDateTime = null,
    $scope.showSipStatus = !0;
    var all = $.config.modules.main.showAllDevices;
    $scope.getStatusTelephony = function() {
        $scope.statusTelephony = ConnectedDevices.verifyStatusTelephony()
    }
    ,
    ConnectedDevices.getTelephoneDevices($scope.getStatusTelephony, all);
    var run = function() {
        $scope.getCallerIdDateTime()
    };
    $scope.getCallerIdDateTime = function() {
        var data = Sip.getCallerID();
        $scope.callerIdDateTime = data.callerIdDateTime
    }
    ,
    $scope.saveCallerId = function() {
        $rootScope.globalWait = !0;
        var options = {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.voiceForm.$setPristine(!0)
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        };
        return Sip.saveCallerID($scope.callerIdDateTime, options)
    }
    ,
    run()
}
]),
sboxApp.controller("SipSettingsController", ["$scope", "$rootScope", "Sip", "$timeout", "AnsweringMachine", function($scope, $rootScope, Sip, $timeout, AnsweringMachine) {
    $scope.voipDialpanPattern = $.util.getModuleConfig("SIPsettings.voipDialpanPattern", $.constants.voipDialpanPattern);
    var mailboxesList;
    $scope.refresh = function() {
        Sip.updateCache(),
        $scope.endPointsList = Sip.getEndPoints(),
        $scope.data = Sip.populate(),
        $scope.voiceStatus = Sip.getVoiceStatus()
    }
    ,
    $scope.selectLine = function(profile, line) {
        mailboxesList = mailboxesList || AnsweringMachine.getMailboxesList(),
        $scope.mailboxesList = mailboxesList,
        $scope.selectedLine = line,
        $scope.authPassword = line.authPassword,
        ($.config.showedpages.masmovil && $.config.showedpages.masmovil.enable || $.config.showedpages.totalplay && $.config.showedpages.totalplay.enable) && ($scope.selectedLine.authPassword = ""),
        $scope.idProfile = profile.uid,
        $scope.selectedProfile = $scope.isSiminn ? profile : null,
        $scope.selectedEndPoint = null,
        $scope.toShowDebug = !1,
        $timeout(function() {
            $scope.initCheckUnsaved("sipSettingsForm")
        }, 0)
    }
    ,
    $scope.selectProfile = function(profile) {
        if ($scope.selectedProfile = profile,
        $scope.selectedLine = null,
        $scope.selectedEndPoint = null,
        $scope.toShowDebug = !1,
        $.config.modules.SIPsettings.countryReadOnly)
            $scope.countryReadOnly = !0;
        else {
            $scope.sipCountries = $.constants.sipCountries,
            $scope.countryReadOnly = !1;
            var country = profile.localSelection;
            $.constants.sipCountries[country] || ($scope.sipCountries[country] = country)
        }
        $timeout(function() {
            $scope.initCheckUnsaved("sipSettingsForm")
        }, 0)
    }
    ,
    $scope.selectEndPoint = function(endPoint) {
        $scope.selectedEndPoint = endPoint,
        $scope.selectedProfile = null,
        $scope.selectedLine = null,
        $scope.toShowDebug = !1,
        $timeout(function() {
            $scope.initCheckUnsaved("sipSettingsForm")
        }, 0)
    }
    ,
    $scope.showDebug = function() {
        $scope.selectedEndPoint = null,
        $scope.selectedProfile = null,
        $scope.selectedLine = null,
        $scope.toShowDebug = !0,
        $timeout(function() {
            $scope.initCheckUnsaved("sipSettingsForm")
        }, 0)
    }
    ,
    $scope.save = function() {
        var result = !1;
        return $scope.sipSettingsForm.$valid && ($scope.selectedLine ? (void 0 !== $scope.selectedLine.authPasswordNew && $scope.selectedLine.authPasswordNew !== $scope.selectedLine.authPassword && ($scope.selectedLine.authPassword = $scope.selectedLine.authPasswordNew),
        result = Sip.saveLine($scope.idProfile, $scope.selectedLine, {
            success: function() {
                $rootScope.showMessage = !0
            },
            error: function() {
                $rootScope.showMessage = !1
            }
        })) : $scope.selectedProfile ? (result = Sip.saveProfile($scope.selectedProfile),
        $rootScope.showMessage = result) : (result = Sip.saveEndPoint($scope.selectedEndPoint),
        $rootScope.showMessage = result),
        $scope.sipSettingsForm.$setPristine(result)),
        $scope.refresh(),
        $scope.selectedLine && ($scope.selectedLine.authPasswordNew = void 0),
        ($.config.showedpages.masmovil && $.config.showedpages.masmovil.enable || $.config.showedpages.totalplay && $.config.showedpages.totalplay.enable) && ($scope.selectedLine.authPassword = ""),
        result
    }
    ,
    $scope.saveData = function() {
        var result = !1;
        return $scope.sipSettingsForm.$valid && (result = Sip.saveProfile($scope.selectedProfile),
        result ? (void 0 !== $scope.selectedLine.authPasswordNew && $scope.selectedLine.authPasswordNew !== $scope.selectedLine.authPassword && ($scope.selectedLine.authPassword = $scope.selectedLine.authPasswordNew),
        result = Sip.saveLine($scope.idProfile, $scope.selectedLine, {
            success: function() {
                $rootScope.showMessage = !0
            },
            error: function() {
                $rootScope.showMessage = !1
            }
        })) : $rootScope.showMessage = !1,
        $scope.sipSettingsForm.$setPristine(result)),
        $scope.refresh(),
        $scope.selectedLine && ($scope.selectedLine.authPasswordNew = void 0),
        result
    }
    ,
    $scope.restoreDefault = function() {
        $scope.selectedProfile = $.config.modules.SIPsettings.profileDefaultValues
    }
    ,
    $scope.refresh(),
    $scope.selectProfile(null !== $scope.data ? $scope.data[0] : {}),
    $.util.hasFeature("dtagXdsl") && ($scope.selectedProfile.name = "F@st5352 VRX517 B" === $rootScope.modelName ? "Speedport Plus Bonding" : "Speedport Plus",
    $scope.profile = $scope.data[0]),
    ($.util.hasFeature("isSiminn") || $.util.hasFeature("dtagXdsl")) && $scope.selectLine($scope.selectedProfile, $scope.selectedProfile.lines[0])
}
]),
sboxApp.controller("TelephonesMatrixController", ["$scope", "$rootScope", "TelephoneMatrix", "$timeout", "Sip", function($scope, $rootScope, TelephoneMatrix, $timeout, Sip) {
    $scope.showSipStatus = !0,
    $scope.showedHotline = !!$.config.showedpages.hotline && $.config.showedpages.hotline.enable === !1;
    var _checkReferenceList = function(referenceList, interfaceID) {
        var split = referenceList.split(",");
        return -1 === $.inArray(interfaceID + "", split) ? !1 : !0
    }
      , _getLineUid = function(xpath) {
        var uid = "";
        try {
            var rs = /Line\[@uid=\'?(\d+)\'?\]/i.exec(xpath);
            uid = parseInt(rs[1], 10)
        } catch (err) {
            uid = ""
        }
        return uid
    }
      , _mountOutGoingMatrix = function() {
        for (var i = 0; i < $scope.endPoints.length; i++)
            $scope.endPoints[i].OutGoingLine = _getLineUid($scope.endPoints[i].OutGoingLine)
    };
    $scope.referenceList = {},
    $scope.endPointPhones = {},
    $scope.populate = function() {
        TelephoneMatrix.updateCache(),
        $scope.lines = TelephoneMatrix.getLines(),
        $scope.endPoints = TelephoneMatrix.getEndPoints(),
        $($scope.lines).each(function(i, line) {
            $($scope.endPoints).each(function(j, phyInterface) {
                $scope.referenceList[line.uid] = $scope.referenceList[line.uid] || {},
                $scope.endPointPhones[phyInterface.InterfaceID] = $scope.endPointPhones[phyInterface.InterfaceID] || [],
                $scope.referenceList[line.uid][phyInterface.InterfaceID] = _checkReferenceList(line.PhyReferenceList, phyInterface.InterfaceID),
                $scope.referenceList[line.uid][phyInterface.InterfaceID] && $scope.endPointPhones[phyInterface.InterfaceID].push(line.DirectoryNumber)
            }),
            line.Status && (line.Status === $.constants.telephone.status ? line.statusOperational = $.constants.telephone.operational : line.Status === $.constants.telephone.registering ? line.statusOperational = $.constants.telephone.notregistered : line.statusOperational = $.constants.telephone.notbooked),
            line.isLineOperational = !1,
            line.statusOperational && "failure" !== line.statusOperational && "notbooked" !== line.statusOperational && "notregistered" !== line.statusOperational && (line.isLineOperational = !0)
        }),
        $scope.canIshowThis = $scope.lines.length > 0,
        _mountOutGoingMatrix()
    }
    ,
    $scope.eraseOutgoing = function(endpoint, line) {
        1 === $scope.lines.length && (endpoint.OutGoingLine === line ? endpoint.OutGoingLine = "" : endpoint.OutGoingLine = line)
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        $rootScope.globalWait = !0;
        var donnees = {
            incoming: $scope.lines,
            outgoing: $scope.endPoints
        };
        TelephoneMatrix.saveMatrix(donnees, {
            success: function() {
                $scope.populate(),
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
    ,
    $scope.hotlines = function() {
        var profiles = Sip.populate();
        $scope.profile = profiles[0],
        $scope.selectedLine ? $scope.selectLine($scope.profile, $scope.selectedLine) : $scope.selectLine($scope.profile, $scope.profile.lines[0])
    }
    ,
    $scope.selectLine = function(profile, line) {
        $scope.selectedLine = line,
        $scope.idProfile = profile.uid,
        $scope.selectedProfile = profile
    }
    ,
    $scope.saveHotline = function() {
        $rootScope.globalWait = !0,
        TelephoneMatrix.saveHotline($scope.selectedLine, {
            success: function() {
                $scope.hotlines(),
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
    ,
    $.util.hasFeature("dtagXdsl") && $scope.showedHotline && $scope.hotlines()
}
]),
sboxApp.controller("QrCodeWifiController", ["$scope", "$rootScope", "WiFi", function($scope, $rootScope, WiFi) {
    $scope.populate = function() {
        $scope.selectRadios = [];
        var allData, radioList = ["2.4GHz", "5GHz"];
        WiFi.updateCache([{
            radio: "2.4GHz",
            mode: $scope.mode
        }, {
            radio: "5GHz",
            mode: $scope.mode
        }]),
        allData = WiFi.populate();
        for (var x in radioList) {
            var dataWifi = allData[radioList[x]][$scope.mode];
            dataWifi.enable && $scope.selectRadios.push({
                radio: radioList[x],
                name: "Wireless " + radioList[x],
                qr: "WIFI:S:" + dataWifi.ssid + ";T:" + dataWifi.securityMode.substring(0, 3) + ";P:" + dataWifi.password + ";;"
            })
        }
        $scope.selectedRadio = $scope.selectRadios[0]
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("SimpleController", ["$scope", "$rootScope", "PPP", "$timeout", "$state", function($scope, $rootScope, PPP, $timeout, $state) {
    $scope.ppp = null;
    var ipRenewTimeoutId, ipRenewTimeout = 1e3 * $.util.getModuleConfig("internetConnectivity.ipRenewTimeout", 60);
    $scope.editStaticIp = $.util.getModuleConfig("internetConnectivity.editStaticIp", !1) === !0 || $.util.isSuperUser($.xmo.client.user),
    $scope.pppAdvancedParams = $.util.hasFeature("pppAdvancedParams"),
    $scope.pppGlobalWanMode = $.util.hasFeature("pppGlobalWanMode"),
    $scope.disableConnectionAddressType = $.util.getModuleConfig("internetConnectivity.disableConnectionAddressType", !1) === !0,
    $scope.connectionTypeReadOnly = $.util.getModuleConfig("internetConnectivity.connectionTypeReadOnly", !1) === !0,
    $scope.addressingTypeReadOnly = $.util.getModuleConfig("internetConnectivity.addressingTypeReadOnly", !1) === !0,
    $scope.hideStaticIpOption = $.util.getModuleConfig("internetConnectivity.hideStaticIpOption", !1) === !0,
    $scope.showApplyButton = !1,
    $scope.primaryModeEnable = !1,
    $scope.isSuperUser = $.util.isSuperUser($.xmo.client.user),
    $scope.addressingTypePPP = $.util.getModuleConfig("internetConnectivity.addressingTypePPP", !1),
    $scope.showStaticFields = $.util.getModuleConfig("internetConnectivity.showStaticFields", !1),
    $scope.showUptimeField = $.util.getModuleConfig("internetConnectivity.showUptimeField", !1),
    $scope.DNSManager = $.util.getModuleConfig("internetConnectivity.DNSManager", !1),
    $scope.defaultRoute = $.config.modules.internetConnectivity.defaultRoute,
    $scope.primaryModeEnable = $.config.showedpages.primaryMode && $.config.showedpages.primaryMode.enable,
    $scope.canResetInterface = $.util.getModuleConfig("internetConnectivity.canResetInterface", !1);
    var dnsFromInterface = $.util.getDataFromState("interfaceType", $state, "");
    $scope.isVoipInterface = "voipMngt" === dnsFromInterface,
    $scope.connectionOptions = $.config.connectionTypeIPv4Options || [{
        name: "DHCP",
        value: "DHCP"
    }, {
        name: "PPP",
        value: "PPP"
    }],
    $scope.hideStaticIpOption ? $scope.addressingOptions = [{
        name: "DHCP",
        value: "DHCP"
    }] : $scope.addressingOptions = [{
        name: "STATIC",
        value: "STATIC"
    }, {
        name: "DHCP",
        value: "DHCP"
    }],
    $scope.dnsOptions = [{
        name: "Obtain DNS Automatically",
        value: "DHCP"
    }, {
        name: "Manually Specify DNS",
        value: "STATIC"
    }],
    $scope.triggerOptions = [{
        name: "ONDEMAND",
        value: "ONDEMAND"
    }, {
        name: "ALWAYSON",
        value: "ALWAYSON"
    }, {
        name: "MANUAL",
        value: "MANUAL"
    }],
    $scope.globalWanModeOptions = $.util.getModuleConfig("internetConnectivity.globalWanModeOptions", [{
        name: "ROUTED_TAGGED",
        value: "ROUTED_TAGGED"
    }, {
        name: "ROUTED_UNTAGGED",
        value: "ROUTED_UNTAGGED"
    }]),
    $scope.primaryModeOptions = [{
        name: "DSL ONLY",
        value: "DSL_ONLY"
    }, {
        name: "FTTH ONLY",
        value: "FTTH_ONLY"
    }],
    $scope.staticDnsType = !!$.config.showedpages.staticDnsType && $.config.showedpages.staticDnsType.enable === !0;
    var isVDSLConnection = function(data) {
        if ("UP" === data.xdslStatus && $.util.getModuleConfig("dsl.displayVlanIdVDSL", !1)) {
            var value = $.constants.xdslStandards[data.xdslStandard.toUpperCase()];
            return value && value.contains("VDSL")
        }
        return !1
    }
      , _isADSL = function(data) {
        if (("ADSL" === data.interfaceType || $.config.modules.internetConnectivity.interfaceTypeAll && "ALL" === data.interfaceType) && "UP" === data.xdslStatus) {
            var value = $.constants.xdslStandards[data.xdslStandard.toUpperCase()];
            return value && value.contains("ADSL")
        }
        return !1
    };
    $scope.validatevcivpi = function() {
        var valid;
        return $.config.showedpages.vpivci && $.config.showedpages.vpivci.enable === !0 && $scope.formIpv4 && $scope.formIpv4.vpivci ? (valid = /^[0-9]{1,5}\/[0-9]{1,5}$/.test($scope.data.vcivpi),
        $scope.formIpv4.vpivci.$setValidity("invalid", !valid)) : valid = !0,
        valid
    }
    ,
    $scope.onChangeDnsType = function() {
        $scope.data && ("STATIC" === $scope.data.dnsType ? ($scope.data.dns1 = $scope.data.dns1Static,
        $scope.data.dns2 = $scope.data.dns2Static) : ($scope.data.dns1 = $scope.data.dns1Dhcp,
        $scope.data.dns2 = $scope.data.dns2Dhcp))
    }
    ;
    var _ipRenewUpdate = function() {
        $scope.populate(),
        $rootScope.globalWait = !1,
        $rootScope.$digest()
    };
    $scope.resetInterface = function() {
        $rootScope.globalWait = !0,
        PPP.resetInterface(dnsFromInterface, {
            success: function() {
                var idPeriodic = null;
                ipRenewTimeoutId = $timeout(function() {
                    $timeout(_ipRenewUpdate),
                    PPP.cancelIpRenewNotification(idPeriodic)
                }, ipRenewTimeout),
                idPeriodic = PPP.ipRenewPeriodic(dnsFromInterface, function(resp) {
                    resp && "string" == typeof resp && ($timeout(_ipRenewUpdate),
                    $timeout.cancel(ipRenewTimeoutId),
                    PPP.cancelIpRenewNotification(idPeriodic))
                })
            },
            error: function() {
                $timeout(function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $rootScope.$digest()
                })
            }
        })
    }
    ,
    $scope.getDnsInfo = function(data) {
        if ($scope.DNSManager && data.enableDnsStatic)
            return $scope.data.dnsType = "STATIC",
            $scope.data.dns1 = data.dns1Static,
            void ($scope.data.dns2 = data.dns2Static);
        if (data.enableDnsDhcp1 && data.enableDnsDhcp2)
            return $scope.data.dnsType = "DHCP",
            $scope.data.dns1 = data.dns1Dhcp,
            void ($scope.data.dns2 = data.dns2Dhcp);
        if ($scope.data.dns && "DHCP" === $scope.data.dnsType) {
            var dnsParts = $scope.data.dns.split(",");
            $scope.data.dns1 = dnsParts[0],
            $scope.data.dns2 = dnsParts[1] || "",
            $scope.data.dns1Dhcp = data.dns1,
            $scope.data.dns2Dhcp = data.dns2
        }
        return $.config.hasIPCP === !0 && $.config.ipcpDNS === !0 && data.enableDnsIPCP1 && data.enableDnsIPCP2 ? ($scope.data.dnsType = "DHCP",
        $scope.data.dns1 = data.dnsIPCP1,
        void ($scope.data.dns2 = data.dnsIPCP2)) : void 0
    }
    ,
    $scope.populate = function() {
        var data = PPP.searchAddressingTypeData($scope.DNSManager, dnsFromInterface);
        if ($scope.hideStaticIpOption && (data.addressingType = "DHCP"),
        "STATIC" !== data.addressingType || $scope.isVoipInterface || (data.gateway = data.gatewayIpAddress),
        data.dns1 = data.dns1Static,
        data.dns2 = data.dns2Static,
        $.util.hasFeature("DnsFromOnlyOneWay")) {
            var d2 = data.dns.split(",");
            data.dns1Dhcp = d2[0],
            data.dns2Dhcp = d2[1] ? d2[1] : ""
        } else
            data.dns1Dhcp = data.dns1Dhcp || "",
            data.dns2Dhcp = data.dns2Dhcp || "";
        data.PPPoePassthrough = data.PPPoePassthrough,
        data.globalWanMode = data.globalWanMode || "",
        data.DNSManager = $scope.DNSManager,
        data.dns1 || data.dns2 || (data.dnsType = "DHCP"),
        data.vlan = data.vlan,
        data.connectionType = $.util.hasFeature("bridgeModeConnectionType") && data.bridgeMode && !$scope.isVoipInterface ? "Bridge" : data.wanType,
        $scope.hideFieldsInBrigdeMode = $.util.getModuleConfig("internetConnectivity.hideFieldsInBrigdeMode", !1) && "Bridge" === data.connectionType,
        $scope.data = data,
        $scope.getDnsInfo(data),
        $scope.showApplyButton = $scope.editStaticIp || "PPP" === data.connectionType || data.vlan && $.config.showedpages.manageVLAN.enable,
        $scope.hasAutoIP = !!$.config.hasAutoIP,
        $scope.hasIPCP = !!$.config.hasIPCP,
        $scope.isADSL = _isADSL(data),
        $scope.isFTTH = "FTTH" === data.interfaceType || $.config.modules.internetConnectivity.interfaceTypeAll && "ALL" === data.interfaceType,
        $scope.displayVlan = $.util.hasFeature("manageVLAN") && (isVDSLConnection(data) || $.util.getModuleConfig("internetConnectivity.displayVlan")),
        $scope.enableDnsStatic = data.enableDnsStatic,
        $scope.disabledOnADSL = $.config.modules.internetConnectivity.disabledOnADSL && _isADSL(data),
        $scope.disabledOnVDSL = $.config.modules.internetConnectivity.disabledOnVDSL && isVDSLConnection(data),
        $scope.disableSelectConnectionType = !$scope.editStaticIp || $scope.disabledOnADSL || $scope.disabledOnVDSL || !$scope.isSuperUser || $scope.disableConnectionAddressType,
        $.util.hasFeature("forceEditConnectionType") && ($scope.disableSelectConnectionType = !1),
        $scope.primaryMode = data.primaryMode,
        $scope.hideFromFTTH = $.config.modules.internetConnectivity.hideOnFTTH ? $scope.isFTTH : $rootScope.isComhem || $rootScope.isMaelstromCable
    }
    ,
    $scope.saveStatus = function() {
        PPP.savePPPoePassthrough($scope.data.PPPoePassthrough) ? $rootScope.showMessage = !0 : $rootScope.showMessage = !1
    }
    ,
    $scope.save = function() {
        $scope.submitted = !0,
        $scope.validatevcivpi(),
        $scope.formIpv4.$valid && ($rootScope.globalWait = !0,
        $timeout(function() {
            "DHCP" === $scope.data.dnsType && ($scope.data.dns1 = "",
            $scope.data.dns2 = ""),
            $scope.primaryModeEnable && PPP.savePrimaryMode($scope.data.primaryMode),
            PPP.savePPPoePassthrough($scope.data.PPPoePassthrough),
            PPP.save({
                username: $scope.data.login,
                password: $scope.data.passwd,
                vlan: $scope.data.vlan,
                addressingType: $scope.data.addressingType,
                dnsType: $scope.data.dnsType,
                ip: $scope.data.ip,
                mask: $scope.data.mask,
                gateway: $scope.data.gateway,
                dns1: $scope.data.dns1,
                dns2: $scope.data.dns2,
                connectionType: $scope.data.connectionType,
                vcivpi: $scope.data.vcivpi,
                DNSManager: $scope.DNSManager,
                isCharterAll: $rootScope.isCharterAll,
                interfaceName: dnsFromInterface,
                defaultRoute: $scope.defaultRoute,
                connectionTrigger: $scope.data.connectionTrigger,
                maxMRUSize: $scope.data.maxMRUSize,
                globalWanMode: $scope.data.globalWanMode
            }, {
                success: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !0,
                    $scope.formIpv4.$setPristine(!0),
                    $scope.submitted = !1,
                    $(".clickMe").click(),
                    $timeout(function() {
                        $scope.populate(),
                        $rootScope.$digest()
                    })
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $scope.formIpv4.$setPristine(!0),
                    $scope.submitted = !1,
                    $timeout(function() {
                        $rootScope.$digest()
                    })
                }
            })
        }, 1e3))
    }
    ,
    $rootScope.handleAjaxError = function(watchtower) {
        watchtower.lastUrlErr && watchtower.lastUrlErr.indexOf("ipv4") > -1 && ($rootScope.globalWait = !1,
        $rootScope.showMessage = !0,
        $timeout(function() {
            $rootScope.$digest()
        }),
        $scope.formIpv4.$setPristine(!0)),
        $rootScope.watchtower = {}
    }
    ,
    $scope.$on("$destroy", function() {
        delete $rootScope.handleAjaxError
    }),
    $scope.restartConnection = function() {
        $scope.submitted = PPP.restartConnection(),
        $timeout($scope.checkLoading, 5e3),
        $rootScope.globalWait = !1,
        $rootScope.showMessage = !0,
        $scope.formIpv4.$setPristine(!0)
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("LandPageController", ["$scope", "WiFi", "ConnectedDevices", "$rootScope", "$stateParams", "$timeout", "$http", function($scope, WiFi, ConnectedDevices, $rootScope, $stateParams, $timeout, $http) {
    $scope.hidePassword24 = !0,
    $scope.hidePassword5 = !0,
    $scope.samePassword = !1,
    $scope.mode = "priv";
    var _search5gStb = function() {
        var existStb = !1;
        return $(ConnectedDevices.getStbs()).each(function(i, device) {
            return "wifi5" === device.Layer1Interface && (existStb = !0),
            !existStb
        }),
        existStb
    };
    $scope.wifiConflicting = function(wifiOne, wifiTwo) {
        return wifiOne && wifiTwo && wifiOne.ssid === wifiTwo.ssid && wifiOne.wifiEnable === !0 && wifiOne.wifiEnable === wifiTwo.wifiEnable && (wifiOne.password !== wifiTwo.password || wifiOne.securityMode !== wifiTwo.securityMode)
    }
    ,
    $scope.submitted = !1,
    $scope.save = function() {
        $scope.submitted = !0;
        var allDataToSave = [];
        if ($scope.wifiForm.$valid) {
            $rootScope.globalWait = !0;
            for (var radio in $scope.radios) {
                var dataSave = {
                    enable: $scope.radios[radio].wifiEnable,
                    broadcast: !$scope.radios[radio].hideNetwork,
                    ssid: $scope.radios[radio].ssid,
                    channel: $scope.radios[radio].channel,
                    securityMode: $scope.radios[radio].securityMode,
                    password: $scope.radios[radio].password,
                    groupKeyUpdatePeriod: $scope.radios[radio].groupKeyUpdatePeriod,
                    channelBandwidth: $scope.radios[radio].channelBandwidth,
                    wpsEnable: $scope.radios[radio].wpsEnable,
                    operatingStandards: $scope.radios[radio].operatingStandards
                };
                $scope.radios[radio].samePassword && (dataSave.password = $scope.radios["2.4GHz"].password),
                -1 !== $scope.radios[radio].securityMode.indexOf("ENTERPRISE") ? (dataSave.radiusServerIp = $scope.radios[radio].radiusServerIp,
                dataSave.radiusServerPort = $scope.radios[radio].radiusServerPort,
                dataSave.radiusServerPassword = $scope.radios[radio].radiusServerPassword,
                dataSave.secondaryRadiusServerIp = $scope.radios[radio].secondaryRadiusServerIp,
                dataSave.secondaryRadiusServerPort = $scope.radios[radio].secondaryRadiusServerPort,
                dataSave.secondaryRadiusServerSecret = $scope.radios[radio].secondaryRadiusServerSecret) : (dataSave.radiusServerIp = "",
                dataSave.radiusServerPort = 0,
                dataSave.radiusServerPassword = $.constants.defaultSecKey,
                dataSave.secondaryRadiusServerIp = "",
                dataSave.secondaryRadiusServerPort = 0,
                dataSave.secondaryRadiusServerSecret = ""),
                allDataToSave.push({
                    radio: radio,
                    mode: $scope.mode,
                    data: dataSave
                })
            }
            WiFi.save(allDataToSave, {
                success: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !0,
                    $scope.radios[radio].samePassword && ($scope.radios["5GHz"].password = $scope.radios["2.4GHz"].password),
                    $scope.wifiForm.$setPristine(!0),
                    $scope.submitted = !1,
                    $rootScope.$digest()
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $scope.populate(),
                    $rootScope.$digest()
                }
            })
        }
    }
    ,
    $scope.beforeSave = function() {
        $scope.wifiForm.$valid ? (_hasConflict() ? $("#warning-psk-modal").foundation("reveal", "open") : $scope.openReveal("apply-changes-modal"),
        $(".reveal-modal-bg").show()) : ($scope.wifiForm.password5.$error.invalidPassword && !$scope.wifiForm.password5.$error.minlength || $scope.wifiForm.password2.$error.invalidPassword && !$scope.wifiForm.password2.$error.minlength) && ($("#warning-psk-invalid-modal").foundation("reveal", "open"),
        $(".wifiBasicDualForm").trigger("updateIllegalChars"))
    }
    ;
    var _hasConflict = function() {
        var firstRadio = null;
        for (var radio in $scope.radios) {
            if (null !== firstRadio)
                return $scope.wifiConflicting(firstRadio, $scope.radios[radio]);
            firstRadio = $scope.radios[radio]
        }
        return !1
    }
      , _getWifiStatus = function(wifiStatus) {
        return "UP" === wifiStatus.ssid && "ENABLED" === wifiStatus.accessPoint && "UP" === wifiStatus.radio ? !0 : !1
    }
      , _getFrequencyList = function(availableChannels, radio) {
        var channels = [];
        return $(availableChannels).each(function(i, channel) {
            channels.push({
                channel: channel,
                label: channel + " - " + $.util.getChannelFrequency(channel, radio) + " MHz"
            })
        }),
        channels
    };
    $scope.encryptions = $.constants.encryptionMode,
    $scope.populate = function() {
        WiFi.updateCache([{
            radio: "2.4GHz",
            mode: $scope.mode
        }, {
            radio: "5GHz",
            mode: $scope.mode
        }]);
        var dataRadio, data = WiFi.populate([{
            radio: "2.4GHz",
            mode: $scope.mode
        }, {
            radio: "5GHz",
            mode: $scope.mode
        }]);
        $scope.radios = {},
        $scope.selectChannel = {},
        $scope.selectSecurityMode = {},
        $scope.possibleStandards = {
            "2.4GHz": [],
            "5GHz": []
        };
        for (var radio in data) {
            if (dataRadio = data[radio][$scope.mode],
            $scope.radios[radio] || ($scope.radios[radio] = {}),
            $scope.radios[radio].hideNetwork = !dataRadio.broadcast,
            $scope.radios[radio].wifiEnable = dataRadio.enable && "DORMANT" !== dataRadio.wifiStatus.radio,
            $scope.radios[radio].wifiStatus = _getWifiStatus(dataRadio.wifiStatus),
            $scope.radios[radio].showForm = dataRadio.enable,
            $scope.radios[radio].broadcastEnable = dataRadio.broadcast,
            $scope.radios[radio].ssid = dataRadio.ssid,
            $scope.radios[radio].bssid = dataRadio.bssid,
            $scope.radios[radio].channel = dataRadio.channel,
            $scope.radios[radio].currentChannel = dataRadio.currentChannel,
            $scope.radios[radio].securityMode = dataRadio.securityMode,
            $scope.radios[radio].password = dataRadio.password,
            $scope.radios[radio].radiusServerIp = dataRadio.radiusServerIp,
            $scope.radios[radio].radiusServerPort = dataRadio.radiusServerPort,
            $scope.radios[radio].radiusServerPassword = dataRadio.radiusServerPassword,
            $scope.radios[radio].secondaryRadiusServerIp = dataRadio.secondaryRadiusServerIp,
            $scope.radios[radio].secondaryRadiusServerPort = dataRadio.secondaryRadiusServerPort,
            $scope.radios[radio].secondaryRadiusServerSecret = dataRadio.secondaryRadiusServerSecret,
            $scope.radios[radio].groupKeyUpdatePeriod = dataRadio.groupKeyUpdatePeriod,
            $scope.radios[radio].operatingStandards = dataRadio.operatingStandards,
            $scope.radios[radio].supportedOperatingStandars = dataRadio.supportedOperatingStandars,
            $scope.selectSecurityMode[radio] = dataRadio.availableSecurityMode,
            $.config.blockedSecurityModes.length)
                for (var x = 0; x < $scope.selectSecurityMode[radio].length; x++)
                    -1 !== $.util.inArray($scope.selectSecurityMode[radio][x].value, $.config.blockedSecurityModes) && ($scope.selectSecurityMode[radio].splice(parseInt(x, 10), 1),
                    x--);
            $scope.originalStatus = dataRadio.enable,
            $scope.selectChannel[radio] = _getFrequencyList(dataRadio.availableChannels, radio);
            var bandWidths = $.util.getChannelBandwidth(radio);
            bandWidths[dataRadio.channelBandwidth] ? $scope.radios[radio].channelBandwidth = dataRadio.channelBandwidth : $scope.radios[radio].channelBandwidth = "AUTO",
            $scope.radios[radio].currentBandwidth = bandWidths[$scope.radios[radio].channelBandwidth];
            var possibleStandards = [];
            if (possibleStandards = "2.4GHz" === radio ? $.config.modules.wifi.wifi24.operatingStandards ? $.config.modules.wifi.wifi24.operatingStandards : $.constants.wifi24.operatingStandards : $.config.modules.wifi.wifi5.operatingStandards ? $.config.modules.wifi.wifi5.operatingStandards : $.constants.wifi5.operatingStandards,
            $scope.radios[radio].supportedOperatingStandars)
                for (var i = 0; i < possibleStandards.length; i++)
                    $scope.radios[radio].supportedOperatingStandars.contains(possibleStandards[i].method) && $scope.possibleStandards[radio].push(possibleStandards[i]);
            else
                $scope.possibleStandards[radio] = possibleStandards;
            $scope.radios[radio].wpsEnable = dataRadio.wpsEnable
        }
        $scope.radios[radio].samePassword = $scope.radios["2.4GHz"].password === $scope.radios["5GHz"].password,
        $scope.existStb = _search5gStb(),
        $timeout(function() {
            $scope.initCheckUnsaved("wifiForm")
        }, 500)
    }
    ,
    $scope.populate(),
    $scope.getTransmissionMode = function(value, radio) {
        for (var i = 0; i < $scope.possibleStandards[radio].length; i++)
            if ($scope.possibleStandards[radio][i].method === value)
                return $scope.possibleStandards[radio][i].label;
        return "Not available"
    }
    ,
    $scope.checkLoading = function(cb) {
        $http({
            method: "GET",
            url: "/",
            timeout: 3e4
        }).success(function(data, status) {
            if (200 === status)
                try {
                    cb()
                } catch (e) {}
            else
                $timeout(function() {
                    $scope.checkLoading(cb)
                }, 5e3)
        }).error(function() {
            $timeout(function() {
                $scope.checkLoading(cb)
            }, 5e3)
        })
    }
    ,
    $scope.openReveal = function(modalId) {
        if ($scope.showDfsWarning1min = !1,
        $scope.showDfsWarning10min = !1,
        !$scope.wifiForm.$invalid) {
            if (!angular.isUndefined($.config.modules.wifiDFS)) {
                var dfsValues = $.config.modules.wifiDFS;
                angular.isArray(dfsValues.tenMin.values) ? dfsValues.tenMin.values.indexOf($scope.radios["5GHz"].channel) > -1 && ($scope.showDfsWarning10min = !0) : $scope.radios["5GHz"].channel >= dfsValues.tenMin.min && $scope.radios["5GHz"].channel <= dfsValues.tenMin.max && ($scope.showDfsWarning10min = !0),
                $scope.showDfsWarning10min || (angular.isArray(dfsValues.oneMin.values) ? dfsValues.oneMin.values.indexOf($scope.radios["5GHz"].channel) > -1 && ($scope.showDfsWarning1min = !0) : $scope.radios["5GHz"].channel >= dfsValues.oneMin.min && $scope.radios["5GHz"].channel <= dfsValues.oneMin.max && ($scope.showDfsWarning1min = !0))
            }
            $("#" + modalId).foundation("reveal", "open")
        }
    }
    ,
    $scope.$watch("radios['2.4GHz'].securityMode", function(newValue) {
        $scope.isRequired24 = newValue && -1 !== newValue.indexOf("ENTERPRISE") ? "required" : "not.required"
    }),
    $scope.$watch("radios['5GHz'].securityMode", function(newValue) {
        $scope.isRequired5 = newValue && -1 !== newValue.indexOf("ENTERPRISE") ? "required" : "not.required"
    });
    var updateTooltip = function(seletor, msg, destroy) {
        destroy && $(seletor).tooltipster("destroy"),
        $(seletor).tooltipster({
            content: msg,
            maxWidth: 230,
            theme: "tooltipster-noir"
        })
    }
      , initHelpTips = function() {
        $timeout(function() {
            updateTooltip("#wps24", $("#wpsTip1").text()),
            updateTooltip("#wps5", $("#wpsTip1").text()),
            updateTooltip("#security5", $("#wifiGeneralTip5").text()),
            updateTooltip("#security24", $("#wifiGeneralTip5").text()),
            $scope.changeSecurity("2.4GHz"),
            $scope.changeSecurity("5GHz")
        }, 1e3)
    };
    $scope.changeSecurity = function(radio, destroy) {
        var securityPasssMsg = "";
        "NONE" === $scope.radios[radio].securityMode ? securityPasssMsg = "#passwordTip1" : "WEP_64" === $scope.radios[radio].securityMode ? securityPasssMsg = "#passwordTip2" : "WEP_128" === $scope.radios[radio].securityMode ? securityPasssMsg = "#passwordTip3" : "WPA_ENTERPRISE" === $scope.radios[radio].securityMode ? securityPasssMsg = "#passwordTip4" : "WPA2_ENTERPRISE" === $scope.radios[radio].securityMode || "WPA2_PERSONAL" === $scope.radios[radio].securityMode || "WPA_WPA2_ENTERPRISE" === $scope.radios[radio].securityMode || "WPA_WPA2_PERSONAL" === $scope.radios[radio].securityMode ? securityPasssMsg = "#passwordTip5" : "WPA_PERSONAL" === $scope.radios[radio].securityMode && (securityPasssMsg = "#passwordTip6");
        var selector = "2.4GHz" === radio ? "#pass24" : "#pass5";
        updateTooltip(selector, $(securityPasssMsg).text(), destroy)
    }
    ,
    initHelpTips()
}
]),
sboxApp.controller("FirstAccessController", ["$scope", "ConnectedDevices", "CheckFeature", "Auth", function($scope, ConnectedDevices, CheckFeature, Auth) {
    $scope.otherNext = void 0,
    $.config.showedpages.firstInstallWizard.enable || ($scope.otherNext = !0,
    Auth.setFirstConnection(!1)),
    ConnectedDevices.updateCache(),
    $scope.verifyWifi5 = ConnectedDevices.verifyWifi5();
    var connections = $.config.internetProducts || [{
        type: "ADSL",
        label: "xdsl"
    }, {
        type: "FTTH",
        label: "fiber"
    }];
    $scope.firstInfo = {
        connectionType: connections[0].type,
        productType: "5345"
    },
    $scope.firstInfo.productType = ConnectedDevices.getGwName(!0),
    $.config.noDslImage && (CheckFeature.go("dslEnabled") || ($scope.firstInfo.connectionType = $.config.noDslImage,
    connections = [{
        type: "FTTH",
        label: "fiber"
    }])),
    $scope.connections = connections
}
]),
sboxApp.controller("EndController", ["$scope", "Auth", function($scope, Auth) {
    var pwd = $.xmo.getValuesTree($.xpaths.advanced.remoteManagement.remoteAccessSimpleData.clearTextPassword.replace("#user#", Auth.user.username));
    $scope.userNameSelected = Auth.user.username,
    $scope.password = pwd;
    var ssid24 = $.xmo.getValuesTree($.xpaths.mySagemcomBox.deviceInfo.wifi24.ssid)
      , encrypt24 = $.xmo.getValuesTree($.xpaths.mySagemcomBox.deviceInfo.wifi24.securityMode)
      , key24 = $.xmo.getValuesTree($.xpaths.wifi.general.passwordKey.replace("#AP#", "PRIV0"))
      , ssid5 = $.xmo.getValuesTree($.xpaths.mySagemcomBox.deviceInfo.wifi5.ssid)
      , encrypt5 = $.xmo.getValuesTree($.xpaths.mySagemcomBox.deviceInfo.wifi5.securityMode)
      , key5 = $.xmo.getValuesTree($.xpaths.wifi.general.passwordKey.replace("#AP#", "VID1"))
      , connectionType = $.xmo.getValuesTree($.xpaths.adminAdvanced.wanType)
      , pppLogin = $.xmo.getValuesTree($.xpaths.internetConnectivity.ppp.username)
      , pppPasswd = $.xmo.getValuesTree($.xpaths.internetConnectivity.ppp.password)
      , addressingType = "3" === $.xmo.getValuesTree($.xpaths.adminAdvanced.addressingType) ? "STATIC" : $.xmo.getValuesTree($.xpaths.adminAdvanced.addressingType)
      , ip = $.xmo.getValuesTree($.xpaths.adminAdvanced.ip)
      , mask = $.xmo.getValuesTree($.xpaths.adminAdvanced.mask)
      , gateway = $.xmo.getValuesTree($.xpaths.adminAdvanced.gatewayIpAddress)
      , dns1Enable = $.xmo.getValuesTree($.xpaths.adminAdvanced.enableDnsDhcp1)
      , dns2Enable = $.xmo.getValuesTree($.xpaths.adminAdvanced.enableDnsDhcp2);
    dns1Enable === !0 && dns2Enable === !0 ? $scope.dnsType = "DHCP" : $scope.dnsType = "STATIC";
    var dns1 = $.xmo.getValuesTree($.xpaths.adminAdvanced.dns1Static)
      , dns2 = $.xmo.getValuesTree($.xpaths.adminAdvanced.dns2Static);
    $scope.connectionType = connectionType,
    $scope.pppLogin = pppLogin,
    $scope.pppPasswd = pppPasswd,
    $scope.addressingType = addressingType,
    $scope.ip = ip,
    $scope.mask = mask,
    $scope.gateway = gateway,
    $scope.dns1Dhcp = dns1,
    $scope.dns2Dhcp = dns2,
    $scope.radioType = {
        24: {
            radioType: 24,
            ssid: ssid24,
            encrypt: encrypt24,
            key: key24
        },
        5: {
            radioType: 5,
            ssid: ssid5,
            encrypt: encrypt5,
            key: key5
        }
    },
    $scope.noMoreFirstAccess = function() {
        Auth.setFirstConnection(!1)
    }
}
]),
sboxApp.controller("DectBasicController", ["$scope", "$rootScope", "DectBasic", "$timeout", function($scope, $rootScope, DectBasic, $timeout) {
    $scope.powerModes = $.constants.dectPowerModes,
    $scope.save = function() {
        var data = {};
        $rootScope.globalWait = !0,
        data.Enable = $scope.info.Enable,
        data.PowerMode = $scope.info.PowerMode,
        DectBasic.save(data, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.dectDockBasicForm.$setPristine(!0),
                $scope.update(),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
    ;
    var originalRefreshPage = $.gui.refreshPage;
    $.gui.refreshPage = function() {}
    ,
    $scope.$on("$destroy", function() {
        $.gui.refreshPage = originalRefreshPage,
        DectBasic.deleteNotifications()
    }),
    $scope.applyPin = function() {
        $scope.dectDockBasicForm.pinCode.$valid && ($rootScope.showMessage = DectBasic.applyPin($scope.info.PIN),
        DectBasic.init())
    }
    ,
    $scope.startPairing = function() {
        $("#startPairingModal").trigger("click");
        var promise = DectBasic.startPairing();
        promise.then(function() {
            $timeout(function() {
                $scope.update()
            }, 3e3),
            $timeout(function() {
                $("#pleasewait-modal a.close-reveal-modal").trigger("click")
            }, 1e3)
        }, function() {
            $("#pleasewait-modal a.close-reveal-modal").trigger("click")
        })
    }
    ,
    $scope.test = function() {
        $scope.loadingTest = !0;
        var promise = DectBasic.test($scope.info.pagingDevice);
        promise.then(function() {
            $timeout(function() {
                $scope.loadingTest = !1,
                $scope.$digest()
            }, 1e3)
        }, function() {
            $scope.loadingTest = !1
        })
    }
    ,
    $scope.update = function() {
        var callback = function() {
            $timeout(function() {
                $scope.update(),
                $scope.$digest()
            }, 7e3)
        };
        DectBasic.verifyPhysicalButton(callback),
        $scope.info = DectBasic.populate(),
        $scope.info.selectDevices = DectBasic.getDectDevicesMinimal(),
        $scope.statusClass = "On" === $scope.info.Status ? "color-on" : "color-off"
    }
    ,
    $scope.update()
}
]),
sboxApp.controller("DectAdvancedController", ["$scope", "$rootScope", "DectBasic", function($scope, $rootScope, DectBasic) {
    $scope.info = DectBasic.populate(),
    $scope.standardList = DectBasic.getStandardList(),
    $scope.save = function() {
        var data = {};
        $rootScope.globalWait = !0,
        data = $scope.info,
        DectBasic.save(data, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.dectDockAdvancedForm.$setPristine(!0),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
}
]),
sboxApp.controller("DectHandsetMainController", ["$scope", "$stateParams", function($scope, $stateParams) {
    $scope.mainUID = $stateParams.uid
}
]),
sboxApp.controller("DectHandsetController", ["$scope", "$rootScope", "$stateParams", "$state", "DectHandset", function($scope, $rootScope, $stateParams, $state, DectHandset) {
    $scope.submitted = !1,
    $scope.c = DectHandset.getDeviceById($stateParams.uid),
    $scope.c.rolesOptions = DectHandset.getHandsetRoleRestrictions($stateParams.uid),
    $scope.dectEnabled = DectHandset.getDectStatus(),
    $scope.save = function() {
        $scope.submitted = !0;
        var data = {
            uid: $scope.c.uid,
            Description: $scope.c.Description
        };
        $scope.dectHandsetForm.$valid ? ($rootScope.globalWait = !0,
        DectHandset.save(data, {
            success: function() {
                $scope.submitted = !1,
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.dectHandsetForm.$setPristine(!0),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })) : $scope.submitted = !0
    }
    ,
    $scope.unPair = function() {
        $rootScope.globalWait = !0;
        var promise = DectHandset.unPair($stateParams.uid);
        promise.then(function() {
            $state.go("user.home")
        }, function() {
            $rootScope.globalWait = !1,
            $rootScope.showMessage = !1
        })
    }
}
]),
sboxApp.controller("LEDController", ["$scope", "$rootScope", "$timeout", "Led", function($scope, $rootScope, $timeout, Led) {
    $scope.onChangeSave = $.config.onChangeSave,
    $scope.populate = function() {
        var data = Led.populate();
        $scope.enable = data.frontLedPower || data.switchLedPower,
        $scope.ledMode = data.ledMode
    }
    ,
    $scope.onChangeEnable = function() {
        $.util.hasFeature("ledMode") && ($scope.enable || ($scope.ledMode = "Dark")),
        $scope.onChangeSave && $scope.save()
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        var data = {
            ledMode: $scope.ledMode,
            enable: $scope.enable
        };
        Led.save(data, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $timeout(function() {
                    $rootScope.$digest()
                })
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $timeout(function() {
                    $rootScope.$digest()
                })
            }
        })
    }
}
]),
sboxApp.controller("LEDSliderController", function($scope, $rootScope, Led) {
    $scope.populate = function() {
        var data = Led.populateSlider();
        data || (data = 100),
        $scope.slider = {
            value: data,
            options: {
                floor: 1,
                ceil: 100
            }
        }
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        Led.saveSlider($scope.slider.value, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
}),
sboxApp.controller("MaelstromHelpController", function($scope, MaelstromHelp) {
    MaelstromHelp.updateCache(),
    $scope.connectivityStatus = JSON.stringify(MaelstromHelp.getConnectivityStats()),
    $scope.ispHelpLink = MaelstromHelp.getISPHelpLink(),
    $scope.gwType = MaelstromHelp.getGwType()
}),
sboxApp.controller("CallForwardingController", ["$scope", "CallForwarding", "TelephoneMatrix", "$rootScope", "$timeout", function($scope, CallForwarding, TelephoneMatrix, $rootScope, $timeout) {
    $scope.voicemailEnabled = $.config.showedpages.callForwardingVoicemail.enable,
    $scope.submitted = !1,
    $scope.isValid = !0;
    var fields = {
        Line: 1,
        Voicemail: !1,
        Forwarding: "",
        forwardingMode: "toPhone",
        Type: "inconditional",
        Seconds: "",
        Enable: !0
    };
    $scope.populate = function() {
        TelephoneMatrix.updateCache(),
        $scope.lines = TelephoneMatrix.getLines(),
        $scope.hasLineEnable = !1,
        $scope.lines && $scope.lines[0] && (fields.Line = $scope.lines[0].uid,
        $scope.hasLineEnable = !0),
        $scope.ruleList = CallForwarding.populate($scope.lines),
        $scope.LinesInformation = CallForwarding.getLinesInformation(),
        $scope.labelAdd = "add",
        $scope.resetForm()
    }
    ,
    $scope.resetForm = function() {
        $scope.fields = angular.copy(fields)
    }
    ,
    $scope.changeEnable = function(data) {
        var callForwardingError = function() {
            $rootScope.globalWait = !1,
            $rootScope.showMessage = !1,
            $rootScope.$digest()
        };
        CallForwarding.save(data, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.populate()
            },
            error: callForwardingError
        })
    }
    ,
    $scope.changeEnableField = function(data, toStatus) {
        data.Enable = !toStatus;
        var callForwardingError = function() {
            $rootScope.globalWait = !1,
            $rootScope.showMessage = !1,
            $rootScope.$digest()
        };
        CallForwarding.save(data, {
            success: function() {
                data.Enable = toStatus,
                CallForwarding.save(data, {
                    success: function() {
                        $rootScope.globalWait = !1,
                        $rootScope.showMessage = !0,
                        $scope.populate()
                    },
                    error: callForwardingError
                })
            },
            error: callForwardingError
        })
    }
    ,
    $scope.edit = function(data) {
        $scope.labelAdd = "update",
        $scope.fields = angular.copy(data),
        $scope.oldFields = angular.copy(data),
        $scope.fields.forwardingMode = "voicemail" === $scope.fields.Forwarding ? "toVoicemail" : "toPhone"
    }
    ;
    var getRulesByline = function() {
        var line = parseInt($scope.fields.Line, 10)
          , rules = $scope.ruleList
          , ruleType = "";
        return rules.forEach(function(data) {
            data.Line === line && (ruleType += data.Type + ",")
        }),
        ruleType = ruleType.substr(0, ruleType.length - 1).split(",")
    }
      , isRuleExist = function(rule) {
        var ruleType = getRulesByline();
        return null !== ruleType.toString().match(rule) ? !0 : !1
    };
    $scope.hideErrorMessage = function() {
        $scope.showFwdMessage = !0,
        $timeout(function() {
            $scope.showFwdMessage = !1
        }, 1800)
    }
    ,
    $scope.validate = function() {
        $scope.callForm.forward.$setValidity("invalidRule", !0),
        $scope.callForm.forward.$setValidity("invalidPhone", !0),
        $scope.callForm.inputSeconds.$setValidity("invalidValue", !0),
        "notResponding" === $scope.fields.Type && ($scope.fields.Seconds < 1 || $scope.fields.Seconds > 60) && $scope.callForm.inputSeconds.$setValidity("invalidValue", !1),
        "notResponding" !== $scope.fields.Type && ($scope.callForm.inputSeconds.$setValidity("min", !0),
        $scope.callForm.inputSeconds.$setValidity("max", !0)),
        "toVoicemail" !== $scope.fields.forwardingMode && ($scope.callForm.inputSeconds.$setValidity("invalidValue", !0),
        $scope.callForm.inputSeconds.$setValidity("min", !0),
        $scope.callForm.inputSeconds.$setValidity("max", !0),
        $scope.callForm.inputSeconds.$setValidity("required", !0));
        var pattern = /^[0-9]*$/;
        if ("toPhone" === $scope.fields.forwardingMode && ("" === $scope.fields.Forwarding || !pattern.test($scope.fields.Forwarding)))
            return void $scope.callForm.forward.$setValidity("invalidPhone", !1);
        if ("toVoicemail" === $scope.fields.forwardingMode && "voicemail" === $scope.fields.Forwarding) {
            if ($scope.callForm.forward.$setValidity("invalidPhone", !0),
            "add" === $scope.labelAdd && isRuleExist($scope.fields.Type))
                return $scope.callForm.forward.$setValidity("invalidRule", !1),
                void $scope.hideErrorMessage();
            if ("update" === $scope.labelAdd)
                if ("notResponding" === $scope.fields.Type)
                    !isRuleExist($scope.fields.Type) || "busy" !== $scope.oldFields.Type && "inconditional" !== $scope.oldFields.Type ? $scope.fields.Forwarding === $scope.oldFields.Forwarding && $scope.fields.Seconds === $scope.oldFields.Seconds && $scope.fields.Enable === $scope.oldFields.Enable ? ($scope.callForm.forward.$setValidity("invalidRule", !1),
                    $scope.hideErrorMessage()) : $scope.callForm.forward.$setValidity("invalidRule", !0) : ($scope.callForm.forward.$setValidity("invalidRule", !1),
                    $scope.hideErrorMessage());
                else {
                    if ($scope.fields.Forwarding === $scope.oldFields.Forwarding && $scope.fields.Type === $scope.oldFields.Type && $scope.fields.Enable === $scope.oldFields.Enable)
                        return $scope.callForm.forward.$setValidity("invalidRule", !1),
                        void $scope.hideErrorMessage();
                    if (isRuleExist($scope.fields.Type) && $scope.fields.Forwarding === $scope.oldFields.Forwarding && $scope.fields.Enable === $scope.oldFields.Enable)
                        return $scope.callForm.forward.$setValidity("invalidRule", !1),
                        void $scope.hideErrorMessage();
                    $scope.callForm.forward.$setValidity("invalidRule", !0)
                }
        }
    }
    ;
    var successCallback = function() {
        $scope.oldFields = null,
        $rootScope.globalWait = !1,
        $rootScope.showMessage = !0,
        $scope.submitted = !1,
        $scope.resetForm(),
        $scope.populate()
    }
      , errorCallback = function() {
        $scope.resetForm(),
        $rootScope.globalWait = !1,
        $rootScope.showMessage = !1,
        $rootScope.$digest()
    };
    $scope.add = function() {
        if ("busy" === $scope.fields.Type && $scope.LinesInformation[$scope.fields.Line] && $scope.LinesInformation[$scope.fields.Line].MultiCallEnable === !1)
            $rootScope.globalWait = !1,
            $rootScope.customMessage = "busyOnBusyActiveError",
            $rootScope.showMessage = !1;
        else {
            if ($scope.submitted = !0,
            $rootScope.globalWait = !0,
            "toVoicemail" === $scope.fields.forwardingMode && ($scope.fields.Forwarding = "voicemail"),
            $scope.validate(),
            !$scope.callForm.$valid)
                return void ($rootScope.globalWait = !1);
            var insertableObj = angular.copy($scope.fields)
              , onlyNumbers = insertableObj.Forwarding;
            "voicemail" !== insertableObj.Forwarding && ($.util.startsWith(insertableObj.Forwarding, "+") === !0 && (insertableObj.Forwarding = insertableObj.Forwarding.replace("+", "00")),
            onlyNumbers = insertableObj.Forwarding.replace(/[^0-9]/g, "")),
            CallForwarding.save({
                Line: insertableObj.Line,
                Forwarding: onlyNumbers,
                Type: insertableObj.Type,
                Seconds: parseInt(insertableObj.Seconds, 10),
                Enable: insertableObj.Enable
            }, {
                success: function() {
                    successCallback()
                },
                error: function() {
                    errorCallback()
                }
            }),
            "update" === $scope.labelAdd && (3 === getRulesByline().length || $scope.oldFields.Type === $scope.fields.Type || ($scope.prepareRemove($scope.oldFields),
            $scope.remove()))
        }
    }
    ,
    $scope.prepareRemove = function(data) {
        $scope.toRemove = angular.copy(data)
    }
    ,
    $scope.remove = function() {
        return $scope.globalWait = !0,
        $scope.toRemove ? void CallForwarding.remove($scope.toRemove, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $rootScope.deleted = !0,
                $scope.populate()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1
            }
        }) : void ($rootScope.showMessage = !1)
    }
    ,
    $scope.changeForwardingMode = function() {
        "toPhone" === $scope.fields.forwardingMode && ($scope.fields.Forwarding = ""),
        "toVoicemail" === $scope.fields.forwardingMode && ($scope.fields.Forwarding = "voicemail")
    }
    ,
    $scope.populate(),
    $scope.resetForm()
}
]),
sboxApp.controller("AnsweringMachineMessagesController", ["$scope", "$rootScope", "$sce", "$timeout", "$window", "AnsweringMachine", "PhonebookContacts", function($scope, $rootScope, $sce, $timeout, $window, AnsweringMachine, PhonebookContacts) {
    $scope.running = !1,
    $scope.song = "",
    $scope.populate = function() {
        $scope.phonebookList = PhonebookContacts.populate(),
        $scope.messagesList = AnsweringMachine.searchMessages(),
        $scope.newMessages = AnsweringMachine.getNewMessagesCount(),
        angular.forEach($scope.messagesList, function(message) {
            message.ContactName = "",
            angular.forEach($scope.phonebookList, function(contact) {
                (contact.MobilePhoneNumber === message.CallingPartyNumber || contact.HomePhoneNumber === message.CallingPartyNumber || contact.WorkPhoneNumber === message.CallingPartyNumber) && (message.ContactName = contact.LastName + " " + contact.FirstName)
            })
        })
    }
    ,
    $scope.listen = function(index) {
        $scope.playing = $scope.messagesList[index],
        $scope.playing.IsNew && ($scope.playing.IsNew = !1,
        $scope.newMessages = $scope.newMessages - 1),
        AnsweringMachine.listenMessage($scope.playing.uid, {
            success: function(url) {
                $scope.urlSong = "",
                $scope.song = "",
                $timeout(function() {
                    $scope.urlSong = url,
                    $scope.song = $sce.trustAsResourceUrl($scope.urlSong),
                    $timeout(function() {
                        $(document).trigger("changeSong", [index + 1])
                    }, 500)
                }, 500)
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1
            }
        })
    }
    ,
    $scope.download = function(index) {
        var selected = $scope.messagesList[index];
        AnsweringMachine.listenMessage(selected.uid, {
            success: function(url) {
                $window.location = url
            },
            error: function() {
                $rootScope.showMessage = !1
            }
        })
    }
    ,
    $scope.prepareRemove = function(data) {
        $scope.toRemove = angular.copy(data)
    }
    ,
    $scope.remove = function() {
        return $rootScope.globalWait = !0,
        $scope.toRemove ? void AnsweringMachine.deleteMessage($scope.toRemove.uid, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $rootScope.deleted = !0,
                $scope.populate()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1
            }
        }) : void ($rootScope.showMessage = !1)
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("AnsweringMachineSettingsController", ["$scope", "$state", "$rootScope", "$sce", "$timeout", "AnsweringMachine", function($scope, $state, $rootScope, $sce, $timeout, AnsweringMachine) {
    $scope.isValidEmail = !0,
    $scope.populate = function() {
        $scope.permittedLanguages = AnsweringMachine.getAvailableLanguages(),
        AnsweringMachine.updateCache();
        var mailboxes = AnsweringMachine.getMailboxesList();
        if (mailboxes && mailboxes.length > 0) {
            $scope.mailbox = null;
            for (var index in mailboxes)
                mailboxes[index].uid === parseInt($state.params.uid) && ($scope.mailbox = mailboxes[index]);
            $scope.mailbox || ($scope.mailbox = mailboxes[0]),
            $scope.mailbox.setDefaultEmail = !1,
            $scope.mailboxes = mailboxes,
            $scope.hideMailbox = !1,
            $("#main-content > .tabs-content").trigger("updateMailbox", [$scope.mailbox])
        } else
            $scope.hideMailbox = !0
    }
    ,
    $scope.validateEmail = function() {
        $scope.mailbox.EMailAddress && "RECORDING" === $scope.mailbox.Mode && !$.util.validateMailboxEmail($scope.mailbox.EMailAddress) ? $scope.isValidEmail = !1 : $scope.isValidEmail = !0
    }
    ,
    $scope.validateFile = function(name, fileName, size) {
        "no-validate" === size ? $scope.answeringMachineForm.$setValidity("fileSize" + name, !0) : size > $.config.modules.limitFileAnsweringMachine ? $scope.answeringMachineForm.$setValidity("fileSize" + name, !1) : $scope.answeringMachineForm.$setValidity("fileSize" + name, !0),
        "no-validate" === fileName ? $scope.answeringMachineForm.$setValidity("fileName" + name, !0) : /\.wav$/i.test(fileName) ? $scope.answeringMachineForm.$setValidity("fileName" + name, !0) : $scope.answeringMachineForm.$setValidity("fileName" + name, !1),
        $rootScope.$digest()
    }
    ,
    $scope.save = function() {
        if ($scope.mailbox.Enable || $scope.mailbox.EMailAddress) {
            if ($scope.validateEmail(),
            !$scope.isValidEmail || !$scope.answeringMachineForm.$valid)
                return
        } else
            $scope.mailbox.EMailAddress = "";
        $scope.globalWait = !0,
        AnsweringMachine.saveMailbox($scope.mailbox, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.answeringMachineForm.$setPristine(!0),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
    ,
    $rootScope.$watch("currentLanguage", function(newval, oldval) {
        newval !== oldval && ($scope.mailbox.SelectedLanguage = $rootScope.currentLanguage)
    }),
    $scope.populate()
}
]),
sboxApp.controller("AnsweringMachineMailserverController", ["$rootScope", "$scope", "AnsweringMachine", function($rootScope, $scope, AnsweringMachine) {
    $scope.isServerValid = !0,
    $scope.protocols = [{
        label: "smtp",
        encryption: "NONE",
        protocol: "SMTP",
        port: 25
    }, {
        label: "ssl",
        encryption: "SSL",
        protocol: "SMTP",
        port: 465
    }, {
        label: "cyphered",
        encryption: "TLS",
        protocol: "SMTP",
        port: 587
    }];
    var _returnProtocol = function(protocol) {
        var items = $.grep($scope.protocols, function(obj) {
            return obj.label === protocol
        });
        return items[0]
    };
    $scope.changeProtocol = function() {
        $scope.selectedProtocol === $scope.protocols[1].label && $scope.mailServer.Port !== $scope.protocols[1].port && ($scope.mailServer.Protocol = $scope.protocols[0].protocol,
        $scope.mailServer.Encryption = $scope.protocols[0].encryption,
        $scope.mailServer.Port = $scope.mailServer.Port)
    }
    ,
    $scope.populate = function() {
        $scope.mailServer = AnsweringMachine.getMailServer(),
        $scope.selectedProtocol = $scope.protocols[0].label;
        for (var i = 0; i < $scope.protocols.length; i++)
            if ($scope.mailServer.Protocol === $scope.protocols[i].protocol && $scope.mailServer.Encryption === $scope.protocols[i].encryption) {
                $scope.selectedProtocol = $scope.protocols[i].label;
                break
            }
    }
    ,
    $scope.validateServer = function() {
        $.util.checkMailServer($scope.mailServer.Server) ? $scope.isServerValid = !0 : $scope.isServerValid = !1
    }
    ,
    $scope.changePort = function() {
        var protocol = _returnProtocol($scope.selectedProtocol);
        $scope.mailServer.Port = protocol.port
    }
    ,
    $scope.save = function() {
        if ($scope.isServerValid && $scope.answeringMachineServerForm.$valid) {
            var protocol = _returnProtocol($scope.selectedProtocol);
            $scope.mailServer.Protocol = protocol.protocol,
            $scope.mailServer.Encryption = protocol.encryption,
            $rootScope.globalWait = !0,
            AnsweringMachine.saveMailServer($scope.mailServer, {
                success: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !0,
                    $rootScope.$digest()
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $rootScope.$digest()
                }
            })
        }
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("AutoDimmingController", ["$rootScope", "$scope", "AutoDimming", function($rootScope, $scope, AutoDimming) {
    $scope.populate = function() {
        var data = AutoDimming.populate();
        data.ledPowerSavingMode === $.constants.led.powerSavingMode.sunbased && ($scope.mode = $.constants.led.mode.autodimming),
        data.ledPowerSavingMode === $.constants.led.powerSavingMode.manual && ($scope.mode = $.constants.led.mode.manual),
        data.ledPowerSaving === $.constants.led.powerSaving.off ? $scope.brightness = $.constants.led.brightness.off : data.ledPowerSaving === $.constants.led.powerSaving.dimming ? $scope.brightness = $.constants.led.brightness.dimming : $scope.brightness = $.constants.led.brightness.on
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        $scope.submitted = !0;
        var data = {
            ledPowerSaving: "",
            ledPowerSavingMode: ""
        };
        $scope.mode === $.constants.led.mode.autodimming && (data.ledPowerSaving = $.constants.led.powerSaving.on,
        data.ledPowerSavingMode = $.constants.led.powerSavingMode.sunbased),
        $scope.mode === $.constants.led.mode.manual && (data.ledPowerSavingMode = $.constants.led.powerSavingMode.manual,
        $scope.brightness === $.constants.led.brightness.off ? data.ledPowerSaving = $.constants.led.powerSaving.off : $scope.brightness === $.constants.led.brightness.dimming ? data.ledPowerSaving = $.constants.led.powerSaving.dimming : data.ledPowerSaving = $.constants.led.powerSaving.on),
        AutoDimming.save(data, {
            success: function() {
                $rootScope.showMessage = !0,
                $rootScope.globalWait = !1,
                $scope.submitted = !1,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
}
]),
sboxApp.controller("GponController", ["Gpon", "$scope", "$rootScope", function(Gpon, $scope, $rootScope) {
    var _showsEmptyStr = function(data) {
        data.Temperature = data.Temperature / 1e3,
        data.Voltage = data.Voltage / 1e3,
        data.BIASCurrent = data.BIASCurrent / 1e3,
        $.each(data, function(key, value) {
            data[key] = null !== value ? value : ""
        })
    };
    $scope.populate = function() {
        $scope.a = Gpon.getData(),
        _showsEmptyStr($scope.a),
        $scope.fiberIsConnected()
    }
    ,
    $scope.fiberConnected = !0,
    $scope.fiberIsConnected = function() {
        return $scope.a = Gpon.getData(),
        "INITIAL" === $scope.a.GponState && ($rootScope.isMasmovil || $rootScope.isTotalplay) ? ($scope.fiberConnected = !1,
        $scope.fiberConnected) : ($scope.fiberConnected = !0,
        $scope.fiberConnected)
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("CableModemConnectionController", ["$scope", "CableModem", function($scope, CableModem) {
    CableModem.updateCache();
    var roundConfiguration = {
        enable: $.util.getModuleConfig("cableModem.connection.round.enable", !1)
    };
    roundConfiguration.enable && (roundConfiguration.precisions = {
        powerlevel: $.util.getModuleConfig("cableModem.connection.round.precisions.powerlevel", null),
        snr: $.util.getModuleConfig("cableModem.connection.round.precisions.snr", null)
    }),
    $scope.roundPrecision = function(value, field) {
        if (field = field || "",
        !roundConfiguration.enable || !roundConfiguration.precisions || void 0 === roundConfiguration.precisions[field] || null === roundConfiguration.precisions[field])
            return value;
        var precision = roundConfiguration.precisions[field];
        return $.util.roundPrecision(value, precision).toFixed(precision)
    }
    ,
    $scope.populate = function() {
        $scope.powerDigitAfter = $.config.powerDigitAfter && $.config.powerDigitAfter.enable;
        var data = CableModem.getConnectionData()
          , upstreamDBuV = []
          , downstreamDBuV = [];
        $scope.isCable = !!$.config.showedpages.isCable && !!$.config.showedpages.isCable.enable,
        $scope.isCable ? ($scope.upstream = data.upstream,
        $scope.downstream = data.downstream) : (data.upstream && (angular.forEach(data.upstream, function(obj) {
            obj.PowerLevel = obj.PowerLevel + 60,
            upstreamDBuV.push(obj)
        }),
        $scope.upstream = upstreamDBuV),
        data.downstream && (angular.forEach(data.downstream, function(obj) {
            obj.PowerLevel = obj.PowerLevel + 60,
            downstreamDBuV.push(obj)
        }),
        $scope.downstream = downstreamDBuV))
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("WifiStrengthController", ["$scope", "WiFi", "$timeout", function($scope, WiFi, $timeout) {
    var channelList24 = [1, 6, 11]
      , channelList5 = [36, 52, 108];
    $scope.getRadio = function() {
        var mac = WiFi.getDeviceMac();
        $scope.wifiInfo = WiFi.getCurrentRadio(mac)
    }
    ,
    $scope.changeChannel = function() {
        switch ($scope.getRadio(),
        $scope.channel = WiFi.getChannelByRadio($scope.wifiInfo.radio),
        "2.4GHz" === $scope.wifiInfo.radio ? $scope.channelList = channelList24 : $scope.channelList = channelList5,
        $scope.channelList.lastIndexOf($scope.channel)) {
        case 0:
            $scope.channel = $scope.channelList[1];
            break;
        case 1:
            $scope.channel = $scope.channelList[2];
            break;
        default:
            $scope.channel = $scope.channelList[0]
        }
        $timeout(function() {
            WiFi.changeChannel({
                channel: $scope.channel
            }, $scope.wifiInfo.radio, $scope.wifiInfo.mode, {
                success: function() {},
                error: function() {}
            })
        }, 3e3),
        $timeout(function() {
            $(document).scrollTop($(document).height())
        }, 500)
    }
}
]),
sboxApp.controller("WifiSimpleController", ["$scope", "WiFi", "WiFiAdvanced", "WiFiStats", "WiFiMacfilter", "ConnectedDevices", "$rootScope", "$stateParams", "$timeout", function($scope, WiFi, WiFiAdvanced, WiFiStats, WiFiMacfilter, ConnectedDevices, $rootScope, $stateParams, $timeout) {
    var _getWifiStatus = function(wifiStatus) {
        return !("UP" !== wifiStatus.ssid || "ENABLED" !== wifiStatus.accessPoint || "UP" !== wifiStatus.radio)
    };
    $scope.populate = function() {
        WiFi.updateCache({
            radio: $stateParams.radio,
            mode: $stateParams.mode
        });
        var data = WiFi.populate();
        if ($scope.showPassword = !1,
        $scope.wifiEnable = data.enable,
        $scope.wifiStatus = _getWifiStatus(data.wifiStatus),
        $scope.showForm = data.enable,
        $scope.broadcastEnable = data.broadcast,
        $scope.ssid = data.ssid,
        $scope.channel = data.channel,
        $scope.currentChannel = data.currentChannel,
        $scope.securityMode = data.securityMode,
        $scope.password = data.password,
        $scope.radiusServerIp = data.radiusServerIp,
        $scope.radiusServerPort = data.radiusServerPort,
        $scope.radiusServerPassword = data.radiusServerPassword,
        $scope.secondaryRadiusServerIp = data.secondaryRadiusServerIp,
        $scope.secondaryRadiusServerPort = data.secondaryRadiusServerPort,
        $scope.secondaryRadiusServerSecret = data.secondaryRadiusServerSecret,
        $scope.groupKeyUpdatePeriod = data.groupKeyUpdatePeriod,
        $scope.selectChannel = data.availableChannels,
        $scope.selectSecurityMode = data.availableSecurityMode,
        $scope.link = data.link,
        $scope.macAddress = data.macAddress,
        $.config.blockedSecurityModes.length)
            for (var x in $scope.selectSecurityMode)
                -1 !== $.util.inArray($scope.selectSecurityMode[x].value, $.config.blockedSecurityModes) && $scope.selectSecurityMode.splice(parseInt(x, 10), 1);
        $scope.originalStatus = data.enable,
        WiFiAdvanced.updateCache($stateParams.radio, $stateParams.mode),
        data = WiFiAdvanced.search(),
        $scope.regulatoryDomain = data.regulatoryDomain,
        $scope.channelBandwidth = data.channelBandwidth,
        data.supportedChannelBandwidth = data.supportedChannelBandwidth ? data.supportedChannelBandwidth : $.constants.supportedChannelBandwidth[$stateParams.radio];
        var supportedChBdwidthList = data.supportedChannelBandwidth.split(",");
        $scope.supportedChannelBandwidth = [],
        supportedChBdwidthList.length > 0 && $.each(supportedChBdwidthList, function(idx, chBdwidthElem) {
            $scope.supportedChannelBandwidth.push($.util.formatChannelBandWidth(chBdwidthElem))
        }),
        $scope.extensionChannel = data.extensionChannel,
        $scope.transmitPower = data.transmitPower,
        $scope.globalMaxClients = data.globalMaxClients,
        $scope.wmmEnable = data.wmmEnable,
        $scope.apsd = data.apsd,
        $scope.radioName = $stateParams.radio,
        $scope.isGuest = "guest" === $stateParams.mode;
        var standardsList;
        standardsList = "5GHz" === $stateParams.radio ? $.constants.wifi5.operatingStandards : $.constants.wifi24.operatingStandards,
        $scope.possibleStandards = standardsList,
        $scope.operatingStandards = data.operatingStandards,
        $scope.waitEnable = !1,
        $scope.pinCode = WiFi.getCurrentPinCode($stateParams.radio, $stateParams.mode),
        $scope.loadingPin = !1,
        data = WiFi.getWpsStatus($stateParams.radio, $stateParams.mode),
        $scope.enableWps = data.enable,
        data.configMethodsEnabled = data.configMethodsEnabled.toUpperCase().split(","),
        $scope.hasPushButton = $.inArray($.constants.PUSHBUTTON, data.configMethodsEnabled) > -1,
        $scope.hasPin = $.inArray($.constants.PIN, data.configMethodsEnabled) > -1,
        WiFiMacfilter.updateCache($stateParams.radio, $stateParams.mode),
        $scope.IsMacfilterDisabled = "DISABLED" === WiFiMacfilter.populate($scope.radioName).macFilterMode
    }
    ,
    $scope.populate(),
    $scope.saveBasic = function(_success, _error) {
        $scope.submitted = !0,
        $rootScope.globalWait = !0;
        var dataSave = {
            enable: $scope.wifiEnable,
            broadcast: $scope.broadcastEnable,
            ssid: $scope.ssid,
            channel: $scope.channel,
            securityMode: $scope.securityMode,
            password: $scope.password
        };
        -1 !== $scope.securityMode.indexOf("ENTERPRISE") ? (dataSave.radiusServerIp = $scope.radiusServerIp,
        dataSave.radiusServerPort = $scope.radiusServerPort,
        dataSave.radiusServerPassword = $scope.radiusServerPassword,
        dataSave.groupKeyUpdatePeriod = 3600,
        dataSave.secondaryRadiusServerIp = $scope.secondaryRadiusServerIp,
        dataSave.secondaryRadiusServerPort = $scope.secondaryRadiusServerPort,
        dataSave.secondaryRadiusServerSecret = $scope.secondaryRadiusServerSecret) : (dataSave.radiusServerIp = "",
        dataSave.radiusServerPort = 0,
        dataSave.radiusServerPassword = $.constants.defaultSecKey,
        dataSave.groupKeyUpdatePeriod = $.constants.defaultRekeyTime,
        dataSave.secondaryRadiusServerIp = "",
        dataSave.secondaryRadiusServerPort = 0,
        dataSave.secondaryRadiusServerSecret = ""),
        WiFi.save({
            radio: $stateParams.radio,
            mode: $stateParams.mode,
            data: dataSave
        }, {
            success: _success,
            error: _error
        })
    }
    ,
    $scope.saveAdvanced = function(_success, _error) {
        $rootScope.globalWait = !0;
        var dataSave = {
            operatingStandards: $scope.operatingStandards,
            regulatoryDomain: $scope.regulatoryDomain,
            channelBandwidth: $scope.channelBandwidth,
            extensionChannel: $scope.extensionChannel,
            transmitPower: $scope.transmitPower,
            wmmEnable: $scope.wmmEnable,
            apsd: $scope.apsd
        };
        WiFiAdvanced.save(dataSave, $stateParams.radio, $stateParams.mode, {
            success: _success,
            error: _error
        })
    }
    ,
    $scope.save = function() {
        var _onError = function() {
            $rootScope.globalWait = !1,
            $rootScope.showMessage = !1,
            $scope.populate(),
            $rootScope.$digest()
        }
          , _onSuccess = function() {
            $scope.populate(),
            $rootScope.globalWait = !1,
            $rootScope.showMessage = !0,
            $scope.wifiForm.$setPristine(!0),
            $scope.submitted = !1,
            $rootScope.$digest()
        };
        $rootScope.globalWait = !0,
        $rootScope.showMessage = !0,
        $scope.isGuest ? $scope.saveBasic(_onSuccess, _onError) : $scope.saveBasic(function() {
            $scope.saveAdvanced(_onSuccess, _onError)
        }, _onError)
    }
    ,
    $scope.saveStatus = function() {
        $rootScope.globalWait = !0,
        WiFi.saveStatus($scope.wifiEnable, $stateParams.radio, $stateParams.mode, {
            success: _isSecurityModeReady,
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
    ;
    var _isSecurityModeReady = function(justDoIt) {
        $timeout(function() {
            $scope.populate(),
            !$scope.wifiEnable || $scope.selectSecurityMode.length > 0 || justDoIt ? ($rootScope.globalWait = !1,
            $rootScope.showMessage = !0,
            $scope.wifiForm.$pristine = !0,
            $rootScope.$digest()) : _isSecurityModeReady(!0)
        }, 5e3)
    };
    $scope.enableDisableWPS = function() {
        $scope.waitEnable = !0,
        $timeout(function() {
            WiFi.setWpsStatus($scope.enableWps, $stateParams.radio, $stateParams.mode),
            $scope.waitEnable = !1
        }, 1e3)
    }
    ,
    $scope.generatePinCodeWPS = function() {
        $scope.loadingPin = !0,
        $scope.pinCode = "";
        var promise = WiFi.generatePinCodeWPSPromisse($stateParams.radio, $stateParams.mode);
        promise.then(function(PinCode) {
            $scope.pinCode = PinCode,
            $scope.loadingPin = !1
        })
    }
    ,
    $scope.setEnrolleePin = function() {
        try {
            $scope.loadingEnrollee = !0,
            WiFi.setEnrolleePin($scope.enrolleePin, {
                success: function() {
                    $scope.loadingEnrollee = !1,
                    $scope.$digest()
                },
                error: function() {
                    $scope.loadingEnrollee = null,
                    $scope.$digest()
                }
            }, $stateParams.radio, $stateParams.mode)
        } catch (e) {
            $scope.loadingEnrollee = null,
            $scope.$digest()
        }
    }
    ,
    $scope.startPhysicalWPS = function() {
        $scope.loadingWps = !0,
        WiFi.startPhysicalWPS($stateParams.radio, $stateParams.mode, {
            success: function() {
                $scope.loadingWps = !1,
                $scope.$digest()
            },
            error: function() {
                $scope.loadingWps = null,
                $scope.$digest()
            }
        }),
        $scope.pinCode = ""
    }
}
]),
sboxApp.controller("SchedulingController", ["$rootScope", "$scope", "Scheduling", "WiFi", "$timeout", "$state", function($rootScope, $scope, Scheduling, WiFi, $timeout, $state) {
    var isWifi = function() {
        return "2.4GHz" === $scope.scheduleType || "5GHz" === $scope.scheduleType || "wifiBothBands" === $scope.scheduleType
    };
    $scope.canBeSaved = function() {
        return !$scope.isWifi || $scope.isWifi && $scope.wifiEnable
    }
    ;
    var getScheduleConfig = function() {
        var title = "";
        $state.current.data && $state.current.data.title && (title = $state.current.data.title);
        var defaultConfig = {
            title: title,
            enableLabel: "enable",
            scheduleEnableTip: "scheduleEnableTip",
            scheduleTableTip: "scheduleTableTip"
        };
        return void 0 !== $scope.scheduleType && null !== $scope.scheduleType && $.config.modules.scheduling ? $.config.modules.scheduling[$scope.scheduleType] : defaultConfig
    };
    $scope.init = function() {
        var scheduleConfig = getScheduleConfig();
        if ($scope.title = scheduleConfig.title,
        $scope.enableLabel = scheduleConfig.enableLabel,
        $scope.scheduleEnableTip = scheduleConfig.scheduleEnableTip,
        $scope.scheduleTableTip = scheduleConfig.scheduleTableTip,
        $scope.isWifi = isWifi(),
        $scope.isWifi) {
            var scheduleType;
            scheduleType = "wifiBothBands" === $scope.scheduleType ? "2.4GHz" : $scope.scheduleType,
            WiFi.updateCache({
                radio: scheduleType,
                mode: $scope.mode
            });
            var wifiData = WiFi.populate();
            $scope.wifiEnable = wifiData.enable
        }
    }
    ,
    $scope.init(),
    $scope.changeStatus = function(status, day) {
        var timeSlotDay = $scope.timeSlotsGrid[day];
        if (timeSlotDay)
            for (var hour in timeSlotDay)
                timeSlotDay[hour] = status
    }
    ,
    $scope.scheduling = {},
    $scope.aliasParam = "",
    $scope.aliasParamSecondary = "",
    "2.4GHz" === $scope.scheduleType ? $scope.aliasParam = "wifi_24" : "5GHz" === $scope.scheduleType ? $scope.aliasParam = "wifi_5" : "wifiBothBands" === $scope.scheduleType ? ($scope.aliasParam = "wifi_24",
    $scope.aliasParamSecondary = "wifi_5") : $scope.aliasParam = $scope.scheduleType,
    $scope.timeSlotsHours = [];
    for (var x = 0; 24 > x; x++)
        $scope.timeSlotsHours.push("Hours" + x);
    var _convertTimeslotsToBoolean = function(data) {
        var x, y, startTime, endTime, result = [];
        for (x = 0; x < $.constants.daysParentalControl.length; x++)
            for (result[$.constants.daysParentalControl[x]] = {},
            y = 0; 24 > y; y++)
                result[$.constants.daysParentalControl[x]]["Hours" + y] = !1;
        if (data)
            for (x = 0; x < data.length; x++)
                for (startTime = parseInt(data[x].StartTime) / $.constants.ONEHOUR,
                endTime = parseInt(data[x].EndTime) / $.constants.ONEHOUR,
                y = startTime; endTime > y; y++)
                    result[$.constants.daysParentalControl[data[x].WeekDays - 1]]["Hours" + y] = !0;
        return result
    }
      , _convertHourTimeslot = function(hour) {
        var intHout = parseInt(hour.replace("Hours", ""));
        return $.constants.ONEHOUR * intHout
    }
      , _convertBooleanToTimeslots = function() {
        var x, y, index, timeslots = [], startTime = !1;
        for (x = 0; x < $.constants.daysParentalControl.length; x++) {
            index = $.constants.daysParentalControl[x];
            for (y in $scope.timeSlotsGrid[index])
                $scope.timeSlotsGrid[index][y] && startTime === !1 && (startTime = y),
                "Hours23" === startTime && "Hours23" === y ? (timeslots.push({
                    WeekDays: x + 1,
                    StartTime: _convertHourTimeslot(startTime),
                    EndTime: _convertHourTimeslot("Hours24")
                }),
                startTime = !1) : $scope.timeSlotsGrid[index][y] && "Hours23" !== y || startTime === !1 || ($scope.timeSlotsGrid[index][y] && "Hours23" === y && (y = "Hours24"),
                timeslots.push({
                    WeekDays: x + 1,
                    StartTime: _convertHourTimeslot(startTime),
                    EndTime: _convertHourTimeslot(y)
                }),
                startTime = !1)
        }
        return timeslots
    };
    $scope.populate = function() {
        $scope.scheduling.Enable = Scheduling.getEnable($scope.aliasParam);
        var result = Scheduling.search($scope.aliasParam);
        $scope.timeSlotsGrid = _convertTimeslotsToBoolean(result)
    }
    ,
    $scope.populate(),
    $scope.enableDisable = function() {
        try {
            Scheduling.enable($scope.scheduling.Enable, $scope.aliasParam),
            $scope.aliasParamSecondary && Scheduling.enable($scope.scheduling.Enable, $scope.aliasParamSecondary),
            $rootScope.showMessage = !0,
            $scope.populate(),
            $scope.resetForm()
        } catch (e) {
            $rootScope.showMessage = !1
        }
    }
    ,
    $scope.save = function() {
        var timeslots = _convertBooleanToTimeslots($scope.timeSlotsGrid, $scope.aliasParam)
          , success = !0;
        Scheduling.remove($scope.aliasParam),
        $scope.aliasParamSecondary && Scheduling.remove($scope.aliasParamSecondary),
        timeslots.length && (success = Scheduling.insert(timeslots, $scope.aliasParam),
        success && $scope.aliasParamSecondary && (success = Scheduling.insert(timeslots, $scope.aliasParamSecondary))),
        $rootScope.showMessage = success,
        $scope.resetForm()
    }
    ,
    $scope.resetForm = function() {
        $timeout(function() {
            $scope.initCheckUnsaved && $scope.initCheckUnsaved("schedulingForm"),
            $scope.schedulingForm.$setPristine(!0)
        }, 0)
    }
}
]),
sboxApp.controller("SchedulingMainController", ["$rootScope", "$scope", "$stateParams", "$state", function($rootScope, $scope, $stateParams, $state) {
    $rootScope.lastRadioName || ($rootScope.lastRadioName = "2.4GHz"),
    $scope.scheduleType = $stateParams.scheduleType;
    var radio = $stateParams.scheduleType;
    "wifiBothBands" === radio ? $scope.radioName = $rootScope.lastRadioName : $scope.radioName = radio,
    $rootScope.lastRadioName = $scope.radioName,
    $scope.mode = $stateParams.mode,
    $scope.title = "wifiBothBands" === radio ? "" : $scope.radioName,
    $state.current.data && $state.current.data.mainPage && ($scope.mainPage = $state.current.data.mainPage,
    $scope.title = "wifiScheduling")
}
]),
sboxApp.controller("PlcDeviceController", ["$scope", "$rootScope", "$stateParams", "ConnectedDevices", "PlcDevice", function($scope, $rootScope, $stateParams, ConnectedDevices, PlcDevice) {
    var uid = $stateParams.uid;
    $scope.uid = uid;
    var fields = {
        uid: uid,
        status: "",
        name: "",
        connectionTime: "",
        macAddress: ""
    };
    $scope.fields = fields,
    $scope.submitted = !1,
    $scope.populate = function(uuid) {
        ConnectedDevices.updateCache();
        for (var plcs = ConnectedDevices.getPlcs(), data = {}, x = 0; x < plcs.length; x++)
            parseInt(plcs[x].uid, null) === parseInt(uuid, null) && (data = plcs[x]);
        $scope.fields = {
            uid: data.uid,
            status: data.Status,
            name: data.Name,
            connectionTime: data.ConnectionTime,
            macAddress: data.MACAddress
        }
    }
    ,
    $scope.populate(uid),
    $scope.save = function() {
        var data = {};
        data.uid = $scope.fields.uid,
        data.name = $scope.fields.name,
        $scope.submitted = !0,
        $scope.plcDeviceForm.$valid && ($rootScope.globalWait = !0,
        PlcDevice.save(data, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.plcDeviceForm.$setPristine(!0),
                $rootScope.$digest(),
                $scope.submitted = !1
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        }))
    }
}
]),
sboxApp.controller("BroadBandSimpleController", ["$scope", "BroadBand", "$rootScope", function($scope, BroadBand, $rootScope) {
    $scope.populate = function() {
        var data = BroadBand.populate();
        $scope.connectionInfo = {
            ipv4Status: data.ipv4Status,
            ipv6Status: data.ipv6Status,
            uptime: data.uptime,
            dataTransferedSent: data.dataTransferedSent,
            dataTransferedReceived: data.dataTransferedReceived,
            ipv4Address: data.ipv4Address,
            primaryDns: data.primaryDns,
            secondaryDns: data.secondaryDns,
            ipv6Address: data.ipv6Address,
            ipv6AddressServer: data.ipv6AddressServer
        },
        $scope.connectionSettings = {
            pvcInfo: data.pvcInfo,
            type: data.type,
            ppp: {
                username: data.username,
                password: data.password,
                mode: data.mode
            }
        }
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        if ($scope.submitted = !0,
        $scope.broadBandForm.$valid) {
            $rootScope.globalWait = !0;
            var dataSave = {};
            dataSave.server = {
                username: "",
                password: ""
            },
            dataSave.username = $scope.connectionSettings.ppp.username,
            dataSave.password = $scope.connectionSettings.ppp.password,
            BroadBand.save(dataSave, {
                success: function() {
                    $rootScope.showMessage = !0,
                    $rootScope.globalWait = !1,
                    $scope.broadBandForm.$setPristine(!0),
                    $scope.submitted = !1,
                    $rootScope.$digest()
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $rootScope.$digest()
                }
            })
        }
    }
}
]),
sboxApp.controller("TrafficMonitorController", ["$scope", "Statistics", "$stateParams", "$rootScope", function($scope, Statistics, $stateParams, $rootScope) {
    $scope.populate = function() {
        var bytesPerMB = 1048576;
        Statistics.getTrafficInfo($stateParams.type, {
            success: function(data) {
                data ? ($scope.traffic = {
                    sendAndReceive: (data.totalBytessent + data.totalBytesreceived) / bytesPerMB,
                    send: data.totalBytessent / bytesPerMB,
                    receive: data.totalBytesreceived / bytesPerMB
                },
                $.each($scope.traffic, function(key, value) {
                    $scope.traffic[key] = 0 === value ? value : value.toFixed(3)
                })) : $scope.traffic = {
                    sendAndReceive: 0,
                    send: 0,
                    receive: 0
                }
            },
            error: function() {
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("FONController", function($scope, Fon) {
    $scope.populate = function() {
        var data = Fon.populate();
        $scope.fonStatus = data.status,
        $scope.fonExtStatus = data.extStatus,
        $scope.ssidsList = data.ssidsList
    }
    ,
    $scope.populate()
}),
sboxApp.controller("RemoteManagementSimpleController", ["$scope", "RemoteManagement", "$rootScope", "Auth", function($scope, RemoteManagement, $rootScope, Auth) {
    $scope.user = Auth.user.username,
    $scope.isRemoteAccessEnabled = !1,
    $scope.populate = function() {
        var remoteAccessSimpleData = RemoteManagement.getRemoteAccessSimpleInfo($scope.user, "HTTPS");
        $scope.ipv4Public = remoteAccessSimpleData.ipv4Address,
        $scope.isTemporary = remoteAccessSimpleData.expirationEnable ? "true" : "false",
        $scope.httpsPort = remoteAccessSimpleData.httpsPort,
        $scope.httpsEnable = remoteAccessSimpleData.httpsEnable,
        $scope.isRemoteAccessEnabled = remoteAccessSimpleData.httpsEnable,
        $scope.httpsUrl = $scope.ipv4Public ? "https://" + $scope.ipv4Public + ":" + $scope.httpsPort + "/" : "",
        $scope.autoGenPasswd = remoteAccessSimpleData.clearTextPassword || "*******"
    }
    ,
    $scope.populate();
    var generateAutoPassword = function(passLength) {
        for (var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOP1234567890", passAuto = "", x = 0; passLength > x; x++) {
            var i = Math.floor(Math.random() * chars.length);
            passAuto += chars.charAt(i)
        }
        return passAuto
    }
      , generateAutoHttpsPort = function(minPort, maxPort) {
        return Math.floor(Math.random() * (maxPort - minPort + 1)) + minPort
    };
    $scope.save = function() {
        var data = {
            user: $scope.user,
            service: "HTTPS"
        };
        $scope.httpsEnable ? (data.httpsEnable = !0,
        data.httpsExpirationEnable = $scope.isTemporary,
        data.newAutouserPass = generateAutoPassword(10),
        data.newAutohttpsPort = generateAutoHttpsPort(1050, 15e3)) : data.httpsEnable = !1,
        $scope.submitted = !0,
        $scope.formRemoteAccess.$valid && ($rootScope.globalWait = !0,
        RemoteManagement.saveSimpleData(data, {
            success: function() {
                $rootScope.showMessage = !0,
                $rootScope.globalWait = !1,
                $scope.formRemoteAccess.$setPristine(!0),
                $scope.submitted = !1,
                $rootScope.$digest(),
                $scope.populate(),
                $scope.httpsEnable && ($scope.autoGenPasswd = data.newAutouserPass,
                $scope.httpsPort = data.newAutohttpsPort)
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        }))
    }
}
]),
sboxApp.controller("MixedPortForwardingController", ["$state", "$scope", "$rootScope", "PortForwarding", "ConnectedDevices", "$timeout", function($state, $scope, $rootScope, PortForwarding, ConnectedDevices, $timeout) {
    $scope.isAddingIpv4Rule = !1,
    $scope.updatingIPv4Rule = !1,
    $scope.prefixIP = "",
    $scope.selectedRule = null,
    $scope.remoteAddress = null,
    $scope.externalIp = null,
    $scope.hasPCPServer = function() {
        return $.config.modules.portForwarding && $.config.modules.portForwarding.pcpServer === !0
    }
    ;
    var validationData = null;
    $scope.errorKeys = {
        valid: !0,
        validStart: !0,
        validEnd: !0,
        portConflict: !0,
        forbiddenConflict: !0,
        validRange: !0,
        validClient: !0,
        validInternalPort: !0,
        validDescription: !0
    },
    $scope.ipv4Rules = [],
    $scope.upnpRules = [],
    $scope.ipv6Rules = [],
    $scope.addingIPv6Rule = !1,
    $scope.updatingIPv6Rule = !1,
    $scope.theIpv6Rule = PortForwarding.getIpv6RuleModel(),
    $scope.theIPv6RuleEdit = PortForwarding.getIpv6RuleModel(),
    $scope.eRouterMode = ConnectedDevices.geteRouterMode(),
    $scope.statusNatMappings = $.constants.NATMAPPING_STATUS,
    $scope.toAddModelIpv4 = {
        Enable: !0,
        Description: "",
        Creator: "",
        InternalClient: "",
        InternalClientSufix: "",
        Protocol: "TCP",
        ExternalPort: 0,
        ExternalPortEndRange: 0,
        InternalPort: 0,
        InternalPortEndRange: 0
    },
    $scope.ipv4RuleToAdd = {},
    $scope.ipv4RuleToEdit = {};
    var _calculateInternalRange = function(rule) {
        var range = parseInt(rule.ExternalPortEndRange, 10) - parseInt(rule.ExternalPort)
          , d = range >= 0 ? parseInt(rule.InternalPort, 10) + range : parseInt(rule.InternalPort, 10);
        return d >= 0 ? d : ""
    };
    $scope.calculateInternalEndRange = function(rule) {
        $scope.pcpEnable && (rule.ExternalPortEndRange = rule.ExternalPort),
        rule.InternalPortEndRange = _calculateInternalRange(rule);
    }
    ;
    var _applyMACMask = function() {
        $(".macControl").mask("ff:ff:ff:ff:ff:ff", {
            translation: {
                f: {
                    pattern: /[0-9a-f]/
                }
            }
        })
    }
      , _clearErroKeys = function() {
        $.each($scope.errorKeys, function(key) {
            $scope.errorKeys[key] = !0
        })
    }
      , run = function() {
        $scope.populate()
    }
      , _stopAllEdition = function() {
        for (var i = 0; i < $scope.ipv4Rules.length; i++)
            $scope.ipv4Rules[i].edit = !1;
        for (var j = 0; j < $scope.ipv6Rules.length; j++)
            $scope.ipv6Rules[j].edit = !1
    };
    $scope.selectRule = function(rule, isIPv6) {
        $scope.selectedRule = rule,
        $scope.selectedRule.isIPv6 = isIPv6
    }
    ,
    $scope.addNewIpv4Rule = function() {
        $scope.isAddingIpv4Rule ? $scope.saveIpv4RuleList() : $scope.updatingIPv4Rule && $scope.updateRule(),
        $scope.isAddingIpv4Rule || ($scope.editCancel(),
        $scope.ipv4RuleToAdd = angular.copy($scope.toAddModelIpv4),
        $scope.isAddingIpv4Rule = !0,
        $scope.addingIPv6Rule = !1,
        $scope.updatingIPv4Rule = !1,
        $scope.updatingIPv6Rule = !1,
        _clearErroKeys())
    }
    ,
    $scope.addCancel = function() {
        $scope.ipv4RuleToAdd = {},
        $scope.isAddingIpv4Rule = !1,
        _clearErroKeys()
    }
    ;
    var getTranslatedRule = function(rule) {
        var nRule = PortForwarding.getModel();
        return rule.uid && (nRule.uid = rule.uid),
        nRule.Enable = rule.Enable,
        nRule.Description = rule.Description,
        nRule.Protocol = rule.Protocol,
        nRule.Service = "NONE",
        nRule.RemoteHost = "",
        nRule.InternalClient = rule.InternalClient,
        nRule.ExternalPortEndRange = rule.ExternalPortEndRange,
        nRule.ExternalPort = rule.ExternalPort,
        nRule.InternalPort = rule.InternalPort,
        nRule.Status = rule.Status,
        nRule
    };
    $scope.clearForm = function() {
        $scope.ipv4RuleToAdd = {},
        $scope.AddRuleForm.$setPristine(!0)
    }
    ;
    var validateAddRule = function(rule) {
        $scope.errorKeys.validStart = $.util.checkPort(rule.ExternalPort),
        $scope.errorKeys.validEnd = $.util.checkPort(rule.ExternalPortEndRange),
        $scope.errorKeys.portConflict = $.util.portConflict(rule, $scope.ipv4Rules, !1, !0),
        $scope.errorKeys.forbiddenConflict = $.config.showedpages.tr69 && $.config.showedpages.tr69.enable ? $.util.validateForbiddenPort(rule.ExternalPort, rule.ExternalPortEndRange, validationData.tr69) : !0,
        $scope.errorKeys.validInternalPort = $.util.checkPort(rule.InternalPort),
        $scope.errorKeys.validClient = $.util.checkLanIp(rule.InternalClient, validationData.lanIp, validationData.subnet),
        $scope.errorKeys.validRange = $.util.validatePortsRange(rule.ExternalPort, rule.ExternalPortEndRange),
        $scope.errorKeys.validDescription = !!rule.Description && rule.Description.trim().length > 0,
        $scope.errorKeys.valid = $scope.errorKeys.validStart && $scope.errorKeys.validEnd && $scope.errorKeys.portConflict && $scope.errorKeys.forbiddenConflict && $scope.errorKeys.validRange && $scope.errorKeys.validInternalPort && $scope.errorKeys.validClient && $scope.errorKeys.validDescription
    };
    $scope.saveIpv4RuleList = function() {
        if ($scope.ipv4RuleToAdd.Alias = "",
        $scope.ipv4RuleToAdd.Service = "NONE",
        validateAddRule($scope.ipv4RuleToAdd),
        $scope.errorKeys.valid) {
            var nRule = getTranslatedRule($scope.ipv4RuleToAdd);
            $scope.ipv4Rules.push(nRule),
            $scope.isAddingIpv4Rule = !1,
            $scope.changedIPv4Rule = !0
        }
    }
    ,
    $scope.saveNewIpv4Rule = function() {
        $scope.isAddingIpv4Rule ? $scope.saveIpv4RuleList() : $scope.updatingIPv4Rule && $scope.updateRule(),
        $scope.errorKeys.valid && $scope.changedIPv4Rule && ($rootScope.globalWait = !0,
        $.config.modules.portForwarding.TimersaveNewIpv4Rule ? PortForwarding.save($scope.ipv4Rules, {
            success: function() {
                $timeout(function() {
                    $rootScope.showMessage = !0,
                    $rootScope.globalWait = !1,
                    $scope.changedIPv4Rule = !1,
                    $scope.populate(),
                    $scope.clearForm(),
                    $rootScope.$digest()
                }, 15e3)
            },
            error: function() {
                $timeout(function() {
                    $rootScope.showMessage = !1,
                    $rootScope.globalWait = !1,
                    $rootScope.$digest()
                })
            }
        }) : PortForwarding.save($scope.ipv4Rules, {
            success: function() {
                $rootScope.showMessage = !0,
                $rootScope.globalWait = !1,
                $scope.changedIPv4Rule = !1,
                $scope.ipv4Rules = PortForwarding.getOnlyIPv4Rules(),
                $scope.clearForm(),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.showMessage = !1,
                $rootScope.globalWait = !1,
                $rootScope.$digest()
            }
        }))
    }
    ,
    $scope.updateRule = function() {
        if (validateAddRule($scope.ipv4RuleToEdit),
        $scope.errorKeys.valid) {
            var nRule = getTranslatedRule($scope.ipv4RuleToEdit);
            for (var x in $scope.ipv4Rules)
                $scope.ipv4Rules[x].uid === nRule.uid && ($scope.ipv4Rules[x] = nRule);
            $scope.ipv4RuleToEdit = {},
            $scope.updatingIPv4Rule = !1,
            $scope.changedIPv4Rule = !0,
            _stopAllEdition()
        }
    }
    ,
    $scope.cancelRemove = function() {
        $scope.selectedRule = null
    }
    ,
    $scope.confirmRemoveIpv4 = function() {
        $scope.selectedRule.toBeDeleted = !0,
        PortForwarding.remove([$scope.selectedRule]) ? ($rootScope.showMessage = !0,
        $rootScope.deleted = !0,
        $scope.ipv4Rules = PortForwarding.getOnlyIPv4Rules()) : $rootScope.showMessage = !1,
        $scope.cancelRemove()
    }
    ,
    $scope.concatPrefixIp = function(edit) {
        edit ? $scope.ipv4RuleToEdit.InternalClient = $scope.prefixIP + $scope.ipv4RuleToEdit.InternalClientSufix : $scope.ipv4RuleToAdd.InternalClient = $scope.prefixIP + $scope.ipv4RuleToAdd.InternalClientSufix
    }
    ,
    $scope.editRule = function(obj) {
        $scope.addingIPv6Rule = !1,
        $scope.isAddingIpv4Rule = !1,
        $scope.updatingIPv6Rule = !1,
        _stopAllEdition(),
        $scope.ipv4RuleToEdit = angular.copy(obj),
        $scope.ipv4RuleToEdit.InternalClientSufix = $scope.ipv4RuleToEdit.InternalClient.replace($scope.prefixIP, ""),
        obj.edit = !0,
        $scope.updatingIPv4Rule = !0,
        _clearErroKeys()
    }
    ,
    $scope.editCancel = function() {
        $scope.ipv4RuleToEdit = {},
        $scope.updatingIPv4Rule = !1,
        _stopAllEdition(),
        _clearErroKeys()
    }
    ,
    $scope.fillMyIp = function(isIPv6) {
        try {
            var ip = $scope.remoteAddress.split(".");
            isIPv6 ? (ip = ip.splice(ip.length - 1, 1),
            $scope.addingIPv6Rule ? $scope.theIpv6Rule.MacId = $scope.connectedMac : $scope.theIPv6RuleEdit.MacId = $scope.connectedMac) : ("IPV6" === $scope.connectionType && (ip = $scope.remoteAddressIPv4.split(".")),
            ip = ip.splice(ip.length - 1, 1),
            $scope.isAddingIpv4Rule ? ($scope.ipv4RuleToAdd.InternalClientSufix = ip,
            $scope.concatPrefixIp(!1)) : ($scope.ipv4RuleToEdit.InternalClientSufix = ip,
            $scope.concatPrefixIp(!0)))
        } catch (e) {
            $scope.theIpv6Rule.MacId = "",
            $scope.theIPv6RuleEdit.MacId = "",
            $scope.ipv4RuleToAdd.InternalClientSufix = "",
            $scope.ipv4RuleToEdit.InternalClientSufix = ""
        }
    }
    ;
    var _associatePCPMappings = function(ipv4Rules, pcpMappings) {
        $.each(ipv4Rules, function(i, rule) {
            var pcpAlias = "nat-" + rule.uid;
            pcpMappings[pcpAlias] && (rule.pcpOverride = !0,
            rule.ExternalPort = pcpMappings[pcpAlias].AssignedExternalPort,
            rule.ExternalPortEndRange = pcpMappings[pcpAlias].AssignedExternalPortEndRange)
        })
    };
    $scope.populate = function() {
        var tmp = PortForwarding.megaPopulate();
        $scope.ipv4Rules = tmp.ipv4Rules,
        $scope.upnpRules = tmp.upnpRules,
        $scope.ipv6Rules = tmp.ipv6Rules,
        $scope.remoteAddress = tmp.remoteAddress,
        $scope.remoteAddressIPv4 = tmp.remoteAddressIPv4,
        $scope.connectionType = tmp.connectionType,
        $scope.connectedMac = PortForwarding.getConnectedMac($scope.remoteAddress),
        $scope.externalIp = "DSLITE" === $scope.eRouterMode ? tmp.externalIpDSLite ? tmp.externalIpDSLite.replace($.constants.externalIpPrefix, "") : "" : tmp.externalIpIPv4Dual,
        $scope.pcpEnable = tmp.pcpEnable,
        $scope.hasPCPServer() && $scope.pcpEnable === !0 && ($scope.pcpMappings = tmp.pcpMappings,
        _associatePCPMappings($scope.ipv4Rules, $scope.pcpMappings)),
        validationData = tmp.validation,
        $scope.prefixIP = validationData.lanIp.substring(validationData.lanIp.lastIndexOf(".") + 1, -1),
        _applyMACMask()
    }
    ;
    var _validateIPv6Rule = function(rule) {
        $scope.errorKeys.validStart = $.util.checkPort(parseInt(rule.DestPort, 10)),
        $scope.errorKeys.validEnd = $.util.checkPort(parseInt(rule.DestPortRangeMax, 10)),
        $scope.errorKeys.portConflict = $.util.portConflict(rule, $scope.ipv6Rules, !0, !0),
        $scope.errorKeys.forbiddenConflict = $.config.showedpages.tr69 && $.config.showedpages.tr69.enable ? $.util.validateForbiddenPort(rule.DestPort, rule.DestPortRangeMax, validationData.tr69) : !0,
        $scope.errorKeys.validRange = $.util.validatePortsRange(rule.DestPort, rule.DestPortRangeMax),
        $scope.errorKeys.validClient = $.util.checkMacAddress(rule.MacId),
        $scope.errorKeys.validClient && (rule.MacId = rule.MacId.split("-").join(":")),
        $scope.errorKeys.validDescription = !!rule.Description && rule.Description.trim().length > 0,
        $scope.errorKeys.valid = $scope.errorKeys.validStart && $scope.errorKeys.validEnd && $scope.errorKeys.portConflict && $scope.errorKeys.forbiddenConflict && $scope.errorKeys.validRange && $scope.errorKeys.validClient && $scope.errorKeys.validDescription
    };
    $scope.preAddIPv6Rule = function() {
        $scope.addingIPv6Rule ? $scope.saveIpv6RuleList() : $scope.updatingIPv6Rule && $scope.editIPv6Rule(),
        $scope.addingIPv6Rule || (_stopAllEdition(),
        $scope.theIpv6Rule = PortForwarding.getIpv6RuleModel(),
        $scope.addingIPv6Rule = !0,
        $scope.isAddingIpv4Rule = !1,
        $scope.updatingIPv6Rule = !1,
        $scope.updatingIPv4Rule = !1,
        $scope.errorKeys.valid = !0,
        _clearErroKeys())
    }
    ,
    $scope.saveIpv6RuleList = function() {
        _validateIPv6Rule($scope.theIpv6Rule),
        $scope.errorKeys.valid && ($scope.ipv6Rules.push({
            Rule: $scope.theIpv6Rule
        }),
        $scope.addingIPv6Rule = !1,
        $scope.changedIPv6Rule = !0)
    }
    ,
    $scope.addIPv6Rule = function() {
        $scope.addingIPv6Rule ? $scope.saveIpv6RuleList() : $scope.updatingIPv6Rule && $scope.editIPv6Rule(),
        $scope.errorKeys.valid && $scope.changedIPv6Rule && ($rootScope.globalWait = !0,
        PortForwarding.saveIPv6Rule($scope.ipv6Rules, {
            success: function() {
                $scope.ipv6Rules = PortForwarding.getOnlyIPv6Rules(),
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.addingIPv6Rule = !1,
                $scope.changedIPv6Rule = !1,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        }))
    }
    ,
    $scope.preEditIPv6Rule = function(rule) {
        $scope.addingIPv6Rule = !1,
        $scope.isAddingIpv4Rule = !1,
        _stopAllEdition(),
        $scope.addingIPv6Rule = !1,
        rule.edit = !0,
        $scope.updatingIPv6Rule = !0,
        $scope.updatingIPv4Rule = !1,
        $scope.errorKeys.valid = !0,
        $scope.theIPv6RuleEdit = $.extend(!0, {}, rule.Rule),
        _applyMACMask(),
        _clearErroKeys()
    }
    ,
    $scope.editIPv6Rule = function() {
        if (_validateIPv6Rule($scope.theIPv6RuleEdit),
        $scope.errorKeys.valid) {
            var nRule = $scope.theIPv6RuleEdit;
            for (var x in $scope.ipv6Rules)
                $scope.ipv6Rules[x].Rule.uid === nRule.uid && ($scope.ipv6Rules[x] = {
                    Rule: nRule,
                    edit: !0
                });
            $scope.updatingIPv6Rule = !1,
            $scope.changedIPv6Rule = !0,
            _stopAllEdition()
        }
    }
    ,
    $scope.confirmRemoveIPv6 = function() {
        $rootScope.globalWait = !0;
        var _success = function() {
            $scope.ipv6Rules = PortForwarding.getOnlyIPv6Rules(),
            $rootScope.globalWait = !1,
            $rootScope.showMessage = !0,
            _stopAllEdition(),
            setTimeout(function() {
                $rootScope.$digest()
            })
        }
          , _error = function() {
            $rootScope.globalWait = !1,
            $rootScope.showMessage = !1,
            setTimeout(function() {
                $rootScope.$digest()
            })
        };
        if ($scope.selectedRule.uid)
            PortForwarding.removeIPv6Rule($scope.selectedRule, {
                success: _success,
                error: _error
            });
        else
            try {
                $scope.ipv6Rules.splice($scope.ipv6Rules.indexOf($scope.selectedRule), 1),
                _success()
            } catch (e) {
                _error()
            }
    }
    ,
    $scope.cancelEditIPv6Rule = function(rule) {
        rule && (rule.edit = !1),
        $scope.updatingIPv6Rule = !1,
        $scope.addingIPv6Rule = !1
    }
    ,
    run()
}
]),
sboxApp.controller("WiFiBasicDualController", ["$scope", "WiFi", "ConnectedDevices", "$rootScope", "$stateParams", "$timeout", "$http", "$state", function($scope, WiFi, ConnectedDevices, $rootScope, $stateParams, $timeout, $http, $state) {
    $scope.isWizardPage = !!$state.current.data && $state.current.data.isWizard === !0;
    var _radio2g = "2.4GHz";
    $scope.radio5g = "",
    $scope.mode || ($scope.mode = "priv"),
    $scope.isShowChannel = $.config.showedpages.wifiGuestRecommendChannel && $.config.showedpages.wifiGuestRecommendChannel.enable,
    $scope.isShowChannelDisabled = "priv" !== $scope.mode && $.config.showedpages.wifiGuestRecommendChannelDisabled && $.config.showedpages.wifiGuestRecommendChannelDisabled.enable,
    $scope.bandSteeringSplitWithSameName = $.config.modules.wifi && $.config.modules.wifi.bandSteeringSplitWithSameName === !0;
    var _checkIfItsWizard = function() {
        return $.util.hasFeature("timWizard") && $scope.isWizardPage ? ($rootScope.flagWatchForm = !1,
        !0) : !1
    };
    $scope.backToWizardHome = function() {
        _checkIfItsWizard() && $state.go("wizard.home")
    }
    ,
    $scope.isEditChannelsAllowed = !$rootScope.isMaelstromCable || "guest" !== $scope.mode,
    $scope.hidePassword24 = !0,
    $scope.hidePassword5 = !0,
    $scope.isGuest = "guest" === $stateParams.mode,
    $scope.wifiBandSteeringSupport = !!$.config.modules.wifi && !$scope.isGuest && $.config.modules.wifi.wifiBandSteeringSupport === !0,
    $scope.field = {
        bandSteeringEnabled: !1
    },
    $scope.textPassword = $.config.modules.textPassword,
    $scope.wifiSpecificKeyRule = $.config.wifiKeyRule ? !0 : !1;
    var _search5gStb = function() {
        var existStb = !1;
        return $(ConnectedDevices.getStbs()).each(function(i, device) {
            return "wifi5" === device.Layer1Interface && (existStb = !0),
            !existStb
        }),
        existStb
    };
    $scope.getQrString = function(wifiRadio) {
        return wifiRadio.securityMode ? "WIFI:S:" + wifiRadio.ssid + ";T:" + wifiRadio.securityMode.substring(0, 3) + ";P:" + wifiRadio.password + ";;" : ""
    }
    ,
    $scope.wifiConflicting = function(wifiOne, wifiTwo) {
        return wifiOne && wifiTwo && wifiOne.ssid === wifiTwo.ssid && wifiOne.wifiEnable === !0 && wifiOne.wifiEnable === wifiTwo.wifiEnable && (wifiOne.password !== wifiTwo.password || wifiOne.securityMode !== wifiTwo.securityMode)
    }
    ,
    $scope.submitted = !1,
    $scope.save = function() {
        $scope.submitted = !0;
        var allDataToSave = [];
        if ($scope.wifiForm.$valid) {
            $rootScope.globalWait = !0;
            for (var radio in $scope.radios) {
                var dataSave = {
                    enable: $scope.radios[radio].wifiEnable,
                    broadcast: $scope.radios[radio].broadcastEnable,
                    ssid: $scope.radios[radio].ssid,
                    channel: $scope.radios[radio].channel,
                    securityMode: $scope.radios[radio].securityMode,
                    password: $scope.radios[radio].password,
                    groupKeyUpdatePeriod: $scope.radios[radio].groupKeyUpdatePeriod,
                    operatingStandards: $scope.radios[radio].operatingStandards
                };
                $rootScope.isSonne && (dataSave.channelBandwidth = $scope.radios[radio].channelBandwidth),
                -1 !== $scope.radios[radio].securityMode.indexOf("ENTERPRISE") ? (dataSave.radiusServerIp = $scope.radios[radio].radiusServerIp,
                dataSave.radiusServerPort = $scope.radios[radio].radiusServerPort,
                dataSave.radiusServerPassword = $scope.radios[radio].radiusServerPassword,
                dataSave.secondaryRadiusServerIp = $scope.radios[radio].secondaryRadiusServerIp,
                dataSave.secondaryRadiusServerPort = $scope.radios[radio].secondaryRadiusServerPort,
                dataSave.secondaryRadiusServerSecret = $scope.radios[radio].secondaryRadiusServerSecret,
                dataSave.groupKeyUpdatePeriod = $scope.radios[radio].groupKeyUpdatePeriod) : (dataSave.radiusServerIp = "",
                dataSave.radiusServerPort = 0,
                dataSave.radiusServerPassword = $.constants.defaultSecKey,
                dataSave.secondaryRadiusServerIp = "",
                dataSave.secondaryRadiusServerPort = 0,
                dataSave.secondaryRadiusServerSecret = "",
                dataSave.groupKeyUpdatePeriod = 0),
                ($scope.wifiBandSteeringSupport || _checkIfItsWizard()) && (dataSave.bandSteeringEnabled = $scope.field.bandSteeringEnabled,
                dataSave.bandSteeringEnabled === !0 ? (dataSave.ssid = $scope.radios["2.4GHz"].ssid,
                dataSave.broadcast = $scope.radios["2.4GHz"].broadcastEnable,
                dataSave.securityMode = $scope.radios["2.4GHz"].securityMode,
                dataSave.password = $scope.radios["2.4GHz"].password,
                dataSave.bandSteeringSplitWithSameName = $scope.bandSteeringSplitWithSameName) : $scope.radios["5GHz"].backupSSID ? dataSave.backupSSID = !0 : dataSave.ssid = $scope.radios["2.4GHz"].ssid,
                dataSave.itsWizard = _checkIfItsWizard()),
                allDataToSave.push({
                    radio: radio,
                    mode: $scope.mode,
                    data: dataSave
                })
            }
            WiFi.save(allDataToSave, {
                success: function() {
                    $scope.saveOneRequest && $scope.populate(),
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !0,
                    $scope.wifiForm.$setPristine(!0),
                    $scope.submitted = !1;
                    for (var radio in $scope.radios)
                        $scope.stringQr[radio] = $scope.getQrString($scope.radios[radio]);
                    _checkIfItsWizard() ? $state.go("wizard.connection") : $rootScope.$digest()
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $scope.populate(),
                    $rootScope.$digest()
                }
            })
        }
    }
    ,
    $scope.beforeSave = function() {
        $scope.wifiForm.$valid ? (!$scope.field.bandSteeringEnabled && _hasConflict() ? $("#warning-psk-modal").foundation("reveal", "open") : $("#apply-changes-modal").foundation("reveal", "open"),
        $(".reveal-modal-bg").show()) : ($scope.wifiForm.password5.$error.invalidPassword && !$scope.wifiForm.password5.$error.minlength || $scope.wifiForm.password2.$error.invalidPassword && !$scope.wifiForm.password2.$error.minlength) && ($("#warning-psk-invalid-modal").foundation("reveal", "open"),
        $(".wifiBasicDualForm").trigger("updateIllegalChars"))
    }
    ;
    var _hasConflict = function() {
        var firstRadio = null;
        for (var radio in $scope.radios) {
            if (null !== firstRadio)
                return $scope.wifiConflicting(firstRadio, $scope.radios[radio]);
            firstRadio = $scope.radios[radio]
        }
        return !1
    }
      , _isSecurityModeReady = function(radio, justDoIt) {
        $timeout(function() {
            $scope.populate(),
            !$scope.radios[radio].wifiEnable || $scope.selectSecurityMode.length > 0 || justDoIt ? ($rootScope.globalWait = !1,
            $rootScope.showMessage = !0,
            $scope.wifiForm.$pristine = !0,
            $rootScope.$digest()) : _isSecurityModeReady(radio, !0)
        }, 5e3)
    };
    $scope.saveStatus = function(radio) {
        $scope.saveOneRequest || ($rootScope.globalWait = !0,
        WiFi.saveStatus($scope.radios[radio].wifiEnable, radio, $scope.mode, {
            success: function() {
                _isSecurityModeReady(radio)
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        }))
    }
    ;
    var _getWifiStatus = function(wifiStatus) {
        return "UP" === wifiStatus.ssid && "ENABLED" === wifiStatus.accessPoint && "UP" === wifiStatus.radio ? !0 : !1
    }
      , _getFrequencyList = function(availableChannels, radio) {
        var channels = [];
        return $(availableChannels).each(function(i, channel) {
            channels.push({
                channel: channel,
                label: channel + " - " + $.util.getChannelFrequency(channel, radio) + " MHz"
            })
        }),
        channels
    };
    $scope.encryptions = $.constants.encryptionMode,
    $scope.populate = function() {
        WiFi.updateCache([{
            radio: "2.4GHz",
            mode: $scope.mode
        }, {
            radio: "5GHz",
            mode: $scope.mode
        }]);
        var dataRadio, data = WiFi.populate([{
            radio: "2.4GHz",
            mode: $scope.mode
        }, {
            radio: "5GHz",
            mode: $scope.mode
        }]);
        $scope.radios = {},
        $scope.stringQr = {},
        $scope.selectChannel = {},
        $scope.selectSecurityMode = {},
        $scope.possibleStandards = {
            "2.4GHz": [],
            "5GHz": []
        },
        $scope.wifiBandSteeringSupport && ($scope.field.bandSteeringEnabled = WiFi.getWifiBandSteering()),
        $.util.hasFeature("timWizard") && ($scope.field.bandSteeringEnabled = !0);
        for (var radio in data) {
            if (dataRadio = data[radio][$scope.mode],
            $scope.radios[radio] || ($scope.radios[radio] = {}),
            $scope.radios[radio].hideNetwork = !dataRadio.broadcast,
            $scope.radios[radio].wifiEnable = dataRadio.enable && "DORMANT" !== dataRadio.wifiStatus.radio,
            $scope.radios[radio].wifiStatus = _getWifiStatus(dataRadio.wifiStatus),
            $scope.radios[radio].showForm = dataRadio.enable,
            $scope.radios[radio].broadcastEnable = dataRadio.broadcast,
            $scope.radios[radio].ssid = dataRadio.ssid,
            $scope.radios[radio].bssid = dataRadio.bssid,
            $scope.radios[radio].channel = dataRadio.channel,
            $scope.radios[radio].currentChannel = dataRadio.currentChannel,
            $scope.radios[radio].securityMode = dataRadio.securityMode,
            $scope.radios[radio].password = dataRadio.password,
            $scope.radios[radio].confirmPassword = dataRadio.password,
            "5GHz" === radio && $scope.field.bandSteeringEnabled ? (dataRadio.backupSSID && ($scope.radios[radio].ssid = dataRadio.backupSSID,
            $scope.radios[radio].backupSSID = !0),
            dataRadio.backupKeyPassphrase && ($scope.radios[radio].password = dataRadio.backupKeyPassphrase,
            $scope.radios[radio].confirmPassword = dataRadio.backupKeyPassphrase),
            dataRadio.backupModeEnabled && ($scope.radios[radio].securityMode = dataRadio.backupModeEnabled)) : dataRadio.backupSSID && ($scope.radios[radio].backupSSID = !0),
            $scope.radios[radio].radiusServerIp = dataRadio.radiusServerIp,
            $scope.radios[radio].radiusServerPort = dataRadio.radiusServerPort,
            $scope.radios[radio].radiusServerPassword = dataRadio.radiusServerPassword,
            $scope.radios[radio].secondaryRadiusServerIp = dataRadio.secondaryRadiusServerIp,
            $scope.radios[radio].secondaryRadiusServerPort = dataRadio.secondaryRadiusServerPort,
            $scope.radios[radio].secondaryRadiusServerSecret = dataRadio.secondaryRadiusServerSecret,
            $scope.radios[radio].groupKeyUpdatePeriod = dataRadio.groupKeyUpdatePeriod,
            $scope.radios[radio].operatingStandards = dataRadio.operatingStandards,
            $scope.radios[radio].supportedOperatingStandars = dataRadio.supportedOperatingStandars,
            $scope.selectSecurityMode[radio] = dataRadio.availableSecurityMode,
            $.config.blockedSecurityModes.length)
                for (var x in $scope.selectSecurityMode[radio])
                    -1 !== $.util.inArray($scope.selectSecurityMode[radio][x].value, $.config.blockedSecurityModes) && $scope.selectSecurityMode[radio].splice(parseInt(x, 10), 1);
            if (_checkIfItsWizard() && $.config.blockedSecurityModes5GHz && $.config.blockedSecurityModes5GHz.length > 0 && $scope.radios[_radio2g] && $scope.radios[_radio2g].securityMode)
                for (var y in $scope.selectSecurityMode[_radio2g])
                    -1 !== $.util.inArray($scope.selectSecurityMode[_radio2g][y].value, $.config.blockedSecurityModes) && $scope.selectSecurityMode[_radio2g].splice(parseInt(y, 10), 1),
                    -1 !== $.util.inArray($scope.selectSecurityMode[_radio2g][y].value, $.config.blockedSecurityModes5GHz) && $scope.selectSecurityMode[_radio2g].splice(parseInt(y, 10), 1);
            $scope.stringQr[radio] = $scope.getQrString(dataRadio),
            $scope.originalStatus = dataRadio.enable,
            $scope.selectChannel[radio] = _getFrequencyList(dataRadio.availableChannels, radio);
            var bandWidths = $.util.getChannelBandwidth(radio);
            bandWidths[dataRadio.channelBandwidth] ? $scope.radios[radio].channelBandwidth = dataRadio.channelBandwidth : $scope.radios[radio].channelBandwidth = "AUTO",
            $scope.radios[radio].currentBandwidth = bandWidths[$scope.radios[radio].channelBandwidth];
            var possibleStandards = [];
            if (possibleStandards = "2.4GHz" === radio ? $.config.modules.wifi.wifi24.operatingStandards ? $.config.modules.wifi.wifi24.operatingStandards : $.constants.wifi24.operatingStandards : $.config.modules.wifi.wifi5.operatingStandards ? $.config.modules.wifi.wifi5.operatingStandards : $.constants.wifi5.operatingStandards,
            $scope.radios[radio].supportedOperatingStandars)
                for (var i = 0; i < possibleStandards.length; i++)
                    $scope.radios[radio].supportedOperatingStandars.contains(possibleStandards[i].method) && $scope.possibleStandards[radio].push(possibleStandards[i]);
            else
                $scope.possibleStandards[radio] = possibleStandards;
            "5GHz" === radio && ($scope.radio5g = dataRadio.ssid)
        }
        $scope.existStb = _search5gStb(),
        $timeout(function() {
            $scope.initCheckUnsaved("wifiForm")
        }, 500)
    }
    ,
    $scope.populate(),
    $scope.getTransmissionMode = function(value, radio) {
        for (var i = 0; i < $scope.possibleStandards[radio].length; i++)
            if ($scope.possibleStandards[radio][i].method === value)
                return $scope.possibleStandards[radio][i].label;
        return "Not available"
    }
    ,
    $scope.setSaveOneRequest = function() {
        $scope.saveOneRequest = !1,
        ("priv" === $scope.mode && $.config.modules.wifi.oneRequestOnlyPriv || "guest" === $scope.mode && $.config.modules.wifi.oneRequestOnly) && ($scope.saveOneRequest = !0)
    }
    ,
    $scope.checkLoading = function(cb) {
        $http({
            method: "GET",
            url: "/",
            timeout: 3e4
        }).success(function(data, status) {
            if (200 === status)
                try {
                    cb()
                } catch (e) {}
            else
                $timeout(function() {
                    $scope.checkLoading(cb)
                }, 5e3)
        }).error(function() {
            $timeout(function() {
                $scope.checkLoading(cb)
            }, 5e3)
        })
    }
    ,
    $scope.rebooting = !1,
    $scope.restoreDefault = function() {
        try {
            $scope.rebooting = !0,
            $timeout(function() {
                WiFi.restoreDefault(function() {
                    $timeout(function() {
                        $scope.checkLoading(function() {
                            $("#warning-restore-default-modal").foundation("reveal", "close"),
                            $scope.populate(),
                            $rootScope.showMessage = !0,
                            $rootScope.$digest(),
                            $scope.rebooting = !1
                        })
                    }, 4e4)
                }, function() {
                    $timeout(function() {
                        $scope.checkLoading(function() {
                            $rootScope.showMessage = !1,
                            $rootScope.$digest(),
                            $("#warning-restore-default-modal").foundation("reveal", "close"),
                            $scope.rebooting = !1
                        })
                    }, 4e4)
                })
            }, 1e3)
        } catch (e) {
            console.log("restoreDefault -> error", e)
        }
    }
    ,
    $scope.openReveal = function(modalId) {
        if ($scope.showDfsWarning1min = !1,
        $scope.showDfsWarning10min = !1,
        !$scope.wifiForm.$invalid) {
            if (!angular.isUndefined($.config.modules.wifiDFS)) {
                var dfsValues = $.config.modules.wifiDFS;
                angular.isArray(dfsValues.tenMin.values) ? dfsValues.tenMin.values.indexOf($scope.radios["5GHz"].channel) > -1 && ($scope.showDfsWarning10min = !0) : $scope.radios["5GHz"].channel >= dfsValues.tenMin.min && $scope.radios["5GHz"].channel <= dfsValues.tenMin.max && ($scope.showDfsWarning10min = !0),
                $scope.showDfsWarning10min || (angular.isArray(dfsValues.oneMin.values) ? dfsValues.oneMin.values.indexOf($scope.radios["5GHz"].channel) > -1 && ($scope.showDfsWarning1min = !0) : $scope.radios["5GHz"].channel >= dfsValues.oneMin.min && $scope.radios["5GHz"].channel <= dfsValues.oneMin.max && ($scope.showDfsWarning1min = !0))
            }
            $("#" + modalId).foundation("reveal", "open")
        }
    }
    ,
    $scope.showEnterprise = function(data) {
        return data && -1 !== data.indexOf("ENTERPRISE")
    }
    ,
    $scope.changeBandwidth = function(radio, bandWidth) {
        WiFi.updateBandwidth(radio, $scope.mode, bandWidth, {
            success: function(channels) {
                channels = $.util.parsePossibleChannels(channels),
                $scope.selectChannel[radio] = _getFrequencyList(channels, radio),
                $scope.$digest(),
                $(".change-bandwidth").change()
            },
            error: function() {
                $rootScope.$digest()
            }
        })
    }
    ,
    $scope.togglePassword = function(field) {
        field ? $scope[field] = !$scope[field] : $scope.showPassword = !$scope.showPassword
    }
    ,
    $scope.$watch("radios['2.4GHz'].securityMode", function(newValue) {
        $scope.isRequired24 = newValue && -1 !== newValue.indexOf("ENTERPRISE") ? "required" : "not.required"
    }),
    $scope.$watch("radios['5GHz'].securityMode", function(newValue) {
        $scope.isRequired5 = newValue && -1 !== newValue.indexOf("ENTERPRISE") ? "required" : "not.required"
    }),
    $scope.setSaveOneRequest(),
    $scope.saveWifiBandSteeringStatus = function() {
        $scope.radios["5GHz"].backupSSID || ($scope.field.bandSteeringEnabled ? ($scope.radios["5GHz"].ssid !== $scope.radios["2.4GHz"].ssid || $scope.bandSteeringSplitWithSameName || ($scope.radios["5GHz"].ssid = $scope.radios["5GHz"].ssid + "-5G"),
        $scope.radios["5GHz"].ssid !== $scope.radios["2.4GHz"].ssid && $scope.bandSteeringSplitWithSameName && ($scope.radios["5GHz"].ssid = $scope.radios["2.4GHz"].ssid)) : $scope.radios["5GHz"].ssid = $scope.radio5g),
        $scope.saveOneRequest || ($rootScope.globalWait = !0,
        WiFi.setWifiBandSteering($scope.field.bandSteeringEnabled, {
            success: function() {
                $scope.populate(),
                $scope.radios["5GHz"].ssid = $scope.radios["5GHz"].ssid + "-5G",
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.wifiForm.$pristine = !0,
                $timeout(function() {
                    $rootScope.$digest()
                })
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $timeout(function() {
                    $rootScope.$digest()
                })
            }
        }))
    }
}
]),
sboxApp.controller("WanSettingsController", ["$rootScope", "$scope", "WanSettings", function($rootScope, $scope, WanSettings) {
    $scope.ipv6Info = {},
    $scope.canShow = function(allowedModes) {
        if ("all" === $scope.wanProvisioningMode)
            return !0;
        if (allowedModes && allowedModes.length > 0)
            for (var mode in allowedModes)
                if (null !== allowedModes[mode] && void 0 !== mode && allowedModes[mode] === $scope.wanProvisioningMode)
                    return !0;
        return !1
    }
    ;
    var _getWanProvisioningMode = function() {
        var wanProvisioningMode = $scope.wanInfo && $scope.wanInfo.wanProvisioningMode ? $scope.wanInfo.wanProvisioningMode : "";
        switch (wanProvisioningMode.toLowerCase()) {
        case "dual-stack":
        case "ipv4":
        case "dslite":
            return wanProvisioningMode.toLowerCase();
        case "not provisionned":
            return "ipv4";
        default:
            return "all"
        }
    };
    $scope.isAvailable = function(value) {
        return null !== value && void 0 !== value && "" !== value
    }
    ,
    $scope.populate = function() {
        var wanInfo = WanSettings.getInfo()
          , ipv6Info = wanInfo.ipv6;
        $scope.wanInfo = wanInfo,
        $scope.ipv6Info.enable = ipv6Info.enable,
        $scope.ipv6Info.delegatedprefix = ipv6Info.delegatedprefix,
        $scope.ipv6Info.lanIPv6 = ipv6Info.lanIPv6,
        $scope.ipv6Info.wanIPv6 = $.util.fixGetValuesTree(ipv6Info.wanIPv6),
        $scope.ipv6Info.firstDnsIPv6 = ipv6Info.firstDnsIPv6,
        $scope.ipv6Info.secondDnsIPv6 = ipv6Info.secondDnsIPv6,
        $scope.ipv6Info.wanAddress = ipv6Info.wanAddress,
        $scope.ipv6Info.wanLinkLocal = ipv6Info.wanLinkLocal,
        $scope.ipv6Info.defaultGateway = $.util.getIPv6DefaultGateway(ipv6Info.defaultGateway),
        $scope.ipv6Info.macAddress = ipv6Info.macAddress,
        $scope.ipv6Info.dns = $.util.getIPv6DNS(ipv6Info.dnsV6),
        $scope.ipv6Info.DSLiteStatus = ipv6Info.DSLiteStatus ? ipv6Info.DSLiteStatus.toLowerCase() : $.constants.notAvailableTranslate,
        $scope.ipv6Info.AFTRFQDN = ipv6Info.AFTRFQDN,
        $scope.ipv6Info.AFTRAddress = ipv6Info.AFTRAddress,
        $scope.ipv6Info.leaseTime = ipv6Info.leaseTime,
        $scope.ipv6Info.leaseExpire = ipv6Info.leaseExpire,
        $scope.wanProvisioningMode = _getWanProvisioningMode()
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("WiFiMultimediaController", ["$rootScope", "$scope", "WiFiMultimedia", function($rootScope, $scope, WiFiMultimedia) {
    $scope.populate = function() {
        var data = WiFiMultimedia.populate();
        $scope.wmmEnable2GHz = data.wmmEnable2GHz,
        $scope.powerSave2GHz = data.powerSave2GHz,
        $scope.wmmEnable5GHz = data.wmmEnable5GHz,
        $scope.powerSave5GHz = data.powerSave5GHz
    }
    ,
    $scope.save = function() {
        $rootScope.globalWait = !0;
        var dataSave = {
            wmmEnable2GHz: $scope.wmmEnable2GHz,
            powerSave2GHz: $scope.powerSave2GHz,
            wmmEnable5GHz: $scope.wmmEnable5GHz,
            powerSave5GHz: $scope.powerSave5GHz
        };
        WiFiMultimedia.save(dataSave, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("WiFiDualWpsController", ["$timeout", "$stateParams", "$scope", "WiFi", "WiFiMacfilter", function($timeout, $stateParams, $scope, WiFi, WiFiMacfilter) {
    var _wifiBackhaul, run = function() {
        $scope.waitEnable = !1,
        _wifiBackhaul = $.util.hasFeature("wifibackhaul"),
        _wifiBackhaul && ($scope.mode = "priv"),
        $scope.wifiBandSteeringSupport = !!$.config.modules.wifi && !$scope.isGuest && $.config.modules.wifi.wifiBandSteeringSupport === !0,
        $scope.wifiBandSteeringSupport && ($scope.bandSteeringEnabled = WiFi.getWifiBandSteering());
        var wpsStatus24GHz = WiFi.getWpsStatus("2.4GHz", $scope.mode)
          , wpsStatus5GHz = WiFi.getWpsStatus("5GHz", $scope.mode);
        $scope.wifiIsEnabled = wpsStatus24GHz.wifiIsEnable || wpsStatus5GHz.wifiIsEnable,
        $scope.enable = $scope.wifiIsEnabled && (wpsStatus24GHz.enable || wpsStatus5GHz.enable),
        wpsStatus24GHz.configMethodsEnabled = wpsStatus24GHz.configMethodsEnabled || "",
        wpsStatus5GHz.configMethodsEnabled = wpsStatus5GHz.configMethodsEnabled || "",
        $scope.wpsModeSelection = !!$.config.showedpages.wpsMode.enable,
        $scope.wpsModePushButton = wpsStatus24GHz.configMethodsEnabled.indexOf("PushButton") > -1 || wpsStatus5GHz.configMethodsEnabled.indexOf("PushButton") > -1 || !$scope.wpsModeSelection,
        $scope.wpsModePIN = wpsStatus24GHz.configMethodsEnabled.indexOf("PIN") > -1 || wpsStatus5GHz.configMethodsEnabled.indexOf("PIN") > -1 || !$scope.wpsModeSelection,
        wpsStatus24GHz.configMethodsEnabled = "" !== wpsStatus24GHz.configMethodsEnabled ? wpsStatus24GHz.configMethodsEnabled.toUpperCase().split(",") : [],
        wpsStatus5GHz.configMethodsEnabled = "" !== wpsStatus5GHz.configMethodsEnabled ? wpsStatus5GHz.configMethodsEnabled.toUpperCase().split(",") : [],
        $scope.loadingPin = !1,
        $scope.hasPushButton = $.inArray($.constants.PUSHBUTTON, wpsStatus24GHz.configMethodsEnabled) > -1 || $.inArray($.constants.PUSHBUTTON, wpsStatus5GHz.configMethodsEnabled) > -1,
        $scope.hasPin = $.inArray($.constants.PIN, wpsStatus24GHz.configMethodsEnabled) > -1 || $.inArray($.constants.PIN, wpsStatus5GHz.configMethodsEnabled) > -1,
        $scope.hasPin = $.inArray($.constants.PIN, wpsStatus24GHz.configMethodsEnabled) > -1 || $.inArray($.constants.PIN, wpsStatus5GHz.configMethodsEnabled) > -1,
        $scope.bandSteeringEnabled && ($scope.hasPin = !1),
        $scope.methodsQty = wpsStatus24GHz.configMethodsEnabled.length >= wpsStatus5GHz.configMethodsEnabled.length ? wpsStatus24GHz.configMethodsEnabled.length : wpsStatus5GHz.configMethodsEnabled.length,
        WiFiMacfilter.updateCache("both", $scope.mode);
        var macFilter24GHz = WiFiMacfilter.populate("2.4GHz")
          , macFilter5GHz = WiFiMacfilter.populate("5GHz");
        $scope.skipModal = "DISABLED" === macFilter24GHz.macFilterMode || "DISABLED" === macFilter5GHz.macFilterMode,
        $scope.reallySaved = $scope.enable
    }, _errorCallback = function() {
        $scope.loadingWps = null,
        $scope.$digest()
    };
    $scope.setEnrolleePin = function() {
        $scope.loadingEnrollee = !0,
        WiFi.setEnrolleePin($scope.enrolleePin, {
            success: function() {
                $scope.loadingEnrollee = !1,
                $scope.$digest()
            },
            error: function() {
                $scope.loadingEnrollee = null,
                $scope.$digest()
            }
        }, $stateParams.radio, $scope.mode)
    }
    ,
    $scope.generatePinCodeWPS = function() {
        $scope.loadingPin = !0,
        $scope.pinCode = "";
        var promise = WiFi.generatePinCodeWPSPromisse($stateParams.radio, $scope.mode);
        promise.then(function(PinCode) {
            $scope.pinCode = PinCode,
            $scope.loadingPin = !1
        })
    }
    ,
    $scope.startPhysicalWPS = function() {
        $scope.loadingWps = !0,
        WiFi.startDualPhysicalWPS($scope.mode, {
            success: function() {
                $scope.loadingWps = !1,
                $scope.$digest()
            },
            error: _errorCallback
        })
    }
    ,
    $scope.enableDisableWPS = function(onChange) {
        if (!onChange || $scope.skipModal) {
            var wpsMode = []
              , wpsModeStr = "";
            $scope.wpsModePushButton && wpsMode.push("PushButton"),
            wpsMode.length && (wpsModeStr = wpsMode.join(",")),
            $scope.loadingWps = !1,
            $scope.waitEnable = !0,
            $timeout(function() {
                WiFi.setWpsStatus($scope.enable, wpsModeStr, "2.4GHz", $scope.mode),
                WiFi.setWpsStatus($scope.enable, wpsModeStr, "5GHz", $scope.mode),
                _wifiBackhaul && WiFi.setWpsBackhaul(),
                $scope.enable && ($scope.skipModal = !0),
                $scope.waitEnable = !1,
                $scope.reallySaved = $scope.enable
            }, 1e3)
        }
    }
    ,
    run()
}
]),
sboxApp.controller("LanIPv6Controller", ["$scope", "$rootScope", "LanIPv6", function($scope, $rootScope, LanIPv6) {
    $scope.populate = function() {
        var data = LanIPv6.populate();
        $scope.enableDHCPPD = data.enableDHCPPD,
        $scope.lanIPv6 = data.lanIPv6,
        $scope.lanIPv6LinkLocal = data.lanIPv6LinkLocal,
        $scope.enableAutoIPv6Assignment = data.enableAutoIPv6Assignment,
        $scope.typeLan6Autoconfig = !!data.typeLan6Autoconfig,
        $scope.minAddress = data.rangeMinAddress ? data.rangeMinAddress : $.constants.lanIPv6DefaultMinAddress,
        $scope.maxAddress = data.rangeMaxAddress ? data.rangeMaxAddress : $.constants.lanIPv6DefaultMaxAddress,
        $scope.enableDefaultRange = $scope.minAddress === $.constants.lanIPv6DefaultMinAddress && $scope.maxAddress === $.constants.lanIPv6DefaultMaxAddress,
        $scope.hideLanIPv6Options = !!$.config.hideLanIPv6Options,
        $rootScope.isCharterAll && ($scope.userClassOption = data.wanDhcpv6UserClassOption)
    }
    ,
    $scope.changeDefaultRangeAddress = function() {
        $scope.enableDefaultRange && ($scope.minAddress = $.constants.lanIPv6DefaultMinAddress,
        $scope.maxAddress = $.constants.lanIPv6DefaultMaxAddress)
    }
    ,
    $scope.save = function() {
        if ($scope.submitted = !0,
        _validForm(),
        $scope.lanIPv6Form.$valid) {
            $rootScope.globalWait = !0;
            var dataSave = {};
            dataSave.enableDHCPPD = $scope.enableDHCPPD,
            $rootScope.isCharterAll ? (dataSave.rangeMinAddress = $scope.minAddress,
            dataSave.rangeMaxAddress = $scope.maxAddress,
            dataSave.typeLan6Autoconfig = $scope.typeLan6Autoconfig) : (dataSave.lanIPv6 = $scope.lanIPv6,
            dataSave.enableAutoIPv6Assignment = $scope.enableAutoIPv6Assignment),
            LanIPv6.save(dataSave, {
                success: function() {
                    $rootScope.showMessage = !0,
                    $rootScope.globalWait = !1,
                    $scope.lanIPv6Form.$setPristine(!0),
                    $scope.submitted = !1,
                    $rootScope.$digest()
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $rootScope.$digest()
                }
            })
        }
    }
    ,
    $scope.saveWanIPv6 = function() {
        if ($scope.submitted = !0,
        $scope.wanIPv6Form.$valid) {
            $rootScope.globalWait = !0;
            var dataSave = {
                wanDhcpv6UserClassOption: $scope.userClassOption
            };
            LanIPv6.saveWanIPv6(dataSave, {
                success: function() {
                    $rootScope.showMessage = !0,
                    $rootScope.globalWait = !1,
                    $scope.wanIPv6Form.$setPristine(!0),
                    $scope.submitted = !1,
                    $rootScope.$digest()
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $rootScope.$digest()
                }
            })
        }
    }
    ;
    var _validForm = function() {
        $rootScope.isCharter || $rootScope.isCharter5280 ? ($scope.lanIPv6Form.minAddress.$setValidity("ipv6", $.util.checkIPv6Simple($scope.minAddress)),
        $scope.lanIPv6Form.maxAddress.$setValidity("ipv6", $.util.checkIPv6Simple($scope.maxAddress))) : $scope.lanIPv6Form.lanIPv6.$setValidity("ipv6", $.util.checkIPv6($scope.lanIPv6))
    };
    $scope.populate()
}
]),
sboxApp.controller("RouterMainController", ["$scope", "ConnectedDevices", "$state", function($scope, ConnectedDevices, $state) {
    $scope.IPv6Enable = !1;
    var all = $.config.modules.main.showAllDevices;
    $scope.showModemStatus = !1,
    $scope.showLanSettingsStatus = !1;
    var getDevicesList = function() {
        ConnectedDevices.updateCache(),
        $scope.listEthernetDevices = ConnectedDevices.getEthernetDevices(all),
        $scope.listWifi24Devices = ConnectedDevices.getWifiDevices("wifi24", !0, all),
        $scope.listWifi5Devices = ConnectedDevices.getWifiDevices("wifi5", !0, all),
        $scope.listWifi24GuestDevices = ConnectedDevices.getWifiDevices("wifi24Guest", !1, all),
        $scope.listWifi5GuestDevices = ConnectedDevices.getWifiDevices("wifi5Guest", !1, all),
        $scope.listUSBDevices = ConnectedDevices.getUSBDevices(all),
        $scope.listPlcs = ConnectedDevices.getPlcs(all)
    }
      , updateStatusIcon = function() {
        $.config.showedpages.topMenuStatus && $.config.showedpages.topMenuStatus.enable && (-1 !== $state.current.name.indexOf("user.router.basic.lansettings") || -1 !== $state.current.name.indexOf("user.router.basic.mynetwork") ? ($scope.listEthernetDevices || getDevicesList(),
        $scope.devicesQty = $scope.listEthernetDevices.length + $scope.listWifi24Devices.length + $scope.listWifi5Devices.length + $scope.listWifi24GuestDevices.length + $scope.listWifi5GuestDevices.length + $scope.listUSBDevices.length + $scope.listPlcs.length,
        $scope.showLanSettingsStatus = !0,
        $scope.showModemStatus = !1,
        $scope.cableModemStatus = ConnectedDevices.getCableModemStatus()) : -1 !== $state.current.name.indexOf("user.router.cableModem.deviceInfo") ? ($scope.showModemStatus = !0,
        $scope.showLanSettingsStatus = !1,
        $scope.cableModemStatus = ConnectedDevices.getCableModemStatus()) : ($scope.showModemStatus = !1,
        $scope.showLanSettingsStatus = !1))
    };
    $scope.populate = function() {
        $.config.showedpages.DHCPv6Server.enable === !0 ? ($scope.eRouterMode = ConnectedDevices.geteRouterMode(),
        $scope.IPv6Enable = "IPv4" !== $scope.eRouterMode) : $scope.IPv6Enable = !1
    }
    ,
    $scope.$on("updateStatusIconTop", updateStatusIcon),
    $scope.populate()
}
]),
sboxApp.controller("WifiPublicSettingsController", ["$rootScope", "$scope", "WifiPublic", function($rootScope, $scope, WifiPublic) {
    $scope.wifiData = [],
    $scope.dataToEdit = {};
    var _wifiSettingsToUpdate = []
      , _stopAllEdition = function() {
        for (var i = 0; i < $scope.wifiData.length; i++)
            $scope.wifiData[i].edit = !1
    };
    $scope.populate = function() {
        var data = WifiPublic.populateSettings();
        $scope.wifiData = data
    }
    ,
    $scope.preEditSettings = function(wifiSettings) {
        $scope.isEditing = !0,
        _stopAllEdition(),
        wifiSettings.edit = !0,
        $scope.dataToEdit = angular.copy(wifiSettings)
    }
    ,
    $scope.editSettings = function(wifiSettings) {
        $scope.settingsMainForm.settingsForm.$valid && (_wifiSettingsToUpdate.push(wifiSettings),
        wifiSettings.edit = !1,
        $scope.isEditing = !1)
    }
    ,
    $scope.cancelEditSettings = function(wifiSettings) {
        $scope.isEditing = !1,
        wifiSettings.edit = !1,
        wifiSettings.ssidName = $scope.dataToEdit.ssidName,
        wifiSettings.vlan = $scope.dataToEdit.vlan,
        $scope.dataToEdit = {},
        $scope.settingsMainForm.$setPristine(!0),
        $scope.settingsMainForm.settingsForm.$setPristine(!0)
    }
    ,
    $scope.save = function() {
        0 === _wifiSettingsToUpdate.length || $scope.isEditing || ($rootScope.globalWait = !0,
        WifiPublic.saveSettings(_wifiSettingsToUpdate, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                _wifiSettingsToUpdate = [],
                $scope.populate(),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        }))
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("MysagemcomBoxController", function($rootScope, $scope, $state) {
    $scope.showRefreshButton = -1 !== $.inArray($state.current.name, $.constants.refreshStates),
    $rootScope.$on("$stateChangeStart", function(event, toState) {
        $scope.showRefreshButton = -1 !== $.inArray(toState.name, $.constants.refreshStates)
    })
}),
sboxApp.controller("NeighborAPSController", ["$state", "$scope", "$rootScope", "$stateParams", "$timeout", "NeighborAPS", function($state, $scope, $rootScope, $stateParams, $timeout, NeighborAPS) {
    var possibleTitles = {
        "2.4GHz": "neighborAps24",
        "5GHz": "neighborAps5"
    }
      , allNeighbors = [];
    $state.current.data.title = possibleTitles[$stateParams.radio],
    $scope.neighbors = [],
    $scope.radio = $stateParams.radio,
    $scope.neighborApsRadio = possibleTitles[$stateParams.radio],
    $scope.selectedRadio = "2.4GHz" === $stateParams.radio ? "RADIO2G4" : "RADIO5G";
    var runSafeDigest = function() {
        $timeout(function() {
            $rootScope.$digest()
        }, 0)
    }
      , filterNeighborsBySelectedRadio = function() {
        $scope.neighbors = [],
        allNeighbors && allNeighbors.length && angular.forEach(allNeighbors, function(neighbor) {
            neighbor.Radio && "" !== neighbor.Radio && neighbor.Radio.indexOf($scope.selectedRadio) > -1 && (neighbor.PHYModeFormatted = neighbor.OperatingStandards,
            $scope.neighbors.push(neighbor))
        })
    }
      , searchSuccess = function(results) {
        allNeighbors = results,
        filterNeighborsBySelectedRadio(),
        $rootScope.scanning = !1,
        cancelFailSafe(),
        runSafeDigest()
    }
      , searchFails = function() {
        $rootScope.scanning = !1,
        $rootScope.scanError = !1,
        cancelFailSafe(),
        runSafeDigest()
    }
      , failSafeId = null
      , cancelFailSafe = function() {
        $rootScope.scanError = !1,
        $timeout.cancel(failSafeId),
        failSafeId = null
    }
      , errorFailSafe = function() {
        var waitMessageTimeout = $.config.waitMessageTimeout ? $.config.waitMessageTimeout : $.constants.waitMessageTimeout;
        return $timeout(function() {
            $rootScope.scanning = !1,
            $rootScope.scanError = !0,
            $timeout(cancelFailSafe, 5e3)
        }, waitMessageTimeout)
    };
    $scope.search = function() {
        $rootScope.scanning = !0,
        $scope.neighbors = [],
        runSafeDigest();
        var options = {
            success: searchSuccess,
            error: searchFails
        };
        NeighborAPS.startSearch($scope.radio, options),
        failSafeId = errorFailSafe()
    }
    ,
    $scope.$on("$destroy", function() {
        $rootScope.scanning = !1,
        $rootScope.scanError = !1,
        cancelFailSafe(),
        NeighborAPS.stopAllNotifications()
    })
}
]),
sboxApp.controller("SIPAlgController", function($scope, $rootScope, SipAlg) {
    $scope.onChangeSave = $.config.onChangeSave,
    $scope.populate = function() {
        var data = SipAlg.populate();
        $scope.sipAlgEnable = data.sipAlgEnable
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        SipAlg.save($scope.sipAlgEnable, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
}),
sboxApp.controller("SmartinterfaceRRMController", ["$scope", "$rootScope", "SmartinterfaceRRM", function($scope, $rootScope, SmartinterfaceRRM) {
    $scope.populate = function() {
        $scope.smartinterfaceRRMEnable = SmartinterfaceRRM.populate()
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        if ($scope.submitted = !0,
        $scope.smartInterfaceRRMForm.$valid) {
            $rootScope.globalWait = !0;
            var dataSave = {};
            dataSave.enable = $scope.smartinterfaceRRMEnable,
            SmartinterfaceRRM.save(dataSave, {
                success: function() {
                    $rootScope.showMessage = !0,
                    $rootScope.globalWait = !1,
                    $scope.smartInterfaceRRMForm.$setPristine(!0),
                    $scope.submitted = !1,
                    $rootScope.$digest()
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $rootScope.$digest()
                }
            })
        }
    }
}
]),
sboxApp.controller("AccessControlMainController", ["$scope", "Statistics", "ConnectedDevices", function($scope, Statistics, ConnectedDevices) {
    var $this = this;
    $scope.mapEnable = !0,
    $this.init = function() {
        $scope.isRIPv2Enabled = $.config.hasRIPv2 === !0 && Statistics.isRIPv2Enable(),
        $scope.mapEnable = $.config.checkMapEnable === !0 && ConnectedDevices.verifyMapEnable()
    }
    ,
    $this.init()
}
]),
sboxApp.controller("BridgeModeController", ["$scope", "$rootScope", "$window", "BridgeMode", function($scope, $rootScope, $window, BridgeMode) {
    $scope.populate = function() {
        $scope.bridgeEnable = BridgeMode.populate()
    }
    ,
    $scope.populate(),
    $scope.beforeSave = function() {
        $scope.bridgeEnable ? $("#confirm-bridge-mode").foundation("reveal", "open") : $scope.save()
    }
    ,
    $scope.closeModalConfirm = function() {
        $("#confirm-bridge-mode").foundation("reveal", "close")
    }
    ,
    $scope.save = function() {
        if ($scope.submitted = !0,
        $scope.bridgeForm.$valid) {
            $rootScope.globalWait = !0;
            var dataSave = {};
            dataSave.enable = $scope.bridgeEnable,
            BridgeMode.save(dataSave, {
                success: function() {
                    $rootScope.showMessage = !0,
                    $rootScope.globalWait = !1,
                    $scope.bridgeForm.$setPristine(!0),
                    $scope.submitted = !1,
                    $window.location.reload()
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $rootScope.$digest()
                }
            })
        }
    }
}
]),
sboxApp.controller("WalledGardenController", ["$scope", "$rootScope", "WalledGarden", function($scope, $rootScope, WalledGarden) {
    $scope.populate = function() {
        $scope.walledGardenEnable = WalledGarden.populate()
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        if ($scope.submitted = !0,
        $scope.walledGardenForm.$valid) {
            $rootScope.globalWait = !0;
            var dataSave = {};
            dataSave.enable = $scope.walledGardenEnable,
            WalledGarden.save(dataSave, {
                success: function() {
                    $rootScope.showMessage = !0,
                    $rootScope.globalWait = !1,
                    $scope.walledGardenForm.$setPristine(!0),
                    $scope.submitted = !1,
                    $rootScope.$digest()
                },
                error: function() {
                    $rootScope.globalWait = !1,
                    $rootScope.showMessage = !1,
                    $rootScope.$digest()
                }
            })
        }
    }
}
]),
sboxApp.controller("PloamPasswordController", ["$scope", "$rootScope", "PloamPassword", function($scope, $rootScope, PloamPassword) {
    $scope.showPassword = !1,
    $scope.ploamPassword = "";
    var _cache = {};
    $scope.isHexCodePassword = !0,
    $scope.isValidHexCode = !0,
    $rootScope.useHexCodePloamPassword = $.config.showedpages.useHexCodePloamPassword && $.config.showedpages.useHexCodePloamPassword.enable,
    _cache.keyEnryption = PloamPassword.getKeyEncryption(),
    $scope.enablePloamPassword = $.config.showedpages.ploamPassword && $.config.showedpages.ploamPassword.enable,
    $scope.isEvenHexCodePassword = function(length) {
        return length % 2 === 0 ? !0 : !1
    }
    ,
    $scope.notHexCodePassword = function() {
        $scope.isValidHexCode = !$scope.isHexCodePassword || /^[0-9a-fA-F]{0,20}$/.test($scope.ploamPassword) && $scope.isEvenHexCodePassword($scope.ploamPassword.length)
    }
    ,
    $scope.toggleHexCodePassword = function() {
        $scope.isHexCodePassword = !$scope.isHexCodePassword,
        $scope.isHexCodePassword ? $scope.ploamPassword = $scope.ploamPasswordtoHex($scope.ploamPassword) : $scope.ploamPassword = $scope.ploamPasswordToString($scope.ploamPassword),
        $scope.notHexCodePassword()
    }
    ,
    $scope.populate = function() {
        $scope.ploamPassword = PloamPassword.populate(),
        $scope.isHexCodePassword || ($scope.ploamPassword = $scope.ploamPasswordToString($scope.ploamPassword)),
        $.config.useXOREncryption && ($scope.ploamPassword = $.util.XORCipher.decode(_cache.keyEnryption, $scope.ploamPassword))
    }
    ,
    $scope.ploamPasswordtoHex = function(str) {
        for (var hex = "", i = 0; i < str.length; i++)
            hex += "" + str.charCodeAt(i).toString(16);
        return hex
    }
    ,
    $scope.ploamPasswordToString = function(hex) {
        for (var str = "", i = 0; i < hex.length; i += 2) {
            var v = parseInt(hex.substr(i, 2), 16);
            return v && (str += String.fromCharCode(v)),
            str
        }
    }
    ,
    $scope.save = function() {
        $rootScope.useHexCodePloamPassword || ($scope.isValidHexCode = !0,
        $scope.isHexCodePassword = !0),
        $scope.PloamPasswordForm.$valid && $scope.isValidHexCode && !$scope.notvalidpassword() && ($.config.useXOREncryption && ($scope.ploamPassword = $.util.XORCipher.encode(_cache.keyEnryption, $scope.ploamPassword)),
        !$scope.isHexCodePassword && $rootScope.useHexCodePloamPassword ? $scope.ploamPasswordInserted = $scope.ploamPasswordtoHex($scope.ploamPassword) : $scope.ploamPasswordInserted = $scope.ploamPassword,
        PloamPassword.save($scope.ploamPasswordInserted, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.submitted = !1,
                $scope.populate()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1
            }
        }),
        $.config.useXOREncryption && ($scope.ploamPassword = $.util.XORCipher.decode(_cache.keyEnryption, $scope.ploamPassword)))
    }
    ,
    $scope.togglePassword = function() {
        $scope.showPassword = !$scope.showPassword
    }
    ,
    $scope.notvalidpassword = function() {
        return $rootScope.useHexCodePloamPassword || ($scope.isHexCodePassword = !1),
        PloamPasswordForm.ploamPassword.value.length > 10 && !$scope.isHexCodePassword ? !0 : !1
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("MyNetworkController", ["$scope", "$timeout", "ConnectedDevices", "$state", "$rootScope", function($scope, $timeout, ConnectedDevices, $state, $rootScope) {
    var run = function() {
        $scope.showInactiveDevices = $.config.showInactiveDevices,
        populate()
    }
      , populate = function() {
        ConnectedDevices.updateCache(),
        $scope.deviceList = ConnectedDevices.getAllDevices(!0, !0)
    };
    $scope.refreshContent = function() {
        $scope.loading = !0,
        $timeout(function() {
            $scope.deviceList = ConnectedDevices.getAllDevices(!0, !0),
            $scope.loading = !1,
            $scope.$digest()
        }, 500)
    }
    ,
    $scope.openDevice = function(device) {
        var destination = "";
        destination = "user.router.basic.mynetwork" === $state.current.name ? "user.router.basic.deviceInfo" : $rootScope.isSimple ? "user.simple.ethernetDevice.deviceInfo" : "user.ethernetDevice.deviceInfo",
        device.isStb || "CPL" === device.InterfaceType || ($rootScope.loading = !0,
        $state.go(destination, {
            uid: device.uid,
            layer: device.interfaceFrequency ? device.interfaceFrequency.toLowerCase() : "ethernet"
        }))
    }
    ,
    run()
}
]),
sboxApp.controller("MaintenanceDslLineController", ["$rootScope", "$scope", "MaintenanceReset", "$http", "$location", "$timeout", "$window", function($rootScope, $scope, MaintenanceReset, $http, $location, $timeout, $window) {
    $scope.popupTitle = "",
    $scope.status = !1,
    $scope.populate = function() {
        var data = MaintenanceReset.populate();
        $scope.singleLine = !data
    }
    ,
    $scope.populate(),
    $scope.beforeReboot = function() {
        MaintenanceReset.save(!$scope.singleLine)
    }
    ,
    $scope.reboot = function() {
        $scope.popupTitle = "restart",
        $scope.submitted = !MaintenanceReset.reboot(),
        $timeout($scope.checkLoading, 1e4)
    }
    ,
    $scope.checkLoading = function(isOff) {
        $scope.status = !1,
        $http({
            method: "GET",
            url: "/",
            timeout: 3e4
        }).success(function(data, status) {
            200 === status && isOff === !0 ? ($scope.status = !0,
            $("#pleasewait-modal a.close-reveal-modal").trigger("click"),
            $window.location.href = "/") : ($scope.status = !1,
            $timeout(function() {
                $scope.checkLoading(isOff)
            }, 1e4))
        }).error(function() {
            $scope.status = !1,
            $timeout(function() {
                $scope.checkLoading(!0)
            }, 1e4)
        })
    }
}
]),
sboxApp.controller("AdvancedOptionsController", ["$scope", "AdvancedOptions", "$rootScope", "$timeout", function($scope, AdvancedOptions, $rootScope, $timeout) {
    var getDataToSave = function() {
        var dataToSave = {};
        return $.each($scope.options, function(key, value) {
            $scope.origOptions[key] !== value && void 0 !== value && null !== value && (dataToSave[key] = value,
            $scope.isCable && "wanBlockingEnable" === key && (dataToSave[key] = !value))
        }),
        dataToSave
    };
    $scope.isOptionAvailable = AdvancedOptions.isOptionAvailable,
    $scope.populate = function() {
        $scope.options = AdvancedOptions.populate(),
        $scope.isCable && ($scope.options.wanBlockingEnable = !$scope.options.wanBlockingEnable),
        $scope.origOptions = angular.copy($scope.options)
    }
    ,
    $scope.save = function() {
        var defautCallback = $timeout(function() {
            $rootScope.globalWait = !1,
            $rootScope.showMessage = !0,
            $scope.populate(),
            $rootScope.$digest()
        }, 2500);
        AdvancedOptions.save(getDataToSave(), {
            success: function() {
                $timeout.cancel(defautCallback),
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.populate(),
                $timeout(function() {
                    $rootScope.$digest()
                })
            },
            error: function() {
                $timeout.cancel(defautCallback),
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $timeout(function() {
                    $rootScope.$digest()
                })
            }
        })
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("SplashScreenController", ["$scope", "$state", "SplashScreenService", function($scope, $state, SplashScreenService) {
    $scope.populate = function() {
        SplashScreenService.checkStatus(function(result) {
            "string" == typeof result && "NONE" === result && $state.go("user.home")
        })
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("TimWizardUserController", ["$scope", "$state", "WizardHelper", function($scope, $state, WizardHelper) {
    var currentVlanId;
    $scope.populate = function() {
        currentVlanId = WizardHelper.getVlanId()
    }
    ,
    $scope.save = function(type) {
        var vlanId;
        if ("residential" === type ? vlanId = 100 : "enterprise" === type && (vlanId = 150),
        null !== vlanId && void 0 !== vlanId && $.isNumeric(vlanId) && vlanId !== currentVlanId) {
            var callback = function() {
                $state.go("wizard.routermode")
            };
            WizardHelper.saveVlanId(vlanId, {
                success: callback,
                error: callback
            })
        } else
            $state.go("wizard.routermode")
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("TimWizardRouterController", ["$scope", "$state", "WizardHelper", function($scope, $state, WizardHelper) {
    $scope.save = function(type) {
        "bridge" === type ? WizardHelper.setBridgeMode(!0, {
            success: function() {
                WizardHelper.checkConnection() ? $state.go("wizard.connection") : $state.go("wizard.ppp")
            },
            error: function() {}
        }) : "router" === type && WizardHelper.setBridgeMode(!1, {
            success: function() {
                $state.go("wizard.wifi")
            },
            error: function() {}
        })
    }
}
]),
sboxApp.controller("TimWizardMainController", ["$scope", "Auth", function($scope, Auth) {
    $scope.wizardClass = "page_02",
    $scope.$on("updateWizardClass", function(e, pageClass) {
        $scope.wizardClass = pageClass || "page_02"
    }),
    $scope.logout = function() {
        Auth.logout(function() {
            "undefined" != typeof SboxInterface && SboxInterface.Quit(),
            setTimeout(function() {
                window.location.href = "http://" + window.location.host + "/normal"
            }, 1e3)
        }, function() {
            $rootScope.error = "Failed to logout"
        })
    }
}
]),
sboxApp.controller("TimWizardCheckConnectionController", ["$scope", "WizardHelper", function($scope, WizardHelper) {
    $scope.checkConnection = function() {
        $scope.isConnected = WizardHelper.checkConnection()
    }
    ,
    $scope.checkConnection()
}
]),
sboxApp.controller("LEDHubLightController", function($scope, $rootScope, LedHubLight) {
    $scope.onChangeSave = $.config.onChangeSave,
    $scope.populate = function() {
        var data = LedHubLight.populate();
        $scope.enable = "ON" === data ? !0 : !1
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        LedHubLight.save($scope.enable, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
}),
sboxApp.controller("SipGlobalController", ["$scope", "$rootScope", "SipGlobal", function($scope, $rootScope, SipGlobal) {
    $scope.populate = function() {
        var data = SipGlobal.populate();
        data.enable = "ENABLED" === data.enable ? !0 : !1,
        data.line1Enable = "ENABLED" === data.line1Enable ? !0 : !1,
        data.line2Enable = "ENABLED" === data.line2Enable ? !0 : !1,
        $scope.sipGlobal = data
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        $rootScope.globalWait = !0;
        var data = $scope.sipGlobal;
        SipGlobal.save(data, {
            success: function() {
                $scope.populate(),
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $rootScope.$digest()
            },
            error: function() {
                $scope.populate(),
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
}
]),
sboxApp.controller("SsidCreationController", function($scope, $rootScope, $stateParams, SsidCreation) {
    $scope.clearForm = function() {
        $scope.form = {
            enable: "",
            uid: "",
            radio: "",
            alias: "",
            ssid: ""
        }
    }
    ,
    $scope.data = [],
    $scope.populate = function() {
        SsidCreation.updateCache(),
        $scope.data = SsidCreation.populate($stateParams.radio),
        $scope.clearForm()
    }
    ,
    $scope.populate(),
    $scope.edit = function(data) {
        $scope.form.uid = data.uid,
        $scope.form.radio = $stateParams.radio,
        $scope.form.alias = data.Alias,
        $scope.form.enable = data.Enable,
        $scope.form.ssid = data.SSID
    }
    ,
    $scope.remove = function() {
        SsidCreation.remove($scope.toRemove),
        $rootScope.showMessage = !0,
        $scope.populate(),
        $rootScope.$digest(),
        $scope.clearForm()
    }
    ,
    $scope.prepareRemove = function(data) {
        $scope.toRemove = data
    }
    ,
    $scope.save = function() {
        $scope.submitted = !0,
        $scope.ssidForm.$valid && ($scope.form.radio = $stateParams.radio,
        SsidCreation.save($scope.form, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.submitted = !1,
                $scope.populate(),
                $rootScope.$digest(),
                $scope.clearForm()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $scope.submitted = !1,
                $scope.populate(),
                $rootScope.$digest(),
                $scope.clearForm()
            }
        }))
    }
    ,
    $scope.switchEnable = function(data) {
        var updateEnable = {
            uid: data.uid,
            enable: data.Enable,
            ssid: data.SSID
        };
        SsidCreation.save(updateEnable, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.submitted = !1,
                $scope.populate(),
                $rootScope.$digest(),
                $scope.clearForm()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $scope.submitted = !1,
                $scope.populate(),
                $rootScope.$digest(),
                $scope.clearForm()
            }
        })
    }
}),
sboxApp.controller("GRETunnelController", ["$scope", "$rootScope", "GRETunnel", function($scope, $rootScope, GRETunnel) {
    $scope.populate = function() {
        var data = GRETunnel.populate();
        $scope.greTunnel = data;
        var server = data.server ? data.server.split(",") : [];
        $scope.greTunnel.server = server[0] ? server[0] : "",
        $scope.greTunnel.serverBkp = server[1] ? server[1] : ""
    }
    ,
    $scope.populate(),
    $scope.save = function() {
        $rootScope.globalWait = !0;
        var data = $scope.greTunnel
          , server = new Array($scope.greTunnel.server,$scope.greTunnel.serverBkp);
        data.server = server.join(","),
        GRETunnel.save(data, {
            success: function() {
                $scope.populate(),
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $rootScope.$digest()
            },
            error: function() {
                $scope.populate(),
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
}
]),
sboxApp.controller("VLANEthernetController", ["$scope", "$rootScope", "$timeout", "VLANEthernet", function($scope, $rootScope, $timeout, VLANEthernet) {
    var removeId, removeIndex;
    $scope.populate = function() {
        $scope.fields = VLANEthernet.populate()
    }
    ,
    $scope.addVLAN = function() {
        return $scope.formvlanEthernet.$dirty && $scope.formvlanEthernet.$invalid ? void ($scope.submitted = !0) : ($scope.submitted = !1,
        void $scope.fields.unshift(VLANEthernet.getModel()))
    }
    ,
    $scope.prepareVLANTermination = function(id, index) {
        removeId = id,
        removeIndex = index
    }
    ,
    $scope.cancelRemoveVLANTermination = function() {
        removeId = null,
        removeIndex = null
    }
    ,
    $scope.removeVLANTermination = function() {
        VLANEthernet.removeVLANTermination(removeId) && $scope.fields.splice(removeIndex, 1)
    }
    ,
    $scope.save = function() {
        $scope.submitted = !0;
        var update = !0;
        $scope.formvlanEthernet.$valid ? ($rootScope.globalWait = !0,
        VLANEthernet.save($scope.fields, update, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.submitted = !1,
                $scope.populate()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1
            }
        })) : $scope.formvlanEthernet.$error.required && ($rootScope.globalWait = !1,
        $rootScope.customMessage = "allFieldRequired",
        $rootScope.showMessage = !1)
    }
    ,
    $scope.populate()
}
]),
sboxApp.controller("NetworkConfigurationController", function($scope, $rootScope, NetworkConfiguration) {
    $scope.populate = function() {
        $scope.data = NetworkConfiguration.populate()
    }
    ,
    $scope.populate(),
    $scope.validation = function() {
        for (var hasInvalid = !1, i = 0; i < $scope.data.atmLinks.length; i++)
            $scope.data.atmLinks[i].DestinationAddress ? $scope.data.atmLinks[i].invalid = !1 : ($scope.data.atmLinks[i].invalid = !0,
            hasInvalid = !0);
        $scope.networkConfigForm.$setValidity("vlanid", !hasInvalid),
        hasInvalid = !1;
        for (var j = 0; j < $scope.data.ethernetLinks.length; j++)
            $scope.data.ethernetLinks[j].VLANID && $.isNumeric($scope.data.ethernetLinks[j].VLANID) ? $scope.data.ethernetLinks[j].invalid = !1 : ($scope.data.ethernetLinks[j].invalid = !0,
            hasInvalid = !0);
        $scope.networkConfigForm.$setValidity("destinationAddress", !hasInvalid)
    }
    ,
    $scope.save = function() {
        $scope.submitted = !0,
        $scope.validation(),
        $scope.networkConfigForm.$valid && NetworkConfiguration.save($scope.data, {
            success: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !0,
                $scope.submitted = !1,
                $scope.networkConfigForm.$setPristine(!0),
                $rootScope.$digest()
            },
            error: function() {
                $rootScope.globalWait = !1,
                $rootScope.showMessage = !1,
                $rootScope.$digest()
            }
        })
    }
});
